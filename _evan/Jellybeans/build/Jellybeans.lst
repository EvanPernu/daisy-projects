ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Jellybeans.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9ParameterD2Ev,"axG",%progbits,_ZN5daisy9ParameterD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9ParameterD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9ParameterD2Ev:
  27              	.LVL0:
  28              	.LFB3867:
  29              		.file 1 "../../libdaisy/src/hid/parameter.h"
   1:../../libdaisy/src/hid/parameter.h **** #pragma once
   2:../../libdaisy/src/hid/parameter.h **** #include <stdint.h>
   3:../../libdaisy/src/hid/parameter.h **** #include "hid/ctrl.h"
   4:../../libdaisy/src/hid/parameter.h **** 
   5:../../libdaisy/src/hid/parameter.h **** namespace daisy
   6:../../libdaisy/src/hid/parameter.h **** {
   7:../../libdaisy/src/hid/parameter.h **** /** @addtogroup controls
   8:../../libdaisy/src/hid/parameter.h ****     @{
   9:../../libdaisy/src/hid/parameter.h **** */
  10:../../libdaisy/src/hid/parameter.h **** 
  11:../../libdaisy/src/hid/parameter.h **** /**      Simple parameter mapping tool that takes a 0-1 input from an hid_ctrl. */
  12:../../libdaisy/src/hid/parameter.h **** class Parameter
  13:../../libdaisy/src/hid/parameter.h **** {
  14:../../libdaisy/src/hid/parameter.h ****   public:
  15:../../libdaisy/src/hid/parameter.h ****     /** Curves are applied to the output signal */
  16:../../libdaisy/src/hid/parameter.h ****     enum Curve
  17:../../libdaisy/src/hid/parameter.h ****     {
  18:../../libdaisy/src/hid/parameter.h ****         LINEAR,      /**< Linear curve */
  19:../../libdaisy/src/hid/parameter.h ****         EXPONENTIAL, /**< Exponential curve */
  20:../../libdaisy/src/hid/parameter.h ****         LOGARITHMIC, /**<  Logarithmic curve */
  21:../../libdaisy/src/hid/parameter.h ****         CUBE,        /**< Cubic curve */
  22:../../libdaisy/src/hid/parameter.h ****         LAST,        /**< Final enum element. */
  23:../../libdaisy/src/hid/parameter.h ****     };
  24:../../libdaisy/src/hid/parameter.h ****     /** Constructor */
  25:../../libdaisy/src/hid/parameter.h ****     Parameter() {}
  26:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
  27:../../libdaisy/src/hid/parameter.h ****     ~Parameter() {}
  30              		.loc 1 27 5 view -0
  31              		.cfi_startproc
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB4570:
  36              	.LBI4570:
  37              		.file 2 "../../libdaisy/src/hid/ctrl.h"
   1:../../libdaisy/src/hid/ctrl.h **** #pragma once
   2:../../libdaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libdaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libdaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/ctrl.h **** 
   6:../../libdaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libdaisy/src/hid/ctrl.h **** namespace daisy
   8:../../libdaisy/src/hid/ctrl.h **** {
   9:../../libdaisy/src/hid/ctrl.h **** /**
  10:../../libdaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libdaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libdaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libdaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/ctrl.h ****     @date November 2019
  15:../../libdaisy/src/hid/ctrl.h ****     @ingroup controls
  16:../../libdaisy/src/hid/ctrl.h **** */
  17:../../libdaisy/src/hid/ctrl.h **** class AnalogControl
  18:../../libdaisy/src/hid/ctrl.h **** {
  19:../../libdaisy/src/hid/ctrl.h ****   public:
  20:../../libdaisy/src/hid/ctrl.h ****     /** Constructor */
  21:../../libdaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
  23:../../libdaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
  38              		.loc 2 23 5 view .LVU1
  39              		.loc 2 23 5 is_stmt 0 view .LVU2
  40              	.LBE4570:
  41              		.loc 1 27 19 view .LVU3
  42 0000 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE3867:
  46              		.weak	_ZN5daisy9ParameterD1Ev
  47              		.thumb_set _ZN5daisy9ParameterD1Ev,_ZN5daisy9ParameterD2Ev
  48 0002 00BF     		.section	.text._ZN5daisy10DaisyPatchD2Ev,"axG",%progbits,_ZN5daisy10DaisyPatchD5Ev,comdat
  49              		.align	1
  50              		.p2align 2,,3
  51              		.weak	_ZN5daisy10DaisyPatchD2Ev
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv5-d16
  57              	_ZN5daisy10DaisyPatchD2Ev:
  58              	.LVL1:
  59              	.LFB4414:
  60              		.file 3 "../../libdaisy/src/daisy_patch.h"
   1:../../libdaisy/src/daisy_patch.h **** #pragma once
   2:../../libdaisy/src/daisy_patch.h **** #ifndef DSY_PATCH_BSP_H
   3:../../libdaisy/src/daisy_patch.h **** #define DSY_PATCH_BSP_H
   4:../../libdaisy/src/daisy_patch.h **** #include "daisy_seed.h"
   5:../../libdaisy/src/daisy_patch.h **** #include "dev/oled_ssd130x.h"
   6:../../libdaisy/src/daisy_patch.h **** 
   7:../../libdaisy/src/daisy_patch.h **** namespace daisy
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 3


   8:../../libdaisy/src/daisy_patch.h **** {
   9:../../libdaisy/src/daisy_patch.h **** /**
  10:../../libdaisy/src/daisy_patch.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libdaisy/src/daisy_patch.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libdaisy/src/daisy_patch.h ****     @author Stephen Hensley
  13:../../libdaisy/src/daisy_patch.h ****     @date November 2019
  14:../../libdaisy/src/daisy_patch.h ****     @ingroup boards
  15:../../libdaisy/src/daisy_patch.h **** */
  16:../../libdaisy/src/daisy_patch.h **** class DaisyPatch
  17:../../libdaisy/src/daisy_patch.h **** {
  18:../../libdaisy/src/daisy_patch.h ****   public:
  19:../../libdaisy/src/daisy_patch.h ****     /** Enum of Ctrls to represent the four CV/Knob combos on the Patch
  20:../../libdaisy/src/daisy_patch.h ****      */
  21:../../libdaisy/src/daisy_patch.h ****     enum Ctrl
  22:../../libdaisy/src/daisy_patch.h ****     {
  23:../../libdaisy/src/daisy_patch.h ****         CTRL_1,    /**< */
  24:../../libdaisy/src/daisy_patch.h ****         CTRL_2,    /**< */
  25:../../libdaisy/src/daisy_patch.h ****         CTRL_3,    /**< */
  26:../../libdaisy/src/daisy_patch.h ****         CTRL_4,    /**< */
  27:../../libdaisy/src/daisy_patch.h ****         CTRL_LAST, /**< */
  28:../../libdaisy/src/daisy_patch.h ****     };
  29:../../libdaisy/src/daisy_patch.h **** 
  30:../../libdaisy/src/daisy_patch.h ****     /** Daisy patch gate inputs */
  31:../../libdaisy/src/daisy_patch.h ****     enum GateInput
  32:../../libdaisy/src/daisy_patch.h ****     {
  33:../../libdaisy/src/daisy_patch.h ****         GATE_IN_1,    /**< */
  34:../../libdaisy/src/daisy_patch.h ****         GATE_IN_2,    /** <*/
  35:../../libdaisy/src/daisy_patch.h ****         GATE_IN_LAST, /**< */
  36:../../libdaisy/src/daisy_patch.h ****     };
  37:../../libdaisy/src/daisy_patch.h **** 
  38:../../libdaisy/src/daisy_patch.h ****     /** Constructor */
  39:../../libdaisy/src/daisy_patch.h ****     DaisyPatch() {}
  40:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
  41:../../libdaisy/src/daisy_patch.h ****     ~DaisyPatch() {}
  61              		.loc 3 41 5 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LBB4571:
  67              	.LBI4571:
  68              		.file 4 "../../libdaisy/src/hid/disp/oled_display.h"
   1:../../libdaisy/src/hid/disp/oled_display.h **** #pragma once
   2:../../libdaisy/src/hid/disp/oled_display.h **** #ifndef DSY_OLED_DISPLAY_H
   3:../../libdaisy/src/hid/disp/oled_display.h **** #define DSY_OLED_DISPLAY_H /**< Macro */
   4:../../libdaisy/src/hid/disp/oled_display.h **** 
   5:../../libdaisy/src/hid/disp/oled_display.h **** #include "display.h"
   6:../../libdaisy/src/hid/disp/oled_display.h **** 
   7:../../libdaisy/src/hid/disp/oled_display.h **** namespace daisy
   8:../../libdaisy/src/hid/disp/oled_display.h **** {
   9:../../libdaisy/src/hid/disp/oled_display.h **** /** 
  10:../../libdaisy/src/hid/disp/oled_display.h ****  * This class is for drawing to a monochrome OLED display. 
  11:../../libdaisy/src/hid/disp/oled_display.h **** */
  12:../../libdaisy/src/hid/disp/oled_display.h **** template <typename DisplayDriver>
  13:../../libdaisy/src/hid/disp/oled_display.h **** class OledDisplay : public OneBitGraphicsDisplayImpl<OledDisplay<DisplayDriver>>
  14:../../libdaisy/src/hid/disp/oled_display.h **** {
  15:../../libdaisy/src/hid/disp/oled_display.h ****   public:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 4


  16:../../libdaisy/src/hid/disp/oled_display.h ****     OledDisplay() {}
  17:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
  69              		.loc 4 17 13 view .LVU5
  70              	.LBB4572:
  71              	.LBI4572:
  72              		.file 5 "../../libdaisy/src/hid/disp/display.h"
   1:../../libdaisy/src/hid/disp/display.h **** #pragma once
   2:../../libdaisy/src/hid/disp/display.h **** #ifndef DSY_DISPLAY_H
   3:../../libdaisy/src/hid/disp/display.h **** #define DSY_DISPLAY_H /**< Macro */
   4:../../libdaisy/src/hid/disp/display.h **** #include <cmath>
   5:../../libdaisy/src/hid/disp/display.h **** #include "util/oled_fonts.h"
   6:../../libdaisy/src/hid/disp/display.h **** #include "daisy_core.h"
   7:../../libdaisy/src/hid/disp/display.h **** #include "graphics_common.h"
   8:../../libdaisy/src/hid/disp/display.h **** 
   9:../../libdaisy/src/hid/disp/display.h **** #ifndef deg2rad
  10:../../libdaisy/src/hid/disp/display.h **** #define deg2rad(deg) ((deg)*3.141592 / 180.0)
  11:../../libdaisy/src/hid/disp/display.h **** #endif
  12:../../libdaisy/src/hid/disp/display.h **** 
  13:../../libdaisy/src/hid/disp/display.h **** namespace daisy
  14:../../libdaisy/src/hid/disp/display.h **** {
  15:../../libdaisy/src/hid/disp/display.h **** /** 
  16:../../libdaisy/src/hid/disp/display.h ****  * This interface is used as a base class for all types of 1bit-per-pixel
  17:../../libdaisy/src/hid/disp/display.h ****  * graphics displays.
  18:../../libdaisy/src/hid/disp/display.h **** */
  19:../../libdaisy/src/hid/disp/display.h **** class OneBitGraphicsDisplay
  20:../../libdaisy/src/hid/disp/display.h **** {
  21:../../libdaisy/src/hid/disp/display.h ****   public:
  22:../../libdaisy/src/hid/disp/display.h ****     OneBitGraphicsDisplay() {}
  23:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplay() {}
  24:../../libdaisy/src/hid/disp/display.h **** 
  25:../../libdaisy/src/hid/disp/display.h ****     virtual uint16_t Height() const = 0;
  26:../../libdaisy/src/hid/disp/display.h ****     virtual uint16_t Width() const  = 0;
  27:../../libdaisy/src/hid/disp/display.h **** 
  28:../../libdaisy/src/hid/disp/display.h ****     Rectangle GetBounds() const
  29:../../libdaisy/src/hid/disp/display.h ****     {
  30:../../libdaisy/src/hid/disp/display.h ****         return Rectangle(int16_t(Width()), int16_t(Height()));
  31:../../libdaisy/src/hid/disp/display.h ****     }
  32:../../libdaisy/src/hid/disp/display.h **** 
  33:../../libdaisy/src/hid/disp/display.h **** 
  34:../../libdaisy/src/hid/disp/display.h ****     size_t CurrentX() { return currentX_; };
  35:../../libdaisy/src/hid/disp/display.h ****     size_t CurrentY() { return currentY_; };
  36:../../libdaisy/src/hid/disp/display.h **** 
  37:../../libdaisy/src/hid/disp/display.h ****     /** 
  38:../../libdaisy/src/hid/disp/display.h ****     Fills the entire display with either on/off.
  39:../../libdaisy/src/hid/disp/display.h ****     \param on Sets on or off.
  40:../../libdaisy/src/hid/disp/display.h ****     */
  41:../../libdaisy/src/hid/disp/display.h ****     virtual void Fill(bool on) = 0;
  42:../../libdaisy/src/hid/disp/display.h **** 
  43:../../libdaisy/src/hid/disp/display.h ****     /**
  44:../../libdaisy/src/hid/disp/display.h ****     Sets the pixel at the specified coordinate to be on/off.
  45:../../libdaisy/src/hid/disp/display.h ****     \param x   x Coordinate
  46:../../libdaisy/src/hid/disp/display.h ****     \param y   y coordinate
  47:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
  48:../../libdaisy/src/hid/disp/display.h ****     */
  49:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) = 0;
  50:../../libdaisy/src/hid/disp/display.h **** 
  51:../../libdaisy/src/hid/disp/display.h ****     /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 5


  52:../../libdaisy/src/hid/disp/display.h ****     Draws a line from (x1, y1) to (y1, y2)
  53:../../libdaisy/src/hid/disp/display.h ****     \param x1  x Coordinate of the starting point
  54:../../libdaisy/src/hid/disp/display.h ****     \param y1  y Coordinate of the starting point
  55:../../libdaisy/src/hid/disp/display.h ****     \param x2  x Coordinate of the ending point
  56:../../libdaisy/src/hid/disp/display.h ****     \param y2  y Coordinate of the ending point
  57:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
  58:../../libdaisy/src/hid/disp/display.h ****     */
  59:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawLine(uint_fast8_t x1,
  60:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y1,
  61:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t x2,
  62:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y2,
  63:../../libdaisy/src/hid/disp/display.h ****                           bool         on)
  64:../../libdaisy/src/hid/disp/display.h ****         = 0;
  65:../../libdaisy/src/hid/disp/display.h **** 
  66:../../libdaisy/src/hid/disp/display.h ****     /**
  67:../../libdaisy/src/hid/disp/display.h ****     Draws a rectangle based on two coordinates.
  68:../../libdaisy/src/hid/disp/display.h ****     \param x1 x Coordinate of the first point
  69:../../libdaisy/src/hid/disp/display.h ****     \param y1 y Coordinate of the first point
  70:../../libdaisy/src/hid/disp/display.h ****     \param x2 x Coordinate of the second point
  71:../../libdaisy/src/hid/disp/display.h ****     \param y2 y Coordinate of the second point
  72:../../libdaisy/src/hid/disp/display.h ****     \param on on or off
  73:../../libdaisy/src/hid/disp/display.h ****     \param fill fill the rectangle or draw only the outline
  74:../../libdaisy/src/hid/disp/display.h ****     */
  75:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawRect(uint_fast8_t x1,
  76:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y1,
  77:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t x2,
  78:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y2,
  79:../../libdaisy/src/hid/disp/display.h ****                           bool         on,
  80:../../libdaisy/src/hid/disp/display.h ****                           bool         fill = false)
  81:../../libdaisy/src/hid/disp/display.h ****         = 0;
  82:../../libdaisy/src/hid/disp/display.h **** 
  83:../../libdaisy/src/hid/disp/display.h ****     /**
  84:../../libdaisy/src/hid/disp/display.h ****     Draws a rectangle.
  85:../../libdaisy/src/hid/disp/display.h ****     \param rect the rectangle
  86:../../libdaisy/src/hid/disp/display.h ****     \param on   on or off
  87:../../libdaisy/src/hid/disp/display.h ****     \param fill fill the rectangle or draw only the outline
  88:../../libdaisy/src/hid/disp/display.h ****     */
  89:../../libdaisy/src/hid/disp/display.h ****     void DrawRect(const Rectangle& rect, bool on, bool fill = false)
  90:../../libdaisy/src/hid/disp/display.h ****     {
  91:../../libdaisy/src/hid/disp/display.h ****         DrawRect(rect.GetX(),
  92:../../libdaisy/src/hid/disp/display.h ****                  rect.GetY(),
  93:../../libdaisy/src/hid/disp/display.h ****                  rect.GetRight(),
  94:../../libdaisy/src/hid/disp/display.h ****                  rect.GetBottom(),
  95:../../libdaisy/src/hid/disp/display.h ****                  on,
  96:../../libdaisy/src/hid/disp/display.h ****                  fill);
  97:../../libdaisy/src/hid/disp/display.h ****     }
  98:../../libdaisy/src/hid/disp/display.h **** 
  99:../../libdaisy/src/hid/disp/display.h ****     /**
 100:../../libdaisy/src/hid/disp/display.h ****     Draws an arc around the specified coordinate
 101:../../libdaisy/src/hid/disp/display.h ****     \param x           x Coordinate of the center of the arc
 102:../../libdaisy/src/hid/disp/display.h ****     \param y           y Coordinate of the center of the arc
 103:../../libdaisy/src/hid/disp/display.h ****     \param radius      radius of the arc
 104:../../libdaisy/src/hid/disp/display.h ****     \param start_angle angle where to start the arc
 105:../../libdaisy/src/hid/disp/display.h ****     \param sweep       total angle of the arc
 106:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 107:../../libdaisy/src/hid/disp/display.h ****     */
 108:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawArc(uint_fast8_t x,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 6


 109:../../libdaisy/src/hid/disp/display.h ****                          uint_fast8_t y,
 110:../../libdaisy/src/hid/disp/display.h ****                          uint_fast8_t radius,
 111:../../libdaisy/src/hid/disp/display.h ****                          int_fast16_t start_angle,
 112:../../libdaisy/src/hid/disp/display.h ****                          int_fast16_t sweep,
 113:../../libdaisy/src/hid/disp/display.h ****                          bool         on)
 114:../../libdaisy/src/hid/disp/display.h ****         = 0;
 115:../../libdaisy/src/hid/disp/display.h **** 
 116:../../libdaisy/src/hid/disp/display.h ****     /**
 117:../../libdaisy/src/hid/disp/display.h ****     Draws a circle around the specified coordinate
 118:../../libdaisy/src/hid/disp/display.h ****     \param x           x Coordinate of the center of the circle
 119:../../libdaisy/src/hid/disp/display.h ****     \param y           y Coordinate of the center of the circle
 120:../../libdaisy/src/hid/disp/display.h ****     \param radius      radius of the circle
 121:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 122:../../libdaisy/src/hid/disp/display.h ****     */
 123:../../libdaisy/src/hid/disp/display.h ****     void
 124:../../libdaisy/src/hid/disp/display.h ****     DrawCircle(uint_fast8_t x, uint_fast8_t y, uint_fast8_t radius, bool on)
 125:../../libdaisy/src/hid/disp/display.h ****     {
 126:../../libdaisy/src/hid/disp/display.h ****         DrawArc(x, y, radius, 0, 360, on);
 127:../../libdaisy/src/hid/disp/display.h ****     };
 128:../../libdaisy/src/hid/disp/display.h **** 
 129:../../libdaisy/src/hid/disp/display.h ****     /** 
 130:../../libdaisy/src/hid/disp/display.h ****     Writes the character with the specific FontDef
 131:../../libdaisy/src/hid/disp/display.h ****     to the display buffer at the current Cursor position.
 132:../../libdaisy/src/hid/disp/display.h ****     \param ch character to be written
 133:../../libdaisy/src/hid/disp/display.h ****     \param font font to be written in
 134:../../libdaisy/src/hid/disp/display.h ****     \param on    on or off
 135:../../libdaisy/src/hid/disp/display.h ****     \return &
 136:../../libdaisy/src/hid/disp/display.h ****     */
 137:../../libdaisy/src/hid/disp/display.h ****     virtual char WriteChar(char ch, FontDef font, bool on) = 0;
 138:../../libdaisy/src/hid/disp/display.h **** 
 139:../../libdaisy/src/hid/disp/display.h ****     /** 
 140:../../libdaisy/src/hid/disp/display.h ****     Similar to WriteChar, except it will handle an entire String.
 141:../../libdaisy/src/hid/disp/display.h ****     Wrapping does not happen automatically, so the width
 142:../../libdaisy/src/hid/disp/display.h ****     of the string must be kept within the dimensions of the screen.
 143:../../libdaisy/src/hid/disp/display.h ****     \param str string to be written
 144:../../libdaisy/src/hid/disp/display.h ****     \param font font to use
 145:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 146:../../libdaisy/src/hid/disp/display.h ****     \return &
 147:../../libdaisy/src/hid/disp/display.h ****     */
 148:../../libdaisy/src/hid/disp/display.h ****     virtual char WriteString(const char* str, FontDef font, bool on) = 0;
 149:../../libdaisy/src/hid/disp/display.h **** 
 150:../../libdaisy/src/hid/disp/display.h ****     /** 
 151:../../libdaisy/src/hid/disp/display.h ****     Similar to WriteString but justified within a bounding box.
 152:../../libdaisy/src/hid/disp/display.h ****     \param str          string to be written
 153:../../libdaisy/src/hid/disp/display.h ****     \param font         font to use
 154:../../libdaisy/src/hid/disp/display.h ****     \param boundingBox  the bounding box to draw the text in
 155:../../libdaisy/src/hid/disp/display.h ****     \param alignment    the alignment to use
 156:../../libdaisy/src/hid/disp/display.h ****     \param on           on or off
 157:../../libdaisy/src/hid/disp/display.h ****     \return The rectangle that was drawn to
 158:../../libdaisy/src/hid/disp/display.h ****     */
 159:../../libdaisy/src/hid/disp/display.h ****     virtual Rectangle WriteStringAligned(const char*    str,
 160:../../libdaisy/src/hid/disp/display.h ****                                          const FontDef& font,
 161:../../libdaisy/src/hid/disp/display.h ****                                          Rectangle      boundingBox,
 162:../../libdaisy/src/hid/disp/display.h ****                                          Alignment      alignment,
 163:../../libdaisy/src/hid/disp/display.h ****                                          bool           on)
 164:../../libdaisy/src/hid/disp/display.h ****         = 0;
 165:../../libdaisy/src/hid/disp/display.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 7


 166:../../libdaisy/src/hid/disp/display.h ****     /** 
 167:../../libdaisy/src/hid/disp/display.h ****     Moves the 'Cursor' position used for WriteChar, and WriteStr to the specified coordinate.
 168:../../libdaisy/src/hid/disp/display.h ****     \param x x pos
 169:../../libdaisy/src/hid/disp/display.h ****     \param y y pos
 170:../../libdaisy/src/hid/disp/display.h ****     */
 171:../../libdaisy/src/hid/disp/display.h ****     void SetCursor(uint16_t x, uint16_t y)
 172:../../libdaisy/src/hid/disp/display.h ****     {
 173:../../libdaisy/src/hid/disp/display.h ****         currentX_ = (x >= Width()) ? Width() - 1 : x;
 174:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 175:../../libdaisy/src/hid/disp/display.h ****     }
 176:../../libdaisy/src/hid/disp/display.h **** 
 177:../../libdaisy/src/hid/disp/display.h ****     /** 
 178:../../libdaisy/src/hid/disp/display.h ****     Writes the current display buffer to the OLED device using SPI or I2C depending on 
 179:../../libdaisy/src/hid/disp/display.h ****     how the object was initialized.
 180:../../libdaisy/src/hid/disp/display.h ****     */
 181:../../libdaisy/src/hid/disp/display.h ****     virtual void Update() = 0;
 182:../../libdaisy/src/hid/disp/display.h **** 
 183:../../libdaisy/src/hid/disp/display.h ****   protected:
 184:../../libdaisy/src/hid/disp/display.h ****     uint16_t currentX_;
 185:../../libdaisy/src/hid/disp/display.h ****     uint16_t currentY_;
 186:../../libdaisy/src/hid/disp/display.h **** };
 187:../../libdaisy/src/hid/disp/display.h **** 
 188:../../libdaisy/src/hid/disp/display.h **** /** This class is intended as a intermediary class for your actual implementation of the OneBitGrap
 189:../../libdaisy/src/hid/disp/display.h ****  *  interface. It uses the CRTP design pattern where the template argument is the child class. It p
 190:../../libdaisy/src/hid/disp/display.h ****  *  implementations for most of the functions, except DrawPixel(), Update() and Fill(), which you'l
 191:../../libdaisy/src/hid/disp/display.h ****  *  to provide in your child class.
 192:../../libdaisy/src/hid/disp/display.h ****  *  The main goal of this class is to provide common drawing functions without relying on massive a
 193:../../libdaisy/src/hid/disp/display.h ****  *  virtual function calls that would result in a performance loss. To achieve this, any drawing fu
 194:../../libdaisy/src/hid/disp/display.h ****  *  is implemented here and internally calls other drawing functions (e.g. DrawRect() which interna
 195:../../libdaisy/src/hid/disp/display.h ****  *  DrawPixel() and DrawLine()) makes these calls via the qualified name of these functions to expl
 196:../../libdaisy/src/hid/disp/display.h ****  *  suppress the virtual dispatch mechanism like this:
 197:../../libdaisy/src/hid/disp/display.h ****  * 
 198:../../libdaisy/src/hid/disp/display.h ****  *      ChildType::DrawPixel(...); // no virtual function call; direct call into the child class fu
 199:../../libdaisy/src/hid/disp/display.h ****  *  
 200:../../libdaisy/src/hid/disp/display.h ****  *  To create a custom OneBitGraphicsDisplay implementation, you can 
 201:../../libdaisy/src/hid/disp/display.h ****  *  A) inherit from OneBitGraphicsDisplay directly and provide all the drawing functions yourself
 202:../../libdaisy/src/hid/disp/display.h ****  *  B) Inherit from OneBitGraphicsDisplayImpl and only provide DrawPixel(), Fill() and Update()
 203:../../libdaisy/src/hid/disp/display.h ****  *     like this:
 204:../../libdaisy/src/hid/disp/display.h ****  *  
 205:../../libdaisy/src/hid/disp/display.h ****  *      class MyDisplayClass : public OneBitGraphicsDisplayImpl<MyDisplayClass> 
 206:../../libdaisy/src/hid/disp/display.h ****  *      {
 207:../../libdaisy/src/hid/disp/display.h ****  *      public:
 208:../../libdaisy/src/hid/disp/display.h ****  *          void Fill() override { ... };
 209:../../libdaisy/src/hid/disp/display.h ****  *          void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) override { ... };
 210:../../libdaisy/src/hid/disp/display.h ****  *          void Update() override { ... }
 211:../../libdaisy/src/hid/disp/display.h ****  *      };
 212:../../libdaisy/src/hid/disp/display.h ****  *  
 213:../../libdaisy/src/hid/disp/display.h ****  */
 214:../../libdaisy/src/hid/disp/display.h **** template <class ChildType>
 215:../../libdaisy/src/hid/disp/display.h **** class OneBitGraphicsDisplayImpl : public OneBitGraphicsDisplay
 216:../../libdaisy/src/hid/disp/display.h **** {
 217:../../libdaisy/src/hid/disp/display.h ****   public:
 218:../../libdaisy/src/hid/disp/display.h ****     OneBitGraphicsDisplayImpl() {}
 219:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplayImpl() {}
  73              		.loc 5 219 13 view .LVU6
  74              	.LBB4573:
  75              	.LBI4573:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 8


  23:../../libdaisy/src/hid/disp/display.h **** 
  76              		.loc 5 23 13 view .LVU7
  23:../../libdaisy/src/hid/disp/display.h **** 
  77              		.loc 5 23 13 is_stmt 0 view .LVU8
  78              	.LBE4573:
  79              	.LBE4572:
  80              	.LBE4571:
  81              	.LBB4574:
  82              	.LBI4574:
  83              		.file 6 "../../libdaisy/src/hid/midi.h"
   1:../../libdaisy/src/hid/midi.h **** #pragma once
   2:../../libdaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libdaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libdaisy/src/hid/midi.h **** 
   5:../../libdaisy/src/hid/midi.h **** // TODO: make this adjustable
   6:../../libdaisy/src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libdaisy/src/hid/midi.h **** 
   8:../../libdaisy/src/hid/midi.h **** #include <stdint.h>
   9:../../libdaisy/src/hid/midi.h **** #include <stdlib.h>
  10:../../libdaisy/src/hid/midi.h **** #include "per/uart.h"
  11:../../libdaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libdaisy/src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libdaisy/src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libdaisy/src/hid/midi.h **** #include "sys/system.h"
  15:../../libdaisy/src/hid/midi.h **** 
  16:../../libdaisy/src/hid/midi.h **** namespace daisy
  17:../../libdaisy/src/hid/midi.h **** {
  18:../../libdaisy/src/hid/midi.h **** /** @addtogroup external 
  19:../../libdaisy/src/hid/midi.h ****     @{ 
  20:../../libdaisy/src/hid/midi.h **** */
  21:../../libdaisy/src/hid/midi.h **** 
  22:../../libdaisy/src/hid/midi.h **** class MidiUartTransport
  23:../../libdaisy/src/hid/midi.h **** {
  24:../../libdaisy/src/hid/midi.h ****   public:
  25:../../libdaisy/src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libdaisy/src/hid/midi.h **** 
  28:../../libdaisy/src/hid/midi.h ****     struct Config
  29:../../libdaisy/src/hid/midi.h ****     {
  30:../../libdaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libdaisy/src/hid/midi.h **** 
  34:../../libdaisy/src/hid/midi.h ****         Config()
  35:../../libdaisy/src/hid/midi.h ****         {
  36:../../libdaisy/src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libdaisy/src/hid/midi.h ****         }
  40:../../libdaisy/src/hid/midi.h ****     };
  41:../../libdaisy/src/hid/midi.h **** 
  42:../../libdaisy/src/hid/midi.h ****     inline void Init(Config config)
  43:../../libdaisy/src/hid/midi.h ****     {
  44:../../libdaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libdaisy/src/hid/midi.h **** 
  46:../../libdaisy/src/hid/midi.h ****         //defaults
  47:../../libdaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 9


  48:../../libdaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libdaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libdaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libdaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libdaisy/src/hid/midi.h **** 
  53:../../libdaisy/src/hid/midi.h ****         //user settings
  54:../../libdaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libdaisy/src/hid/midi.h **** 
  58:../../libdaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libdaisy/src/hid/midi.h ****     }
  60:../../libdaisy/src/hid/midi.h **** 
  61:../../libdaisy/src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libdaisy/src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libdaisy/src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libdaisy/src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libdaisy/src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libdaisy/src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libdaisy/src/hid/midi.h **** 
  68:../../libdaisy/src/hid/midi.h ****   private:
  69:../../libdaisy/src/hid/midi.h ****     UartHandler uart_;
  70:../../libdaisy/src/hid/midi.h **** };
  71:../../libdaisy/src/hid/midi.h **** 
  72:../../libdaisy/src/hid/midi.h **** /** 
  73:../../libdaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libdaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libdaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libdaisy/src/hid/midi.h ****     @author shensley
  77:../../libdaisy/src/hid/midi.h ****     @date March 2020
  78:../../libdaisy/src/hid/midi.h **** */
  79:../../libdaisy/src/hid/midi.h **** template <typename Transport>
  80:../../libdaisy/src/hid/midi.h **** class MidiHandler
  81:../../libdaisy/src/hid/midi.h **** {
  82:../../libdaisy/src/hid/midi.h ****   public:
  83:../../libdaisy/src/hid/midi.h ****     MidiHandler() {}
  84:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
  84              		.loc 6 84 5 is_stmt 1 view .LVU9
  85              	.LBB4575:
  86              	.LBI4575:
  26:../../libdaisy/src/hid/midi.h **** 
  87              		.loc 6 26 5 view .LVU10
  26:../../libdaisy/src/hid/midi.h **** 
  88              		.loc 6 26 5 is_stmt 0 view .LVU11
  89              	.LBE4575:
  90              	.LBE4574:
  91              	.LBB4576:
  92              	.LBI4576:
  93              		.file 7 "../../libdaisy/src/hid/encoder.h"
   1:../../libdaisy/src/hid/encoder.h **** #pragma once
   2:../../libdaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libdaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libdaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libdaisy/src/hid/encoder.h **** 
   8:../../libdaisy/src/hid/encoder.h **** namespace daisy
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 10


   9:../../libdaisy/src/hid/encoder.h **** {
  10:../../libdaisy/src/hid/encoder.h **** /** 
  11:../../libdaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libdaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libdaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/encoder.h ****     @date December 2019
  15:../../libdaisy/src/hid/encoder.h ****     @ingroup controls
  16:../../libdaisy/src/hid/encoder.h **** */
  17:../../libdaisy/src/hid/encoder.h **** class Encoder
  18:../../libdaisy/src/hid/encoder.h **** {
  19:../../libdaisy/src/hid/encoder.h ****   public:
  20:../../libdaisy/src/hid/encoder.h ****     Encoder() {}
  21:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
  94              		.loc 7 21 5 is_stmt 1 view .LVU12
  95              	.LBB4577:
  96              	.LBI4577:
  97              		.file 8 "../../libdaisy/src/hid/switch.h"
   1:../../libdaisy/src/hid/switch.h **** #pragma once
   2:../../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/switch.h **** #include "sys/system.h"
   7:../../libdaisy/src/hid/switch.h **** 
   8:../../libdaisy/src/hid/switch.h **** namespace daisy
   9:../../libdaisy/src/hid/switch.h **** {
  10:../../libdaisy/src/hid/switch.h **** /** 
  11:../../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/switch.h ****     @date December 2019
  15:../../libdaisy/src/hid/switch.h ****     @ingroup controls
  16:../../libdaisy/src/hid/switch.h **** */
  17:../../libdaisy/src/hid/switch.h **** class Switch
  18:../../libdaisy/src/hid/switch.h **** {
  19:../../libdaisy/src/hid/switch.h ****   public:
  20:../../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libdaisy/src/hid/switch.h ****     enum Type
  22:../../libdaisy/src/hid/switch.h ****     {
  23:../../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libdaisy/src/hid/switch.h ****     };
  26:../../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libdaisy/src/hid/switch.h ****     enum Polarity
  28:../../libdaisy/src/hid/switch.h ****     {
  29:../../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libdaisy/src/hid/switch.h ****     };
  32:../../libdaisy/src/hid/switch.h **** 
  33:../../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libdaisy/src/hid/switch.h ****     enum Pull
  35:../../libdaisy/src/hid/switch.h ****     {
  36:../../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libdaisy/src/hid/switch.h ****     };
  40:../../libdaisy/src/hid/switch.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 11


  41:../../libdaisy/src/hid/switch.h ****     Switch() {}
  42:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
  98              		.loc 8 42 5 view .LVU13
  99              		.loc 8 42 5 is_stmt 0 view .LVU14
 100              	.LBE4577:
 101              	.LBE4576:
 102              	.LBB4578:
 103              	.LBI4578:
 104              		.file 9 "../../libdaisy/src/daisy_seed.h"
   1:../../libdaisy/src/daisy_seed.h **** #pragma once
   2:../../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy/src/daisy_seed.h **** 
   5:../../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy/src/daisy_seed.h **** 
   7:../../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy/src/daisy_seed.h **** 
  10:../../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../../libdaisy/src/daisy_seed.h **** {
  12:../../libdaisy/src/daisy_seed.h **** /**
  13:../../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy/src/daisy_seed.h **** 
  16:../../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy/src/daisy_seed.h **** */
  18:../../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy/src/daisy_seed.h **** {
  20:../../libdaisy/src/daisy_seed.h ****   public:
  21:../../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 105              		.loc 9 22 5 is_stmt 1 view .LVU15
 106              	.LBB4579:
 107              	.LBI4579:
 108              		.file 10 "../../libdaisy/src/sys/system.h"
   1:../../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy/src/sys/system.h **** 
   4:../../libdaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy/src/sys/system.h **** 
   6:../../libdaisy/src/sys/system.h **** #include <cstdint>
   7:../../libdaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy/src/sys/system.h **** 
   9:../../libdaisy/src/sys/system.h **** namespace daisy
  10:../../libdaisy/src/sys/system.h **** {
  11:../../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy/src/sys/system.h ****  **
  15:../../libdaisy/src/sys/system.h ****  ** @author shensley
  16:../../libdaisy/src/sys/system.h ****  ** @addtogroup system
  17:../../libdaisy/src/sys/system.h ****  */
  18:../../libdaisy/src/sys/system.h **** class System
  19:../../libdaisy/src/sys/system.h **** {
  20:../../libdaisy/src/sys/system.h ****   public:
  21:../../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy/src/sys/system.h ****     struct Config
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 12


  23:../../libdaisy/src/sys/system.h ****     {
  24:../../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy/src/sys/system.h ****         {
  27:../../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy/src/sys/system.h ****         };
  30:../../libdaisy/src/sys/system.h **** 
  31:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy/src/sys/system.h ****          ** */
  35:../../libdaisy/src/sys/system.h ****         void Defaults()
  36:../../libdaisy/src/sys/system.h ****         {
  37:../../libdaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy/src/sys/system.h ****             use_dcache  = true;
  39:../../libdaisy/src/sys/system.h ****             use_icache  = true;
  40:../../libdaisy/src/sys/system.h ****             skip_clocks = false;
  41:../../libdaisy/src/sys/system.h ****         }
  42:../../libdaisy/src/sys/system.h **** 
  43:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  46:../../libdaisy/src/sys/system.h ****          ** */
  47:../../libdaisy/src/sys/system.h ****         void Boost()
  48:../../libdaisy/src/sys/system.h ****         {
  49:../../libdaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libdaisy/src/sys/system.h ****             use_dcache  = true;
  51:../../libdaisy/src/sys/system.h ****             use_icache  = true;
  52:../../libdaisy/src/sys/system.h ****             skip_clocks = false;
  53:../../libdaisy/src/sys/system.h ****         }
  54:../../libdaisy/src/sys/system.h **** 
  55:../../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libdaisy/src/sys/system.h ****         bool       use_dcache;
  57:../../libdaisy/src/sys/system.h ****         bool       use_icache;
  58:../../libdaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../../libdaisy/src/sys/system.h ****     };
  60:../../libdaisy/src/sys/system.h **** 
  61:../../libdaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libdaisy/src/sys/system.h ****      * 
  63:../../libdaisy/src/sys/system.h ****      */
  64:../../libdaisy/src/sys/system.h ****     enum MemoryRegion
  65:../../libdaisy/src/sys/system.h ****     {
  66:../../libdaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libdaisy/src/sys/system.h ****         ITCMRAM,
  68:../../libdaisy/src/sys/system.h ****         DTCMRAM,
  69:../../libdaisy/src/sys/system.h ****         SRAM_D1,
  70:../../libdaisy/src/sys/system.h ****         SRAM_D2,
  71:../../libdaisy/src/sys/system.h ****         SRAM_D3,
  72:../../libdaisy/src/sys/system.h ****         SDRAM,
  73:../../libdaisy/src/sys/system.h ****         QSPI,
  74:../../libdaisy/src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libdaisy/src/sys/system.h ****     };
  76:../../libdaisy/src/sys/system.h **** 
  77:../../libdaisy/src/sys/system.h ****     System() {}
  78:../../libdaisy/src/sys/system.h ****     ~System() {}
 109              		.loc 10 78 5 view .LVU16
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 13


 110              		.loc 10 78 5 is_stmt 0 view .LVU17
 111              	.LBE4579:
 112              	.LBB4580:
 113              	.LBI4580:
 114              		.file 11 "../../libdaisy/src/hid/usb.h"
   1:../../libdaisy/src/hid/usb.h **** #pragma once
   2:../../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy/src/hid/usb.h **** 
   7:../../libdaisy/src/hid/usb.h **** namespace daisy
   8:../../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../../libdaisy/src/hid/usb.h ****     @{
  10:../../libdaisy/src/hid/usb.h **** */
  11:../../libdaisy/src/hid/usb.h **** 
  12:../../libdaisy/src/hid/usb.h **** {
  13:../../libdaisy/src/hid/usb.h **** /** 
  14:../../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../../libdaisy/src/hid/usb.h **** */
  18:../../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../../libdaisy/src/hid/usb.h **** {
  20:../../libdaisy/src/hid/usb.h ****   public:
  21:../../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy/src/hid/usb.h ****     enum class Result
  23:../../libdaisy/src/hid/usb.h ****     {
  24:../../libdaisy/src/hid/usb.h ****         OK,
  25:../../libdaisy/src/hid/usb.h ****         ERR,
  26:../../libdaisy/src/hid/usb.h ****     };
  27:../../libdaisy/src/hid/usb.h **** 
  28:../../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy/src/hid/usb.h ****     {
  31:../../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy/src/hid/usb.h ****     };
  35:../../libdaisy/src/hid/usb.h **** 
  36:../../libdaisy/src/hid/usb.h **** 
  37:../../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy/src/hid/usb.h **** 
  40:../../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libdaisy/src/hid/usb.h **** 
  42:../../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
 115              		.loc 11 42 5 is_stmt 1 view .LVU18
 116              		.loc 11 42 5 is_stmt 0 view .LVU19
 117              	.LBE4580:
 118              	.LBB4581:
 119              	.LBI4581:
 120              		.file 12 "../../libdaisy/src/per/adc.h"
   1:../../libdaisy/src/per/adc.h **** #pragma once
   2:../../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy/src/per/adc.h **** #include <stdint.h>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 14


   5:../../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libdaisy/src/per/adc.h **** 
   9:../../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libdaisy/src/per/adc.h **** 
  11:../../libdaisy/src/per/adc.h **** namespace daisy
  12:../../libdaisy/src/per/adc.h **** {
  13:../../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../../libdaisy/src/per/adc.h ****     @{
  15:../../libdaisy/src/per/adc.h **** */
  16:../../libdaisy/src/per/adc.h **** 
  17:../../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy/src/per/adc.h **** */
  21:../../libdaisy/src/per/adc.h **** 
  22:../../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../../libdaisy/src/per/adc.h **** {
  25:../../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../../libdaisy/src/per/adc.h ****     {
  28:../../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../../libdaisy/src/per/adc.h ****     };
  33:../../libdaisy/src/per/adc.h **** 
  34:../../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../../libdaisy/src/per/adc.h ****      */
  37:../../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../../libdaisy/src/per/adc.h **** 
  39:../../libdaisy/src/per/adc.h ****     /** 
  40:../../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../../libdaisy/src/per/adc.h ****     */
  51:../../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../../libdaisy/src/per/adc.h **** 
  57:../../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../../libdaisy/src/per/adc.h **** };
  61:../../libdaisy/src/per/adc.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 15


  62:../../libdaisy/src/per/adc.h **** /**
  63:../../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../../libdaisy/src/per/adc.h **** */
  65:../../libdaisy/src/per/adc.h **** class AdcHandle
  66:../../libdaisy/src/per/adc.h **** {
  67:../../libdaisy/src/per/adc.h ****   public:
  68:../../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../../libdaisy/src/per/adc.h ****     {
  71:../../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../../libdaisy/src/per/adc.h ****     };
  83:../../libdaisy/src/per/adc.h **** 
  84:../../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 121              		.loc 12 85 5 is_stmt 1 view .LVU20
 122              		.loc 12 85 5 is_stmt 0 view .LVU21
 123              	.LBE4581:
 124              	.LBB4582:
 125              	.LBI4582:
 126              		.file 13 "../../libdaisy/src/hid/audio.h"
   1:../../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy/src/hid/audio.h **** 
   4:../../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy/src/hid/audio.h **** 
   6:../../libdaisy/src/hid/audio.h **** namespace daisy
   7:../../libdaisy/src/hid/audio.h **** {
   8:../../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../../libdaisy/src/hid/audio.h **** {
  10:../../libdaisy/src/hid/audio.h ****   public:
  11:../../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../../libdaisy/src/hid/audio.h ****     struct Config
  14:../../libdaisy/src/hid/audio.h ****     {
  15:../../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../../libdaisy/src/hid/audio.h ****     };
  19:../../libdaisy/src/hid/audio.h **** 
  20:../../libdaisy/src/hid/audio.h ****     enum class Result
  21:../../libdaisy/src/hid/audio.h ****     {
  22:../../libdaisy/src/hid/audio.h ****         OK,
  23:../../libdaisy/src/hid/audio.h ****         ERR,
  24:../../libdaisy/src/hid/audio.h ****     };
  25:../../libdaisy/src/hid/audio.h **** 
  26:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  27:../../libdaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 16


  28:../../libdaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  29:../../libdaisy/src/hid/audio.h ****     */
  30:../../libdaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  31:../../libdaisy/src/hid/audio.h **** 
  32:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  33:../../libdaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  34:../../libdaisy/src/hid/audio.h ****     */
  35:../../libdaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  36:../../libdaisy/src/hid/audio.h **** 
  37:../../libdaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  38:../../libdaisy/src/hid/audio.h ****    * Non-Interleaving audio callbacks in daisy will be of this type
  39:../../libdaisy/src/hid/audio.h ****   */
  40:../../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  41:../../libdaisy/src/hid/audio.h ****                                   OutputBuffer out,
  42:../../libdaisy/src/hid/audio.h ****                                   size_t       size);
  43:../../libdaisy/src/hid/audio.h **** 
  44:../../libdaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  45:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  46:../../libdaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  47:../../libdaisy/src/hid/audio.h ****     */
  48:../../libdaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  49:../../libdaisy/src/hid/audio.h **** 
  50:../../libdaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  51:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  52:../../libdaisy/src/hid/audio.h ****     */
  53:../../libdaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  54:../../libdaisy/src/hid/audio.h **** 
  55:../../libdaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  56:../../libdaisy/src/hid/audio.h ****    * Interleaving audio callbacks in daisy must be of this type
  57:../../libdaisy/src/hid/audio.h ****   */
  58:../../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  59:../../libdaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  60:../../libdaisy/src/hid/audio.h ****                                               size_t                   size);
  61:../../libdaisy/src/hid/audio.h **** 
  62:../../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  63:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 127              		.loc 13 63 5 is_stmt 1 view .LVU22
 128              		.loc 13 63 5 is_stmt 0 view .LVU23
 129              	.LBE4582:
 130              	.LBE4578:
 131              		.loc 3 41 20 view .LVU24
 132 0000 7047     		bx	lr
 133              		.cfi_endproc
 134              	.LFE4414:
 136              		.weak	_ZN5daisy10DaisyPatchD1Ev
 137              		.thumb_set _ZN5daisy10DaisyPatchD1Ev,_ZN5daisy10DaisyPatchD2Ev
 138 0002 00BF     		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 139              		.align	1
 140              		.p2align 2,,3
 141              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-d16
 147              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:
 148              	.LVL2:
 149              	.LFB5450:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 17


 150              		.loc 4 17 13 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155              	.LBB4583:
 156              	.LBI4583:
 157              		.loc 5 219 13 view .LVU26
 158              	.LBB4584:
 159              	.LBI4584:
  23:../../libdaisy/src/hid/disp/display.h **** 
 160              		.loc 5 23 13 view .LVU27
  23:../../libdaisy/src/hid/disp/display.h **** 
 161              		.loc 5 23 13 is_stmt 0 view .LVU28
 162              	.LBE4584:
 163              	.LBE4583:
 164              		.loc 4 17 29 view .LVU29
 165 0000 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE5450:
 169              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
 170              		.thumb_set _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED
 171 0002 00BF     		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 172              		.align	1
 173              		.p2align 2,,3
 174              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillE
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv5-d16
 180              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:
 181              	.LVL3:
 182              	.LFB5539:
  18:../../libdaisy/src/hid/disp/oled_display.h **** 
  19:../../libdaisy/src/hid/disp/oled_display.h ****     struct Config
  20:../../libdaisy/src/hid/disp/oled_display.h ****     {
  21:../../libdaisy/src/hid/disp/oled_display.h ****         typename DisplayDriver::Config driver_config;
  22:../../libdaisy/src/hid/disp/oled_display.h ****     };
  23:../../libdaisy/src/hid/disp/oled_display.h **** 
  24:../../libdaisy/src/hid/disp/oled_display.h ****     void Init(Config config) { driver_.Init(config.driver_config); }
  25:../../libdaisy/src/hid/disp/oled_display.h **** 
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Height() const override { return driver_.Height(); }
  27:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
  28:../../libdaisy/src/hid/disp/oled_display.h **** 
  29:../../libdaisy/src/hid/disp/oled_display.h ****     /** 
  30:../../libdaisy/src/hid/disp/oled_display.h ****     Fills the entire display with either on/off.
  31:../../libdaisy/src/hid/disp/oled_display.h ****     \param on Sets on or off.
  32:../../libdaisy/src/hid/disp/oled_display.h ****     */
  33:../../libdaisy/src/hid/disp/oled_display.h ****     void Fill(bool on) override { driver_.Fill(on); }
 183              		.loc 4 33 10 is_stmt 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188              	.LBB4585:
 189              	.LBI4585:
 190              		.file 14 "../../libdaisy/src/dev/oled_ssd130x.h"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 18


   1:../../libdaisy/src/dev/oled_ssd130x.h **** #pragma once
   2:../../libdaisy/src/dev/oled_ssd130x.h **** #ifndef SA_OLED_SSD130X_H
   3:../../libdaisy/src/dev/oled_ssd130x.h **** #define SA_OLED_SSD130X_H /**< & */
   4:../../libdaisy/src/dev/oled_ssd130x.h **** 
   5:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/i2c.h"
   6:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/spi.h"
   7:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/gpio.h"
   8:../../libdaisy/src/dev/oled_ssd130x.h **** #include "sys/system.h"
   9:../../libdaisy/src/dev/oled_ssd130x.h **** 
  10:../../libdaisy/src/dev/oled_ssd130x.h **** namespace daisy
  11:../../libdaisy/src/dev/oled_ssd130x.h **** {
  12:../../libdaisy/src/dev/oled_ssd130x.h **** /**
  13:../../libdaisy/src/dev/oled_ssd130x.h ****  * I2C Transport for SSD1306 / SSD1309 OLED display devices
  14:../../libdaisy/src/dev/oled_ssd130x.h ****  */
  15:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130xI2CTransport
  16:../../libdaisy/src/dev/oled_ssd130x.h **** {
  17:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
  18:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
  19:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  20:../../libdaisy/src/dev/oled_ssd130x.h ****         I2CHandle::Config i2c_config;
  21:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t           i2c_address;
  22:../../libdaisy/src/dev/oled_ssd130x.h ****         void              Defaults()
  23:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  24:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.periph         = I2CHandle::Config::Peripheral::I2C_1;
  25:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.speed          = I2CHandle::Config::Speed::I2C_1MHZ;
  26:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.mode           = I2CHandle::Config::Mode::I2C_MASTER;
  27:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.pin_config.scl = {DSY_GPIOB, 8};
  28:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.pin_config.sda = {DSY_GPIOB, 9};
  29:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_address               = 0x3C;
  30:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  31:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  32:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(const Config& config)
  33:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  34:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_address_ = config.i2c_address;
  35:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_.Init(config.i2c_config);
  36:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  37:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendCommand(uint8_t cmd)
  38:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  39:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t buf[2] = {0X00, cmd};
  40:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_.TransmitBlocking(i2c_address_, buf, 2, 1000);
  41:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  42:../../libdaisy/src/dev/oled_ssd130x.h **** 
  43:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendData(uint8_t* buff, size_t size)
  44:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  45:../../libdaisy/src/dev/oled_ssd130x.h ****         for(size_t i = 0; i < size; i++)
  46:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  47:../../libdaisy/src/dev/oled_ssd130x.h ****             uint8_t buf[2] = {0X40, buff[i]};
  48:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_.TransmitBlocking(i2c_address_, buf, 2, 1000);
  49:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  50:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  51:../../libdaisy/src/dev/oled_ssd130x.h **** 
  52:../../libdaisy/src/dev/oled_ssd130x.h ****   private:
  53:../../libdaisy/src/dev/oled_ssd130x.h ****     daisy::I2CHandle i2c_;
  54:../../libdaisy/src/dev/oled_ssd130x.h ****     uint8_t          i2c_address_;
  55:../../libdaisy/src/dev/oled_ssd130x.h **** };
  56:../../libdaisy/src/dev/oled_ssd130x.h **** 
  57:../../libdaisy/src/dev/oled_ssd130x.h **** /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 19


  58:../../libdaisy/src/dev/oled_ssd130x.h ****  * 4 Wire SPI Transport for SSD1306 / SSD1309 OLED display devices
  59:../../libdaisy/src/dev/oled_ssd130x.h ****  */
  60:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130x4WireSpiTransport
  61:../../libdaisy/src/dev/oled_ssd130x.h **** {
  62:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
  63:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
  64:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  65:../../libdaisy/src/dev/oled_ssd130x.h ****         struct
  66:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  67:../../libdaisy/src/dev/oled_ssd130x.h ****             dsy_gpio_pin dc;    /**< & */
  68:../../libdaisy/src/dev/oled_ssd130x.h ****             dsy_gpio_pin reset; /**< & */
  69:../../libdaisy/src/dev/oled_ssd130x.h ****         } pin_config;
  70:../../libdaisy/src/dev/oled_ssd130x.h ****         void Defaults()
  71:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  72:../../libdaisy/src/dev/oled_ssd130x.h ****             pin_config.dc    = {DSY_GPIOB, 4};
  73:../../libdaisy/src/dev/oled_ssd130x.h ****             pin_config.reset = {DSY_GPIOB, 15};
  74:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  75:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  76:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(const Config& config)
  77:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  78:../../libdaisy/src/dev/oled_ssd130x.h ****         // Initialize both GPIO
  79:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_dc_.mode = DSY_GPIO_MODE_OUTPUT_PP;
  80:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_dc_.pin  = config.pin_config.dc;
  81:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_init(&pin_dc_);
  82:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_reset_.mode = DSY_GPIO_MODE_OUTPUT_PP;
  83:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_reset_.pin  = config.pin_config.reset;
  84:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_init(&pin_reset_);
  85:../../libdaisy/src/dev/oled_ssd130x.h ****         // Initialize SPI
  86:../../libdaisy/src/dev/oled_ssd130x.h ****         SpiHandle::Config spi_config;
  87:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.periph    = SpiHandle::Config::Peripheral::SPI_1;
  88:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.mode      = SpiHandle::Config::Mode::MASTER;
  89:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.direction = SpiHandle::Config::Direction::TWO_LINES_TX_ONLY;
  90:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.datasize  = 8;
  91:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.clock_polarity = SpiHandle::Config::ClockPolarity::LOW;
  92:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.clock_phase    = SpiHandle::Config::ClockPhase::ONE_EDGE;
  93:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.nss            = SpiHandle::Config::NSS::HARD_OUTPUT;
  94:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.baud_prescaler = SpiHandle::Config::BaudPrescaler::PS_8;
  95:../../libdaisy/src/dev/oled_ssd130x.h **** 
  96:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.sclk = {DSY_GPIOG, 11};
  97:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.miso = {DSY_GPIOX, 0};
  98:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.mosi = {DSY_GPIOB, 5};
  99:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.nss  = {DSY_GPIOG, 10};
 100:../../libdaisy/src/dev/oled_ssd130x.h **** 
 101:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.Init(spi_config);
 102:../../libdaisy/src/dev/oled_ssd130x.h **** 
 103:../../libdaisy/src/dev/oled_ssd130x.h ****         // Reset and Configure OLED.
 104:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_reset_, 0);
 105:../../libdaisy/src/dev/oled_ssd130x.h ****         System::Delay(10);
 106:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_reset_, 1);
 107:../../libdaisy/src/dev/oled_ssd130x.h ****         System::Delay(10);
 108:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendCommand(uint8_t cmd)
 110:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_dc_, 0);
 112:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 113:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 114:../../libdaisy/src/dev/oled_ssd130x.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 20


 115:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendData(uint8_t* buff, size_t size)
 116:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_dc_, 1);
 118:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 119:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 120:../../libdaisy/src/dev/oled_ssd130x.h **** 
 121:../../libdaisy/src/dev/oled_ssd130x.h ****   private:
 122:../../libdaisy/src/dev/oled_ssd130x.h ****     SpiHandle spi_;
 123:../../libdaisy/src/dev/oled_ssd130x.h ****     dsy_gpio  pin_reset_;
 124:../../libdaisy/src/dev/oled_ssd130x.h ****     dsy_gpio  pin_dc_;
 125:../../libdaisy/src/dev/oled_ssd130x.h **** };
 126:../../libdaisy/src/dev/oled_ssd130x.h **** 
 127:../../libdaisy/src/dev/oled_ssd130x.h **** 
 128:../../libdaisy/src/dev/oled_ssd130x.h **** /**
 129:../../libdaisy/src/dev/oled_ssd130x.h ****  * A driver implementation for the SSD1306/SSD1309
 130:../../libdaisy/src/dev/oled_ssd130x.h ****  */
 131:../../libdaisy/src/dev/oled_ssd130x.h **** template <size_t width, size_t height, typename Transport>
 132:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130xDriver
 133:../../libdaisy/src/dev/oled_ssd130x.h **** {
 134:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
 135:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
 136:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 137:../../libdaisy/src/dev/oled_ssd130x.h ****         typename Transport::Config transport_config;
 138:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 139:../../libdaisy/src/dev/oled_ssd130x.h **** 
 140:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(Config config)
 141:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 142:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.Init(config.transport_config);
 143:../../libdaisy/src/dev/oled_ssd130x.h **** 
 144:../../libdaisy/src/dev/oled_ssd130x.h ****         // Init routine...
 145:../../libdaisy/src/dev/oled_ssd130x.h **** 
 146:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display Off
 147:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xaE);
 148:../../libdaisy/src/dev/oled_ssd130x.h ****         // Dimension dependent commands...
 149:../../libdaisy/src/dev/oled_ssd130x.h ****         switch(height)
 150:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 151:../../libdaisy/src/dev/oled_ssd130x.h ****             case 16:
 152:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 153:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 154:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x60);
 155:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 156:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 157:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x0F);
 158:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 159:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 160:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x02);
 161:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 162:../../libdaisy/src/dev/oled_ssd130x.h ****             case 32:
 163:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 164:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 165:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 166:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 167:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 168:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x1F);
 169:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 170:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 171:../../libdaisy/src/dev/oled_ssd130x.h ****                 if(width == 64)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 21


 172:../../libdaisy/src/dev/oled_ssd130x.h ****                 {
 173:../../libdaisy/src/dev/oled_ssd130x.h ****                     transport_.SendCommand(0x12);
 174:../../libdaisy/src/dev/oled_ssd130x.h ****                 }
 175:../../libdaisy/src/dev/oled_ssd130x.h ****                 else
 176:../../libdaisy/src/dev/oled_ssd130x.h ****                 {
 177:../../libdaisy/src/dev/oled_ssd130x.h ****                     transport_.SendCommand(0x02);
 178:../../libdaisy/src/dev/oled_ssd130x.h ****                 }
 179:../../libdaisy/src/dev/oled_ssd130x.h **** 
 180:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 181:../../libdaisy/src/dev/oled_ssd130x.h ****             case 48:
 182:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 183:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 184:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 185:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 186:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 187:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x2F);
 188:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 189:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 190:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x12);
 191:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 192:../../libdaisy/src/dev/oled_ssd130x.h ****             default: // 128
 193:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 194:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 195:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 196:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 197:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 198:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x3F);
 199:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 200:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 201:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x12);
 202:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 203:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 204:../../libdaisy/src/dev/oled_ssd130x.h **** 
 205:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display Offset
 206:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xD3);
 207:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x00);
 208:../../libdaisy/src/dev/oled_ssd130x.h ****         // Start Line Address
 209:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x40);
 210:../../libdaisy/src/dev/oled_ssd130x.h ****         // Normal Display
 211:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA6);
 212:../../libdaisy/src/dev/oled_ssd130x.h ****         // All On Resume
 213:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA4);
 214:../../libdaisy/src/dev/oled_ssd130x.h ****         // Charge Pump
 215:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x8D);
 216:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x14);
 217:../../libdaisy/src/dev/oled_ssd130x.h ****         // Set Segment Remap
 218:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA1);
 219:../../libdaisy/src/dev/oled_ssd130x.h ****         // COM Output Scan Direction
 220:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xC8);
 221:../../libdaisy/src/dev/oled_ssd130x.h ****         // Contrast Control
 222:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x81);
 223:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x8F);
 224:../../libdaisy/src/dev/oled_ssd130x.h ****         // Pre Charge
 225:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xD9);
 226:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x25);
 227:../../libdaisy/src/dev/oled_ssd130x.h ****         // VCOM Detect
 228:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xDB);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 22


 229:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x34);
 230:../../libdaisy/src/dev/oled_ssd130x.h **** 
 231:../../libdaisy/src/dev/oled_ssd130x.h **** 
 232:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display On
 233:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xAF); //--turn on oled panel
 234:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 235:../../libdaisy/src/dev/oled_ssd130x.h **** 
 236:../../libdaisy/src/dev/oled_ssd130x.h ****     size_t Width() const { return width; };
 237:../../libdaisy/src/dev/oled_ssd130x.h ****     size_t Height() const { return height; };
 238:../../libdaisy/src/dev/oled_ssd130x.h **** 
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on)
 240:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 241:../../libdaisy/src/dev/oled_ssd130x.h ****         if(x >= width || y >= height)
 242:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 243:../../libdaisy/src/dev/oled_ssd130x.h ****         if(on)
 244:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 245:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 246:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] &= ~(1 << (y % 8));
 247:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 248:../../libdaisy/src/dev/oled_ssd130x.h **** 
 249:../../libdaisy/src/dev/oled_ssd130x.h ****     void Fill(bool on)
 191              		.loc 14 249 10 view .LVU31
 192              	.LBB4586:
 250:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         for(size_t i = 0; i < sizeof(buffer_); i++)
 193              		.loc 14 251 29 view .LVU32
 252:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 253:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[i] = on ? 0xff : 0x00;
 194              		.loc 14 253 24 is_stmt 0 view .LVU33
 195 0000 4942     		rsbs	r1, r1, #0
 196              	.LVL4:
 197              		.loc 14 253 24 view .LVU34
 198 0002 4FF48062 		mov	r2, #1024
 199 0006 1430     		adds	r0, r0, #20
 200              	.LVL5:
 201              		.loc 14 253 24 view .LVU35
 202 0008 C9B2     		uxtb	r1, r1
 203 000a FFF7FEBF 		b	memset
 204              	.LVL6:
 205              		.loc 14 253 24 view .LVU36
 206              	.LBE4586:
 207              	.LBE4585:
 208              		.cfi_endproc
 209              	.LFE5539:
 211 000e 00BF     		.section	.text._ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data,"axG",%progbits,_ZNSt17
 212              		.align	1
 213              		.p2align 2,,3
 214              		.weak	_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu fpv5-d16
 220              	_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data:
 221              	.LVL7:
 222              	.LFB5739:
 223              		.file 15 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Implementation of std::function -*- C++ -*-
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 23


   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Copyright (C) 2004-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** /** @file include/bits/std_function.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #ifndef _GLIBCXX_STD_FUNCTION_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #define _GLIBCXX_STD_FUNCTION_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #pragma GCC system_header
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** # include <bits/c++0x_warning.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #else
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** # include <typeinfo>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/stl_function.h>
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/invoke.h>
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/refwrap.h>
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/functexcept.h>
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /**
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @brief Exception class thrown when class template function's
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  operator() is called with an empty target.
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @ingroup exceptions
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    */
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   class bad_function_call : public std::exception
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   public:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 24


  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     virtual ~bad_function_call() noexcept;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const char* what() const noexcept;
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /**
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  Trait identifying "location-invariant" types, meaning that the
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  address of the object (or any of its members) will not escape.
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  Trivially copyable types are location-invariant and users can
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  specialize this trait for other types.
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    */
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Tp>
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __is_location_invariant
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : is_trivially_copyable<_Tp>::type
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { };
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   class _Undefined_class;
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   union _Nocopy_types
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void*       _M_object;
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_const_object;
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void (*_M_function_pointer)();
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void (_Undefined_class::*_M_member_pointer)();
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   union [[gnu::may_alias]] _Any_data
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void*       _M_access()       { return &_M_pod_data[0]; }
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Tp>
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Tp&
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_access()
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return *static_cast<_Tp*>(_M_access()); }
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Tp>
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       const _Tp&
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_access() const
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return *static_cast<const _Tp*>(_M_access()); }
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Nocopy_types _M_unused;
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     char _M_pod_data[sizeof(_Nocopy_types)];
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   enum _Manager_operation
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __get_type_info,
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __get_functor_ptr,
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __clone_functor,
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __destroy_functor
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Signature>
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class function;
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /// Base class of all polymorphic function object wrappers.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 25


 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   class _Function_base
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   public:
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     static const size_t _M_max_size = sizeof(_Nocopy_types);
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     static const size_t _M_max_align = __alignof__(_Nocopy_types);
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Functor>
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       class _Base_manager
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       protected:
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static const bool __stored_locally =
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	(__is_location_invariant<_Functor>::value
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	 && sizeof(_Functor) <= _M_max_size
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	 && __alignof__(_Functor) <= _M_max_align
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	 && (_M_max_align % __alignof__(_Functor) == 0));
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	typedef integral_constant<bool, __stored_locally> _Local_storage;
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Retrieve a pointer to the function object
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static _Functor*
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_get_pointer(const _Any_data& __source)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  if _GLIBCXX17_CONSTEXPR (__stored_locally)
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      const _Functor& __f = __source._M_access<_Functor>();
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      return const_cast<_Functor*>(std::__addressof(__f));
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    }
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  else // have stored a pointer
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    return __source._M_access<_Functor*>();
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Clone a location-invariant function object that fits within
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// an _Any_data structure.
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_clone(_Any_data& __dest, const _Any_data& __source, true_type)
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Clone a function object that is not location-invariant or
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// that cannot fit into an _Any_data structure.
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_clone(_Any_data& __dest, const _Any_data& __source, false_type)
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  __dest._M_access<_Functor*>() =
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    new _Functor(*__source._M_access<const _Functor*>());
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Destroying a location-invariant object may still require
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// destruction.
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_destroy(_Any_data& __victim, true_type)
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  __victim._M_access<_Functor>().~_Functor();
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Destroying an object located on the heap.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 26


 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_destroy(_Any_data& __victim, false_type)
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  delete __victim._M_access<_Functor*>();
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       public:
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static bool
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_Any_data& __dest, const _Any_data& __source,
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		   _Manager_operation __op)
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  switch (__op)
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __get_type_info:
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      __dest._M_access<const type_info*>() = &typeid(_Functor);
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __get_functor_ptr:
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      __dest._M_access<_Functor*>() = _M_get_pointer(__source);
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __clone_functor:
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      _M_clone(__dest, __source, _Local_storage());
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __destroy_functor:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      _M_destroy(__dest, _Local_storage());
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    }
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  return false;
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_init_functor(_Any_data& __functor, _Functor&& __f)
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Signature>
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(const function<_Signature>& __f)
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return static_cast<bool>(__f); }
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Tp>
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(_Tp* __fp)
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Class, typename _Tp>
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(_Tp _Class::* __mp)
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __mp != nullptr; }
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Tp>
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(const _Tp&)
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return true; }
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 27


 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       private:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_init_functor(_Any_data& __functor, _Functor&& __f, true_type)
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_init_functor(_Any_data& __functor, _Functor&& __f, false_type)
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ __functor._M_access<_Functor*>() = new _Functor(std::move(__f)); }
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       };
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Function_base() : _M_manager(nullptr) { }
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     ~_Function_base()
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       if (_M_manager)
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     bool _M_empty() const { return !_M_manager; }
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     typedef bool (*_Manager_type)(_Any_data&, const _Any_data&,
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 				  _Manager_operation);
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Any_data     _M_functor;
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Manager_type _M_manager;
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Signature, typename _Functor>
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class _Function_handler;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Functor, typename... _ArgTypes>
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class _Function_handler<_Res(_ArgTypes...), _Functor>
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Function_base::_Base_manager<_Functor>
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       typedef _Function_base::_Base_manager<_Functor> _Base;
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     public:
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       static bool
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_manager(_Any_data& __dest, const _Any_data& __source,
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		 _Manager_operation __op)
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	switch (__op)
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  case __get_type_info:
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    __dest._M_access<const type_info*>() = &typeid(_Functor);
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  case __get_functor_ptr:
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  default:
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _Base::_M_manager(__dest, __source, __op);
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return false;
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 28


 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       static _Res
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
 224              		.loc 15 289 7 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 229              		.loc 15 88 37 view .LVU38
 230              	.LBB4587:
 231              	.LBI4587:
 232              		.file 16 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\inv
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Implementation of INVOKE -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** /** @file include/bits/invoke.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****  *  Do not attempt to use it directly. @headername{functional}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #ifndef _GLIBCXX_INVOKE_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #define _GLIBCXX_INVOKE_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #pragma GCC system_header
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** # include <bits/c++0x_warning.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #else
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #include <type_traits>
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** {
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 29


  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   /**
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****    *  @addtogroup utilities
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****    *  @{
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****    */
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // Used by __invoke_impl instead of std::forward<_Tp> so that a
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // reference_wrapper is converted to an lvalue-reference.
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Tp, typename _Up = typename __inv_unwrap<_Tp>::type>
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Up&&
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invfwd(typename remove_reference<_Tp>::type& __t) noexcept
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return static_cast<_Up&&>(__t); }
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Fn, typename... _Args>
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemFun, typename _Tp, typename... _Args>
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memfun_ref, _MemFun&& __f, _Tp&& __t,
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 		  _Args&&... __args)
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return (__invfwd<_Tp>(__t).*__f)(std::forward<_Args>(__args)...); }
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemFun, typename _Tp, typename... _Args>
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memfun_deref, _MemFun&& __f, _Tp&& __t,
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 		  _Args&&... __args)
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       return ((*std::forward<_Tp>(__t)).*__f)(std::forward<_Args>(__args)...);
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemPtr, typename _Tp>
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memobj_ref, _MemPtr&& __f, _Tp&& __t)
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return __invfwd<_Tp>(__t).*__f; }
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemPtr, typename _Tp>
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memobj_deref, _MemPtr&& __f, _Tp&& __t)
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return (*std::forward<_Tp>(__t)).*__f; }
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   /// Invoke a callable object.
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Callable, typename... _Args>
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr typename __invoke_result<_Callable, _Args...>::type
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke(_Callable&& __fn, _Args&&... __args)
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     noexcept(__is_nothrow_invocable<_Callable, _Args...>::value)
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __result = __invoke_result<_Callable, _Args...>;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __type = typename __result::type;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __tag = typename __result::__invoke_type;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					std::forward<_Args>(__args)...);
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #if __cplusplus >= 201703L
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // INVOKE<R>: Invoke a callable object and convert the result to R.
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 30


 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr enable_if_t<is_invocable_r_v<_Res, _Callable, _Args...>, _Res>
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_r(_Callable&& __fn, _Args&&... __args)
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     noexcept(is_nothrow_invocable_r_v<_Res, _Callable, _Args...>)
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __result = __invoke_result<_Callable, _Args...>;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __type = typename __result::type;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __tag = typename __result::__invoke_type;
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       if constexpr (is_void_v<_Res>)
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 	std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					std::forward<_Args>(__args)...);
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       else
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 	return std::__invoke_impl<__type>(__tag{},
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					  std::forward<_Callable>(__fn),
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					  std::forward<_Args>(__args)...);
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #else // C++11
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     using __can_invoke_as_void = __enable_if_t<
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       __and_<is_void<_Res>, __is_invocable<_Callable, _Args...>>::value,
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       _Res
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     >;
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     using __can_invoke_as_nonvoid = __enable_if_t<
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       __and_<__not_<is_void<_Res>>,
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 	     is_convertible<typename __invoke_result<_Callable, _Args...>::type,
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 			    _Res>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       >::value,
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       _Res
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     >;
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // INVOKE<R>: Invoke a callable object and convert the result to R.
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr __can_invoke_as_nonvoid<_Res, _Callable, _Args...>
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_r(_Callable&& __fn, _Args&&... __args)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __result = __invoke_result<_Callable, _Args...>;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __type = typename __result::type;
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __tag = typename __result::__invoke_type;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					std::forward<_Args>(__args)...);
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // INVOKE<R> when R is cv void
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     _GLIBCXX14_CONSTEXPR __can_invoke_as_void<_Res, _Callable, _Args...>
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_r(_Callable&& __fn, _Args&&... __args)
 233              		.loc 16 148 5 view .LVU39
 234              	.LBB4588:
 235              	.LBB4589:
 236              	.LBI4589:
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 237              		.loc 16 59 5 view .LVU40
 238              	.LBB4590:
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 239              		.loc 16 60 36 is_stmt 0 view .LVU41
 240 0000 0368     		ldr	r3, [r0]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 31


 241 0002 1847     		bx	r3	@ indirect register sibling call
 242              	.LVL8:
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 243              		.loc 16 60 36 view .LVU42
 244              	.LBE4590:
 245              	.LBE4589:
 246              	.LBE4588:
 247              	.LBE4587:
 248              		.cfi_endproc
 249              	.LFE5739:
 251              		.section	.text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransport
 252              		.align	1
 253              		.p2align 2,,3
 254              		.weak	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv5-d16
 260              	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:
 261              	.LVL9:
 262              	.LFB6192:
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
 263              		.loc 4 26 14 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
 268              		.loc 4 26 65 is_stmt 0 view .LVU44
 269 0000 4020     		movs	r0, #64
 270              	.LVL10:
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
 271              		.loc 4 26 65 view .LVU45
 272 0002 7047     		bx	lr
 273              		.cfi_endproc
 274              	.LFE6192:
 276              		.section	.text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransport
 277              		.align	1
 278              		.p2align 2,,3
 279              		.weak	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv5-d16
 285              	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:
 286              	.LVL11:
 287              	.LFB6193:
  27:../../libdaisy/src/hid/disp/oled_display.h **** 
 288              		.loc 4 27 14 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
  27:../../libdaisy/src/hid/disp/oled_display.h **** 
 293              		.loc 4 27 63 is_stmt 0 view .LVU47
 294 0000 8020     		movs	r0, #128
 295              	.LVL12:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 32


  27:../../libdaisy/src/hid/disp/oled_display.h **** 
 296              		.loc 4 27 63 view .LVU48
 297 0002 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE6193:
 301              		.section	.text._Z2cbv,"ax",%progbits
 302              		.align	1
 303              		.p2align 2,,3
 304              		.global	_Z2cbv
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv5-d16
 310              	_Z2cbv:
 311              	.LFB5111:
 312              		.file 17 "Jellybeans.cpp"
   1:Jellybeans.cpp **** /* 
   2:Jellybeans.cpp ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:Jellybeans.cpp ****  * You may use, distribute and modify this code under the
   4:Jellybeans.cpp ****  * terms of the GNU AGPLv3 license.
   5:Jellybeans.cpp ****  * 
   6:Jellybeans.cpp ****  * You should have received a copy of the GNU AGPLv3 license with
   7:Jellybeans.cpp ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:Jellybeans.cpp ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:Jellybeans.cpp ****  *
  10:Jellybeans.cpp ****  * 
  11:Jellybeans.cpp ****  * ====================================================
  12:Jellybeans.cpp ****  * =   __       _        _                            =
  13:Jellybeans.cpp ****  * =   \ \  ___| | |_   _| |__   ___  __ _ _ __  ___  =
  14:Jellybeans.cpp ****  * =    \ \/ _ \ | | | | | '_ \ / _ \/ _` | '_ \/ __| =
  15:Jellybeans.cpp ****  * = /\_/ /  __/ | | |_| | |_) |  __/ (_| | | | \__ \ =
  16:Jellybeans.cpp ****  * = \___/ \___|_|_|\__, |_.__/ \___|\__,_|_| |_|___/ =
  17:Jellybeans.cpp ****  * =                |___/                             =
  18:Jellybeans.cpp ****  * ====================================================
  19:Jellybeans.cpp ****  * 
  20:Jellybeans.cpp ****  * 
  21:Jellybeans.cpp ****  * Jellybeans is an arpeggiator eurorack module designed for the 
  22:Jellybeans.cpp ****  * Electrosmith Daisy Patch platform.
  23:Jellybeans.cpp ****  */
  24:Jellybeans.cpp **** 
  25:Jellybeans.cpp **** 
  26:Jellybeans.cpp **** #include "daisysp.h"
  27:Jellybeans.cpp **** #include "daisy_patch.h"
  28:Jellybeans.cpp **** #include "daisysp.h"
  29:Jellybeans.cpp **** #include "resources.h"
  30:Jellybeans.cpp **** 
  31:Jellybeans.cpp **** 
  32:Jellybeans.cpp **** #include <string>
  33:Jellybeans.cpp **** #include <array>
  34:Jellybeans.cpp **** 
  35:Jellybeans.cpp **** using namespace daisy;
  36:Jellybeans.cpp **** using namespace daisysp;
  37:Jellybeans.cpp **** using namespace jellybeans;
  38:Jellybeans.cpp **** 
  39:Jellybeans.cpp **** DaisyPatch patch;
  40:Jellybeans.cpp **** 
  41:Jellybeans.cpp **** // If true, the bottom row will display debug data instead of a menu item
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 33


  42:Jellybeans.cpp **** const bool debugMode = true;
  43:Jellybeans.cpp **** std::string debugString;
  44:Jellybeans.cpp **** 
  45:Jellybeans.cpp **** // The note vallue currently being sent to Patches' DAC's output 1
  46:Jellybeans.cpp **** // This is stored so that it's only calculated upon a change
  47:Jellybeans.cpp **** float arpNoteDacOutput1;
  48:Jellybeans.cpp **** 
  49:Jellybeans.cpp **** const FontDef font = Font_7x10;
  50:Jellybeans.cpp **** const int     fontWidth = 7;
  51:Jellybeans.cpp **** const int     fontHeight = 10;
  52:Jellybeans.cpp **** 
  53:Jellybeans.cpp **** /// Menu navigating vars
  54:Jellybeans.cpp **** int  menuPos;
  55:Jellybeans.cpp **** bool isEditing;
  56:Jellybeans.cpp **** 
  57:Jellybeans.cpp **** 
  58:Jellybeans.cpp **** // Given the 1V/oct and 0-5V range of the CV out port,
  59:Jellybeans.cpp **** // we are limited to a 5 octave register. Voicings span
  60:Jellybeans.cpp **** // up to 2 octaves and coarse tuning (mTonic) spans another,
  61:Jellybeans.cpp **** // leaving us 2 octaves of room for upwards transposition.
  62:Jellybeans.cpp **** //
  63:Jellybeans.cpp **** // Note that the indices of the elements are also their octave distances from 0
  64:Jellybeans.cpp **** const std::vector<std::string> allOctaves {
  65:Jellybeans.cpp ****     "0",
  66:Jellybeans.cpp ****     "+1", // TODO re-enable these once out-of-bounds notes have been handled
  67:Jellybeans.cpp ****     "+2"
  68:Jellybeans.cpp **** };
  69:Jellybeans.cpp **** 
  70:Jellybeans.cpp **** void updateControls();
  71:Jellybeans.cpp **** void updateOled();
  72:Jellybeans.cpp **** void updateOutputs();
  73:Jellybeans.cpp **** //void onClockPulseIn();
  74:Jellybeans.cpp **** void drawString(std::string, int, int);
  75:Jellybeans.cpp **** 
  76:Jellybeans.cpp **** Arp* myArp;
  77:Jellybeans.cpp **** 
  78:Jellybeans.cpp **** std::array<MenuItem, 10> menuItems;
  79:Jellybeans.cpp **** 
  80:Jellybeans.cpp **** // Reference vars to make the code more readable
  81:Jellybeans.cpp **** MenuItem *mPattern   = &menuItems[0];
  82:Jellybeans.cpp **** MenuItem *mDivision  = &menuItems[1];
  83:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
  84:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
  85:Jellybeans.cpp **** MenuItem *mTonic     = &menuItems[4];
  86:Jellybeans.cpp **** MenuItem *mScale     = &menuItems[5];
  87:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
  88:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
  89:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
  90:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
  91:Jellybeans.cpp **** 
  92:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
  93:Jellybeans.cpp **** int patternCurCvVal, divisionCurCvVal, voicingCurCvVal, inversionCurCvVal;
  94:Jellybeans.cpp **** 
  95:Jellybeans.cpp **** // Callback functions invoked whenever menu parameters are changed
  96:Jellybeans.cpp **** void cb(){
 313              		.loc 17 96 10 is_stmt 1 view -0
 314              		.cfi_startproc
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 34


 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
  97:Jellybeans.cpp ****     myArp->updateTraversal();
 318              		.loc 17 97 5 view .LVU50
 319              		.loc 17 97 27 is_stmt 0 view .LVU51
 320 0000 014B     		ldr	r3, .L10
 321 0002 1868     		ldr	r0, [r3]
 322 0004 FFF7FEBF 		b	_ZN10jellybeans3Arp15updateTraversalEv
 323              	.LVL13:
 324              	.L11:
 325              		.align	2
 326              	.L10:
 327 0008 00000000 		.word	.LANCHOR0
 328              		.cfi_endproc
 329              	.LFE5111:
 331              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 332              		.align	1
 333              		.p2align 2,,3
 334              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu fpv5-d16
 340              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:
 341              	.LVL14:
 342              	.LFB5452:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 343              		.loc 4 17 13 is_stmt 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 347              		.loc 4 17 13 is_stmt 0 view .LVU53
 348 0000 10B5     		push	{r4, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 4, -8
 351              		.cfi_offset 14, -4
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 352              		.loc 4 17 13 view .LVU54
 353 0002 0446     		mov	r4, r0
 354              	.LVL15:
 355              	.LBB4591:
 356              	.LBI4591:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 357              		.loc 4 17 13 is_stmt 1 view .LVU55
 358              	.LBB4592:
 359              	.LBI4592:
 360              		.loc 5 219 13 view .LVU56
 361              	.LBB4593:
 362              	.LBI4593:
  23:../../libdaisy/src/hid/disp/display.h **** 
 363              		.loc 5 23 13 view .LVU57
  23:../../libdaisy/src/hid/disp/display.h **** 
 364              		.loc 5 23 13 is_stmt 0 view .LVU58
 365              	.LBE4593:
 366              	.LBE4592:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 35


 367              	.LBE4591:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 368              		.loc 4 17 29 view .LVU59
 369 0004 40F21441 		movw	r1, #1044
 370 0008 FFF7FEFF 		bl	_ZdlPvj
 371              	.LVL16:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 372              		.loc 4 17 29 view .LVU60
 373 000c 2046     		mov	r0, r4
 374 000e 10BD     		pop	{r4, pc}
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 375              		.loc 4 17 29 view .LVU61
 376              		.cfi_endproc
 377              	.LFE5452:
 379              		.section	.rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra
 380              		.align	2
 381              	.LC9:
 382 0000 62617369 		.ascii	"basic_string::_M_construct null not valid\000"
 382      635F7374 
 382      72696E67 
 382      3A3A5F4D 
 382      5F636F6E 
 383              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 384              		.align	1
 385              		.p2align 2,,3
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 389              		.fpu fpv5-d16
 391              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:
 392              	.LVL17:
 393              	.LFB6227:
 394              		.file 18 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\bas
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 36


  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** /** @file bits/basic_string.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _BASIC_STRING_H
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #define _BASIC_STRING_H 1
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #pragma GCC system_header
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/atomicity.h>
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/alloc_traits.h>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <debug/debug.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <initializer_list>
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # include <string_view>
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 37


  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					traits_type;
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							const_iterator;
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const_iterator __const_iterator;
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 38


 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	pointer _M_p; // The actual data.
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type		_M_string_length;
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       union
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type        _M_allocated_capacity;
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(pointer __p)
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_length(size_type __length)
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data()
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return pointer(_M_local_buf);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 39


 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_pointer
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data() const
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return const_pointer(_M_local_buf);
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_capacity(size_type __capacity)
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_set_length(size_type __n)
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__n);
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_is_local() const
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Create & Destroy
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_create(size_type&, size_type);
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_dispose()
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local())
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_destroy(size_type __size) throw()
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Integer>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 40


 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__req, __c); }
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::input_iterator_tag);
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _FwdIterator>
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::forward_iterator_tag);
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type&
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator()
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const allocator_type&
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator() const
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, bool _Requires =
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ typedef basic_string& __type; };
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 41


 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 42


 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(const basic_string&);
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __len2);
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 43


 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str)
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n)
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 44


 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 395              		.loc 18 525 7 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 8
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              	.LBB4653:
 400              	.LBB4654:
 401              	.LBI4654:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 402              		.loc 18 190 7 view .LVU63
 403              	.LBE4654:
 404              	.LBE4653:
 405              		.loc 18 525 7 is_stmt 0 view .LVU64
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 45


 406 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 407              		.cfi_def_cfa_offset 20
 408              		.cfi_offset 4, -20
 409              		.cfi_offset 5, -16
 410              		.cfi_offset 6, -12
 411              		.cfi_offset 7, -8
 412              		.cfi_offset 14, -4
 413              	.LBB4733:
 414              	.LBB4656:
 415              	.LBB4655:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 416              		.loc 18 193 51 view .LVU65
 417 0002 00F10807 		add	r7, r0, #8
 418              	.LVL18:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 419              		.loc 18 193 51 view .LVU66
 420              	.LBE4655:
 421              	.LBE4656:
 422              	.LBB4657:
 423              	.LBI4657:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 424              		.loc 18 156 2 is_stmt 1 view .LVU67
 425              	.LBB4658:
 426              	.LBB4659:
 427              	.LBI4659:
 428              		.file 19 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\all
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 46


  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 47


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 48


 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 429              		.loc 19 147 7 view .LVU68
 430              	.LBB4660:
 431              	.LBI4660:
 432              		.file 20 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 49


  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 433              		.loc 20 82 7 view .LVU69
 434              		.loc 20 82 7 is_stmt 0 view .LVU70
 435              	.LBE4660:
 436              	.LBE4659:
 437              	.LBE4658:
 438              	.LBE4657:
 439              	.LBE4733:
 440              		.loc 18 525 7 view .LVU71
 441 0006 83B0     		sub	sp, sp, #12
 442              		.cfi_def_cfa_offset 32
 443              	.LBB4734:
 444              	.LBB4662:
 445              	.LBB4661:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 446              		.loc 18 157 35 view .LVU72
 447 0008 0760     		str	r7, [r0]
 448              	.LVL19:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 449              		.loc 18 157 35 view .LVU73
 450              	.LBE4661:
 451              	.LBE4662:
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 452              		.loc 18 527 21 view .LVU74
 453 000a 29B3     		cbz	r1, .L15
 454 000c 0446     		mov	r4, r0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 50


 455              	.LBB4663:
 456              	.LBB4664:
 457              		.file 21 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cha
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** /** @file bits/char_traits.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define _CHAR_TRAITS_H 1
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #pragma GCC system_header
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus > 201703L
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # include <compare>
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 51


  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note This is an implementation class for the generic version
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct _Char_types
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef unsigned long   int_type;
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streampos  pos_type;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streamoff  off_type;
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::mbstate_t  state_type;
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note For any given actual character type, this definition is
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  namespace __gnu_cxx may be.
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef _CharT                                    char_type;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = std::strong_ordering;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 < __c2; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 52


 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s);
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_char_type(const int_type& __c)
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<char_type>(__c); }
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_int_type(const char_type& __c)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(__c); }
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eof()
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       not_eof(const int_type& __c)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return -1;
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 1;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     length(const char_type* __p)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 53


 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::size_t __i = 0;
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         ++__i;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i;
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         if (eq(__s[__i], __a))
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****           return __s + __i;
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (__n == 0)
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __s1;
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (std::is_constant_evaluated())
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	{
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1);
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  else
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	}
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 						    __n * sizeof(char_type)));
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s1;
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 54


 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::fill_n(__s, __n, __a);
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s;
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** } // namespace
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  string are known at compile time.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __s  The string.
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_string_p(const _CharT* __s)
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __s;
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all strings should be constant.
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__s++;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_constant_p(*__s);
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a character array are
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  known at compile time.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __a  The character array.
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __n  Number of characters.
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __a;
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __n;
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       size_t __i = 0;
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 55


 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__i++;
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i == __n;
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   // 21.1
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note  For any given actual character type, this definition is
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   */
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<class _CharT>
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     { };
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /// 21.1.3.1  char_traits specializations
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits<char>
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef char              char_type;
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef int               int_type;
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streampos         pos_type;
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streamoff         off_type;
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef mbstate_t         state_type;
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = strong_ordering;
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	// LWG 467.
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 		< static_cast<unsigned char>(__c2));
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 56


 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s)
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__constant_string_p(__s))
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_strlen(__s);
 458              		.loc 21 357 25 view .LVU75
 459 000e 0846     		mov	r0, r1
 460              	.LVL20:
 461              		.loc 21 357 25 view .LVU76
 462 0010 0E46     		mov	r6, r1
 463              	.LVL21:
 464              		.loc 21 357 25 view .LVU77
 465              	.LBE4664:
 466              	.LBI4663:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 467              		.loc 21 351 7 is_stmt 1 view .LVU78
 468              	.LBB4665:
 469              		.loc 21 357 2 view .LVU79
 470              		.loc 21 357 25 is_stmt 0 view .LVU80
 471 0012 FFF7FEFF 		bl	strlen
 472              	.LVL22:
 473              		.loc 21 357 25 view .LVU81
 474              	.LBE4665:
 475              	.LBE4663:
 476              	.LBB4667:
 477              	.LBB4668:
 478              	.LBB4669:
 479              	.LBB4670:
 480              	.LBB4671:
 481              	.LBB4672:
 482              		.file 22 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\bas
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 57


  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** /** @file bits/basic_string.tcc
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #pragma GCC system_header
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** {
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     void
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (this == &__s)
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	return;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (_M_is_local())
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__s._M_is_local())
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    if (length() && __s.length())
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 58


  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (__s.length())
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_length(__s.length());
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_set_length(0);
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (length())
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_length(length());
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_set_length(0);
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	else
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 			      _S_local_capacity + 1);
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(__s._M_data());
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       else
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__s._M_is_local())
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				_S_local_capacity + 1);
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(_M_data());
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  else
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(__s._M_data());
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       const size_type __tmp_length = length();
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_length(__s.length());
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       __s._M_length(__tmp_length);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 59


 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > max_size())
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__capacity > max_size())
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __capacity = max_size();
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // null char_type() element.
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // istreambuf_iterators, etc.
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // pointers, calling for a different coding style.
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::input_iterator_tag)
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __len = 0;
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    ++__beg;
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    while (__beg != __end)
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		if (__len == __capacity)
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  {
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    // Allocate more space.
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    __capacity = __len + 1;
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 60


 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_dispose();
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_data(__another);
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_capacity(__capacity);
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		++__beg;
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__len);
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       }
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::forward_iterator_tag)
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 483              		.loc 22 217 2 view .LVU82
 484 0016 0F28     		cmp	r0, #15
 485              	.LBE4672:
 486              	.LBE4671:
 487              	.LBE4670:
 488              	.LBE4669:
 489              	.LBE4668:
 490              	.LBE4667:
 491              	.LBB4730:
 492              	.LBB4666:
 493              		.loc 21 357 25 view .LVU83
 494 0018 0546     		mov	r5, r0
 495              	.LVL23:
 496              		.loc 21 357 25 view .LVU84
 497              	.LBE4666:
 498              	.LBE4730:
 499              	.LBB4731:
 500              	.LBI4667:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 501              		.loc 18 263 9 is_stmt 1 view .LVU85
 502              	.LBB4727:
 503              	.LBB4724:
 504              	.LBI4669:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 61


 505              		.loc 18 243 9 view .LVU86
 506              	.LBB4721:
 507              	.LBB4718:
 508              	.LBI4671:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 509              		.loc 22 206 7 view .LVU87
 510              	.LBB4715:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 511              		.loc 22 215 12 is_stmt 0 view .LVU88
 512 001a 0190     		str	r0, [sp, #4]
 513              		.loc 22 217 2 view .LVU89
 514 001c 0DD8     		bhi	.L26
 515              	.LVL24:
 516              	.LBB4673:
 517              	.LBI4673:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 518              		.loc 18 186 7 is_stmt 1 view .LVU90
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 519              		.loc 18 186 7 is_stmt 0 view .LVU91
 520              	.LBE4673:
 521              	.LBB4674:
 522              	.LBI4674:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 523              		.loc 18 396 7 is_stmt 1 view .LVU92
 524              	.LBB4675:
 525              	.LBI4675:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 526              		.loc 18 346 7 view .LVU93
 527              	.LBB4676:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 528              		.loc 18 348 2 is_stmt 0 view .LVU94
 529 001e 0128     		cmp	r0, #1
 530 0020 08D1     		bne	.L19
 531              	.LVL25:
 532              	.LBB4677:
 533              	.LBI4677:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 534              		.loc 21 321 7 is_stmt 1 view .LVU95
 535              	.LBB4678:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 536              		.loc 21 322 9 view .LVU96
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 537              		.loc 21 322 14 is_stmt 0 view .LVU97
 538 0022 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 539 0024 2372     		strb	r3, [r4, #8]
 540              	.LVL26:
 541              	.L20:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 542              		.loc 21 322 14 view .LVU98
 543              	.LBE4678:
 544              	.LBE4677:
 545              	.LBE4676:
 546              	.LBE4675:
 547              	.LBE4674:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 62


 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__dnew);
 548              		.loc 22 232 15 view .LVU99
 549 0026 019B     		ldr	r3, [sp, #4]
 550              	.LVL27:
 551              	.LBB4694:
 552              	.LBI4694:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 553              		.loc 18 214 7 is_stmt 1 view .LVU100
 554              	.LBB4695:
 555              	.LBB4696:
 556              	.LBI4696:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 557              		.loc 18 182 7 view .LVU101
 558              	.LBE4696:
 559              	.LBB4698:
 560              	.LBB4699:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 561              		.loc 21 322 14 is_stmt 0 view .LVU102
 562 0028 0021     		movs	r1, #0
 563 002a 2268     		ldr	r2, [r4]
 564              	.LBE4699:
 565              	.LBE4698:
 566              	.LBB4701:
 567              	.LBB4697:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 568              		.loc 18 183 26 view .LVU103
 569 002c 6360     		str	r3, [r4, #4]
 570              	.LVL28:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 571              		.loc 18 183 26 view .LVU104
 572              	.LBE4697:
 573              	.LBE4701:
 574              	.LBB4702:
 575              	.LBI4702:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 576              		.loc 18 186 7 is_stmt 1 view .LVU105
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 577              		.loc 18 186 7 is_stmt 0 view .LVU106
 578              	.LBE4702:
 579              	.LBB4703:
 580              	.LBI4698:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 581              		.loc 21 321 7 is_stmt 1 view .LVU107
 582              	.LBB4700:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 583              		.loc 21 322 9 view .LVU108
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 63


 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 584              		.loc 21 322 14 is_stmt 0 view .LVU109
 585 002e D154     		strb	r1, [r2, r3]
 586              	.LVL29:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 587              		.loc 21 322 14 view .LVU110
 588              	.LBE4700:
 589              	.LBE4703:
 590              	.LBE4695:
 591              	.LBE4694:
 592              	.LBE4715:
 593              	.LBE4718:
 594              	.LBE4721:
 595              	.LBE4724:
 596              	.LBE4727:
 597              	.LBE4731:
 598              	.LBE4734:
 599              		.loc 18 527 77 view .LVU111
 600 0030 03B0     		add	sp, sp, #12
 601              		.cfi_remember_state
 602              		.cfi_def_cfa_offset 20
 603              		@ sp needed
 604 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 605              	.LVL30:
 606              	.L19:
 607              		.cfi_restore_state
 608              	.LBB4735:
 609              	.LBB4732:
 610              	.LBB4728:
 611              	.LBB4725:
 612              	.LBB4722:
 613              	.LBB4719:
 614              	.LBB4716:
 615              	.LBB4704:
 616              	.LBB4691:
 617              	.LBB4688:
 618              	.LBB4679:
 619              	.LBI4679:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 620              		.loc 18 346 7 is_stmt 1 view .LVU112
 621              	.LBB4680:
 622              	.LBI4680:
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __builtin_constant_p(__a)
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 64


 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 623              		.loc 21 387 7 view .LVU113
 624              	.LBB4681:
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 625              		.loc 21 389 2 view .LVU114
 626 0034 0028     		cmp	r0, #0
 627 0036 F6D0     		beq	.L20
 628 0038 08E0     		b	.L18
 629              	.LVL31:
 630              	.L26:
 631              		.loc 21 389 2 is_stmt 0 view .LVU115
 632              	.LBE4681:
 633              	.LBE4680:
 634              	.LBE4679:
 635              	.LBE4688:
 636              	.LBE4691:
 637              	.LBE4704:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 638              		.loc 22 219 13 view .LVU116
 639 003a 0022     		movs	r2, #0
 640 003c 01A9     		add	r1, sp, #4
 641 003e 2046     		mov	r0, r4
 642              	.LVL32:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 643              		.loc 22 219 13 view .LVU117
 644 0040 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 645              	.LVL33:
 646              	.LBB4705:
 647              	.LBB4706:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 648              		.loc 18 211 31 view .LVU118
 649 0044 019B     		ldr	r3, [sp, #4]
 650              	.LBE4706:
 651              	.LBE4705:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 652              		.loc 22 219 13 view .LVU119
 653 0046 0746     		mov	r7, r0
 654              	.LVL34:
 655              	.LBB4708:
 656              	.LBI4708:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 657              		.loc 18 178 7 is_stmt 1 view .LVU120
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 65


 658              	.LBB4709:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 659              		.loc 18 179 26 is_stmt 0 view .LVU121
 660 0048 2060     		str	r0, [r4]
 661              	.LVL35:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 662              		.loc 18 179 26 view .LVU122
 663              	.LBE4709:
 664              	.LBE4708:
 665              	.LBB4710:
 666              	.LBI4705:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 667              		.loc 18 210 7 is_stmt 1 view .LVU123
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 668              		.loc 18 210 7 is_stmt 0 view .LVU124
 669              	.LBE4710:
 670              	.LBB4711:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 671              		.loc 18 186 7 is_stmt 1 view .LVU125
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 672              		.loc 18 186 7 is_stmt 0 view .LVU126
 673              	.LBE4711:
 674              	.LBB4712:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 675              		.loc 18 396 7 is_stmt 1 view .LVU127
 676              	.LBB4692:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 677              		.loc 18 346 7 view .LVU128
 678              	.LBB4689:
 679              	.LBB4686:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 680              		.loc 18 346 7 view .LVU129
 681              	.LBB4684:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 682              		.loc 21 387 7 view .LVU130
 683              	.LBB4682:
 684              		.loc 21 389 2 view .LVU131
 685              	.LBE4682:
 686              	.LBE4684:
 687              	.LBE4686:
 688              	.LBE4689:
 689              	.LBE4692:
 690              	.LBE4712:
 691              	.LBB4713:
 692              	.LBB4707:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 693              		.loc 18 211 31 is_stmt 0 view .LVU132
 694 004a A360     		str	r3, [r4, #8]
 695              	.LVL36:
 696              	.L18:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 697              		.loc 18 211 31 view .LVU133
 698              	.LBE4707:
 699              	.LBE4713:
 700              	.LBB4714:
 701              	.LBB4693:
 702              	.LBB4690:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 66


 703              	.LBB4687:
 704              	.LBB4685:
 705              	.LBB4683:
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 706              		.loc 21 395 2 is_stmt 1 view .LVU134
 707              		.loc 21 395 49 is_stmt 0 view .LVU135
 708 004c 2A46     		mov	r2, r5
 709 004e 3146     		mov	r1, r6
 710 0050 3846     		mov	r0, r7
 711 0052 FFF7FEFF 		bl	memcpy
 712              	.LVL37:
 713              		.loc 21 395 66 view .LVU136
 714 0056 E6E7     		b	.L20
 715              	.LVL38:
 716              	.L15:
 717              		.loc 21 395 66 view .LVU137
 718              	.LBE4683:
 719              	.LBE4685:
 720              	.LBE4687:
 721              	.LBE4690:
 722              	.LBE4693:
 723              	.LBE4714:
 724              	.LBE4716:
 725              	.LBE4719:
 726              	.LBE4722:
 727              	.LBE4725:
 728              	.LBE4728:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 729              		.loc 18 263 9 is_stmt 1 view .LVU138
 730              	.LBB4729:
 731              	.LBB4726:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 732              		.loc 18 243 9 view .LVU139
 733              	.LBB4723:
 734              	.LBB4720:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 735              		.loc 22 206 7 view .LVU140
 736              	.LBB4717:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 737              		.loc 22 212 28 is_stmt 0 view .LVU141
 738 0058 0148     		ldr	r0, .L27
 739              	.LVL39:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 740              		.loc 22 212 28 view .LVU142
 741 005a FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 742              	.LVL40:
 743              	.L28:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 744              		.loc 22 212 28 view .LVU143
 745 005e 00BF     		.align	2
 746              	.L27:
 747 0060 00000000 		.word	.LC9
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 67


 748              	.LBE4717:
 749              	.LBE4720:
 750              	.LBE4723:
 751              	.LBE4726:
 752              	.LBE4729:
 753              	.LBE4732:
 754              	.LBE4735:
 755              		.cfi_endproc
 756              	.LFE6227:
 758              		.section	.text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_opera
 759              		.align	1
 760              		.p2align 2,,3
 761              		.weak	_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 765              		.fpu fpv5-d16
 767              	_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:
 768              	.LVL41:
 769              	.LFB5740:
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		 _Manager_operation __op)
 770              		.loc 15 268 7 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 775              		.loc 15 271 2 is_stmt 0 view .LVU145
 776 0000 2AB1     		cbz	r2, .L30
 777 0002 012A     		cmp	r2, #1
 778 0004 07D0     		beq	.L31
 779              	.LVL42:
 780              	.LBB4750:
 781              	.LBI4750:
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		   _Manager_operation __op)
 782              		.loc 15 181 2 is_stmt 1 view .LVU146
 783              	.LBB4751:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 784              		.loc 15 184 4 is_stmt 0 view .LVU147
 785 0006 022A     		cmp	r2, #2
 786 0008 08D0     		beq	.L35
 787              	.L33:
 788              	.LVL43:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 789              		.loc 15 184 4 view .LVU148
 790              	.LBE4751:
 791              	.LBE4750:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 792              		.loc 15 286 7 view .LVU149
 793 000a 0020     		movs	r0, #0
 794              	.LVL44:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 795              		.loc 15 286 7 view .LVU150
 796 000c 7047     		bx	lr
 797              	.LVL45:
 798              	.L30:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 68


 799              		.loc 15 87 37 is_stmt 1 view .LVU151
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 800              		.loc 15 275 43 is_stmt 0 view .LVU152
 801 000e 054B     		ldr	r3, .L36
 802 0010 0360     		str	r3, [r0]
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 803              		.loc 15 286 7 view .LVU153
 804 0012 0020     		movs	r0, #0
 805              	.LVL46:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 806              		.loc 15 286 7 view .LVU154
 807 0014 7047     		bx	lr
 808              	.LVL47:
 809              	.L31:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 810              		.loc 15 87 37 is_stmt 1 view .LVU155
 811              	.LBB4760:
 812              	.LBI4760:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 813              		.loc 15 136 2 view .LVU156
 814              	.LBB4761:
 815              	.LBB4762:
 816              	.LBI4762:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return *static_cast<const _Tp*>(_M_access()); }
 817              		.loc 15 97 7 view .LVU157
 818              	.LBB4763:
 819              	.LBI4763:
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 820              		.loc 15 88 17 view .LVU158
 821              	.LBB4764:
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 822              		.loc 15 88 37 view .LVU159
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 823              		.loc 15 88 37 is_stmt 0 view .LVU160
 824              	.LBE4764:
 825              	.LBE4763:
 826              	.LBE4762:
 827              	.LBE4761:
 828              	.LBE4760:
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 829              		.loc 15 279 36 view .LVU161
 830 0016 0160     		str	r1, [r0]
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 831              		.loc 15 286 7 view .LVU162
 832 0018 0020     		movs	r0, #0
 833              	.LVL48:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 834              		.loc 15 286 7 view .LVU163
 835 001a 7047     		bx	lr
 836              	.LVL49:
 837              	.L35:
 838              	.LBB4765:
 839              	.LBB4757:
 840              	.LBB4752:
 841              	.LBI4752:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 842              		.loc 15 150 2 is_stmt 1 view .LVU164
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 69


 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 843              		.loc 15 150 2 is_stmt 0 view .LVU165
 844              	.LBE4752:
 845              	.LBE4757:
 846              	.LBE4765:
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 847              		.loc 15 88 37 is_stmt 1 view .LVU166
 848              	.LBB4766:
 849              	.LBB4758:
 850              	.LBB4755:
 851              	.LBB4753:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 852              		.loc 15 152 4 is_stmt 0 view .LVU167
 853 001c 0B68     		ldr	r3, [r1]
 854              	.LVL50:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 855              		.loc 15 152 4 view .LVU168
 856              	.LBE4753:
 857              	.LBE4755:
 858              	.LBE4758:
 859              	.LBE4766:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 860              		.loc 15 87 37 is_stmt 1 view .LVU169
 861              		.file 23 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\new"
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Copyright (C) 1994-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // This file is part of GCC.
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** //
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // any later version.
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GCC is distributed in the hope that it will be useful,
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GNU General Public License for more details.
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** /** @file new
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  This is a Standard C++ Library header.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  handling memory allocation errors; see
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/dynamic_memory.html
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  for more.
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 70


  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #ifndef _NEW
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #define _NEW
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC system_header
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #include <bits/c++config.h>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #include <exception>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC visibility push(default)
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** extern "C++" {
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** namespace std 
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /**
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @ingroup exceptions
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  errors from the throwing forms of @c new.  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   class bad_alloc : public exception 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   public:
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc() throw() { }
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc(const bad_alloc&) = default;
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc& operator=(const bad_alloc&) = default;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_alloc() throw();
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   class bad_array_new_length : public bad_alloc
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   public:
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_array_new_length() throw() { }
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_array_new_length() throw();
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   enum class align_val_t: size_t {};
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 71


  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   struct nothrow_t
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     explicit nothrow_t() = default;
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   extern const nothrow_t nothrow;
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  be of this type.  */
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   typedef void (*new_handler)();
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// previous handler.
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   new_handler set_new_handler(new_handler) throw();
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// Return the current new handler.
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   new_handler get_new_handler() noexcept;
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** } // namespace std
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** //@{
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** /** These are replaceable signatures:
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal array new and delete (same)
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *    @c NULL on error)
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow array new and delete (same)
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** */
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 72


 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t)
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_sized_deallocation
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_aligned_new
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Default placement versions of operator new.
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** { return __p; }
 862              		.loc 23 175 3 view .LVU170
 863              	.LBB4767:
 864              	.LBB4759:
 865              	.LBB4756:
 866              	.LBB4754:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 867              		.loc 15 152 4 is_stmt 0 view .LVU171
 868 001e 0360     		str	r3, [r0]
 869              	.LVL51:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 870              		.loc 15 152 4 view .LVU172
 871              	.LBE4754:
 872              	.LBE4756:
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 873              		.loc 15 197 8 view .LVU173
 874 0020 F3E7     		b	.L33
 875              	.L37:
 876 0022 00BF     		.align	2
 877              	.L36:
 878 0024 00000000 		.word	_ZTIPFvvE
 879              	.LBE4759:
 880              	.LBE4767:
 881              		.cfi_endproc
 882              	.LFE5740:
 884              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0,"ax",%progbits
 885              		.align	1
 886              		.p2align 2,,3
 887              		.syntax unified
 888              		.thumb
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 73


 889              		.thumb_func
 890              		.fpu fpv5-d16
 892              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0:
 893              	.LVL52:
 894              	.LFB6206:
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__n, __c); }
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__str.length());
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_set_length(0);
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 74


 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || __str.get_allocator() == __a)
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator,
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator>
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 75


 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string()
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__str);
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s)
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c)
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c);
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 76


 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
 895              		.loc 18 703 7 is_stmt 1 view -0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              	.LBB4874:
 900              	.LBI4874:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 901              		.loc 18 221 7 view .LVU175
 902              	.LBB4875:
 903              	.LBI4875:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 904              		.loc 18 186 7 view .LVU176
 905              	.LBE4875:
 906              	.LBE4874:
 907              		.loc 18 703 7 is_stmt 0 view .LVU177
 908 0000 38B5     		push	{r3, r4, r5, lr}
 909              		.cfi_def_cfa_offset 16
 910              		.cfi_offset 3, -16
 911              		.cfi_offset 4, -12
 912              		.cfi_offset 5, -8
 913              		.cfi_offset 14, -4
 914              	.LBB4881:
 915              	.LBB4882:
 916              	.LBB4883:
 917              	.LBB4884:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 918              		.loc 18 187 28 view .LVU178
 919 0002 0B46     		mov	r3, r1
 920              	.LBE4884:
 921              	.LBE4883:
 922              	.LBE4882:
 923              	.LBE4881:
 924              		.loc 18 703 7 view .LVU179
 925 0004 0C46     		mov	r4, r1
 926 0006 0546     		mov	r5, r0
 927              	.LBB4938:
 928              	.LBB4877:
 929              	.LBB4876:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 930              		.loc 18 187 28 view .LVU180
 931 0008 0068     		ldr	r0, [r0]
 932              	.LVL53:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 933              		.loc 18 187 28 view .LVU181
 934              	.LBE4876:
 935              	.LBE4877:
 936              	.LBB4878:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 77


 937              	.LBI4878:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 938              		.loc 18 200 7 is_stmt 1 view .LVU182
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 939              		.loc 18 200 7 is_stmt 0 view .LVU183
 940              	.LBE4878:
 941              	.LBE4938:
 942              	.LBB4939:
 943              	.LBB4888:
 944              	.LBI4882:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 945              		.loc 18 221 7 is_stmt 1 view .LVU184
 946              	.LBB4886:
 947              	.LBI4883:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 948              		.loc 18 186 7 view .LVU185
 949              	.LBB4885:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 950              		.loc 18 187 28 is_stmt 0 view .LVU186
 951 000a 53F8081B 		ldr	r1, [r3], #8
 952              	.LVL54:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 953              		.loc 18 187 28 view .LVU187
 954              	.LBE4885:
 955              	.LBE4886:
 956              	.LBB4887:
 957              	.LBI4887:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 958              		.loc 18 200 7 is_stmt 1 view .LVU188
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 959              		.loc 18 200 7 is_stmt 0 view .LVU189
 960              	.LBE4887:
 961              	.LBE4888:
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_M_local_data());
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(0);
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Replace allocator if POCMA is true.
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 962              		.loc 18 718 2 view .LVU190
 963 000e 9942     		cmp	r1, r3
 964 0010 18D0     		beq	.L52
 965              	.LVL55:
 966              		.loc 18 718 2 view .LVU191
 967              	.LBE4939:
 968              	.LBB4940:
 969              	.LBB4880:
 970              	.LBB4879:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 78


 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 971              		.loc 18 203 57 view .LVU192
 972 0012 05F10802 		add	r2, r5, #8
 973              	.LBE4879:
 974              	.LBE4880:
 975              	.LBE4940:
 976              	.LBB4941:
 977              	.LBB4889:
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // We've always got room for a short string, just copy it.
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__str.size())
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(__str.size());
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    pointer __data = nullptr;
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    size_type __capacity;
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_M_is_local())
 978              		.loc 18 732 6 view .LVU193
 979 0016 9042     		cmp	r0, r2
 980 0018 0DD0     		beq	.L53
 981              	.LVL56:
 982              	.LBB4890:
 983              	.LBB4891:
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // __str can reuse our existing storage.
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __data = _M_data();
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __capacity = _M_allocated_capacity;
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else // __str can't use it, so free it.
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_data(__data);
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_capacity(__capacity);
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    else
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else // Need to do a deep copy
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  assign(__str);
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str.clear();
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 79


 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****      template<typename _Tp>
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        _If_sv<_Tp, basic_string&>
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        operator=(const _Tp& __svt)
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        { return this->assign(__svt); }
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 80


 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 81


 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 984              		.loc 18 908 16 view .LVU194
 985 001a 6268     		ldr	r2, [r4, #4]
 986              	.LBE4891:
 987              	.LBE4890:
 988              	.LBB4893:
 989              	.LBB4894:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 990              		.loc 18 179 26 view .LVU195
 991 001c 2960     		str	r1, [r5]
 992              	.LBE4894:
 993              	.LBE4893:
 994              	.LBB4895:
 995              	.LBB4896:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 996              		.loc 18 183 26 view .LVU196
 997 001e 6A60     		str	r2, [r5, #4]
 998              	.LBE4896:
 999              	.LBE4895:
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 1000              		.loc 18 746 17 view .LVU197
 1001 0020 A168     		ldr	r1, [r4, #8]
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 1002              		.loc 18 738 18 view .LVU198
 1003 0022 AA68     		ldr	r2, [r5, #8]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 82


 1004              	.LVL57:
 1005              	.LBB4898:
 1006              	.LBI4893:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1007              		.loc 18 178 7 is_stmt 1 view .LVU199
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1008              		.loc 18 178 7 is_stmt 0 view .LVU200
 1009              	.LBE4898:
 1010              	.LBB4899:
 1011              	.LBI4890:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1012              		.loc 18 907 7 is_stmt 1 view .LVU201
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1013              		.loc 18 907 7 is_stmt 0 view .LVU202
 1014              	.LBE4899:
 1015              	.LBB4900:
 1016              	.LBI4895:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1017              		.loc 18 182 7 is_stmt 1 view .LVU203
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1018              		.loc 18 182 7 is_stmt 0 view .LVU204
 1019              	.LBE4900:
 1020              	.LBB4901:
 1021              	.LBI4901:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1022              		.loc 18 210 7 is_stmt 1 view .LVU205
 1023              	.LBB4902:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1024              		.loc 18 211 31 is_stmt 0 view .LVU206
 1025 0024 A960     		str	r1, [r5, #8]
 1026              	.LVL58:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1027              		.loc 18 211 31 view .LVU207
 1028              	.LBE4902:
 1029              	.LBE4901:
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 1030              		.loc 18 747 6 view .LVU208
 1031 0026 58B1     		cbz	r0, .L44
 1032              	.LVL59:
 1033              	.LBB4904:
 1034              	.LBI4904:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1035              		.loc 18 178 7 is_stmt 1 view .LVU209
 1036              	.LBB4905:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1037              		.loc 18 179 26 is_stmt 0 view .LVU210
 1038 0028 2060     		str	r0, [r4]
 1039              	.LVL60:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1040              		.loc 18 179 26 view .LVU211
 1041              	.LBE4905:
 1042              	.LBE4904:
 1043              	.LBB4906:
 1044              	.LBI4906:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1045              		.loc 18 210 7 is_stmt 1 view .LVU212
 1046              	.LBB4907:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 83


 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1047              		.loc 18 211 31 is_stmt 0 view .LVU213
 1048 002a A260     		str	r2, [r4, #8]
 1049              	.LVL61:
 1050              	.L42:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1051              		.loc 18 211 31 view .LVU214
 1052              	.LBE4907:
 1053              	.LBE4906:
 1054              	.LBE4889:
 1055              	.LBE4941:
 1056              	.LBB4942:
 1057              	.LBI4942:
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() noexcept
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 84


 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	                     : _M_allocated_capacity;
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 1058              		.loc 18 994 7 is_stmt 1 view .LVU215
 1059              	.LBB4943:
 1060              	.LBI4943:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1061              		.loc 18 214 7 view .LVU216
 1062              	.LBB4944:
 1063              	.LBI4944:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1064              		.loc 18 182 7 view .LVU217
 1065              	.LBB4945:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1066              		.loc 18 183 26 is_stmt 0 view .LVU218
 1067 002c 0023     		movs	r3, #0
 1068              	.LBE4945:
 1069              	.LBE4944:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 85


 1070              	.LBB4947:
 1071              	.LBB4948:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1072              		.loc 18 187 28 view .LVU219
 1073 002e 2268     		ldr	r2, [r4]
 1074              	.LBE4948:
 1075              	.LBE4947:
 1076              	.LBB4949:
 1077              	.LBB4946:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1078              		.loc 18 183 26 view .LVU220
 1079 0030 6360     		str	r3, [r4, #4]
 1080              	.LVL62:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1081              		.loc 18 183 26 view .LVU221
 1082              	.LBE4946:
 1083              	.LBE4949:
 1084              	.LBB4950:
 1085              	.LBI4947:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1086              		.loc 18 186 7 is_stmt 1 view .LVU222
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1087              		.loc 18 186 7 is_stmt 0 view .LVU223
 1088              	.LBE4950:
 1089              	.LBB4951:
 1090              	.LBI4951:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1091              		.loc 21 321 7 is_stmt 1 view .LVU224
 1092              	.LBB4952:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1093              		.loc 21 322 9 view .LVU225
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1094              		.loc 21 322 14 is_stmt 0 view .LVU226
 1095 0032 1370     		strb	r3, [r2]
 1096              	.LVL63:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1097              		.loc 21 322 14 view .LVU227
 1098              	.LBE4952:
 1099              	.LBE4951:
 1100              	.LBE4943:
 1101              	.LBE4942:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1102              		.loc 18 759 7 view .LVU228
 1103 0034 38BD     		pop	{r3, r4, r5, pc}
 1104              	.LVL64:
 1105              	.L53:
 1106              	.LBB4953:
 1107              	.LBB4914:
 1108              	.LBB4908:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1109              		.loc 18 178 7 is_stmt 1 view .LVU229
 1110              	.LBE4908:
 1111              	.LBB4909:
 1112              	.LBB4892:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1113              		.loc 18 908 16 is_stmt 0 view .LVU230
 1114 0036 6268     		ldr	r2, [r4, #4]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 86


 1115              	.LBE4892:
 1116              	.LBE4909:
 1117              	.LBB4910:
 1118              	.LBB4897:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1119              		.loc 18 183 26 view .LVU231
 1120 0038 C5E90012 		strd	r1, r2, [r5]
 1121              	.LBE4897:
 1122              	.LBE4910:
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 1123              		.loc 18 746 17 view .LVU232
 1124 003c A268     		ldr	r2, [r4, #8]
 1125              	.LVL65:
 1126              	.LBB4911:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1127              		.loc 18 210 7 is_stmt 1 view .LVU233
 1128              	.LBB4903:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1129              		.loc 18 211 31 is_stmt 0 view .LVU234
 1130 003e AA60     		str	r2, [r5, #8]
 1131              	.LVL66:
 1132              	.L44:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1133              		.loc 18 211 31 view .LVU235
 1134              	.LBE4903:
 1135              	.LBE4911:
 1136              	.LBB4912:
 1137              	.LBI4912:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1138              		.loc 18 178 7 is_stmt 1 view .LVU236
 1139              	.LBB4913:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1140              		.loc 18 179 26 is_stmt 0 view .LVU237
 1141 0040 2360     		str	r3, [r4]
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1142              		.loc 18 179 33 view .LVU238
 1143 0042 F3E7     		b	.L42
 1144              	.LVL67:
 1145              	.L52:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1146              		.loc 18 179 33 view .LVU239
 1147              	.LBE4913:
 1148              	.LBE4912:
 1149              	.LBE4914:
 1150              	.LBB4915:
 1151              	.LBI4915:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1152              		.loc 18 901 7 is_stmt 1 view .LVU240
 1153              	.LBB4916:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1154              		.loc 18 902 16 is_stmt 0 view .LVU241
 1155 0044 6268     		ldr	r2, [r4, #4]
 1156              	.LVL68:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1157              		.loc 18 902 16 view .LVU242
 1158              	.LBE4916:
 1159              	.LBE4915:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 87


 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 1160              		.loc 18 721 6 view .LVU243
 1161 0046 2AB1     		cbz	r2, .L40
 1162              	.LVL69:
 1163              	.LBB4917:
 1164              	.LBI4917:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1165              		.loc 18 346 7 is_stmt 1 view .LVU244
 1166              	.LBB4918:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1167              		.loc 18 348 2 is_stmt 0 view .LVU245
 1168 0048 012A     		cmp	r2, #1
 1169 004a 07D0     		beq	.L54
 1170              	.LVL70:
 1171              	.LBB4919:
 1172              	.LBI4919:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1173              		.loc 18 346 7 is_stmt 1 view .LVU246
 1174              	.LBB4920:
 1175              	.LBB4921:
 1176              	.LBI4921:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1177              		.loc 21 387 7 view .LVU247
 1178              	.LBB4922:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 1179              		.loc 21 389 2 view .LVU248
 1180              		.loc 21 395 2 view .LVU249
 1181              		.loc 21 395 49 is_stmt 0 view .LVU250
 1182 004c FFF7FEFF 		bl	memcpy
 1183              	.LVL71:
 1184              		.loc 21 395 49 view .LVU251
 1185 0050 2868     		ldr	r0, [r5]
 1186 0052 6268     		ldr	r2, [r4, #4]
 1187              	.LVL72:
 1188              	.L40:
 1189              		.loc 21 395 49 view .LVU252
 1190              	.LBE4922:
 1191              	.LBE4921:
 1192              	.LBE4920:
 1193              	.LBE4919:
 1194              	.LBE4918:
 1195              	.LBE4917:
 1196              	.LBB4926:
 1197              	.LBI4926:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1198              		.loc 18 901 7 is_stmt 1 view .LVU253
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1199              		.loc 18 901 7 is_stmt 0 view .LVU254
 1200              	.LBE4926:
 1201              	.LBB4927:
 1202              	.LBI4927:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1203              		.loc 18 214 7 is_stmt 1 view .LVU255
 1204              	.LBB4928:
 1205              	.LBB4929:
 1206              	.LBI4929:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 88


 1207              		.loc 18 182 7 view .LVU256
 1208              	.LBE4929:
 1209              	.LBB4931:
 1210              	.LBB4932:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1211              		.loc 21 322 14 is_stmt 0 view .LVU257
 1212 0054 0023     		movs	r3, #0
 1213              	.LBE4932:
 1214              	.LBE4931:
 1215              	.LBB4934:
 1216              	.LBB4930:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1217              		.loc 18 183 26 view .LVU258
 1218 0056 6A60     		str	r2, [r5, #4]
 1219              	.LVL73:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1220              		.loc 18 183 26 view .LVU259
 1221              	.LBE4930:
 1222              	.LBE4934:
 1223              	.LBB4935:
 1224              	.LBI4935:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1225              		.loc 18 186 7 is_stmt 1 view .LVU260
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1226              		.loc 18 186 7 is_stmt 0 view .LVU261
 1227              	.LBE4935:
 1228              	.LBB4936:
 1229              	.LBI4931:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1230              		.loc 21 321 7 is_stmt 1 view .LVU262
 1231              	.LBB4933:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1232              		.loc 21 322 9 view .LVU263
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1233              		.loc 21 322 14 is_stmt 0 view .LVU264
 1234 0058 8354     		strb	r3, [r0, r2]
 1235              	.LVL74:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1236              		.loc 21 322 14 view .LVU265
 1237              	.LBE4933:
 1238              	.LBE4936:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1239              		.loc 18 218 7 view .LVU266
 1240 005a E7E7     		b	.L42
 1241              	.LVL75:
 1242              	.L54:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1243              		.loc 18 218 7 view .LVU267
 1244              	.LBE4928:
 1245              	.LBE4927:
 1246              	.LBB4937:
 1247              	.LBB4925:
 1248              	.LBB4923:
 1249              	.LBI4923:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1250              		.loc 21 321 7 is_stmt 1 view .LVU268
 1251              	.LBB4924:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 89


 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1252              		.loc 21 322 9 view .LVU269
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1253              		.loc 21 322 16 is_stmt 0 view .LVU270
 1254 005c 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 1255              	.LVL76:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1256              		.loc 21 322 14 view .LVU271
 1257 005e 0370     		strb	r3, [r0]
 1258 0060 2868     		ldr	r0, [r5]
 1259              	.LVL77:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1260              		.loc 21 322 14 view .LVU272
 1261 0062 6268     		ldr	r2, [r4, #4]
 1262              	.LVL78:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1263              		.loc 21 322 22 view .LVU273
 1264 0064 F6E7     		b	.L40
 1265              	.LBE4924:
 1266              	.LBE4923:
 1267              	.LBE4925:
 1268              	.LBE4937:
 1269              	.LBE4953:
 1270              		.cfi_endproc
 1271              	.LFE6206:
 1273 0066 00BF     		.section	.text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev,"axG",%p
 1274              		.align	1
 1275              		.p2align 2,,3
 1276              		.weak	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1280              		.fpu fpv5-d16
 1282              	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:
 1283              	.LVL79:
 1284              	.LFB6184:
 1285              		.file 24 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\array"
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // <array> -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // You should have received a copy of the GNU General Public License and
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 90


  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** /** @file include/array
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****  *  This is a Standard C++ Library header.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #ifndef _GLIBCXX_ARRAY
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #define _GLIBCXX_ARRAY 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #pragma GCC system_header
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #if __cplusplus < 201103L
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** # include <bits/c++0x_warning.h>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #else
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <utility>
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/functexcept.h>
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/stl_algobase.h>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/range_access.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** namespace std _GLIBCXX_VISIBILITY(default)
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** {
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     struct __array_traits
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp _Type[_Nm];
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_swappable<_Tp> _Is_swappable;
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_nothrow_swappable<_Tp> _Is_nothrow_swappable;
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp&
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp*
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _S_ptr(const _Type& __t) noexcept
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp*>(__t); }
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     };
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****  template<typename _Tp>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    struct __array_traits<_Tp, 0>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    {
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      struct _Type { };
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_swappable;
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_nothrow_swappable;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp&
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      _S_ref(const _Type&, std::size_t) noexcept
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      { return *static_cast<_Tp*>(nullptr); }
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp*
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      _S_ptr(const _Type&) noexcept
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      { return nullptr; }
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 91


  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   /**
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @ingroup sequences
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#67">sequence</a>.
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  Sets support random access iterators.
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Nm  Number of elements.
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   */
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     struct array
 1286              		.loc 24 94 12 is_stmt 1 view -0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 0
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290              		.loc 24 94 12 is_stmt 0 view .LVU275
 1291 0000 70B5     		push	{r4, r5, r6, lr}
 1292              		.cfi_def_cfa_offset 16
 1293              		.cfi_offset 4, -16
 1294              		.cfi_offset 5, -12
 1295              		.cfi_offset 6, -8
 1296              		.cfi_offset 14, -4
 1297              		.loc 24 94 12 view .LVU276
 1298 0002 0646     		mov	r6, r0
 1299              	.LBB4973:
 1300 0004 00F5B465 		add	r5, r0, #1440
 1301 0008 00F5B264 		add	r4, r0, #1424
 1302              	.LVL80:
 1303              	.L57:
 1304              	.LBB4974:
 1305              	.LBB4975:
 1306              	.LBB4976:
 1307              	.LBB4977:
 1308              	.LBB4978:
 1309              	.LBB4979:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1310              		.loc 18 187 28 discriminator 5 view .LVU277
 1311 000c 54F8080C 		ldr	r0, [r4, #-8]
 1312              	.LBE4979:
 1313              	.LBE4978:
 1314              	.LBE4977:
 1315              	.LBE4976:
 1316              	.LBE4975:
 1317              	.LBE4974:
 1318              		.loc 24 94 12 discriminator 5 view .LVU278
 1319 0010 183D     		subs	r5, r5, #24
 1320              	.LVL81:
 1321              	.LBB4998:
 1322              	.LBI4974:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 1323              		.loc 18 657 7 is_stmt 1 discriminator 5 view .LVU279
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 92


 1324              	.LBB4993:
 1325              	.LBI4975:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1326              		.loc 18 229 7 discriminator 5 view .LVU280
 1327              	.LBB4991:
 1328              	.LBB4981:
 1329              	.LBI4977:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 1330              		.loc 18 221 7 discriminator 5 view .LVU281
 1331              	.LBB4980:
 1332              	.LBI4978:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1333              		.loc 18 186 7 discriminator 5 view .LVU282
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1334              		.loc 18 186 7 is_stmt 0 discriminator 5 view .LVU283
 1335              	.LBE4980:
 1336              	.LBE4981:
 1337              	.LBB4982:
 1338              	.LBI4982:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1339              		.loc 18 236 7 is_stmt 1 discriminator 5 view .LVU284
 1340              	.LBB4983:
 1341              	.LBB4984:
 1342              	.LBI4984:
 1343              		.file 25 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\all
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 93


  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 94


  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 95


 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 96


 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 97


 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 98


 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 99


 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 100


 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 101


 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 1344              		.loc 25 491 7 discriminator 5 view .LVU285
 1345              	.LBB4985:
 1346              	.LBI4985:
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 1347              		.loc 20 120 7 discriminator 5 view .LVU286
 1348              	.LBE4985:
 1349              	.LBE4984:
 1350              	.LBE4983:
 1351              	.LBE4982:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1352              		.loc 18 231 2 is_stmt 0 discriminator 5 view .LVU287
 1353 0012 A042     		cmp	r0, r4
 1354              	.LBE4991:
 1355              	.LBE4993:
 1356              	.LBE4998:
 1357              		.loc 24 94 12 discriminator 5 view .LVU288
 1358 0014 A4F11804 		sub	r4, r4, #24
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 102


 1359              	.LBB4999:
 1360              	.LBB4994:
 1361              	.LBB4992:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1362              		.loc 18 231 2 discriminator 5 view .LVU289
 1363 0018 03D0     		beq	.L56
 1364              	.LBB4990:
 1365              	.LBB4989:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1366              		.loc 18 237 34 view .LVU290
 1367 001a A968     		ldr	r1, [r5, #8]
 1368              	.LBB4988:
 1369              	.LBB4987:
 1370              	.LBB4986:
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 1371              		.loc 20 133 19 view .LVU291
 1372 001c 0131     		adds	r1, r1, #1
 1373              	.LVL82:
 1374              		.loc 20 133 19 view .LVU292
 1375 001e FFF7FEFF 		bl	_ZdlPvj
 1376              	.LVL83:
 1377              	.L56:
 1378              		.loc 20 133 19 view .LVU293
 1379              	.LBE4986:
 1380              	.LBE4987:
 1381              	.LBE4988:
 1382              	.LBE4989:
 1383              	.LBE4990:
 1384              	.LBE4992:
 1385              	.LBE4994:
 1386              	.LBB4995:
 1387              	.LBI4995:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1388              		.loc 18 150 14 is_stmt 1 view .LVU294
 1389              	.LBB4996:
 1390              	.LBI4996:
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 103


 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 1391              		.loc 19 162 7 view .LVU295
 1392              	.LBB4997:
 1393              	.LBI4997:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1394              		.loc 20 89 7 view .LVU296
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1395              		.loc 20 89 7 is_stmt 0 view .LVU297
 1396              	.LBE4997:
 1397              	.LBE4996:
 1398              	.LBE4995:
 1399              	.LBE4999:
 1400              		.loc 24 94 12 view .LVU298
 1401 0022 AE42     		cmp	r6, r5
 1402 0024 F2D1     		bne	.L57
 1403              	.LBE4973:
 1404              		.loc 24 94 12 discriminator 7 view .LVU299
 1405 0026 3046     		mov	r0, r6
 1406 0028 70BD     		pop	{r4, r5, r6, pc}
 1407              		.loc 24 94 12 discriminator 7 view .LVU300
 1408              		.cfi_endproc
 1409              	.LFE6184:
 1411              		.weak	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev
 1412              		.thumb_set _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev,_ZNSt5arrayI
 1413 002a 00BF     		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 1414              		.align	1
 1415              		.p2align 2,,3
 1416              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Updat
 1417              		.syntax unified
 1418              		.thumb
 1419              		.thumb_func
 1420              		.fpu fpv5-d16
 1422              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:
 1423              	.LVL84:
 1424              	.LFB5544:
  34:../../libdaisy/src/hid/disp/oled_display.h **** 
  35:../../libdaisy/src/hid/disp/oled_display.h ****     /**
  36:../../libdaisy/src/hid/disp/oled_display.h ****     Sets the pixel at the specified coordinate to be on/off.
  37:../../libdaisy/src/hid/disp/oled_display.h ****     \param x   x Coordinate
  38:../../libdaisy/src/hid/disp/oled_display.h ****     \param y   y coordinate
  39:../../libdaisy/src/hid/disp/oled_display.h ****     \param on  on or off
  40:../../libdaisy/src/hid/disp/oled_display.h ****     */
  41:../../libdaisy/src/hid/disp/oled_display.h ****     void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) override
  42:../../libdaisy/src/hid/disp/oled_display.h ****     {
  43:../../libdaisy/src/hid/disp/oled_display.h ****         driver_.DrawPixel(x, y, on);
  44:../../libdaisy/src/hid/disp/oled_display.h ****     }
  45:../../libdaisy/src/hid/disp/oled_display.h **** 
  46:../../libdaisy/src/hid/disp/oled_display.h ****     /** 
  47:../../libdaisy/src/hid/disp/oled_display.h ****     Writes the current display buffer to the OLED device using SPI or I2C depending on 
  48:../../libdaisy/src/hid/disp/oled_display.h ****     how the object was initialized.
  49:../../libdaisy/src/hid/disp/oled_display.h ****     */
  50:../../libdaisy/src/hid/disp/oled_display.h ****     void Update() override { driver_.Update(); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 104


 1425              		.loc 4 50 10 is_stmt 1 view -0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 8
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 1429              	.LBB5010:
 1430              	.LBI5010:
 254:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 255:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 256:../../libdaisy/src/dev/oled_ssd130x.h **** 
 257:../../libdaisy/src/dev/oled_ssd130x.h ****     /**
 258:../../libdaisy/src/dev/oled_ssd130x.h ****      * Update the display 
 259:../../libdaisy/src/dev/oled_ssd130x.h ****     */
 260:../../libdaisy/src/dev/oled_ssd130x.h ****     void Update()
 1431              		.loc 14 260 10 view .LVU302
 1432              	.LBB5011:
 261:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 262:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t i;
 263:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t high_column_addr;
 264:../../libdaisy/src/dev/oled_ssd130x.h ****         switch(height)
 265:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 266:../../libdaisy/src/dev/oled_ssd130x.h ****             case 32: high_column_addr = 0x12; break;
 267:../../libdaisy/src/dev/oled_ssd130x.h **** 
 268:../../libdaisy/src/dev/oled_ssd130x.h ****             default: high_column_addr = 0x10; break;
 269:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 270:../../libdaisy/src/dev/oled_ssd130x.h ****         for(i = 0; i < (height / 8); i++)
 1433              		.loc 14 270 22 view .LVU303
 1434              	.LBE5011:
 1435              	.LBE5010:
 1436              		.loc 4 50 10 is_stmt 0 view .LVU304
 1437 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1438              		.cfi_def_cfa_offset 24
 1439              		.cfi_offset 4, -24
 1440              		.cfi_offset 5, -20
 1441              		.cfi_offset 6, -16
 1442              		.cfi_offset 7, -12
 1443              		.cfi_offset 8, -8
 1444              		.cfi_offset 14, -4
 1445              	.LBB5033:
 1446              	.LBB5031:
 1447              	.LBB5012:
 1448              	.LBB5013:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1449              		.loc 14 112 30 view .LVU305
 1450 0004 B024     		movs	r4, #176
 1451              	.LBE5013:
 1452              	.LBE5012:
 1453              	.LBE5031:
 1454              	.LBE5033:
 1455              		.loc 4 50 10 view .LVU306
 1456 0006 82B0     		sub	sp, sp, #8
 1457              		.cfi_def_cfa_offset 32
 1458              	.LBB5034:
 1459              	.LBB5032:
 1460              	.LBB5018:
 1461              	.LBB5014:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1462              		.loc 14 111 24 view .LVU307
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 105


 1463 0008 00F10806 		add	r6, r0, #8
 1464 000c 00F11005 		add	r5, r0, #16
 1465 0010 00F11408 		add	r8, r0, #20
 1466              	.LVL85:
 1467              	.L61:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1468              		.loc 14 111 24 view .LVU308
 1469 0014 0027     		movs	r7, #0
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1470              		.loc 14 111 23 view .LVU309
 1471 0016 2846     		mov	r0, r5
 1472 0018 8DF80740 		strb	r4, [sp, #7]
 1473              	.LVL86:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1474              		.loc 14 111 23 view .LVU310
 1475              	.LBE5014:
 1476              	.LBI5012:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1477              		.loc 14 109 10 is_stmt 1 view .LVU311
 1478              	.LBB5015:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1479              		.loc 14 111 9 view .LVU312
 1480              	.LBE5015:
 1481              	.LBE5018:
 1482              		.loc 14 270 22 is_stmt 0 view .LVU313
 1483 001c 0134     		adds	r4, r4, #1
 1484              	.LVL87:
 1485              	.LBB5019:
 1486              	.LBB5016:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1487              		.loc 14 111 23 view .LVU314
 1488 001e 3946     		mov	r1, r7
 1489 0020 FFF7FEFF 		bl	dsy_gpio_write
 1490              	.LVL88:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1491              		.loc 14 112 9 is_stmt 1 view .LVU315
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1492              		.loc 14 112 30 is_stmt 0 view .LVU316
 1493 0024 6423     		movs	r3, #100
 1494 0026 0122     		movs	r2, #1
 1495 0028 0DF10701 		add	r1, sp, #7
 1496 002c 3046     		mov	r0, r6
 1497              	.LBE5016:
 1498              	.LBE5019:
 1499              		.loc 14 270 22 view .LVU317
 1500 002e E4B2     		uxtb	r4, r4
 1501              	.LBB5020:
 1502              	.LBB5017:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1503              		.loc 14 112 30 view .LVU318
 1504 0030 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1505              	.LVL89:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1506              		.loc 14 112 30 view .LVU319
 1507              	.LBE5017:
 1508              	.LBE5020:
 1509              	.LBB5021:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 106


 1510              	.LBB5022:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1511              		.loc 14 111 23 view .LVU320
 1512 0034 3946     		mov	r1, r7
 1513 0036 2846     		mov	r0, r5
 1514 0038 8DF80770 		strb	r7, [sp, #7]
 1515              	.LVL90:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1516              		.loc 14 111 23 view .LVU321
 1517              	.LBE5022:
 1518              	.LBI5021:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1519              		.loc 14 109 10 is_stmt 1 view .LVU322
 1520              	.LBB5023:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1521              		.loc 14 111 9 view .LVU323
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1522              		.loc 14 111 23 is_stmt 0 view .LVU324
 1523 003c FFF7FEFF 		bl	dsy_gpio_write
 1524              	.LVL91:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1525              		.loc 14 112 9 is_stmt 1 view .LVU325
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1526              		.loc 14 112 30 is_stmt 0 view .LVU326
 1527 0040 0122     		movs	r2, #1
 1528 0042 6423     		movs	r3, #100
 1529 0044 0DF10701 		add	r1, sp, #7
 1530 0048 3046     		mov	r0, r6
 1531 004a FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1532              	.LVL92:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1533              		.loc 14 112 30 view .LVU327
 1534 004e 1023     		movs	r3, #16
 1535              	.LBE5023:
 1536              	.LBE5021:
 1537              	.LBB5024:
 1538              	.LBB5025:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1539              		.loc 14 111 23 view .LVU328
 1540 0050 3946     		mov	r1, r7
 1541 0052 2846     		mov	r0, r5
 1542 0054 8DF80730 		strb	r3, [sp, #7]
 1543              	.LVL93:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1544              		.loc 14 111 23 view .LVU329
 1545              	.LBE5025:
 1546              	.LBI5024:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1547              		.loc 14 109 10 is_stmt 1 view .LVU330
 1548              	.LBB5026:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1549              		.loc 14 111 9 view .LVU331
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1550              		.loc 14 111 23 is_stmt 0 view .LVU332
 1551 0058 FFF7FEFF 		bl	dsy_gpio_write
 1552              	.LVL94:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 107


 1553              		.loc 14 112 9 is_stmt 1 view .LVU333
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1554              		.loc 14 112 30 is_stmt 0 view .LVU334
 1555 005c 6423     		movs	r3, #100
 1556 005e 0122     		movs	r2, #1
 1557 0060 0DF10701 		add	r1, sp, #7
 1558 0064 3046     		mov	r0, r6
 1559 0066 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1560              	.LVL95:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1561              		.loc 14 112 30 view .LVU335
 1562              	.LBE5026:
 1563              	.LBE5024:
 1564              	.LBB5027:
 1565              	.LBI5027:
 115:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1566              		.loc 14 115 10 is_stmt 1 view .LVU336
 1567              	.LBB5028:
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 1568              		.loc 14 117 9 view .LVU337
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 1569              		.loc 14 117 23 is_stmt 0 view .LVU338
 1570 006a 0121     		movs	r1, #1
 1571 006c 2846     		mov	r0, r5
 1572 006e FFF7FEFF 		bl	dsy_gpio_write
 1573              	.LVL96:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1574              		.loc 14 118 9 is_stmt 1 view .LVU339
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1575              		.loc 14 118 30 is_stmt 0 view .LVU340
 1576 0072 8022     		movs	r2, #128
 1577 0074 4146     		mov	r1, r8
 1578 0076 6423     		movs	r3, #100
 1579 0078 3046     		mov	r0, r6
 1580              	.LBE5028:
 1581              	.LBE5027:
 1582              		.loc 14 270 22 view .LVU341
 1583 007a 9044     		add	r8, r8, r2
 1584              	.LVL97:
 1585              	.LBB5030:
 1586              	.LBB5029:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1587              		.loc 14 118 30 view .LVU342
 1588 007c FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1589              	.LVL98:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1590              		.loc 14 118 30 view .LVU343
 1591              	.LBE5029:
 1592              	.LBE5030:
 1593              		.loc 14 270 9 is_stmt 1 view .LVU344
 1594              		.loc 14 270 22 view .LVU345
 1595 0080 B82C     		cmp	r4, #184
 1596 0082 C7D1     		bne	.L61
 1597              	.LBE5032:
 1598              	.LBE5034:
 1599              		.loc 4 50 48 is_stmt 0 view .LVU346
 1600 0084 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 108


 1601              		.cfi_def_cfa_offset 24
 1602              		@ sp needed
 1603 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1604              		.loc 4 50 48 view .LVU347
 1605              		.cfi_endproc
 1606              	.LFE5544:
 1608 008a 00BF     		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG"
 1609              		.align	1
 1610              		.p2align 2,,3
 1611              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
 1612              		.syntax unified
 1613              		.thumb
 1614              		.thumb_func
 1615              		.fpu fpv5-d16
 1617              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:
 1618              	.LVL99:
 1619              	.LFB5518:
 1620              		.file 26 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 109


  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 110


  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 111


 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 112


 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 113


 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 114


 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 115


 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 116


 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 117


 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 118


 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 119


 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 120


 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 1621              		.loc 26 678 7 is_stmt 1 view -0
 1622              		.cfi_startproc
 1623              		@ args = 0, pretend = 0, frame = 0
 1624              		@ frame_needed = 0, uses_anonymous_args = 0
 1625              		.loc 26 678 7 is_stmt 0 view .LVU349
 1626 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1627              		.cfi_def_cfa_offset 24
 1628              		.cfi_offset 3, -24
 1629              		.cfi_offset 4, -20
 1630              		.cfi_offset 5, -16
 1631              		.cfi_offset 6, -12
 1632              		.cfi_offset 7, -8
 1633              		.cfi_offset 14, -4
 1634              	.LBB5085:
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 1635              		.loc 26 680 15 view .LVU350
 1636 0002 D0E90056 		ldrd	r5, r6, [r0]
 1637              	.LBE5085:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1638              		.loc 26 678 7 view .LVU351
 1639 0006 0746     		mov	r7, r0
 1640              	.LVL100:
 1641              	.LBB5135:
 1642              	.LBB5086:
 1643              	.LBI5086:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1644              		.loc 26 276 7 is_stmt 1 view .LVU352
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1645              		.loc 26 276 7 is_stmt 0 view .LVU353
 1646              	.LBE5086:
 1647              	.LBB5087:
 1648              	.LBI5087:
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 121


 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 122


 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = __two; }
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocca::value)
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = __two;
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     constexpr _Alloc
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = std::move(__two); }
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocma::value)
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = std::move(__two);
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 123


 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using std::swap;
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       swap(__one, __two);
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocs::value)
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using std::swap;
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  swap(__one, __two);
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename = void>
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : false_type
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Tp>()))>>
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 124


 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_copy_constructible<_Tp>
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_move_constructible<_Tp>
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // Trait to detect Allocator-like types.
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename = void>
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator : false_type { };
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator<_Alloc,
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<typename _Alloc::value_type,
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type { };
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireAllocator
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireNotAllocator
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif // C++11
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    */
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     void
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	     _Allocator& __alloc)
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       for (; __first != __last; ++__first)
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201103L
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 					      std::__addressof(*__first));
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 125


 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 1649              		.loc 25 735 5 is_stmt 1 view .LVU354
 1650              	.LBB5088:
 1651              	.LBB5089:
 1652              	.LBB5090:
 1653              	.LBB5091:
 1654              		.file 27 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 126


  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /** @file bits/stl_construct.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <new>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/move.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_types.h> // for iterator_traits
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_funcs.h> // for advance
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /* This file provides the C++17 functions std::destroy_at, std::destroy, and
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * std::destroy_n, and the C++20 function std::construct_at.
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * It also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * which are defined in all standard modes and so can be used in C++98-14 code.
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * The _Destroy functions will dispatch to destroy_at during constant
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * evaluation, because calls to that function are intercepted by the compiler
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * to allow use in constant expressions.
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** {
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201703L
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template <typename _Tp>
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     destroy_at(_Tp* __location)
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       if constexpr (__cplusplus > 201703L && is_array_v<_Tp>)
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (auto& __x : *__location)
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	    std::destroy_at(std::__addressof(__x));
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	}
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       else
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__location->~_Tp();
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     constexpr auto
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     construct_at(_Tp* __location, _Args&&... __args)
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif // C++20
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif// C++17
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * object's constructor with an initializer.
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 127


 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201103L
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_Tp* __p, _Args&&... __args)
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1, typename _T2>
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1>
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct_novalue(_T1* __p)
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _ForwardIterator>
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR void
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last);
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Destroy the object pointed to by a pointer type.
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp>
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX14_CONSTEXPR inline void
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_Tp* __pointer)
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       std::destroy_at(__pointer);
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       __pointer->~_Tp();
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<bool>
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     struct _Destroy_aux
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       template<typename _ForwardIterator>
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	static _GLIBCXX20_CONSTEXPR void
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__destroy(_ForwardIterator __first, _ForwardIterator __last)
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (; __first != __last; ++__first)
 1655              		.loc 27 151 19 view .LVU355
 1656 0008 B542     		cmp	r5, r6
 1657 000a 0FD0     		beq	.L65
 1658 000c 05F10804 		add	r4, r5, #8
 1659              	.LVL101:
 1660              	.L67:
 1661              	.LBB5092:
 1662              	.LBI5092:
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 1663              		.loc 27 135 5 view .LVU356
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 128


 1664              	.LBB5093:
 1665              	.LBI5093:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 1666              		.loc 18 657 7 view .LVU357
 1667              	.LBB5094:
 1668              	.LBI5094:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1669              		.loc 18 229 7 view .LVU358
 1670              	.LBB5095:
 1671              	.LBB5096:
 1672              	.LBI5096:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 1673              		.loc 18 221 7 view .LVU359
 1674              	.LBB5097:
 1675              	.LBI5097:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1676              		.loc 18 186 7 view .LVU360
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1677              		.loc 18 186 7 is_stmt 0 view .LVU361
 1678              	.LBE5097:
 1679              	.LBE5096:
 1680              	.LBB5100:
 1681              	.LBI5100:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1682              		.loc 18 236 7 is_stmt 1 view .LVU362
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1683              		.loc 18 236 7 is_stmt 0 view .LVU363
 1684              	.LBE5100:
 1685              	.LBB5108:
 1686              	.LBB5099:
 1687              	.LBB5098:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1688              		.loc 18 187 28 view .LVU364
 1689 0010 54F8080C 		ldr	r0, [r4, #-8]
 1690              	.LVL102:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1691              		.loc 18 187 28 view .LVU365
 1692              	.LBE5098:
 1693              	.LBE5099:
 1694              	.LBE5108:
 1695              	.LBB5109:
 1696              	.LBB5101:
 1697              	.LBB5102:
 1698              	.LBI5102:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1699              		.loc 25 491 7 is_stmt 1 view .LVU366
 1700              	.LBB5103:
 1701              	.LBI5103:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1702              		.loc 20 120 7 view .LVU367
 1703              	.LBE5103:
 1704              	.LBE5102:
 1705              	.LBE5101:
 1706              	.LBE5109:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1707              		.loc 18 231 2 is_stmt 0 view .LVU368
 1708 0014 8442     		cmp	r4, r0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 129


 1709              	.LBE5095:
 1710              	.LBE5094:
 1711              	.LBE5093:
 1712              	.LBE5092:
 1713              		.loc 27 151 19 view .LVU369
 1714 0016 04F11804 		add	r4, r4, #24
 1715              	.LBB5117:
 1716              	.LBB5116:
 1717              	.LBB5112:
 1718              	.LBB5111:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1719              		.loc 18 231 2 view .LVU370
 1720 001a 03D0     		beq	.L66
 1721              	.LBB5110:
 1722              	.LBB5107:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1723              		.loc 18 237 34 view .LVU371
 1724 001c A968     		ldr	r1, [r5, #8]
 1725              	.LBB5106:
 1726              	.LBB5105:
 1727              	.LBB5104:
 1728              		.loc 20 133 19 view .LVU372
 1729 001e 0131     		adds	r1, r1, #1
 1730              	.LVL103:
 1731              		.loc 20 133 19 view .LVU373
 1732 0020 FFF7FEFF 		bl	_ZdlPvj
 1733              	.LVL104:
 1734              	.L66:
 1735              		.loc 20 133 19 view .LVU374
 1736              	.LBE5104:
 1737              	.LBE5105:
 1738              	.LBE5106:
 1739              	.LBE5107:
 1740              	.LBE5110:
 1741              	.LBE5111:
 1742              	.LBE5112:
 1743              	.LBB5113:
 1744              	.LBI5113:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1745              		.loc 18 150 14 is_stmt 1 view .LVU375
 1746              	.LBB5114:
 1747              	.LBI5114:
 1748              		.loc 19 162 7 view .LVU376
 1749              	.LBB5115:
 1750              	.LBI5115:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1751              		.loc 20 89 7 view .LVU377
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1752              		.loc 20 89 7 is_stmt 0 view .LVU378
 1753              	.LBE5115:
 1754              	.LBE5114:
 1755              	.LBE5113:
 1756              	.LBE5116:
 1757              	.LBE5117:
 1758              		.loc 27 151 4 is_stmt 1 view .LVU379
 1759 0024 1835     		adds	r5, r5, #24
 1760              	.LVL105:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 130


 1761              		.loc 27 151 19 view .LVU380
 1762 0026 AE42     		cmp	r6, r5
 1763 0028 F2D1     		bne	.L67
 1764              	.LBE5091:
 1765              	.LBE5090:
 1766              	.LBE5089:
 1767              	.LBE5088:
 1768              	.LBE5087:
 1769              	.LBB5118:
 1770              	.LBB5119:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 1771              		.loc 26 335 15 is_stmt 0 view .LVU381
 1772 002a 3E68     		ldr	r6, [r7]
 1773              	.LVL106:
 1774              	.L65:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 1775              		.loc 26 335 15 view .LVU382
 1776              	.LBE5119:
 1777              	.LBI5118:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1778              		.loc 26 333 7 is_stmt 1 view .LVU383
 1779              	.LBB5134:
 1780              	.LBB5120:
 1781              	.LBI5120:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1782              		.loc 26 350 7 view .LVU384
 1783              	.LBB5121:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1784              		.loc 26 353 2 is_stmt 0 view .LVU385
 1785 002c 26B1     		cbz	r6, .L68
 1786              	.LVL107:
 1787              	.LBB5122:
 1788              	.LBI5122:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1789              		.loc 25 491 7 is_stmt 1 view .LVU386
 1790              	.LBB5123:
 1791              	.LBB5124:
 1792              	.LBI5124:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1793              		.loc 20 120 7 view .LVU387
 1794              	.LBE5124:
 1795              	.LBE5123:
 1796              	.LBE5122:
 1797              	.LBE5121:
 1798              	.LBE5120:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1799              		.loc 26 336 35 is_stmt 0 view .LVU388
 1800 002e B968     		ldr	r1, [r7, #8]
 1801              	.LBB5130:
 1802              	.LBB5129:
 1803              	.LBB5128:
 1804              	.LBB5127:
 1805              	.LBB5126:
 1806              	.LBB5125:
 1807              		.loc 20 133 19 view .LVU389
 1808 0030 3046     		mov	r0, r6
 1809 0032 891B     		subs	r1, r1, r6
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 131


 1810 0034 FFF7FEFF 		bl	_ZdlPvj
 1811              	.LVL108:
 1812              	.L68:
 1813              		.loc 20 133 19 view .LVU390
 1814              	.LBE5125:
 1815              	.LBE5126:
 1816              	.LBE5127:
 1817              	.LBE5128:
 1818              	.LBE5129:
 1819              	.LBE5130:
 1820              	.LBB5131:
 1821              	.LBI5131:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 1822              		.loc 26 128 14 is_stmt 1 view .LVU391
 1823              	.LBB5132:
 1824              	.LBI5132:
 1825              		.loc 19 162 7 view .LVU392
 1826              	.LBB5133:
 1827              	.LBI5133:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1828              		.loc 20 89 7 view .LVU393
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1829              		.loc 20 89 7 is_stmt 0 view .LVU394
 1830              	.LBE5133:
 1831              	.LBE5132:
 1832              	.LBE5131:
 1833              	.LBE5134:
 1834              	.LBE5118:
 1835              	.LBE5135:
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1836              		.loc 26 683 7 view .LVU395
 1837 0038 3846     		mov	r0, r7
 1838 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1839              		.loc 26 683 7 view .LVU396
 1840              		.cfi_endproc
 1841              	.LFE5518:
 1843              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 1844              		.thumb_set _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev,_ZNSt6vec
 1845              		.section	.text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev,"axG",%progbits,_ZNSt5arrayIN10jellyb
 1846              		.align	1
 1847              		.p2align 2,,3
 1848              		.weak	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev
 1849              		.syntax unified
 1850              		.thumb
 1851              		.thumb_func
 1852              		.fpu fpv5-d16
 1854              	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:
 1855              	.LVL109:
 1856              	.LFB6190:
 1857              		.loc 24 94 12 is_stmt 1 view -0
 1858              		.cfi_startproc
 1859              		@ args = 0, pretend = 0, frame = 0
 1860              		@ frame_needed = 0, uses_anonymous_args = 0
 1861              		.loc 24 94 12 is_stmt 0 view .LVU398
 1862 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 132


 1863              		.cfi_def_cfa_offset 24
 1864              		.cfi_offset 4, -24
 1865              		.cfi_offset 5, -20
 1866              		.cfi_offset 6, -16
 1867              		.cfi_offset 7, -12
 1868              		.cfi_offset 8, -8
 1869              		.cfi_offset 14, -4
 1870              		.loc 24 94 12 view .LVU399
 1871 0004 8046     		mov	r8, r0
 1872 0006 00F53476 		add	r6, r0, #720
 1873              	.LVL110:
 1874              	.L82:
 1875              	.LBB5218:
 1876              	.LBB5219:
 1877              	.LBI5219:
 1878              		.file 28 "menuitem.h"
   1:menuitem.h    **** /* 
   2:menuitem.h    ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:menuitem.h    ****  * You may use, distribute and modify this code under the
   4:menuitem.h    ****  * terms of the GNU AGPLv3 license.
   5:menuitem.h    ****  * 
   6:menuitem.h    ****  * You should have received a copy of the GNU AGPLv3 license with
   7:menuitem.h    ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:menuitem.h    ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:menuitem.h    ****  */
  10:menuitem.h    **** 
  11:menuitem.h    **** #pragma once
  12:menuitem.h    **** 
  13:menuitem.h    **** #include <functional>
  14:menuitem.h    **** #include <vector>
  15:menuitem.h    **** #include <string>
  16:menuitem.h    **** 
  17:menuitem.h    **** namespace jellybeans {
  18:menuitem.h    **** 
  19:menuitem.h    ****     // Menu item whos value is an element of a list of predefined strings
  20:menuitem.h    ****     // They are also used to store settings
  21:menuitem.h    ****     class MenuItem {
 1879              		.loc 28 21 11 is_stmt 1 discriminator 5 view .LVU400
 1880              	.LBB5220:
 1881              	.LBI5220:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return std::__invoke_r<_Res>(*_Base::_M_get_pointer(__functor),
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 				     std::forward<_ArgTypes>(__args)...);
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     };
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /**
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @brief Primary class template for std::function.
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @ingroup functors
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  Polymorphic function wrapper.
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    */
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class function<_Res(_ArgTypes...)>
 1882              		.loc 15 303 11 discriminator 5 view .LVU401
 1883              	.LBB5221:
 1884              	.LBI5221:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 133


 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 1885              		.loc 15 242 5 discriminator 5 view .LVU402
 1886              	.LBB5222:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 1887              		.loc 15 244 7 discriminator 5 view .LVU403
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 1888              		.loc 15 244 11 is_stmt 0 discriminator 5 view .LVU404
 1889 000a B36C     		ldr	r3, [r6, #72]
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 1890              		.loc 15 244 7 discriminator 5 view .LVU405
 1891 000c 23B1     		cbz	r3, .L75
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 1892              		.loc 15 245 2 is_stmt 1 view .LVU406
 1893 000e 06F14001 		add	r1, r6, #64
 1894              	.LVL111:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 1895              		.loc 15 245 12 is_stmt 0 view .LVU407
 1896 0012 0322     		movs	r2, #3
 1897 0014 0846     		mov	r0, r1
 1898 0016 9847     		blx	r3
 1899              	.LVL112:
 1900              	.L75:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 1901              		.loc 15 245 12 view .LVU408
 1902              	.LBE5222:
 1903              	.LBE5221:
 1904              	.LBE5220:
 1905              	.LBB5223:
 1906              	.LBI5223:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1907              		.loc 26 678 7 is_stmt 1 view .LVU409
 1908              	.LBB5224:
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 1909              		.loc 26 680 15 is_stmt 0 view .LVU410
 1910 0018 D6E90D57 		ldrd	r5, r7, [r6, #52]
 1911              	.LVL113:
 1912              	.LBB5225:
 1913              	.LBI5225:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1914              		.loc 26 276 7 is_stmt 1 view .LVU411
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1915              		.loc 26 276 7 is_stmt 0 view .LVU412
 1916              	.LBE5225:
 1917              	.LBB5226:
 1918              	.LBI5226:
 1919              		.loc 25 735 5 is_stmt 1 view .LVU413
 1920              	.LBB5227:
 1921              	.LBB5228:
 1922              	.LBB5229:
 1923              	.LBB5230:
 1924              		.loc 27 151 19 view .LVU414
 1925 001c BD42     		cmp	r5, r7
 1926              	.LBE5230:
 1927              	.LBE5229:
 1928              	.LBE5228:
 1929              	.LBE5227:
 1930              	.LBE5226:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 134


 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 1931              		.loc 26 680 15 is_stmt 0 view .LVU415
 1932 001e 2846     		mov	r0, r5
 1933              	.LBB5261:
 1934              	.LBB5260:
 1935              	.LBB5259:
 1936              	.LBB5258:
 1937              	.LBB5257:
 1938              		.loc 27 151 19 view .LVU416
 1939 0020 0FD0     		beq	.L76
 1940 0022 05F10804 		add	r4, r5, #8
 1941              	.LVL114:
 1942              	.L78:
 1943              	.LBB5231:
 1944              	.LBI5231:
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 1945              		.loc 27 135 5 is_stmt 1 view .LVU417
 1946              	.LBB5232:
 1947              	.LBI5232:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 1948              		.loc 18 657 7 view .LVU418
 1949              	.LBB5233:
 1950              	.LBI5233:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1951              		.loc 18 229 7 view .LVU419
 1952              	.LBB5234:
 1953              	.LBB5235:
 1954              	.LBI5235:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 1955              		.loc 18 221 7 view .LVU420
 1956              	.LBB5236:
 1957              	.LBI5236:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1958              		.loc 18 186 7 view .LVU421
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1959              		.loc 18 186 7 is_stmt 0 view .LVU422
 1960              	.LBE5236:
 1961              	.LBE5235:
 1962              	.LBB5239:
 1963              	.LBI5239:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1964              		.loc 18 236 7 is_stmt 1 view .LVU423
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1965              		.loc 18 236 7 is_stmt 0 view .LVU424
 1966              	.LBE5239:
 1967              	.LBB5247:
 1968              	.LBB5238:
 1969              	.LBB5237:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1970              		.loc 18 187 28 view .LVU425
 1971 0026 54F8080C 		ldr	r0, [r4, #-8]
 1972              	.LVL115:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1973              		.loc 18 187 28 view .LVU426
 1974              	.LBE5237:
 1975              	.LBE5238:
 1976              	.LBE5247:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 135


 1977              	.LBB5248:
 1978              	.LBB5240:
 1979              	.LBB5241:
 1980              	.LBI5241:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1981              		.loc 25 491 7 is_stmt 1 view .LVU427
 1982              	.LBB5242:
 1983              	.LBI5242:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1984              		.loc 20 120 7 view .LVU428
 1985              	.LBE5242:
 1986              	.LBE5241:
 1987              	.LBE5240:
 1988              	.LBE5248:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1989              		.loc 18 231 2 is_stmt 0 view .LVU429
 1990 002a 8442     		cmp	r4, r0
 1991              	.LBE5234:
 1992              	.LBE5233:
 1993              	.LBE5232:
 1994              	.LBE5231:
 1995              		.loc 27 151 19 view .LVU430
 1996 002c 04F11804 		add	r4, r4, #24
 1997              	.LBB5256:
 1998              	.LBB5255:
 1999              	.LBB5251:
 2000              	.LBB5250:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2001              		.loc 18 231 2 view .LVU431
 2002 0030 03D0     		beq	.L77
 2003              	.LBB5249:
 2004              	.LBB5246:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2005              		.loc 18 237 34 view .LVU432
 2006 0032 A968     		ldr	r1, [r5, #8]
 2007              	.LBB5245:
 2008              	.LBB5244:
 2009              	.LBB5243:
 2010              		.loc 20 133 19 view .LVU433
 2011 0034 0131     		adds	r1, r1, #1
 2012              	.LVL116:
 2013              		.loc 20 133 19 view .LVU434
 2014 0036 FFF7FEFF 		bl	_ZdlPvj
 2015              	.LVL117:
 2016              	.L77:
 2017              		.loc 20 133 19 view .LVU435
 2018              	.LBE5243:
 2019              	.LBE5244:
 2020              	.LBE5245:
 2021              	.LBE5246:
 2022              	.LBE5249:
 2023              	.LBE5250:
 2024              	.LBE5251:
 2025              	.LBB5252:
 2026              	.LBI5252:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2027              		.loc 18 150 14 is_stmt 1 view .LVU436
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 136


 2028              	.LBB5253:
 2029              	.LBI5253:
 2030              		.loc 19 162 7 view .LVU437
 2031              	.LBB5254:
 2032              	.LBI5254:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2033              		.loc 20 89 7 view .LVU438
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2034              		.loc 20 89 7 is_stmt 0 view .LVU439
 2035              	.LBE5254:
 2036              	.LBE5253:
 2037              	.LBE5252:
 2038              	.LBE5255:
 2039              	.LBE5256:
 2040              		.loc 27 151 4 is_stmt 1 view .LVU440
 2041 003a 1835     		adds	r5, r5, #24
 2042              	.LVL118:
 2043              		.loc 27 151 19 view .LVU441
 2044 003c AF42     		cmp	r7, r5
 2045 003e F2D1     		bne	.L78
 2046 0040 706B     		ldr	r0, [r6, #52]
 2047              	.L76:
 2048              	.LVL119:
 2049              		.loc 27 151 19 is_stmt 0 view .LVU442
 2050              	.LBE5257:
 2051              	.LBE5258:
 2052              	.LBE5259:
 2053              	.LBE5260:
 2054              	.LBE5261:
 2055              	.LBB5262:
 2056              	.LBI5262:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2057              		.loc 26 333 7 is_stmt 1 view .LVU443
 2058              	.LBB5263:
 2059              	.LBB5264:
 2060              	.LBI5264:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2061              		.loc 26 350 7 view .LVU444
 2062              	.LBB5265:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2063              		.loc 26 353 2 is_stmt 0 view .LVU445
 2064 0042 18B1     		cbz	r0, .L79
 2065              	.LVL120:
 2066              	.LBB5266:
 2067              	.LBI5266:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2068              		.loc 25 491 7 is_stmt 1 view .LVU446
 2069              	.LBB5267:
 2070              	.LBB5268:
 2071              	.LBI5268:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2072              		.loc 20 120 7 view .LVU447
 2073              	.LBE5268:
 2074              	.LBE5267:
 2075              	.LBE5266:
 2076              	.LBE5265:
 2077              	.LBE5264:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 137


 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2078              		.loc 26 336 35 is_stmt 0 view .LVU448
 2079 0044 F16B     		ldr	r1, [r6, #60]
 2080              	.LBB5274:
 2081              	.LBB5273:
 2082              	.LBB5272:
 2083              	.LBB5271:
 2084              	.LBB5270:
 2085              	.LBB5269:
 2086              		.loc 20 133 19 view .LVU449
 2087 0046 091A     		subs	r1, r1, r0
 2088 0048 FFF7FEFF 		bl	_ZdlPvj
 2089              	.LVL121:
 2090              	.L79:
 2091              		.loc 20 133 19 view .LVU450
 2092              	.LBE5269:
 2093              	.LBE5270:
 2094              	.LBE5271:
 2095              	.LBE5272:
 2096              	.LBE5273:
 2097              	.LBE5274:
 2098              	.LBB5275:
 2099              	.LBI5275:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2100              		.loc 26 128 14 is_stmt 1 view .LVU451
 2101              	.LBB5276:
 2102              	.LBI5276:
 2103              		.loc 19 162 7 view .LVU452
 2104              	.LBB5277:
 2105              	.LBI5277:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2106              		.loc 20 89 7 view .LVU453
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2107              		.loc 20 89 7 is_stmt 0 view .LVU454
 2108              	.LBE5277:
 2109              	.LBE5276:
 2110              	.LBE5275:
 2111              	.LBE5263:
 2112              	.LBE5262:
 2113              	.LBE5224:
 2114              	.LBE5223:
 2115              	.LBB5278:
 2116              	.LBI5278:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2117              		.loc 18 657 7 is_stmt 1 view .LVU455
 2118              	.LBB5279:
 2119              	.LBI5279:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2120              		.loc 18 229 7 view .LVU456
 2121              	.LBB5280:
 2122              	.LBB5281:
 2123              	.LBI5281:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2124              		.loc 18 221 7 view .LVU457
 2125              	.LBB5282:
 2126              	.LBI5282:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 138


 2127              		.loc 18 186 7 view .LVU458
 2128              	.LBB5283:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2129              		.loc 18 187 28 is_stmt 0 view .LVU459
 2130 004c F069     		ldr	r0, [r6, #28]
 2131              	.LVL122:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2132              		.loc 18 187 28 view .LVU460
 2133              	.LBE5283:
 2134              	.LBE5282:
 2135              	.LBE5281:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2136              		.loc 18 231 2 view .LVU461
 2137 004e 06F12403 		add	r3, r6, #36
 2138 0052 9842     		cmp	r0, r3
 2139 0054 03D0     		beq	.L80
 2140              	.LVL123:
 2141              	.LBB5284:
 2142              	.LBI5284:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2143              		.loc 18 236 7 is_stmt 1 view .LVU462
 2144              	.LBB5285:
 2145              	.LBB5286:
 2146              	.LBI5286:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2147              		.loc 25 491 7 view .LVU463
 2148              	.LBB5287:
 2149              	.LBI5287:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2150              		.loc 20 120 7 view .LVU464
 2151              	.LBE5287:
 2152              	.LBE5286:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2153              		.loc 18 237 34 is_stmt 0 view .LVU465
 2154 0056 716A     		ldr	r1, [r6, #36]
 2155              	.LBB5290:
 2156              	.LBB5289:
 2157              	.LBB5288:
 2158              		.loc 20 133 19 view .LVU466
 2159 0058 0131     		adds	r1, r1, #1
 2160              	.LVL124:
 2161              		.loc 20 133 19 view .LVU467
 2162 005a FFF7FEFF 		bl	_ZdlPvj
 2163              	.LVL125:
 2164              	.L80:
 2165              		.loc 20 133 19 view .LVU468
 2166              	.LBE5288:
 2167              	.LBE5289:
 2168              	.LBE5290:
 2169              	.LBE5285:
 2170              	.LBE5284:
 2171              	.LBE5280:
 2172              	.LBE5279:
 2173              	.LBB5291:
 2174              	.LBI5291:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2175              		.loc 18 150 14 is_stmt 1 view .LVU469
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 139


 2176              	.LBB5292:
 2177              	.LBI5292:
 2178              		.loc 19 162 7 view .LVU470
 2179              	.LBB5293:
 2180              	.LBI5293:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2181              		.loc 20 89 7 view .LVU471
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2182              		.loc 20 89 7 is_stmt 0 view .LVU472
 2183              	.LBE5293:
 2184              	.LBE5292:
 2185              	.LBE5291:
 2186              	.LBE5278:
 2187              	.LBB5294:
 2188              	.LBI5294:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2189              		.loc 18 657 7 is_stmt 1 view .LVU473
 2190              	.LBB5295:
 2191              	.LBI5295:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2192              		.loc 18 229 7 view .LVU474
 2193              	.LBB5296:
 2194              	.LBB5297:
 2195              	.LBI5297:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2196              		.loc 18 221 7 view .LVU475
 2197              	.LBB5298:
 2198              	.LBI5298:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2199              		.loc 18 186 7 view .LVU476
 2200              	.LBB5299:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2201              		.loc 18 187 28 is_stmt 0 view .LVU477
 2202 005e 7068     		ldr	r0, [r6, #4]
 2203              	.LVL126:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2204              		.loc 18 187 28 view .LVU478
 2205              	.LBE5299:
 2206              	.LBE5298:
 2207              	.LBE5297:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2208              		.loc 18 231 2 view .LVU479
 2209 0060 06F10C03 		add	r3, r6, #12
 2210 0064 9842     		cmp	r0, r3
 2211 0066 03D0     		beq	.L81
 2212              	.LVL127:
 2213              	.LBB5300:
 2214              	.LBI5300:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2215              		.loc 18 236 7 is_stmt 1 view .LVU480
 2216              	.LBB5301:
 2217              	.LBB5302:
 2218              	.LBI5302:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2219              		.loc 25 491 7 view .LVU481
 2220              	.LBB5303:
 2221              	.LBI5303:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 140


 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2222              		.loc 20 120 7 view .LVU482
 2223              	.LBE5303:
 2224              	.LBE5302:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2225              		.loc 18 237 34 is_stmt 0 view .LVU483
 2226 0068 F168     		ldr	r1, [r6, #12]
 2227              	.LBB5306:
 2228              	.LBB5305:
 2229              	.LBB5304:
 2230              		.loc 20 133 19 view .LVU484
 2231 006a 0131     		adds	r1, r1, #1
 2232              	.LVL128:
 2233              		.loc 20 133 19 view .LVU485
 2234 006c FFF7FEFF 		bl	_ZdlPvj
 2235              	.LVL129:
 2236              	.L81:
 2237              		.loc 20 133 19 view .LVU486
 2238              	.LBE5304:
 2239              	.LBE5305:
 2240              	.LBE5306:
 2241              	.LBE5301:
 2242              	.LBE5300:
 2243              	.LBE5296:
 2244              	.LBE5295:
 2245              	.LBB5307:
 2246              	.LBI5307:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2247              		.loc 18 150 14 is_stmt 1 view .LVU487
 2248              	.LBB5308:
 2249              	.LBI5308:
 2250              		.loc 19 162 7 view .LVU488
 2251              	.LBB5309:
 2252              	.LBI5309:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2253              		.loc 20 89 7 view .LVU489
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2254              		.loc 20 89 7 is_stmt 0 view .LVU490
 2255              	.LBE5309:
 2256              	.LBE5308:
 2257              	.LBE5307:
 2258              	.LBE5294:
 2259              	.LBE5219:
 2260              		.loc 24 94 12 view .LVU491
 2261 0070 4645     		cmp	r6, r8
 2262 0072 A6F15003 		sub	r3, r6, #80
 2263 0076 01D0     		beq	.L92
 2264 0078 1E46     		mov	r6, r3
 2265 007a C6E7     		b	.L82
 2266              	.L92:
 2267              	.LBE5218:
 2268              		.loc 24 94 12 discriminator 7 view .LVU492
 2269 007c 3046     		mov	r0, r6
 2270 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2271              		.loc 24 94 12 discriminator 7 view .LVU493
 2272              		.cfi_endproc
 2273              	.LFE6190:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 141


 2275              		.weak	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev
 2276              		.thumb_set _ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev,_ZNSt5arrayIN10jellybeans8MenuItemELj10EE
 2277 0082 00BF     		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 2278              		.align	1
 2279              		.p2align 2,,3
 2280              		.syntax unified
 2281              		.thumb
 2282              		.thumb_func
 2283              		.fpu fpv5-d16
 2285              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 2286              	.LVL130:
 2287              	.LFB6213:
 2288              		.file 29 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // RB tree implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Copyright (c) 1996,1997
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Silicon Graphics Computer Systems, Inc.
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * in supporting documentation.  Silicon Graphics makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Copyright (c) 1994
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Hewlett-Packard Company
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * provided that the above copyright notice appear in all copies and
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 142


  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  */
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** /** @file bits/stl_tree.h
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *  This is an internal header file, included by other library headers.
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *  Do not attempt to use it directly. @headername{map,set}
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  */
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #ifndef _STL_TREE_H
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #define _STL_TREE_H 1
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #pragma GCC system_header
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/stl_algobase.h>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/allocator.h>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/stl_function.h>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/cpp_type_traits.h>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <ext/alloc_traits.h>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # include <ext/aligned_buffer.h>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # include <bits/node_handle.h>
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** namespace std _GLIBCXX_VISIBILITY(default)
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** {
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201103L
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # define __cpp_lib_generic_associative_lookup 201304
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Red-black tree class, designed for use in implementing STL
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // associative containers (set, multiset, map, and multimap). The
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // insertion and deletion algorithms are based on those in Cormen,
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Leiserson, and Rivest, Introduction to Algorithms (MIT Press,
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // 1990), except that
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   //
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // (1) the header cell is maintained with links not only to the root
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // but also to the leftmost node of the tree, to enable constant
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // time begin(), and to the rightmost node of the tree, to enable
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // linear time performance when used with the generic set algorithms
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // (set_union, etc.)
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   //
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // (2) when a node being deleted has two children its successor node
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // is relinked into its place, rather than copied, so that the only
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // iterators invalidated are those referring to the deleted node.
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   enum _Rb_tree_color { _S_red = false, _S_black = true };
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   struct _Rb_tree_node_base
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 143


 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   {
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typedef _Rb_tree_node_base* _Base_ptr;
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typedef const _Rb_tree_node_base* _Const_Base_ptr;
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_color	_M_color;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Base_ptr		_M_parent;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Base_ptr		_M_left;
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Base_ptr		_M_right;
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Base_ptr
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Const_Base_ptr
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Base_ptr
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Const_Base_ptr
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   };
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Helper type offering value initialization guarantee on the compare functor.
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key_compare>
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_key_compare
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Key_compare		_M_key_compare;
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare()
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_NOEXCEPT_IF(
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	is_nothrow_default_constructible<_Key_compare>::value)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare()
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare(const _Key_compare& __comp)
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Copy constructor added for consistency with C++98 mode.
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare(const _Rb_tree_key_compare&) = default;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 144


 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare(_Rb_tree_key_compare&& __x)
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	noexcept(is_nothrow_copy_constructible<_Key_compare>::value)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__x._M_key_compare)
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Helper type to manage default initialization of node count and header.
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   struct _Rb_tree_header
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   {
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_node_base	_M_header;
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     size_t		_M_node_count; // Keeps track of size of tree.
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_header() _GLIBCXX_NOEXCEPT
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_color = _S_red;
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_header(_Rb_tree_header&& __x) noexcept
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__x._M_header._M_parent != nullptr)
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_move_data(__x);
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_header._M_color = _S_red;
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_reset();
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_data(_Rb_tree_header& __from)
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_color = __from._M_header._M_color;
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_parent = __from._M_header._M_parent;
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = __from._M_header._M_left;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = __from._M_header._M_right;
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_parent->_M_parent = &_M_header;
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_node_count = __from._M_node_count;
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       __from._M_reset();
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_reset()
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_parent = 0;
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_node_count = 0;
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   };
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Val>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 145


 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_node : public _Rb_tree_node_base
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node<_Val>* _Link_type;
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Val _M_value_field;
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Val*
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr()
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return std::__addressof(_M_value_field); }
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const _Val*
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr() const
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return std::__addressof(_M_value_field); }
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       __gnu_cxx::__aligned_membuf<_Val> _M_storage;
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Val*
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr()
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_storage._M_ptr(); }
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const _Val*
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr() const
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_storage._M_ptr(); }
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_increment(_Rb_tree_node_base* __x) throw ();
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_increment(const _Rb_tree_node_base* __x) throw ();
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_decrement(_Rb_tree_node_base* __x) throw ();
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_decrement(const _Rb_tree_node_base* __x) throw ();
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Tp>
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_iterator
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp  value_type;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp& reference;
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp* pointer;
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef ptrdiff_t			 difference_type;
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_iterator<_Tp>		_Self;
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node_base::_Base_ptr	_Base_ptr;
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node<_Tp>*		_Link_type;
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_iterator() _GLIBCXX_NOEXCEPT
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node() { }
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       explicit
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 146


 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reference
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pointer
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node == __y._M_node; }
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if ! __cpp_lib_three_way_comparison
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node != __y._M_node; }
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr _M_node;
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   };
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Tp>
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_const_iterator
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 147


 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp	 value_type;
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Tp& reference;
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Tp* pointer;
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_iterator<_Tp> iterator;
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef ptrdiff_t			 difference_type;
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_const_iterator<_Tp>		_Self;
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node_base::_Const_Base_ptr	_Base_ptr;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Rb_tree_node<_Tp>*			_Link_type;
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_const_iterator() _GLIBCXX_NOEXCEPT
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node() { }
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       explicit
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__it._M_node) { }
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_const_cast() const _GLIBCXX_NOEXCEPT
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reference
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pointer
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 148


 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node == __y._M_node; }
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if ! __cpp_lib_three_way_comparison
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node != __y._M_node; }
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr _M_node;
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   void
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_insert_and_rebalance(const bool __insert_left,
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				_Rb_tree_node_base* __x,
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				_Rb_tree_node_base* __p,
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				_Rb_tree_node_base& __header) throw ();
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_node_base*
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_rebalance_for_erase(_Rb_tree_node_base* const __z,
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			       _Rb_tree_node_base& __header) throw ();
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201402L
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Cmp, typename _SfinaeType, typename = __void_t<>>
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct __has_is_transparent
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     { };
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Cmp, typename _SfinaeType>
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct __has_is_transparent<_Cmp, _SfinaeType,
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				__void_t<typename _Cmp::is_transparent>>
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     { typedef void type; };
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Cmp, typename _SfinaeType>
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     using __has_is_transparent_t
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       = typename __has_is_transparent<_Cmp, _SfinaeType>::type;
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Tree1, typename _Cmp2>
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_merge_helper { };
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc = allocator<_Val> >
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     class _Rb_tree
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	rebind<_Rb_tree_node<_Val> >::other _Node_allocator;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 149


 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef __gnu_cxx::__alloc_traits<_Node_allocator> _Alloc_traits;
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node_base* 		_Base_ptr;
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Rb_tree_node_base* 	_Const_Base_ptr;
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node<_Val>* 		_Link_type;
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Rb_tree_node<_Val>*	_Const_Link_type;
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Functor recycling a pool of nodes and using allocation once the pool
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // is empty.
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       struct _Reuse_or_alloc_node
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node(_Rb_tree& __t)
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_root(__t._M_root()), _M_nodes(__t._M_rightmost()), _M_t(__t)
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_root)
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _M_root->_M_parent = 0;
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_M_nodes->_M_left)
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_nodes = _M_nodes->_M_left;
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_nodes = 0;
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node(const _Reuse_or_alloc_node&) = delete;
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	~_Reuse_or_alloc_node()
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{ _M_t._M_erase(static_cast<_Link_type>(_M_root)); }
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	template<typename _Arg>
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(const _Arg& __arg)
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(_Arg&& __arg)
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _Link_type __node = static_cast<_Link_type>(_M_extract());
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__node)
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_t._M_destroy_node(__node);
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_t._M_construct_node(__node, _GLIBCXX_FORWARD(_Arg, __arg));
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return __node;
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg));
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       private:
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Base_ptr
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_extract()
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 150


 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (!_M_nodes)
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_nodes;
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Base_ptr __node = _M_nodes;
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_nodes = _M_nodes->_M_parent;
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_nodes)
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_M_nodes->_M_right == __node)
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  _M_nodes->_M_right = 0;
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  if (_M_nodes->_M_left)
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		    {
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _M_nodes = _M_nodes->_M_left;
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      while (_M_nodes->_M_right)
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_M_nodes = _M_nodes->_M_right;
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      if (_M_nodes->_M_left)
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_M_nodes = _M_nodes->_M_left;
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		    }
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      else // __node is on the left.
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_nodes->_M_left = 0;
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_root = 0;
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __node;
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Base_ptr _M_root;
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Base_ptr _M_nodes;
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree& _M_t;
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       };
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Functor similar to the previous one but without any pool of nodes to
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // recycle.
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       struct _Alloc_node
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node(_Rb_tree& __t)
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_t(__t) { }
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	template<typename _Arg>
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(const _Arg& __arg) const
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(_Arg&& __arg) const
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       private:
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree& _M_t;
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       };
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 151


 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Key 				key_type;
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Val 				value_type;
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef value_type* 			pointer;
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const value_type* 		const_pointer;
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef value_type& 			reference;
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const value_type& 		const_reference;
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef size_t 				size_type;
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef ptrdiff_t 			difference_type;
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Alloc 				allocator_type;
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Node_allocator&
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl; }
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const _Node_allocator&
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_Node_allocator() const _GLIBCXX_NOEXCEPT
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl; }
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       allocator_type
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return allocator_type(_M_get_Node_allocator()); }
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_node()
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_construct_node(_Link_type __node, const value_type& __x)
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__try
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { get_allocator().construct(__node->_M_valptr(), __x); }
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__catch(...)
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_put_node(__node);
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __throw_exception_again;
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_create_node(const value_type& __x)
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type __tmp = _M_get_node();
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_construct_node(__tmp, __x);
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_construct_node(_Link_type __node, _Args&&... __args)
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 152


 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __try
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      ::new(__node) _Rb_tree_node<_Val>;
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Alloc_traits::construct(_M_get_Node_allocator(),
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				       __node->_M_valptr(),
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				       std::forward<_Args>(__args)...);
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __catch(...)
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __node->~_Rb_tree_node<_Val>();
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _M_put_node(__node);
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __throw_exception_again;
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_create_node(_Args&&... __args)
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __tmp = _M_get_node();
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __tmp;
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	get_allocator().destroy(__p->_M_valptr());
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__p->~_Rb_tree_node<_Val>();
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_destroy_node(__p);
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_put_node(__p);
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_clone_node(_Const_Link_type __x, _NodeGen& __node_gen)
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __tmp = __node_gen(*__x->_M_valptr());
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __tmp->_M_color = __x->_M_color;
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __tmp->_M_left = 0;
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __tmp->_M_right = 0;
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __tmp;
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if _GLIBCXX_INLINE_VERSION
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Key_compare>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 153


 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Unused _Is_pod_comparator is kept as it is part of mangled name.
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Key_compare,
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	struct _Rb_tree_impl
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: public _Node_allocator
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	, public _Rb_tree_key_compare<_Key_compare>
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	, public _Rb_tree_header
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  typedef _Rb_tree_key_compare<_Key_compare> _Base_key_compare;
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl()
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _GLIBCXX_NOEXCEPT_IF(
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		is_nothrow_default_constructible<_Node_allocator>::value
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		&& is_nothrow_default_constructible<_Base_key_compare>::value )
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator()
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(const _Rb_tree_impl& __x)
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(_Alloc_traits::_S_select_on_copy(__x))
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  , _Base_key_compare(__x._M_key_compare)
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, const _Node_allocator& __a)
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(__a), _Base_key_compare(__comp)
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(_Rb_tree_impl&&) = default;
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  explicit
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(_Node_allocator&& __a)
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a))
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(_Rb_tree_impl&& __x, _Node_allocator&& __a)
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a)),
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _Base_key_compare(std::move(__x)),
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _Rb_tree_header(std::move(__x))
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	};
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_impl<_Compare> _M_impl;
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr&
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_root() _GLIBCXX_NOEXCEPT
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_root() const _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 154


 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr&
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_leftmost() _GLIBCXX_NOEXCEPT
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_leftmost() const _GLIBCXX_NOEXCEPT
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr&
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_rightmost() _GLIBCXX_NOEXCEPT
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_rightmost() const _GLIBCXX_NOEXCEPT
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_begin() _GLIBCXX_NOEXCEPT
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Link_type
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_begin() const _GLIBCXX_NOEXCEPT
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return static_cast<_Const_Link_type>
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  (this->_M_impl._M_header._M_parent);
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_end() _GLIBCXX_NOEXCEPT
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_end() const _GLIBCXX_NOEXCEPT
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static const _Key&
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_key(_Const_Link_type __x)
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// If we're asking for the key we're presumably using the comparison
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// object, and so this is a good place to sanity check it.
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	static_assert(__is_invocable<_Compare&, const _Key&, const _Key&>{},
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      "comparison object must be invocable "
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      "with two arguments of key type");
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # if __cplusplus >= 201703L
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// 2542. Missing const requirements for associative containers
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if constexpr (__is_invocable<_Compare&, const _Key&, const _Key&>{})
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  static_assert(
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      is_invocable_v<const _Compare&, const _Key&, const _Key&>,
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      "comparison object must be invocable as const");
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # endif // C++17
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif // C++11
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _KeyOfValue()(*__x->_M_valptr());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 155


 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Link_type
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Link_type
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_left); }
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Link_type
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Link_type
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_right); }
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static const _Key&
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_key(_Const_Base_ptr __x)
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _S_key(static_cast<_Const_Link_type>(__x)); }
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Base_ptr
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Base_ptr
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Base_ptr
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Base_ptr
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_iterator<value_type>       iterator;
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_const_iterator<value_type> const_iterator;
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef std::reverse_iterator<iterator>       reverse_iterator;
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       using node_type = _Node_handle<_Key, _Val, _Node_allocator>;
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       using insert_return_type = _Node_insert_return<
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	conditional_t<is_same_v<_Key, _Val>, const_iterator, iterator>,
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	node_type>;
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_unique_pos(const key_type& __k);
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_equal_pos(const key_type& __k);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 156


 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_hint_unique_pos(const_iterator __pos,
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				    const key_type& __k);
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_hint_equal_pos(const_iterator __pos,
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				   const key_type& __k);
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg, typename _NodeGen>
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y, _Arg&& __v, _NodeGen&);
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_node(_Base_ptr __x, _Base_ptr __y, _Link_type __z);
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_lower(_Base_ptr __y, _Arg&& __v);
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_lower(_Arg&& __x);
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_lower_node(_Base_ptr __p, _Link_type __z);
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal_lower_node(_Link_type __z);
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y,
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const value_type& __v, _NodeGen&);
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // 233. Insertion hints in associative containers.
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_lower(_Base_ptr __y, const value_type& __v);
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal_lower(const value_type& __x);
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen&);
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_copy(const _Rb_tree& __x, _NodeGen& __gen)
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __root = _M_copy(__x._M_begin(), _M_end(), __gen);
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_leftmost() = _S_minimum(__root);
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_rightmost() = _S_maximum(__root);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 157


 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_impl._M_node_count = __x._M_impl._M_node_count;
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __root;
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_copy(const _Rb_tree& __x)
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node __an(*this);
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_copy(__x, __an);
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_erase(_Link_type __x);
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_lower_bound(_Link_type __x, _Base_ptr __y,
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k);
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k) const;
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_upper_bound(_Link_type __x, _Base_ptr __y,
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k);
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k) const;
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // allocation/deallocation
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree() { }
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree() = default;
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const _Compare& __comp,
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__comp, _Node_allocator(__a)) { }
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const _Rb_tree& __x)
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__x._M_impl)
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__x._M_root() != 0)
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x);
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const allocator_type& __a)
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(_Node_allocator(__a))
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const _Rb_tree& __x, const allocator_type& __a)
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare, _Node_allocator(__a))
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 158


 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__x._M_root() != nullptr)
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x);
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&&) = default;
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, const allocator_type& __a)
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _Rb_tree(std::move(__x), _Node_allocator(__a))
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a, true_type)
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       noexcept(is_nothrow_default_constructible<_Compare>::value)
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(std::move(__x._M_impl), std::move(__a))
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a, false_type)
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare, std::move(__a))
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__x._M_root() != nullptr)
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_move_data(__x, false_type{});
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a)
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       noexcept( noexcept(
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree(std::declval<_Rb_tree&&>(), std::declval<_Node_allocator&&>(),
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 std::declval<typename _Alloc_traits::is_always_equal>())) )
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _Rb_tree(std::move(__x), std::move(__a),
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 typename _Alloc_traits::is_always_equal{})
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       ~_Rb_tree() _GLIBCXX_NOEXCEPT
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase(_M_begin()); }
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree&
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator=(const _Rb_tree& __x);
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Accessors.
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Compare
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       key_comp() const
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_key_compare; }
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       begin() _GLIBCXX_NOEXCEPT
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       begin() const _GLIBCXX_NOEXCEPT
1007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_iterator(this->_M_impl._M_header._M_left); }
1008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       end() _GLIBCXX_NOEXCEPT
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
1012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 159


1014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       end() const _GLIBCXX_NOEXCEPT
1015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_iterator(&this->_M_impl._M_header); }
1016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reverse_iterator
1018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rbegin() _GLIBCXX_NOEXCEPT
1019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return reverse_iterator(end()); }
1020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_reverse_iterator
1022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rbegin() const _GLIBCXX_NOEXCEPT
1023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_reverse_iterator(end()); }
1024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reverse_iterator
1026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rend() _GLIBCXX_NOEXCEPT
1027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return reverse_iterator(begin()); }
1028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_reverse_iterator
1030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rend() const _GLIBCXX_NOEXCEPT
1031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_reverse_iterator(begin()); }
1032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_NODISCARD bool
1034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       empty() const _GLIBCXX_NOEXCEPT
1035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count == 0; }
1036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size() const _GLIBCXX_NOEXCEPT
1039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count; }
1040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       max_size() const _GLIBCXX_NOEXCEPT
1043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Alloc_traits::max_size(_M_get_Node_allocator()); }
1044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       swap(_Rb_tree& __t)
1047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value);
1048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Insert/erase.
1050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<iterator, bool>
1053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique(_Arg&& __x);
1054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal(_Arg&& __x);
1058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg, typename _NodeGen>
1060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x, _NodeGen&);
1062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x)
1066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return _M_insert_unique_(__pos, std::forward<_Arg>(__x), __an);
1069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 160


1071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg, typename _NodeGen>
1072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x, _NodeGen&);
1074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x)
1078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return _M_insert_equal_(__pos, std::forward<_Arg>(__x), __an);
1081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<iterator, bool>
1085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_unique(_Args&&... __args);
1086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_equal(_Args&&... __args);
1090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_hint_unique(const_iterator __pos, _Args&&... __args);
1094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_hint_equal(const_iterator __pos, _Args&&... __args);
1098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Iter>
1100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	using __same_value_type
1101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  = is_same<value_type, typename iterator_traits<_Iter>::value_type>;
1102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<__same_value_type<_InputIterator>::value>
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<!__same_value_type<_InputIterator>::value>
1114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_emplace_unique(*__first);
1118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<__same_value_type<_InputIterator>::value>
1122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_equal_(end(), *__first, __an);
1127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 161


1128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<!__same_value_type<_InputIterator>::value>
1131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_emplace_equal(*__first);
1136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<iterator, bool>
1139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_unique(const value_type& __x);
1140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal(const value_type& __x);
1143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
1145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, const value_type& __x,
1147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			  _NodeGen&);
1148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_unique_(const_iterator __pos, const value_type& __x)
1151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node __an(*this);
1153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_insert_unique_(__pos, __x, __an);
1154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
1157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, const value_type& __x,
1159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			 _NodeGen&);
1160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal_(const_iterator __pos, const value_type& __x)
1162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node __an(*this);
1164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_insert_equal_(__pos, __x, __an);
1165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
1174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_equal_(end(), *__first, __an);
1183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 162


1185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
1187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_erase_aux(const_iterator __position);
1189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_erase_aux(const_iterator __first, const_iterator __last);
1192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
1194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __position)
1200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator __result = __position;
1203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	++__result;
1204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __result._M_const_cast();
1206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // LWG 2059.
1209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(iterator __position)
1212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __result = __position;
1215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	++__result;
1216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __result;
1218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(iterator __position)
1222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __position)
1229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const key_type& __x);
1237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 163


1242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__first, __last);
1246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __last._M_const_cast();
1247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(iterator __first, iterator __last)
1251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase_aux(__first, __last); }
1252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase_aux(__first, __last); }
1256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       clear() _GLIBCXX_NOEXCEPT
1260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase(_M_begin());
1262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_impl._M_reset();
1263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Set operations.
1266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       find(const key_type& __k);
1268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       find(const key_type& __k) const;
1271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       count(const key_type& __k) const;
1274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       lower_bound(const key_type& __k)
1277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
1278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       lower_bound(const key_type& __k) const
1281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
1282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       upper_bound(const key_type& __k)
1285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
1286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       upper_bound(const key_type& __k) const
1289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
1290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<iterator, iterator>
1292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       equal_range(const key_type& __k);
1293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<const_iterator, const_iterator>
1295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       equal_range(const key_type& __k) const;
1296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201402L
1298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 164


1299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_find_tr(const _Kt& __k)
1302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __const_this->_M_find_tr(__k)._M_const_cast();
1305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator
1310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_find_tr(const _Kt& __k) const
1311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __j = _M_lower_bound_tr(__k);
1313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__j != end() && _M_impl._M_key_compare(__k, _S_key(__j._M_node)))
1314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __j = end();
1315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __j;
1316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	size_type
1321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_count_tr(const _Kt& __k) const
1322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __p = _M_equal_range_tr(__k);
1324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return std::distance(__p.first, __p.second);
1325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k)
1331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __const_this->_M_lower_bound_tr(__k)._M_const_cast();
1334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator
1339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k) const
1340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __x = _M_begin();
1342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __y = _M_end();
1343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  while (__x != 0)
1344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (!_M_impl._M_key_compare(_S_key(__x), __k))
1345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__y = __x;
1347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__x = _S_left(__x);
1348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __x = _S_right(__x);
1351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return const_iterator(__y);
1352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 165


1356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k)
1358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __const_this->_M_upper_bound_tr(__k)._M_const_cast();
1361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator
1366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k) const
1367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __x = _M_begin();
1369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __y = _M_end();
1370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  while (__x != 0)
1371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (_M_impl._M_key_compare(__k, _S_key(__x)))
1372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__y = __x;
1374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__x = _S_left(__x);
1375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __x = _S_right(__x);
1378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return const_iterator(__y);
1379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<iterator, iterator>
1384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k)
1385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __ret = __const_this->_M_equal_range_tr(__k);
1388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return { __ret.first._M_const_cast(), __ret.second._M_const_cast() };
1389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<const_iterator, const_iterator>
1394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k) const
1395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __low = _M_lower_bound_tr(__k);
1397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __high = __low;
1398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto& __cmp = _M_impl._M_key_compare;
1399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  while (__high != end() && !__cmp(__k, _S_key(__high._M_node)))
1400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    ++__high;
1401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return { __low, __high };
1402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Debugging.
1406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       bool
1407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       __rb_verify() const;
1408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree&
1411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator=(_Rb_tree&&)
1412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       noexcept(_Alloc_traits::_S_nothrow_move()
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 166


1413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       && is_nothrow_move_assignable<_Compare>::value);
1414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Iterator>
1416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_assign_unique(_Iterator, _Iterator);
1418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Iterator>
1420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_assign_equal(_Iterator, _Iterator);
1422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
1424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move elements from container with equal allocator.
1425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_data(_Rb_tree& __x, true_type)
1427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_impl._M_move_data(__x._M_impl); }
1428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move elements from container with possibly non-equal allocator,
1430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // which might result in a copy not a move.
1431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_data(_Rb_tree&, false_type);
1433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move assignment from container with equal allocator.
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_assign(_Rb_tree&, true_type);
1437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move assignment from container with possibly non-equal allocator,
1439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // which might result in a copy not a move.
1440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_assign(_Rb_tree&, false_type);
1442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
1445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
1446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       insert_return_type
1448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_unique(node_type&& __nh)
1449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	insert_return_type __ret;
1451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret.position = end();
1453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_unique_pos(__nh._M_key());
1458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.position
1461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__nh._M_ptr = nullptr;
1463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.inserted = true;
1464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.node = std::move(__nh);
1468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.position = iterator(__res.first);
1469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.inserted = false;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 167


1470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_equal(node_type&& __nh)
1478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __ret;
1480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret = end();
1482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_equal_pos(__nh._M_key());
1486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
1490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __nh._M_ptr = nullptr;
1491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_hint_unique(const_iterator __hint, node_type&& __nh)
1498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __ret;
1500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret = end();
1502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_hint_unique_pos(__hint, __nh._M_key());
1506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__nh._M_ptr = nullptr;
1510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = iterator(__res.first);
1513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_hint_equal(const_iterator __hint, node_type&& __nh)
1520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __ret;
1522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret = end();
1524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 168


1527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_hint_equal_pos(__hint, __nh._M_key());
1528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
1532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __nh._M_ptr = nullptr;
1533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Extract a node.
1538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       node_type
1539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       extract(const_iterator __pos)
1540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	auto __ptr = _Rb_tree_rebalance_for_erase(
1542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __pos._M_const_cast()._M_node, _M_impl._M_header);
1543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	--_M_impl._M_node_count;
1544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return { static_cast<_Link_type>(__ptr), _M_get_Node_allocator() };
1545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Extract a node.
1548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       node_type
1549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       extract(const key_type& __k)
1550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	node_type __nh;
1552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	auto __pos = find(__k);
1553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__pos != end())
1554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __nh = extract(const_iterator(__pos));
1555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __nh;
1556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Compare2>
1559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	using _Compatible_tree
1560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  = _Rb_tree<_Key, _Val, _KeyOfValue, _Compare2, _Alloc>;
1561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename, typename>
1563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	friend class _Rb_tree_merge_helper;
1564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Merge from a compatible container into one with unique keys.
1566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Compare2>
1567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_merge_unique(_Compatible_tree<_Compare2>& __src) noexcept
1569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
1571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
1572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __pos = __i++;
1574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __res = _M_get_insert_unique_pos(_KeyOfValue()(*__pos));
1575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (__res.second)
1576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
1578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto __ptr = _Rb_tree_rebalance_for_erase(
1579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      __pos._M_node, __src_impl._M_header);
1580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  --__src_impl._M_node_count;
1581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  _M_insert_node(__res.first, __res.second,
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				 static_cast<_Link_type>(__ptr));
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 169


1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
1585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Merge from a compatible container into one with equivalent keys.
1588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Compare2>
1589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_merge_equal(_Compatible_tree<_Compare2>& __src) noexcept
1591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
1593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
1594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __pos = __i++;
1596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __res = _M_get_insert_equal_pos(_KeyOfValue()(*__pos));
1597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (__res.second)
1598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
1599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
1600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto __ptr = _Rb_tree_rebalance_for_erase(
1601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      __pos._M_node, __src_impl._M_header);
1602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  --__src_impl._M_node_count;
1603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  _M_insert_node(__res.first, __res.second,
1604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				 static_cast<_Link_type>(__ptr));
1605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
1606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
1607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif // C++17
1609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
1611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator==(const _Rb_tree& __x, const _Rb_tree& __y)
1612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __x.size() == __y.size()
1614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  && std::equal(__x.begin(), __x.end(), __y.begin());
1615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cpp_lib_three_way_comparison
1618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend auto
1619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator<=>(const _Rb_tree& __x, const _Rb_tree& __y)
1620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if constexpr (requires { typename __detail::__synth3way_t<_Val>; })
1622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return std::lexicographical_compare_three_way(__x.begin(), __x.end(),
1623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							__y.begin(), __y.end(),
1624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							__detail::__synth3way);
1625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
1628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator<(const _Rb_tree& __x, const _Rb_tree& __y)
1629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return std::lexicographical_compare(__x.begin(), __x.end(),
1631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 					    __y.begin(), __y.end());
1632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator!=(const _Rb_tree& __x, const _Rb_tree& __y)
1636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return !(__x == __y); }
1637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator>(const _Rb_tree& __x, const _Rb_tree& __y)
1640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __y < __x; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 170


1641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator<=(const _Rb_tree& __x, const _Rb_tree& __y)
1644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return !(__y < __x); }
1645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator>=(const _Rb_tree& __x, const _Rb_tree& __y)
1648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return !(__x < __y); }
1649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
1651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     inline void
1655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     { __x.swap(__y); }
1658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
1663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_data(_Rb_tree& __x, false_type)
1665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
1667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_move_data(__x, true_type());
1668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
1669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __lbd =
1672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    [&__an](const value_type& __cval)
1673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return __an(std::move_if_noexcept(__val));
1676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    };
1677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x, __lbd);
1678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     inline void
1684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_assign(_Rb_tree& __x, true_type)
1686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       clear();
1688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__x._M_root() != nullptr)
1689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_move_data(__x, true_type());
1690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       std::__alloc_on_move(_M_get_Node_allocator(),
1691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   __x._M_get_Node_allocator());
1692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
1697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 171


1698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_assign(_Rb_tree& __x, false_type)
1699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
1701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_move_assign(__x, true_type{});
1702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Try to move each node reusing existing nodes and copying __x nodes
1704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // structure.
1705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Reuse_or_alloc_node __roan(*this);
1706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_impl._M_reset();
1707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__x._M_root() != nullptr)
1708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __lbd =
1710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    [&__roan](const value_type& __cval)
1711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return __roan(std::move(__val));
1714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    };
1715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x, __lbd);
1716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x.clear();
1717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     inline _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     operator=(_Rb_tree&& __x)
1725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     noexcept(_Alloc_traits::_S_nothrow_move()
1726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	     && is_nothrow_move_assignable<_Compare>::value)
1727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_impl._M_key_compare = std::move(__x._M_impl._M_key_compare);
1729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_assign(__x, __bool_constant<_Alloc_traits::_S_nothrow_move()>());
1730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return *this;
1731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Iterator>
1736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_assign_unique(_Iterator __first, _Iterator __last)
1739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_impl._M_reset();
1742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	for (; __first != __last; ++__first)
1743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_insert_unique_(end(), *__first, __roan);
1744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Iterator>
1749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_assign_equal(_Iterator __first, _Iterator __last)
1752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_impl._M_reset();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 172


1755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	for (; __first != __last; ++__first)
1756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_insert_equal_(end(), *__first, __roan);
1757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     operator=(const _Rb_tree& __x)
1765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (this != &__x)
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  // Note that _Key may be a constant type.
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
1771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __this_alloc = this->_M_get_Node_allocator();
1773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __that_alloc = __x._M_get_Node_allocator();
1774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (!_Alloc_traits::_S_always_equal()
1775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  && __this_alloc != __that_alloc)
1776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
1777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  // Replacement allocator cannot free existing storage, we need
1778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  // to erase nodes first.
1779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  clear();
1780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  std::__alloc_on_copy(__this_alloc, __that_alloc);
1781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
1782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
1783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Reuse_or_alloc_node __roan(*this);
1786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_impl._M_reset();
1787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_impl._M_key_compare = __x._M_impl._M_key_compare;
1788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__x._M_root() != 0)
1789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_root() = _M_copy(__x, __roan);
1790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return *this;
1793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg, typename _NodeGen>
1799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _NodeGen>
1801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
1805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 _Arg&& __v,
1807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 const _Val& __v,
1809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 _NodeGen& __node_gen)
1811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 173


1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	bool __insert_left = (__x != 0 || __p == _M_end()
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
1814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							_S_key(__p)));
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
1817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      this->_M_impl._M_header);
1820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	++_M_impl._M_node_count;
1821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return iterator(__z);
1822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
1828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_lower(_Base_ptr __p, _Arg&& __v)
1833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_lower(_Base_ptr __p, const _Val& __v)
1835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       bool __insert_left = (__p == _M_end()
1838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			    || !_M_impl._M_key_compare(_S_key(__p),
1839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 						       _KeyOfValue()(__v)));
1840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __z = _M_create_node(_GLIBCXX_FORWARD(_Arg, __v));
1842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				    this->_M_impl._M_header);
1845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       ++_M_impl._M_node_count;
1846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return iterator(__z);
1847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
1853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal_lower(_Arg&& __v)
1858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal_lower(const _Val& __v)
1860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
1863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
1864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x;
1867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = !_M_impl._M_key_compare(_S_key(__x), _KeyOfValue()(__v)) ?
1868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_S_left(__x) : _S_right(__x);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 174


1869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _M_insert_lower(__y, _GLIBCXX_FORWARD(_Arg, __v));
1871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KoV,
1874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _NodeGen>
1876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::_Link_type
1877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
1878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen& __node_gen)
1879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// Structural copy. __x and __p must be non-null.
1881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type __top = _M_clone_node(__x, __node_gen);
1882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__top->_M_parent = __p;
1883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__try
1885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__x->_M_right)
1887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __top->_M_right = _M_copy(_S_right(__x), __top, __node_gen);
1888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __p = __top;
1889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __x = _S_left(__x);
1890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    while (__x != 0)
1892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_Link_type __y = _M_clone_node(__x, __node_gen);
1894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__p->_M_left = __y;
1895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__y->_M_parent = __p;
1896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		if (__x->_M_right)
1897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  __y->_M_right = _M_copy(_S_right(__x), __y, __node_gen);
1898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__p = __y;
1899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__x = _S_left(__x);
1900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__catch(...)
1903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_erase(__top);
1905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __throw_exception_again;
1906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __top;
1908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
1913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 2289              		.loc 29 1913 5 is_stmt 1 view -0
 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 0
 2292              		@ frame_needed = 0, uses_anonymous_args = 0
1914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_erase(_Link_type __x)
1915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Erase without rebalancing.
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
 2293              		.loc 29 1917 18 view .LVU495
 2294 0000 E8B1     		cbz	r0, .L106
1913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_erase(_Link_type __x)
 2295              		.loc 29 1913 5 is_stmt 0 view .LVU496
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 175


 2296 0002 38B5     		push	{r3, r4, r5, lr}
 2297              		.cfi_def_cfa_offset 16
 2298              		.cfi_offset 3, -16
 2299              		.cfi_offset 4, -12
 2300              		.cfi_offset 5, -8
 2301              		.cfi_offset 14, -4
 2302 0004 0446     		mov	r4, r0
 2303              	.LVL131:
 2304              	.L97:
 2305              	.LBB5360:
 2306              	.LBB5361:
 2307              	.LBI5361:
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 2308              		.loc 29 797 7 is_stmt 1 view .LVU497
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 2309              		.loc 29 797 7 is_stmt 0 view .LVU498
 2310 0006 2546     		mov	r5, r4
 2311              	.LBE5361:
1918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_erase(_S_right(__x));
 2312              		.loc 29 1919 12 view .LVU499
 2313 0008 E068     		ldr	r0, [r4, #12]
 2314 000a FFF7F9FF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 2315              	.LVL132:
 2316              	.LBB5362:
 2317              	.LBI5362:
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 2318              		.loc 29 789 7 is_stmt 1 view .LVU500
 2319              	.LBB5363:
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2320              		.loc 29 790 52 is_stmt 0 view .LVU501
 2321 000e A468     		ldr	r4, [r4, #8]
 2322              	.LVL133:
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2323              		.loc 29 790 52 view .LVU502
 2324              	.LBE5363:
 2325              	.LBE5362:
 2326              	.LBB5364:
 2327              	.LBI5364:
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 2328              		.loc 29 652 7 is_stmt 1 view .LVU503
 2329              	.LBB5365:
 2330              	.LBI5365:
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 2331              		.loc 29 641 7 view .LVU504
 2332              	.LBB5366:
 2333              	.LBI5366:
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 2334              		.loc 25 527 2 view .LVU505
 2335              	.LBB5367:
 2336              	.LBI5367:
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			  , __t * sizeof(_Tp)
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			 );
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 176


 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       size_type
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	destroy(_Up* __p)
 2337              		.loc 20 154 2 view .LVU506
 2338              	.LBB5368:
 2339              	.LBI5368:
 2340              		.file 30 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Pair implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 177


  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /** @file bits/stl_pair.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #ifndef _STL_PAIR_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #define _STL_PAIR_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <type_traits> // for std::__decay_and_strip, std::is_reference_v
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus > 201703L
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <compare>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # define __cpp_lib_constexpr_utility 201811L
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** {
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /**
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @addtogroup utilities
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @{
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag type for piecewise construction of std::pair objects.
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag for piecewise construction of std::pair objects.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     piecewise_construct_t();
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @cond undocumented
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Forward declarations.
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename...>
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     class tuple;
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<std::size_t...>
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _Index_tuple;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 178


  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // constructors.
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // is_convertible if the types are the same to
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // avoid querying those properties for incomplete types.
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <bool, typename _T1, typename _T2>
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _CopyMovePair()
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveCopyPair()
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 179


 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <typename _T1, typename _T2>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC<false, _T1, _T2>
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _U1, typename _U2> class __pair_base
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   {
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     template<typename _T1, typename _T2> friend struct pair;
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base() = default;
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     ~__pair_base() = default;
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base(const __pair_base&) = default;
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base& operator=(const __pair_base&) = delete;
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @endcond
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  /**
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T1  Type of first object.
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T2  Type of second object.
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 180


 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct pair
 2341              		.loc 30 211 12 view .LVU507
 2342              	.LBB5369:
 2343              	.LBI5369:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2344              		.loc 26 678 7 view .LVU508
 2345              	.LBB5370:
 2346              	.LBI5370:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2347              		.loc 26 276 7 view .LVU509
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2348              		.loc 26 276 7 is_stmt 0 view .LVU510
 2349              	.LBE5370:
 2350              	.LBB5371:
 2351              	.LBI5371:
 2352              		.loc 25 735 5 is_stmt 1 view .LVU511
 2353              		.loc 25 735 5 is_stmt 0 view .LVU512
 2354              	.LBE5371:
 2355              	.LBB5372:
 2356              	.LBI5372:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2357              		.loc 26 333 7 is_stmt 1 view .LVU513
 2358              	.LBB5373:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2359              		.loc 26 335 15 is_stmt 0 view .LVU514
 2360 0010 AB6A     		ldr	r3, [r5, #40]
 2361              	.LVL134:
 2362              	.LBB5374:
 2363              	.LBI5374:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2364              		.loc 26 350 7 is_stmt 1 view .LVU515
 2365              	.LBB5375:
 2366              	.LBB5376:
 2367              	.LBI5376:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2368              		.loc 25 491 7 view .LVU516
 2369              	.LBB5377:
 2370              	.LBB5378:
 2371              	.LBI5378:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2372              		.loc 20 120 7 view .LVU517
 2373              	.LBB5379:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2374              		.loc 20 133 19 is_stmt 0 view .LVU518
 2375 0012 1846     		mov	r0, r3
 2376              	.LBE5379:
 2377              	.LBE5378:
 2378              	.LBE5377:
 2379              	.LBE5376:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2380              		.loc 26 353 2 view .LVU519
 2381 0014 1BB1     		cbz	r3, .L95
 2382              	.LBE5375:
 2383              	.LBE5374:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2384              		.loc 26 336 35 view .LVU520
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 181


 2385 0016 296B     		ldr	r1, [r5, #48]
 2386              	.LBB5385:
 2387              	.LBB5384:
 2388              	.LBB5383:
 2389              	.LBB5382:
 2390              	.LBB5381:
 2391              	.LBB5380:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2392              		.loc 20 133 19 view .LVU521
 2393 0018 C91A     		subs	r1, r1, r3
 2394 001a FFF7FEFF 		bl	_ZdlPvj
 2395              	.LVL135:
 2396              	.L95:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2397              		.loc 20 133 19 view .LVU522
 2398              	.LBE5380:
 2399              	.LBE5381:
 2400              	.LBE5382:
 2401              	.LBE5383:
 2402              	.LBE5384:
 2403              	.LBE5385:
 2404              	.LBB5386:
 2405              	.LBI5386:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2406              		.loc 26 128 14 is_stmt 1 view .LVU523
 2407              	.LBB5387:
 2408              	.LBI5387:
 2409              		.loc 19 162 7 view .LVU524
 2410              	.LBB5388:
 2411              	.LBI5388:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2412              		.loc 20 89 7 view .LVU525
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2413              		.loc 20 89 7 is_stmt 0 view .LVU526
 2414              	.LBE5388:
 2415              	.LBE5387:
 2416              	.LBE5386:
 2417              	.LBE5373:
 2418              	.LBE5372:
 2419              	.LBE5369:
 2420              	.LBB5389:
 2421              	.LBI5389:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2422              		.loc 18 657 7 is_stmt 1 view .LVU527
 2423              	.LBB5390:
 2424              	.LBI5390:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2425              		.loc 18 229 7 view .LVU528
 2426              	.LBB5391:
 2427              	.LBB5392:
 2428              	.LBI5392:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2429              		.loc 18 221 7 view .LVU529
 2430              	.LBB5393:
 2431              	.LBI5393:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2432              		.loc 18 186 7 view .LVU530
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 182


 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2433              		.loc 18 186 7 is_stmt 0 view .LVU531
 2434              	.LBE5393:
 2435              	.LBE5392:
 2436              	.LBB5399:
 2437              	.LBI5399:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2438              		.loc 18 236 7 is_stmt 1 view .LVU532
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2439              		.loc 18 236 7 is_stmt 0 view .LVU533
 2440              	.LBE5399:
 2441              	.LBB5407:
 2442              	.LBB5395:
 2443              	.LBB5394:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2444              		.loc 18 187 28 view .LVU534
 2445 001e 2869     		ldr	r0, [r5, #16]
 2446              	.LVL136:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2447              		.loc 18 187 28 view .LVU535
 2448              	.LBE5394:
 2449              	.LBE5395:
 2450              	.LBB5396:
 2451              	.LBI5396:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2452              		.loc 18 200 7 is_stmt 1 view .LVU536
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2453              		.loc 18 200 7 is_stmt 0 view .LVU537
 2454              	.LBE5396:
 2455              	.LBE5407:
 2456              	.LBB5408:
 2457              	.LBB5400:
 2458              	.LBB5401:
 2459              	.LBI5401:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2460              		.loc 25 491 7 is_stmt 1 view .LVU538
 2461              	.LBB5402:
 2462              	.LBI5402:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2463              		.loc 20 120 7 view .LVU539
 2464              	.LBE5402:
 2465              	.LBE5401:
 2466              	.LBE5400:
 2467              	.LBE5408:
 2468              	.LBB5409:
 2469              	.LBB5398:
 2470              	.LBB5397:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2471              		.loc 18 203 57 is_stmt 0 view .LVU540
 2472 0020 05F11803 		add	r3, r5, #24
 2473              	.LVL137:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2474              		.loc 18 203 57 view .LVU541
 2475              	.LBE5397:
 2476              	.LBE5398:
 2477              	.LBE5409:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 183


 2478              		.loc 18 231 2 view .LVU542
 2479 0024 9842     		cmp	r0, r3
 2480 0026 03D0     		beq	.L96
 2481              	.LBB5410:
 2482              	.LBB5406:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2483              		.loc 18 237 34 view .LVU543
 2484 0028 A969     		ldr	r1, [r5, #24]
 2485              	.LBB5405:
 2486              	.LBB5404:
 2487              	.LBB5403:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2488              		.loc 20 133 19 view .LVU544
 2489 002a 0131     		adds	r1, r1, #1
 2490              	.LVL138:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2491              		.loc 20 133 19 view .LVU545
 2492 002c FFF7FEFF 		bl	_ZdlPvj
 2493              	.LVL139:
 2494              	.L96:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2495              		.loc 20 133 19 view .LVU546
 2496              	.LBE5403:
 2497              	.LBE5404:
 2498              	.LBE5405:
 2499              	.LBE5406:
 2500              	.LBE5410:
 2501              	.LBE5391:
 2502              	.LBE5390:
 2503              	.LBB5411:
 2504              	.LBI5411:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2505              		.loc 18 150 14 is_stmt 1 view .LVU547
 2506              	.LBB5412:
 2507              	.LBI5412:
 2508              		.loc 19 162 7 view .LVU548
 2509              	.LBB5413:
 2510              	.LBI5413:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2511              		.loc 20 89 7 view .LVU549
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2512              		.loc 20 89 7 is_stmt 0 view .LVU550
 2513              	.LBE5413:
 2514              	.LBE5412:
 2515              	.LBE5411:
 2516              	.LBE5389:
 2517              	.LBE5368:
 2518              	.LBE5367:
 2519              	.LBE5366:
 2520              	.LBE5365:
 2521              	.LBB5414:
 2522              	.LBI5414:
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 2523              		.loc 29 587 7 is_stmt 1 view .LVU551
 2524              	.LBB5415:
 2525              	.LBI5415:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 184


 2526              		.loc 25 491 7 view .LVU552
 2527              	.LBB5416:
 2528              	.LBI5416:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2529              		.loc 20 120 7 view .LVU553
 2530              	.LBB5417:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2531              		.loc 20 133 19 is_stmt 0 view .LVU554
 2532 0030 3421     		movs	r1, #52
 2533 0032 2846     		mov	r0, r5
 2534 0034 FFF7FEFF 		bl	_ZdlPvj
 2535              	.LVL140:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2536              		.loc 20 133 19 view .LVU555
 2537              	.LBE5417:
 2538              	.LBE5416:
 2539              	.LBE5415:
 2540              	.LBE5414:
 2541              	.LBE5364:
 2542              	.LBE5360:
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 2543              		.loc 29 1917 18 is_stmt 1 view .LVU556
 2544 0038 002C     		cmp	r4, #0
 2545 003a E4D1     		bne	.L97
1920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __y = _S_left(__x);
1921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_drop_node(__x);
1922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = __y;
1923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 2546              		.loc 29 1924 5 is_stmt 0 view .LVU557
 2547 003c 38BD     		pop	{r3, r4, r5, pc}
 2548              	.LVL141:
 2549              	.L106:
 2550              		.cfi_def_cfa_offset 0
 2551              		.cfi_restore 3
 2552              		.cfi_restore 4
 2553              		.cfi_restore 5
 2554              		.cfi_restore 14
 2555              		.loc 29 1924 5 view .LVU558
 2556 003e 7047     		bx	lr
 2557              		.cfi_endproc
 2558              	.LFE6213:
 2560              		.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4l
 2561              		.align	1
 2562              		.p2align 2,,3
 2563              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 2564              		.syntax unified
 2565              		.thumb
 2566              		.thumb_func
 2567              		.fpu fpv5-d16
 2569              	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pa
 2570              	.LVL142:
 2571              	.LFB6187:
 2572              		.file 31 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Map implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 185


   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** /** @file bits/stl_map.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *  Do not attempt to use it directly. @headername{map}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #ifndef _STL_MAP_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #define _STL_MAP_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <bits/functexcept.h>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <bits/concept_check.h>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 186


  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus >= 201103L
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <initializer_list>
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <tuple>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** {
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     class multimap;
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   /**
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @brief A standard container made up of (key,value) pairs, which can be
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  retrieved based on a key, in logarithmic time.
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @ingroup associative_containers
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam _Key  Type of key objects.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam  _Tp  Type of mapped objects.
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam _Compare  Comparison function object type, defaults to less<_Key>.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam _Alloc  Allocator type, defaults to
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *                  allocator<pair<const _Key, _Tp>.
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  <a href="tables.html#66">reversible container</a>, and an
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  <a href="tables.html#69">associative container</a> (using unique keys).
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  For a @c map<Key,T> the key_type is Key, the mapped_type is T, and the
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  value_type is std::pair<const Key,T>.
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  Maps support bidirectional iterators.
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  The private tree data is declared exactly the same way for map and
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  multimap; the distinction is made entirely in how the tree functions are
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  called (*_unique versus *_equal, same as the standard).
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   */
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   template <typename _Key, typename _Tp, typename _Compare = std::less<_Key>,
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     class map
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     {
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     public:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Key					key_type;
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Tp					mapped_type;
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef std::pair<const _Key, _Tp>		value_type;
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Compare					key_compare;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Alloc					allocator_type;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     private:
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // concept requirements
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** # if __cplusplus < 201103L
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** # endif
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       __glibcxx_class_requires4(_Compare, bool, _Key, _Key,
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 				_BinaryFunctionConcept)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 187


 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       __glibcxx_class_requires2(value_type, _Alloc_value_type, _SameTypeConcept)
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus >= 201103L
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus > 201703L || defined __STRICT_ANSI__
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       static_assert(is_same<typename _Alloc::value_type, value_type>::value,
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  "std::map must have the same value_type as its allocator");
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     public:
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       class value_compare
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : public std::binary_function<value_type, value_type, bool>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       {
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	friend class map<_Key, _Tp, _Compare, _Alloc>;
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       protected:
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	_Compare comp;
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	value_compare(_Compare __c)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: comp(__c) { }
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       public:
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	bool operator()(const value_type& __x, const value_type& __y) const
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ return comp(__x.first, __y.first); }
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       };
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     private:
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// This turns a red-black tree into a [multi]map.
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	rebind<value_type>::other _Pair_alloc_type;
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Rb_tree<key_type, value_type, _Select1st<value_type>,
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 		       key_compare, _Pair_alloc_type> _Rep_type;
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// The actual tree structure.
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       _Rep_type _M_t;
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef __gnu_cxx::__alloc_traits<_Pair_alloc_type> _Alloc_traits;
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     public:
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // many of these are specified differently in ISO, but the following are
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // "functionally equivalent"
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::pointer		 pointer;
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::const_pointer	 const_pointer;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::reference		 reference;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::const_reference	 const_reference;
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::iterator		 iterator;
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::const_iterator	 const_iterator;
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::size_type		 size_type;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::difference_type	 difference_type;
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::reverse_iterator	 reverse_iterator;
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus > 201402L
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       using node_type = typename _Rep_type::node_type;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       using insert_return_type = typename _Rep_type::insert_return_type;
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 188


 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // [23.3.1.1] construct/copy/destroy
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // (get_allocator() is also listed in this section)
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Default constructor creates no elements.
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus < 201103L
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map() : _M_t() { }
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #else
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map() = default;
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Creates a %map with no elements.
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __comp  A comparison object.
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __a  An allocator object.
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       explicit
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const _Compare& __comp,
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const allocator_type& __a = allocator_type())
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a)) { }
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  %Map copy constructor.
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Whether the allocator is copied depends on the allocator traits.
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus < 201103L
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const map& __x)
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__x._M_t) { }
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #else
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const map&) = default;
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  %Map move constructor.
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  The newly-created %map contains the exact contents of the moved
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  instance. The moved instance is a valid, but unspecified, %map.
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(map&&) = default;
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Builds a %map from an initializer_list.
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __l  An initializer_list.
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __comp  A comparison object.
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __a  An allocator object.
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Create a %map consisting of copies of the elements in the
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  initializer_list @a __l.
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  This is linear in N if the range is already sorted, and NlogN
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  otherwise (where N is @a __l.size()).
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(initializer_list<value_type> __l,
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const _Compare& __comp = _Compare(),
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const allocator_type& __a = allocator_type())
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 189


 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended default constructor.
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       explicit
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const allocator_type& __a)
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(_Pair_alloc_type(__a)) { }
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended copy constructor.
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const map& __m, const allocator_type& __a)
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__m._M_t, _Pair_alloc_type(__a)) { }
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended move constructor.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(map&& __m, const allocator_type& __a)
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       noexcept(is_nothrow_copy_constructible<_Compare>::value
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	       && _Alloc_traits::_S_always_equal())
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(std::move(__m._M_t), _Pair_alloc_type(__a)) { }
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended initialier-list constructor.
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(initializer_list<value_type> __l, const allocator_type& __a)
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(_Pair_alloc_type(__a))
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended range constructor.
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       template<typename _InputIterator>
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	map(_InputIterator __first, _InputIterator __last,
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    const allocator_type& __a)
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: _M_t(_Pair_alloc_type(__a))
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Builds a %map from a range.
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __first  An input iterator.
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __last  An input iterator.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Create a %map consisting of copies of the elements from
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  distance(__first,__last)).
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       template<typename _InputIterator>
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	map(_InputIterator __first, _InputIterator __last)
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: _M_t()
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Builds a %map from a range.
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __first  An input iterator.
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __last  An input iterator.
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __comp  A comparison functor.
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __a  An allocator object.
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Create a %map consisting of copies of the elements from
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  distance(__first,__last)).
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 190


 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       template<typename _InputIterator>
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	map(_InputIterator __first, _InputIterator __last,
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    const _Compare& __comp,
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    const allocator_type& __a = allocator_type())
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: _M_t(__comp, _Pair_alloc_type(__a))
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus >= 201103L
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  The dtor only erases the elements, and note that if the elements
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  themselves are pointers, the pointed-to memory is not touched in any
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  way.  Managing the pointer is the user's responsibility.
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       ~map() = default;
 2573              		.loc 31 302 7 is_stmt 1 view -0
 2574              		.cfi_startproc
 2575              		@ args = 0, pretend = 0, frame = 0
 2576              		@ frame_needed = 0, uses_anonymous_args = 0
 2577              		.loc 31 302 7 is_stmt 0 view .LVU560
 2578 0000 10B5     		push	{r4, lr}
 2579              		.cfi_def_cfa_offset 8
 2580              		.cfi_offset 4, -8
 2581              		.cfi_offset 14, -4
 2582              		.loc 31 302 7 view .LVU561
 2583 0002 0446     		mov	r4, r0
 2584              	.LVL143:
 2585              	.LBB5418:
 2586              	.LBI5418:
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase(_M_begin()); }
 2587              		.loc 29 990 7 is_stmt 1 view .LVU562
 2588              	.LBB5419:
 2589              	.LBB5420:
 2590              	.LBI5420:
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 2591              		.loc 29 748 7 view .LVU563
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 2592              		.loc 29 748 7 is_stmt 0 view .LVU564
 2593              	.LBE5420:
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2594              		.loc 29 991 17 view .LVU565
 2595 0004 8068     		ldr	r0, [r0, #8]
 2596              	.LVL144:
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2597              		.loc 29 991 17 view .LVU566
 2598 0006 FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 2599              	.LVL145:
 2600              	.LBB5421:
 2601              	.LBI5421:
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: public _Node_allocator
 2602              		.loc 29 677 9 is_stmt 1 view .LVU567
 2603              	.LBB5422:
 2604              	.LBI5422:
 2605              		.loc 19 162 7 view .LVU568
 2606              	.LBB5423:
 2607              	.LBI5423:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2608              		.loc 20 89 7 view .LVU569
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 191


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2609              		.loc 20 89 7 is_stmt 0 view .LVU570
 2610              	.LBE5423:
 2611              	.LBE5422:
 2612              	.LBE5421:
 2613              	.LBE5419:
 2614              	.LBE5418:
 2615              		.loc 31 302 7 view .LVU571
 2616 000a 2046     		mov	r0, r4
 2617 000c 10BD     		pop	{r4, pc}
 2618              		.loc 31 302 7 view .LVU572
 2619              		.cfi_endproc
 2620              	.LFE6187:
 2622              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 2623              		.thumb_set _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessI
 2624 000e 00BF     		.section	.text._Z9cbPatternv,"ax",%progbits
 2625              		.align	1
 2626              		.p2align 2,,3
 2627              		.global	_Z9cbPatternv
 2628              		.syntax unified
 2629              		.thumb
 2630              		.thumb_func
 2631              		.fpu fpv5-d16
 2633              	_Z9cbPatternv:
 2634              	.LFB5112:
  98:Jellybeans.cpp **** };
  99:Jellybeans.cpp **** 
 100:Jellybeans.cpp **** void cbPattern(){
 2635              		.loc 17 100 17 is_stmt 1 view -0
 2636              		.cfi_startproc
 2637              		@ args = 0, pretend = 0, frame = 24
 2638              		@ frame_needed = 0, uses_anonymous_args = 0
 101:Jellybeans.cpp ****     myArp->setPattern(mPattern->value());
 2639              		.loc 17 101 5 view .LVU574
 100:Jellybeans.cpp ****     myArp->setPattern(mPattern->value());
 2640              		.loc 17 100 17 is_stmt 0 view .LVU575
 2641 0000 30B5     		push	{r4, r5, lr}
 2642              		.cfi_def_cfa_offset 12
 2643              		.cfi_offset 4, -12
 2644              		.cfi_offset 5, -8
 2645              		.cfi_offset 14, -4
 2646              		.loc 17 101 22 view .LVU576
 2647 0002 0D4C     		ldr	r4, .L114
 100:Jellybeans.cpp ****     myArp->setPattern(mPattern->value());
 2648              		.loc 17 100 17 view .LVU577
 2649 0004 87B0     		sub	sp, sp, #28
 2650              		.cfi_def_cfa_offset 40
 2651              		.loc 17 101 39 view .LVU578
 2652 0006 0D4B     		ldr	r3, .L114+4
 2653              		.loc 17 101 22 view .LVU579
 2654 0008 2568     		ldr	r5, [r4]
 2655              		.loc 17 101 39 view .LVU580
 2656 000a 6846     		mov	r0, sp
 2657 000c 1968     		ldr	r1, [r3]
 2658 000e FFF7FEFF 		bl	_ZN10jellybeans8MenuItem5valueB5cxx11Ev
 2659              	.LVL146:
 2660              		.loc 17 101 22 view .LVU581
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 192


 2661 0012 2846     		mov	r0, r5
 2662 0014 6946     		mov	r1, sp
 2663 0016 FFF7FEFF 		bl	_ZN10jellybeans3Arp10setPatternENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 2664              	.LVL147:
 2665              	.LBB5441:
 2666              	.LBI5441:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2667              		.loc 18 657 7 is_stmt 1 view .LVU582
 2668              	.LBB5442:
 2669              	.LBB5443:
 2670              	.LBI5443:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2671              		.loc 18 229 7 view .LVU583
 2672              	.LBB5444:
 2673              	.LBB5445:
 2674              	.LBI5445:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2675              		.loc 18 221 7 view .LVU584
 2676              	.LBB5446:
 2677              	.LBI5446:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2678              		.loc 18 186 7 view .LVU585
 2679              	.LBB5447:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2680              		.loc 18 187 28 is_stmt 0 view .LVU586
 2681 001a 0098     		ldr	r0, [sp]
 2682              	.LVL148:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2683              		.loc 18 187 28 view .LVU587
 2684              	.LBE5447:
 2685              	.LBE5446:
 2686              	.LBB5448:
 2687              	.LBI5448:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2688              		.loc 18 200 7 is_stmt 1 view .LVU588
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2689              		.loc 18 200 7 is_stmt 0 view .LVU589
 2690              	.LBE5448:
 2691              	.LBE5445:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2692              		.loc 18 231 2 view .LVU590
 2693 001c 02AB     		add	r3, sp, #8
 2694 001e 9842     		cmp	r0, r3
 2695 0020 03D0     		beq	.L112
 2696              	.LVL149:
 2697              	.LBB5449:
 2698              	.LBI5449:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2699              		.loc 18 236 7 is_stmt 1 view .LVU591
 2700              	.LBB5450:
 2701              	.LBB5451:
 2702              	.LBI5451:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2703              		.loc 25 491 7 view .LVU592
 2704              	.LBB5452:
 2705              	.LBI5452:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 193


 2706              		.loc 20 120 7 view .LVU593
 2707              	.LBE5452:
 2708              	.LBE5451:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2709              		.loc 18 237 34 is_stmt 0 view .LVU594
 2710 0022 0299     		ldr	r1, [sp, #8]
 2711              	.LBB5455:
 2712              	.LBB5454:
 2713              	.LBB5453:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2714              		.loc 20 133 19 view .LVU595
 2715 0024 0131     		adds	r1, r1, #1
 2716              	.LVL150:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2717              		.loc 20 133 19 view .LVU596
 2718 0026 FFF7FEFF 		bl	_ZdlPvj
 2719              	.LVL151:
 2720              	.L112:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2721              		.loc 20 133 19 view .LVU597
 2722              	.LBE5453:
 2723              	.LBE5454:
 2724              	.LBE5455:
 2725              	.LBE5450:
 2726              	.LBE5449:
 2727              	.LBE5444:
 2728              	.LBE5443:
 2729              	.LBB5456:
 2730              	.LBI5456:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2731              		.loc 18 150 14 is_stmt 1 view .LVU598
 2732              	.LBB5457:
 2733              	.LBI5457:
 2734              		.loc 19 162 7 view .LVU599
 2735              	.LBB5458:
 2736              	.LBI5458:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2737              		.loc 20 89 7 view .LVU600
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2738              		.loc 20 89 7 is_stmt 0 view .LVU601
 2739              	.LBE5458:
 2740              	.LBE5457:
 2741              	.LBE5456:
 2742              	.LBE5442:
 2743              	.LBE5441:
 102:Jellybeans.cpp ****     myArp->updateTraversal();
 2744              		.loc 17 102 5 is_stmt 1 view .LVU602
 2745              		.loc 17 102 27 is_stmt 0 view .LVU603
 2746 002a 2068     		ldr	r0, [r4]
 103:Jellybeans.cpp **** };
 2747              		.loc 17 103 1 view .LVU604
 2748 002c 07B0     		add	sp, sp, #28
 2749              		.cfi_def_cfa_offset 12
 2750              		@ sp needed
 2751 002e BDE83040 		pop	{r4, r5, lr}
 2752              		.cfi_restore 14
 2753              		.cfi_restore 5
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 194


 2754              		.cfi_restore 4
 2755              		.cfi_def_cfa_offset 0
 102:Jellybeans.cpp ****     myArp->updateTraversal();
 2756              		.loc 17 102 27 view .LVU605
 2757 0032 FFF7FEBF 		b	_ZN10jellybeans3Arp15updateTraversalEv
 2758              	.LVL152:
 2759              	.L115:
 2760 0036 00BF     		.align	2
 2761              	.L114:
 2762 0038 00000000 		.word	.LANCHOR0
 2763 003c 00000000 		.word	.LANCHOR1
 2764              		.cfi_endproc
 2765              	.LFE5112:
 2767              		.section	.text._Z9cbVoicingv,"ax",%progbits
 2768              		.align	1
 2769              		.p2align 2,,3
 2770              		.global	_Z9cbVoicingv
 2771              		.syntax unified
 2772              		.thumb
 2773              		.thumb_func
 2774              		.fpu fpv5-d16
 2776              	_Z9cbVoicingv:
 2777              	.LFB5113:
 104:Jellybeans.cpp **** 
 105:Jellybeans.cpp **** void cbVoicing(){
 2778              		.loc 17 105 17 is_stmt 1 view -0
 2779              		.cfi_startproc
 2780              		@ args = 0, pretend = 0, frame = 24
 2781              		@ frame_needed = 0, uses_anonymous_args = 0
 106:Jellybeans.cpp ****     myArp->getChord()->setVoicing(mVoicing->value());
 2782              		.loc 17 106 5 view .LVU607
 105:Jellybeans.cpp ****     myArp->getChord()->setVoicing(mVoicing->value());
 2783              		.loc 17 105 17 is_stmt 0 view .LVU608
 2784 0000 30B5     		push	{r4, r5, lr}
 2785              		.cfi_def_cfa_offset 12
 2786              		.cfi_offset 4, -12
 2787              		.cfi_offset 5, -8
 2788              		.cfi_offset 14, -4
 2789              		.loc 17 106 34 view .LVU609
 2790 0002 0E4D     		ldr	r5, .L119
 105:Jellybeans.cpp ****     myArp->getChord()->setVoicing(mVoicing->value());
 2791              		.loc 17 105 17 view .LVU610
 2792 0004 87B0     		sub	sp, sp, #28
 2793              		.cfi_def_cfa_offset 40
 2794              		.loc 17 106 34 view .LVU611
 2795 0006 2868     		ldr	r0, [r5]
 2796 0008 FFF7FEFF 		bl	_ZN10jellybeans3Arp8getChordEv
 2797              	.LVL153:
 2798              		.loc 17 106 51 view .LVU612
 2799 000c 0C4B     		ldr	r3, .L119+4
 2800              		.loc 17 106 34 view .LVU613
 2801 000e 0446     		mov	r4, r0
 2802              		.loc 17 106 51 view .LVU614
 2803 0010 6846     		mov	r0, sp
 2804 0012 1968     		ldr	r1, [r3]
 2805 0014 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem5valueB5cxx11Ev
 2806              	.LVL154:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 195


 2807              		.loc 17 106 34 view .LVU615
 2808 0018 2046     		mov	r0, r4
 2809 001a 6946     		mov	r1, sp
 2810 001c FFF7FEFF 		bl	_ZN10jellybeans13DiatonicChord10setVoicingENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 2811              	.LVL155:
 2812              	.LBB5476:
 2813              	.LBI5476:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2814              		.loc 18 657 7 is_stmt 1 view .LVU616
 2815              	.LBB5477:
 2816              	.LBB5478:
 2817              	.LBI5478:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2818              		.loc 18 229 7 view .LVU617
 2819              	.LBB5479:
 2820              	.LBB5480:
 2821              	.LBI5480:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2822              		.loc 18 221 7 view .LVU618
 2823              	.LBB5481:
 2824              	.LBI5481:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2825              		.loc 18 186 7 view .LVU619
 2826              	.LBB5482:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2827              		.loc 18 187 28 is_stmt 0 view .LVU620
 2828 0020 0098     		ldr	r0, [sp]
 2829              	.LVL156:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2830              		.loc 18 187 28 view .LVU621
 2831              	.LBE5482:
 2832              	.LBE5481:
 2833              	.LBB5483:
 2834              	.LBI5483:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2835              		.loc 18 200 7 is_stmt 1 view .LVU622
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2836              		.loc 18 200 7 is_stmt 0 view .LVU623
 2837              	.LBE5483:
 2838              	.LBE5480:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2839              		.loc 18 231 2 view .LVU624
 2840 0022 02AB     		add	r3, sp, #8
 2841 0024 9842     		cmp	r0, r3
 2842 0026 03D0     		beq	.L117
 2843              	.LVL157:
 2844              	.LBB5484:
 2845              	.LBI5484:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2846              		.loc 18 236 7 is_stmt 1 view .LVU625
 2847              	.LBB5485:
 2848              	.LBB5486:
 2849              	.LBI5486:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2850              		.loc 25 491 7 view .LVU626
 2851              	.LBB5487:
 2852              	.LBI5487:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 196


 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2853              		.loc 20 120 7 view .LVU627
 2854              	.LBE5487:
 2855              	.LBE5486:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2856              		.loc 18 237 34 is_stmt 0 view .LVU628
 2857 0028 0299     		ldr	r1, [sp, #8]
 2858              	.LBB5490:
 2859              	.LBB5489:
 2860              	.LBB5488:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2861              		.loc 20 133 19 view .LVU629
 2862 002a 0131     		adds	r1, r1, #1
 2863              	.LVL158:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2864              		.loc 20 133 19 view .LVU630
 2865 002c FFF7FEFF 		bl	_ZdlPvj
 2866              	.LVL159:
 2867              	.L117:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2868              		.loc 20 133 19 view .LVU631
 2869              	.LBE5488:
 2870              	.LBE5489:
 2871              	.LBE5490:
 2872              	.LBE5485:
 2873              	.LBE5484:
 2874              	.LBE5479:
 2875              	.LBE5478:
 2876              	.LBB5491:
 2877              	.LBI5491:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2878              		.loc 18 150 14 is_stmt 1 view .LVU632
 2879              	.LBB5492:
 2880              	.LBI5492:
 2881              		.loc 19 162 7 view .LVU633
 2882              	.LBB5493:
 2883              	.LBI5493:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2884              		.loc 20 89 7 view .LVU634
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2885              		.loc 20 89 7 is_stmt 0 view .LVU635
 2886              	.LBE5493:
 2887              	.LBE5492:
 2888              	.LBE5491:
 2889              	.LBE5477:
 2890              	.LBE5476:
 107:Jellybeans.cpp ****     myArp->updateTraversal();
 2891              		.loc 17 107 5 is_stmt 1 view .LVU636
 2892              		.loc 17 107 27 is_stmt 0 view .LVU637
 2893 0030 2868     		ldr	r0, [r5]
 108:Jellybeans.cpp **** };
 2894              		.loc 17 108 1 view .LVU638
 2895 0032 07B0     		add	sp, sp, #28
 2896              		.cfi_def_cfa_offset 12
 2897              		@ sp needed
 2898 0034 BDE83040 		pop	{r4, r5, lr}
 2899              		.cfi_restore 14
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 197


 2900              		.cfi_restore 5
 2901              		.cfi_restore 4
 2902              		.cfi_def_cfa_offset 0
 107:Jellybeans.cpp ****     myArp->updateTraversal();
 2903              		.loc 17 107 27 view .LVU639
 2904 0038 FFF7FEBF 		b	_ZN10jellybeans3Arp15updateTraversalEv
 2905              	.LVL160:
 2906              	.L120:
 2907              		.align	2
 2908              	.L119:
 2909 003c 00000000 		.word	.LANCHOR0
 2910 0040 00000000 		.word	.LANCHOR2
 2911              		.cfi_endproc
 2912              	.LFE5113:
 2914              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 2915              		.align	1
 2916              		.p2align 2,,3
 2917              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 2918              		.syntax unified
 2919              		.thumb
 2920              		.thumb_func
 2921              		.fpu fpv5-d16
 2923              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 2924              	.LVL161:
 2925              	.LFB5759:
 220:../../libdaisy/src/hid/disp/display.h **** 
 221:../../libdaisy/src/hid/disp/display.h ****     void DrawLine(uint_fast8_t x1,
 222:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 223:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t x2,
 224:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y2,
 225:../../libdaisy/src/hid/disp/display.h ****                   bool         on) override
 226:../../libdaisy/src/hid/disp/display.h ****     {
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaX = abs((int_fast16_t)x2 - (int_fast16_t)x1);
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 232:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 233:../../libdaisy/src/hid/disp/display.h **** 
 234:../../libdaisy/src/hid/disp/display.h ****         // If we write "ChildType::DrawPixel(x2, y2, on);", we end up with
 235:../../libdaisy/src/hid/disp/display.h ****         // all sorts of weird compiler errors when the Child class is a template
 236:../../libdaisy/src/hid/disp/display.h ****         // class. The only way around this is to use this very verbose syntax:
 237:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::DrawPixel(x2, y2, on);
 238:../../libdaisy/src/hid/disp/display.h **** 
 239:../../libdaisy/src/hid/disp/display.h ****         while((x1 != x2) || (y1 != y2))
 240:../../libdaisy/src/hid/disp/display.h ****         {
 241:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawPixel(x1, y1, on);
 242:../../libdaisy/src/hid/disp/display.h ****             error2 = error * 2;
 243:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 244:../../libdaisy/src/hid/disp/display.h ****             {
 245:../../libdaisy/src/hid/disp/display.h ****                 error -= deltaY;
 246:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 247:../../libdaisy/src/hid/disp/display.h ****             }
 248:../../libdaisy/src/hid/disp/display.h **** 
 249:../../libdaisy/src/hid/disp/display.h ****             if(error2 < deltaX)
 250:../../libdaisy/src/hid/disp/display.h ****             {
 251:../../libdaisy/src/hid/disp/display.h ****                 error += deltaX;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 198


 252:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 253:../../libdaisy/src/hid/disp/display.h ****             }
 254:../../libdaisy/src/hid/disp/display.h ****         }
 255:../../libdaisy/src/hid/disp/display.h ****     }
 256:../../libdaisy/src/hid/disp/display.h **** 
 257:../../libdaisy/src/hid/disp/display.h ****     void DrawRect(uint_fast8_t x1,
 258:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 259:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t x2,
 260:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y2,
 261:../../libdaisy/src/hid/disp/display.h ****                   bool         on,
 262:../../libdaisy/src/hid/disp/display.h ****                   bool         fill = false) override
 263:../../libdaisy/src/hid/disp/display.h ****     {
 264:../../libdaisy/src/hid/disp/display.h ****         if(fill)
 265:../../libdaisy/src/hid/disp/display.h ****         {
 266:../../libdaisy/src/hid/disp/display.h ****             for(uint_fast8_t x = x1; x <= x2; x++)
 267:../../libdaisy/src/hid/disp/display.h ****             {
 268:../../libdaisy/src/hid/disp/display.h ****                 for(uint_fast8_t y = y1; y <= y2; y++)
 269:../../libdaisy/src/hid/disp/display.h ****                 {
 270:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))->ChildType::DrawPixel(x, y, on);
 271:../../libdaisy/src/hid/disp/display.h ****                 }
 272:../../libdaisy/src/hid/disp/display.h ****             }
 273:../../libdaisy/src/hid/disp/display.h ****         }
 274:../../libdaisy/src/hid/disp/display.h ****         else
 275:../../libdaisy/src/hid/disp/display.h ****         {
 276:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x1, y1, x2, y1, on);
 277:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x2, y1, x2, y2, on);
 278:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x2, y2, x1, y2, on);
 279:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x1, y2, x1, y1, on);
 280:../../libdaisy/src/hid/disp/display.h ****         }
 281:../../libdaisy/src/hid/disp/display.h ****     }
 282:../../libdaisy/src/hid/disp/display.h **** 
 283:../../libdaisy/src/hid/disp/display.h ****     void DrawArc(uint_fast8_t x,
 284:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 285:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t radius,
 286:../../libdaisy/src/hid/disp/display.h ****                  int_fast16_t start_angle,
 287:../../libdaisy/src/hid/disp/display.h ****                  int_fast16_t sweep,
 288:../../libdaisy/src/hid/disp/display.h ****                  bool         on) override
 289:../../libdaisy/src/hid/disp/display.h ****     {
 290:../../libdaisy/src/hid/disp/display.h ****         // Values to calculate the circle
 291:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t t_x, t_y, err, e2;
 292:../../libdaisy/src/hid/disp/display.h **** 
 293:../../libdaisy/src/hid/disp/display.h ****         // Temporary values to speed up comparisons
 294:../../libdaisy/src/hid/disp/display.h ****         float t_sxy, t_syx, t_sxny, t_synx;
 295:../../libdaisy/src/hid/disp/display.h ****         float t_exy, t_eyx, t_exny, t_eynx;
 296:../../libdaisy/src/hid/disp/display.h **** 
 297:../../libdaisy/src/hid/disp/display.h ****         float start_angle_rad, end_angle_rad;
 298:../../libdaisy/src/hid/disp/display.h ****         float start_x, start_y, end_x, end_y;
 299:../../libdaisy/src/hid/disp/display.h **** 
 300:../../libdaisy/src/hid/disp/display.h ****         bool d1, d2, d3, d4;
 301:../../libdaisy/src/hid/disp/display.h **** 
 302:../../libdaisy/src/hid/disp/display.h ****         d1 = d2 = d3 = d4 = true;
 303:../../libdaisy/src/hid/disp/display.h **** 
 304:../../libdaisy/src/hid/disp/display.h ****         bool circle = false;
 305:../../libdaisy/src/hid/disp/display.h **** 
 306:../../libdaisy/src/hid/disp/display.h ****         if(sweep < 0)
 307:../../libdaisy/src/hid/disp/display.h ****         {
 308:../../libdaisy/src/hid/disp/display.h ****             start_angle += sweep;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 199


 309:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 310:../../libdaisy/src/hid/disp/display.h ****         }
 311:../../libdaisy/src/hid/disp/display.h **** 
 312:../../libdaisy/src/hid/disp/display.h ****         start_angle_rad = deg2rad(start_angle);
 313:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 314:../../libdaisy/src/hid/disp/display.h **** 
 315:../../libdaisy/src/hid/disp/display.h ****         start_x = cos(start_angle_rad) * radius;
 316:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 317:../../libdaisy/src/hid/disp/display.h ****         end_x   = cos(end_angle_rad) * radius;
 318:../../libdaisy/src/hid/disp/display.h ****         end_y   = -sin(end_angle_rad) * radius;
 319:../../libdaisy/src/hid/disp/display.h **** 
 320:../../libdaisy/src/hid/disp/display.h ****         // Check if start and endpoint are very near
 321:../../libdaisy/src/hid/disp/display.h ****         if((end_x - start_x) * (end_x - start_x)
 322:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 323:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 324:../../libdaisy/src/hid/disp/display.h ****         {
 325:../../libdaisy/src/hid/disp/display.h ****             if(sweep > 180)
 326:../../libdaisy/src/hid/disp/display.h ****                 circle = true;
 327:../../libdaisy/src/hid/disp/display.h ****             else
 328:../../libdaisy/src/hid/disp/display.h ****                 // Nothing to draw
 329:../../libdaisy/src/hid/disp/display.h ****                 return;
 330:../../libdaisy/src/hid/disp/display.h ****         }
 331:../../libdaisy/src/hid/disp/display.h **** 
 332:../../libdaisy/src/hid/disp/display.h ****         t_x = -radius;
 333:../../libdaisy/src/hid/disp/display.h ****         t_y = 0;
 334:../../libdaisy/src/hid/disp/display.h ****         err = 2 - 2 * radius;
 335:../../libdaisy/src/hid/disp/display.h **** 
 336:../../libdaisy/src/hid/disp/display.h ****         do
 337:../../libdaisy/src/hid/disp/display.h ****         {
 338:../../libdaisy/src/hid/disp/display.h ****             if(!circle)
 339:../../libdaisy/src/hid/disp/display.h ****             {
 340:../../libdaisy/src/hid/disp/display.h ****                 t_sxy  = start_x * t_y;
 341:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 342:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 343:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 344:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 345:../../libdaisy/src/hid/disp/display.h ****                 t_eyx  = end_y * t_x;
 346:../../libdaisy/src/hid/disp/display.h ****                 t_exny = end_x * -t_y;
 347:../../libdaisy/src/hid/disp/display.h ****                 t_eynx = end_y * -t_x;
 348:../../libdaisy/src/hid/disp/display.h **** 
 349:../../libdaisy/src/hid/disp/display.h ****                 if(sweep > 180)
 350:../../libdaisy/src/hid/disp/display.h ****                 {
 351:../../libdaisy/src/hid/disp/display.h ****                     d1 = (t_sxy - t_synx < 0 || t_exy - t_eynx > 0);
 352:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 353:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 354:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 355:../../libdaisy/src/hid/disp/display.h ****                 }
 356:../../libdaisy/src/hid/disp/display.h ****                 else
 357:../../libdaisy/src/hid/disp/display.h ****                 {
 358:../../libdaisy/src/hid/disp/display.h ****                     d1 = (t_sxy - t_synx < 0 && t_exy - t_eynx > 0);
 359:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 360:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 361:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 362:../../libdaisy/src/hid/disp/display.h ****                 }
 363:../../libdaisy/src/hid/disp/display.h ****             }
 364:../../libdaisy/src/hid/disp/display.h **** 
 365:../../libdaisy/src/hid/disp/display.h ****             if(d1)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 200


 366:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 367:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x - t_x, y + t_y, on);
 368:../../libdaisy/src/hid/disp/display.h ****             if(d2)
 369:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 370:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x + t_x, y + t_y, on);
 371:../../libdaisy/src/hid/disp/display.h ****             if(d3)
 372:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 373:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x + t_x, y - t_y, on);
 374:../../libdaisy/src/hid/disp/display.h ****             if(d4)
 375:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 376:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x - t_x, y - t_y, on);
 377:../../libdaisy/src/hid/disp/display.h **** 
 378:../../libdaisy/src/hid/disp/display.h ****             e2 = err;
 379:../../libdaisy/src/hid/disp/display.h ****             if(e2 <= t_y)
 380:../../libdaisy/src/hid/disp/display.h ****             {
 381:../../libdaisy/src/hid/disp/display.h ****                 t_y++;
 382:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_y * 2 + 1);
 383:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 384:../../libdaisy/src/hid/disp/display.h ****                 {
 385:../../libdaisy/src/hid/disp/display.h ****                     e2 = 0;
 386:../../libdaisy/src/hid/disp/display.h ****                 }
 387:../../libdaisy/src/hid/disp/display.h ****             }
 388:../../libdaisy/src/hid/disp/display.h ****             if(e2 > t_x)
 389:../../libdaisy/src/hid/disp/display.h ****             {
 390:../../libdaisy/src/hid/disp/display.h ****                 t_x++;
 391:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_x * 2 + 1);
 392:../../libdaisy/src/hid/disp/display.h ****             }
 393:../../libdaisy/src/hid/disp/display.h ****         } while(t_x <= 0);
 394:../../libdaisy/src/hid/disp/display.h ****     }
 395:../../libdaisy/src/hid/disp/display.h **** 
 396:../../libdaisy/src/hid/disp/display.h ****     char WriteChar(char ch, FontDef font, bool on) override
 2926              		.loc 5 396 10 is_stmt 1 view -0
 2927              		.cfi_startproc
 2928              		@ args = 4, pretend = 0, frame = 16
 2929              		@ frame_needed = 0, uses_anonymous_args = 0
 2930              		.loc 5 396 10 is_stmt 0 view .LVU641
 2931 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2932              		.cfi_def_cfa_offset 36
 2933              		.cfi_offset 4, -36
 2934              		.cfi_offset 5, -32
 2935              		.cfi_offset 6, -28
 2936              		.cfi_offset 7, -24
 2937              		.cfi_offset 8, -20
 2938              		.cfi_offset 9, -16
 2939              		.cfi_offset 10, -12
 2940              		.cfi_offset 11, -8
 2941              		.cfi_offset 14, -4
 2942 0004 85B0     		sub	sp, sp, #20
 2943              		.cfi_def_cfa_offset 56
 2944              	.LVL162:
 397:../../libdaisy/src/hid/disp/display.h ****     {
 398:../../libdaisy/src/hid/disp/display.h ****         uint32_t i, b, j;
 399:../../libdaisy/src/hid/disp/display.h **** 
 400:../../libdaisy/src/hid/disp/display.h ****         // Check if character is valid
 401:../../libdaisy/src/hid/disp/display.h ****         if(ch < 32 || ch > 126)
 2945              		.loc 5 401 20 view .LVU642
 2946 0006 A1F12005 		sub	r5, r1, #32
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 201


 396:../../libdaisy/src/hid/disp/display.h ****     {
 2947              		.loc 5 396 10 view .LVU643
 2948 000a 04AC     		add	r4, sp, #16
 2949 000c 9DF83870 		ldrb	r7, [sp, #56]	@ zero_extendqisi2
 2950 0010 0091     		str	r1, [sp]
 2951 0012 04E90C00 		stmdb	r4, {r2, r3}
 2952              	.LVL163:
 2953              		.loc 5 401 9 view .LVU644
 2954 0016 EBB2     		uxtb	r3, r5
 2955 0018 5E2B     		cmp	r3, #94
 2956 001a 00F29580 		bhi	.L125
 402:../../libdaisy/src/hid/disp/display.h ****             return 0;
 403:../../libdaisy/src/hid/disp/display.h **** 
 404:../../libdaisy/src/hid/disp/display.h ****         // Check remaining space on current line
 405:../../libdaisy/src/hid/disp/display.h ****         if(Width() < (currentX_ + font.FontWidth)
 2957              		.loc 5 405 17 view .LVU645
 2958 001e 0368     		ldr	r3, [r0]
 2959 0020 8046     		mov	r8, r0
 2960 0022 5D4A     		ldr	r2, .L160
 2961 0024 DB68     		ldr	r3, [r3, #12]
 2962 0026 9DF80840 		ldrb	r4, [sp, #8]	@ zero_extendqisi2
 2963 002a 9342     		cmp	r3, r2
 2964 002c 9DF80960 		ldrb	r6, [sp, #9]	@ zero_extendqisi2
 2965 0030 40F09480 		bne	.L152
 2966 0034 8020     		movs	r0, #128
 2967              	.LVL164:
 2968              	.L124:
 2969              		.loc 5 405 23 view .LVU646
 2970 0036 B8F80430 		ldrh	r3, [r8, #4]
 2971              		.loc 5 405 33 view .LVU647
 2972 003a 2344     		add	r3, r3, r4
 406:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 2973              		.loc 5 406 12 view .LVU648
 2974 003c 8342     		cmp	r3, r0
 2975 003e 00F38380 		bgt	.L125
 2976              		.loc 5 406 21 discriminator 2 view .LVU649
 2977 0042 D8F80030 		ldr	r3, [r8]
 2978 0046 554A     		ldr	r2, .L160+4
 2979 0048 9B68     		ldr	r3, [r3, #8]
 2980 004a 9342     		cmp	r3, r2
 2981 004c 40F08880 		bne	.L153
 2982              		.loc 5 406 21 view .LVU650
 2983 0050 4020     		movs	r0, #64
 2984              	.L126:
 2985              		.loc 5 406 27 discriminator 2 view .LVU651
 2986 0052 B8F80620 		ldrh	r2, [r8, #6]
 2987              		.loc 5 406 37 discriminator 2 view .LVU652
 2988 0056 9319     		adds	r3, r2, r6
 2989              		.loc 5 406 27 discriminator 2 view .LVU653
 2990 0058 0192     		str	r2, [sp, #4]
 2991              		.loc 5 406 12 discriminator 2 view .LVU654
 2992 005a 8342     		cmp	r3, r0
 2993 005c 74DC     		bgt	.L125
 2994              	.LVL165:
 407:../../libdaisy/src/hid/disp/display.h ****         {
 408:../../libdaisy/src/hid/disp/display.h ****             // Not enough space on current line
 409:../../libdaisy/src/hid/disp/display.h ****             return 0;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 202


 410:../../libdaisy/src/hid/disp/display.h ****         }
 411:../../libdaisy/src/hid/disp/display.h **** 
 412:../../libdaisy/src/hid/disp/display.h ****         // Use the font to write
 413:../../libdaisy/src/hid/disp/display.h ****         for(i = 0; i < font.FontHeight; i++)
 2995              		.loc 5 413 22 is_stmt 1 view .LVU655
 2996 005e 002E     		cmp	r6, #0
 2997 0060 00F08980 		beq	.L127
 414:../../libdaisy/src/hid/disp/display.h ****         {
 415:../../libdaisy/src/hid/disp/display.h ****             b = font.data[(ch - 32) * font.FontHeight + i];
 2998              		.loc 5 415 37 is_stmt 0 view .LVU656
 2999 0064 06FB05F5 		mul	r5, r6, r5
 3000 0068 6FF00040 		mvn	r0, #-2147483648
 3001              		.loc 5 415 22 view .LVU657
 3002 006c 039B     		ldr	r3, [sp, #12]
 3003 006e 9646     		mov	lr, r2
 3004 0070 2844     		add	r0, r0, r5
 3005 0072 2E44     		add	r6, r6, r5
 416:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 417:../../libdaisy/src/hid/disp/display.h ****             {
 418:../../libdaisy/src/hid/disp/display.h ****                 if((b << j) & 0x8000)
 419:../../libdaisy/src/hid/disp/display.h ****                 {
 420:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))
 421:../../libdaisy/src/hid/disp/display.h ****                         ->ChildType::DrawPixel(
 422:../../libdaisy/src/hid/disp/display.h ****                             currentX_ + j, (currentY_ + i), on);
 423:../../libdaisy/src/hid/disp/display.h ****                 }
 424:../../libdaisy/src/hid/disp/display.h ****                 else
 425:../../libdaisy/src/hid/disp/display.h ****                 {
 426:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))
 427:../../libdaisy/src/hid/disp/display.h ****                         ->ChildType::DrawPixel(
 428:../../libdaisy/src/hid/disp/display.h ****                             currentX_ + j, (currentY_ + i), !on);
 429:../../libdaisy/src/hid/disp/display.h ****                 }
 430:../../libdaisy/src/hid/disp/display.h ****             }
 431:../../libdaisy/src/hid/disp/display.h ****         }
 432:../../libdaisy/src/hid/disp/display.h **** 
 433:../../libdaisy/src/hid/disp/display.h ****         // The current space is now taken
 434:../../libdaisy/src/hid/disp/display.h ****         SetCursor(currentX_ + font.FontWidth, currentY_);
 3006              		.loc 5 434 19 view .LVU658
 3007 0074 B8F804A0 		ldrh	r10, [r8, #4]
 3008 0078 03EB4000 		add	r0, r3, r0, lsl #1
 3009 007c 023B     		subs	r3, r3, #2
 3010 007e 03EB460B 		add	fp, r3, r6, lsl #1
 3011              	.LVL166:
 3012              	.L130:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3013              		.loc 5 415 15 view .LVU659
 3014 0082 30F8026F 		ldrh	r6, [r0, #2]!
 3015              	.LVL167:
 416:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3016              		.loc 5 416 26 is_stmt 1 view .LVU660
 3017 0086 BCB3     		cbz	r4, .L135
 3018              	.LBB5524:
 3019              	.LBB5525:
 3020              	.LBB5526:
 3021              	.LBB5527:
 3022              	.LBB5528:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3023              		.loc 14 246 55 is_stmt 0 view .LVU661
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 203


 3024 0088 0EF00703 		and	r3, lr, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3025              		.loc 14 246 49 view .LVU662
 3026 008c 4FF0010C 		mov	ip, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3027              		.loc 14 246 28 view .LVU663
 3028 0090 4FEADE02 		lsr	r2, lr, #3
 3029 0094 5146     		mov	r1, r10
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3030              		.loc 14 246 49 view .LVU664
 3031 0096 0CFA03FC 		lsl	ip, ip, r3
 3032 009a 0AF11403 		add	r3, r10, #20
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3033              		.loc 14 246 42 view .LVU665
 3034 009e 4FFA8CFC 		sxtb	ip, ip
 3035 00a2 03EBC212 		add	r2, r3, r2, lsl #7
 3036              	.LBE5528:
 3037              	.LBE5527:
 3038              	.LBE5526:
 3039              	.LBE5525:
 3040              	.LBE5524:
 416:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3041              		.loc 5 416 19 view .LVU666
 3042 00a6 0023     		movs	r3, #0
 3043              	.LBB5546:
 3044              	.LBB5541:
 3045              	.LBB5536:
 3046              	.LBB5532:
 3047              	.LBB5529:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3048              		.loc 14 246 42 view .LVU667
 3049 00a8 6FEA0C09 		mvn	r9, ip
 3050 00ac 4244     		add	r2, r2, r8
 3051 00ae 0EE0     		b	.L136
 3052              	.LVL168:
 3053              	.L154:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3054              		.loc 14 246 42 view .LVU668
 3055              	.LBE5529:
 3056              	.LBE5532:
 3057              	.LBE5536:
 3058              	.LBE5541:
 3059              	.LBE5546:
 3060              	.LBB5547:
 3061              	.LBI5547:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3062              		.loc 4 41 10 is_stmt 1 view .LVU669
 3063              	.LBB5548:
 3064              	.LBI5548:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3065              		.loc 14 239 10 view .LVU670
 3066              	.LBB5549:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3067              		.loc 14 241 9 is_stmt 0 view .LVU671
 3068 00b0 7F29     		cmp	r1, #127
 3069 00b2 07D8     		bhi	.L132
 3070 00b4 BEF13F0F 		cmp	lr, #63
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 204


 3071 00b8 04D8     		bhi	.L132
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3072              		.loc 14 244 42 view .LVU672
 3073 00ba 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3074              		.loc 14 243 9 view .LVU673
 3075 00bc 9FB1     		cbz	r7, .L134
 3076              	.L151:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3077              		.loc 14 243 9 view .LVU674
 3078              	.LBE5549:
 3079              	.LBE5548:
 3080              	.LBE5547:
 3081              	.LBB5550:
 3082              	.LBB5542:
 3083              	.LBB5537:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3084              		.loc 14 244 42 view .LVU675
 3085 00be 4CEA0505 		orr	r5, ip, r5
 3086 00c2 1570     		strb	r5, [r2]
 3087              	.L132:
 3088              	.LBE5537:
 3089              	.LBE5542:
 3090              	.LBE5550:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3091              		.loc 5 416 13 is_stmt 1 discriminator 2 view .LVU676
 3092 00c4 0133     		adds	r3, r3, #1
 3093              	.LVL169:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3094              		.loc 5 416 26 discriminator 2 view .LVU677
 3095 00c6 0132     		adds	r2, r2, #1
 3096 00c8 0131     		adds	r1, r1, #1
 3097 00ca 9C42     		cmp	r4, r3
 3098 00cc 14D0     		beq	.L135
 3099              	.LVL170:
 3100              	.L136:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 3101              		.loc 5 418 23 is_stmt 0 view .LVU678
 3102 00ce 06FA03F5 		lsl	r5, r6, r3
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 3103              		.loc 5 418 17 view .LVU679
 3104 00d2 2D04     		lsls	r5, r5, #16
 3105 00d4 ECD4     		bmi	.L154
 3106              	.LVL171:
 3107              	.LBB5551:
 3108              	.LBI5524:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3109              		.loc 4 41 10 is_stmt 1 view .LVU680
 3110              	.LBB5543:
 3111              	.LBI5525:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3112              		.loc 14 239 10 view .LVU681
 3113              	.LBB5538:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3114              		.loc 14 241 9 is_stmt 0 view .LVU682
 3115 00d6 7F29     		cmp	r1, #127
 3116 00d8 F4D8     		bhi	.L132
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 205


 3117 00da BEF13F0F 		cmp	lr, #63
 3118 00de F1D8     		bhi	.L132
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3119              		.loc 14 244 42 view .LVU683
 3120 00e0 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3121              		.loc 14 243 9 view .LVU684
 3122 00e2 002F     		cmp	r7, #0
 3123 00e4 EBD0     		beq	.L151
 3124              	.L134:
 3125              	.LVL172:
 3126              	.LBB5533:
 3127              	.LBI5527:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3128              		.loc 14 239 10 is_stmt 1 view .LVU685
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3129              		.loc 14 239 10 is_stmt 0 view .LVU686
 3130              	.LBE5533:
 3131              	.LBE5538:
 3132              	.LBE5543:
 3133              	.LBE5551:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3134              		.loc 5 416 13 view .LVU687
 3135 00e6 0133     		adds	r3, r3, #1
 3136              	.LVL173:
 3137              	.LBB5552:
 3138              	.LBB5544:
 3139              	.LBB5539:
 3140              	.LBB5534:
 3141              	.LBB5530:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3142              		.loc 14 246 42 view .LVU688
 3143 00e8 09EA0505 		and	r5, r9, r5
 3144              	.LBE5530:
 3145              	.LBE5534:
 3146              	.LBE5539:
 3147              	.LBE5544:
 3148              	.LBE5552:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3149              		.loc 5 416 26 view .LVU689
 3150 00ec 0132     		adds	r2, r2, #1
 3151 00ee 0131     		adds	r1, r1, #1
 3152 00f0 9C42     		cmp	r4, r3
 3153              	.LBB5553:
 3154              	.LBB5545:
 3155              	.LBB5540:
 3156              	.LBB5535:
 3157              	.LBB5531:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3158              		.loc 14 246 42 view .LVU690
 3159 00f2 02F8015C 		strb	r5, [r2, #-1]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3160              		.loc 14 246 42 view .LVU691
 3161              	.LBE5531:
 3162              	.LBE5535:
 3163              	.LBE5540:
 3164              	.LBE5545:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 206


 3165              	.LBE5553:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3166              		.loc 5 416 13 is_stmt 1 view .LVU692
 3167              	.LVL174:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3168              		.loc 5 416 26 view .LVU693
 3169 00f6 EAD1     		bne	.L136
 3170              	.LVL175:
 3171              	.L135:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3172              		.loc 5 413 9 view .LVU694
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3173              		.loc 5 413 22 view .LVU695
 3174 00f8 5845     		cmp	r0, fp
 3175 00fa 0EF1010E 		add	lr, lr, #1
 3176 00fe C0D1     		bne	.L130
 3177              	.LVL176:
 3178              	.L129:
 3179              	.LBB5554:
 3180              	.LBB5555:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3181              		.loc 5 173 33 is_stmt 0 view .LVU696
 3182 0100 D8F80030 		ldr	r3, [r8]
 3183              	.LBE5555:
 3184              	.LBE5554:
 3185              		.loc 5 434 18 view .LVU697
 3186 0104 5444     		add	r4, r4, r10
 3187 0106 2449     		ldr	r1, .L160
 3188              	.LBB5561:
 3189              	.LBB5556:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3190              		.loc 5 173 33 view .LVU698
 3191 0108 DA68     		ldr	r2, [r3, #12]
 3192              	.LBE5556:
 3193              	.LBE5561:
 3194              		.loc 5 434 18 view .LVU699
 3195 010a A4B2     		uxth	r4, r4
 3196              	.LVL177:
 3197              	.LBB5562:
 3198              	.LBI5554:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 3199              		.loc 5 171 10 is_stmt 1 view .LVU700
 3200              	.LBB5557:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3201              		.loc 5 173 9 view .LVU701
 3202 010c 8A42     		cmp	r2, r1
 3203 010e 2DD1     		bne	.L155
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3204              		.loc 5 173 33 is_stmt 0 view .LVU702
 3205 0110 8020     		movs	r0, #128
 3206              	.L137:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3207              		.loc 5 173 19 view .LVU703
 3208 0112 8442     		cmp	r4, r0
 3209 0114 1CD2     		bcs	.L156
 3210              	.LVL178:
 3211              	.L138:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 207


 174:../../libdaisy/src/hid/disp/display.h ****     }
 3212              		.loc 5 174 34 view .LVU704
 3213 0116 9B68     		ldr	r3, [r3, #8]
 3214 0118 204A     		ldr	r2, .L160+4
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3215              		.loc 5 173 19 view .LVU705
 3216 011a A8F80440 		strh	r4, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3217              		.loc 5 174 9 is_stmt 1 view .LVU706
 3218 011e 9342     		cmp	r3, r2
 3219 0120 21D1     		bne	.L157
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3220              		.loc 5 174 34 is_stmt 0 view .LVU707
 3221 0122 4020     		movs	r0, #64
 3222              	.L140:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3223              		.loc 5 174 19 view .LVU708
 3224 0124 019B     		ldr	r3, [sp, #4]
 3225 0126 8342     		cmp	r3, r0
 3226 0128 07D3     		bcc	.L141
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3227              		.loc 5 174 46 view .LVU709
 3228 012a D8F80030 		ldr	r3, [r8]
 3229 012e 1B4A     		ldr	r2, .L160+4
 3230 0130 9B68     		ldr	r3, [r3, #8]
 3231 0132 9342     		cmp	r3, r2
 3232 0134 29D1     		bne	.L158
 3233 0136 3F23     		movs	r3, #63
 3234 0138 0193     		str	r3, [sp, #4]
 3235              	.LVL179:
 3236              	.L141:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3237              		.loc 5 174 19 view .LVU710
 3238 013a DDE90003 		ldrd	r0, r3, [sp]
 3239 013e A8F80630 		strh	r3, [r8, #6]	@ movhi
 3240              	.LVL180:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3241              		.loc 5 174 19 view .LVU711
 3242              	.LBE5557:
 3243              	.LBE5562:
 435:../../libdaisy/src/hid/disp/display.h **** 
 436:../../libdaisy/src/hid/disp/display.h ****         // Return written char for validation
 437:../../libdaisy/src/hid/disp/display.h ****         return ch;
 438:../../libdaisy/src/hid/disp/display.h ****     }
 3244              		.loc 5 438 5 view .LVU712
 3245 0142 05B0     		add	sp, sp, #20
 3246              		.cfi_remember_state
 3247              		.cfi_def_cfa_offset 36
 3248              		@ sp needed
 3249 0144 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3250              	.LVL181:
 3251              	.L125:
 3252              		.cfi_restore_state
 402:../../libdaisy/src/hid/disp/display.h **** 
 3253              		.loc 5 402 20 view .LVU713
 3254 0148 0020     		movs	r0, #0
 3255              		.loc 5 438 5 view .LVU714
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 208


 3256 014a 05B0     		add	sp, sp, #20
 3257              		.cfi_remember_state
 3258              		.cfi_def_cfa_offset 36
 3259              		@ sp needed
 3260 014c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3261              	.LVL182:
 3262              	.L156:
 3263              		.cfi_restore_state
 3264              	.LBB5563:
 3265              	.LBB5558:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3266              		.loc 5 173 44 view .LVU715
 3267 0150 DA68     		ldr	r2, [r3, #12]
 3268 0152 1149     		ldr	r1, .L160
 3269 0154 8A42     		cmp	r2, r1
 3270 0156 11D1     		bne	.L159
 3271 0158 7F24     		movs	r4, #127
 3272              	.LVL183:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3273              		.loc 5 173 44 view .LVU716
 3274 015a DCE7     		b	.L138
 3275              	.LVL184:
 3276              	.L152:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3277              		.loc 5 173 44 view .LVU717
 3278              	.LBE5558:
 3279              	.LBE5563:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3280              		.loc 5 405 17 view .LVU718
 3281 015c 9847     		blx	r3
 3282              	.LVL185:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3283              		.loc 5 405 17 view .LVU719
 3284 015e 6AE7     		b	.L124
 3285              	.L153:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3286              		.loc 5 406 21 discriminator 2 view .LVU720
 3287 0160 4046     		mov	r0, r8
 3288 0162 9847     		blx	r3
 3289              	.LVL186:
 3290 0164 75E7     		b	.L126
 3291              	.LVL187:
 3292              	.L157:
 3293              	.LBB5564:
 3294              	.LBB5559:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3295              		.loc 5 174 33 view .LVU721
 3296 0166 4046     		mov	r0, r8
 3297 0168 9847     		blx	r3
 3298              	.LVL188:
 3299 016a DBE7     		b	.L140
 3300              	.LVL189:
 3301              	.L155:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3302              		.loc 5 173 32 view .LVU722
 3303 016c 4046     		mov	r0, r8
 3304 016e 9047     		blx	r2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 209


 3305              	.LVL190:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3306              		.loc 5 173 44 view .LVU723
 3307 0170 D8F80030 		ldr	r3, [r8]
 3308 0174 CDE7     		b	.L137
 3309              	.LVL191:
 3310              	.L127:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3311              		.loc 5 173 44 view .LVU724
 3312              	.LBE5559:
 3313              	.LBE5564:
 434:../../libdaisy/src/hid/disp/display.h **** 
 3314              		.loc 5 434 19 view .LVU725
 3315 0176 B8F804A0 		ldrh	r10, [r8, #4]
 3316 017a C1E7     		b	.L129
 3317              	.LVL192:
 3318              	.L159:
 3319              	.LBB5565:
 3320              	.LBB5560:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3321              		.loc 5 173 43 view .LVU726
 3322 017c 4046     		mov	r0, r8
 3323 017e 9047     		blx	r2
 3324              	.LVL193:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3325              		.loc 5 173 19 view .LVU727
 3326 0180 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3327              		.loc 5 174 34 view .LVU728
 3328 0182 D8F80030 		ldr	r3, [r8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3329              		.loc 5 173 19 view .LVU729
 3330 0186 84B2     		uxth	r4, r0
 3331              	.LVL194:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3332              		.loc 5 173 19 view .LVU730
 3333 0188 C5E7     		b	.L138
 3334              	.L158:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3335              		.loc 5 174 45 view .LVU731
 3336 018a 4046     		mov	r0, r8
 3337 018c 9847     		blx	r3
 3338              	.LVL195:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3339              		.loc 5 174 19 view .LVU732
 3340 018e 0138     		subs	r0, r0, #1
 3341 0190 83B2     		uxth	r3, r0
 3342 0192 0193     		str	r3, [sp, #4]
 3343              	.LVL196:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3344              		.loc 5 174 19 view .LVU733
 3345 0194 D1E7     		b	.L141
 3346              	.L161:
 3347 0196 00BF     		.align	2
 3348              	.L160:
 3349 0198 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 3350 019c 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 210


 3351              	.LBE5560:
 3352              	.LBE5565:
 3353              		.cfi_endproc
 3354              	.LFE5759:
 3356              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 3357              		.align	1
 3358              		.p2align 2,,3
 3359              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 3360              		.syntax unified
 3361              		.thumb
 3362              		.thumb_func
 3363              		.fpu fpv5-d16
 3365              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 3366              	.LVL197:
 3367              	.LFB5545:
 439:../../libdaisy/src/hid/disp/display.h **** 
 440:../../libdaisy/src/hid/disp/display.h ****     char WriteString(const char* str, FontDef font, bool on) override
 3368              		.loc 5 440 10 is_stmt 1 view -0
 3369              		.cfi_startproc
 3370              		@ args = 4, pretend = 0, frame = 32
 3371              		@ frame_needed = 0, uses_anonymous_args = 0
 3372              		.loc 5 440 10 is_stmt 0 view .LVU735
 3373 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3374              		.cfi_def_cfa_offset 36
 3375              		.cfi_offset 4, -36
 3376              		.cfi_offset 5, -32
 3377              		.cfi_offset 6, -28
 3378              		.cfi_offset 7, -24
 3379              		.cfi_offset 8, -20
 3380              		.cfi_offset 9, -16
 3381              		.cfi_offset 10, -12
 3382              		.cfi_offset 11, -8
 3383              		.cfi_offset 14, -4
 3384 0004 89B0     		sub	sp, sp, #36
 3385              		.cfi_def_cfa_offset 72
 3386              		.loc 5 440 10 view .LVU736
 3387 0006 08AC     		add	r4, sp, #32
 3388 0008 9DF84870 		ldrb	r7, [sp, #72]	@ zero_extendqisi2
 3389 000c 0191     		str	r1, [sp, #4]
 3390 000e 04E90C00 		stmdb	r4, {r2, r3}
 441:../../libdaisy/src/hid/disp/display.h ****     {
 442:../../libdaisy/src/hid/disp/display.h ****         // Write until null-byte
 443:../../libdaisy/src/hid/disp/display.h ****         while(*str)
 3391              		.loc 5 443 9 is_stmt 1 view .LVU737
 3392 0012 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 3393 0014 002B     		cmp	r3, #0
 3394 0016 00F0AB80 		beq	.L186
 3395 001a 1A46     		mov	r2, r3
 3396 001c 9DF81880 		ldrb	r8, [sp, #24]	@ zero_extendqisi2
 3397 0020 9DF81930 		ldrb	r3, [sp, #25]	@ zero_extendqisi2
 3398 0024 0646     		mov	r6, r0
 3399 0026 4546     		mov	r5, r8
 3400 0028 9046     		mov	r8, r2
 3401 002a 0393     		str	r3, [sp, #12]
 3402 002c 079B     		ldr	r3, [sp, #28]
 3403 002e 0593     		str	r3, [sp, #20]
 3404              	.LVL198:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 211


 3405              	.L187:
 3406              	.LBB5594:
 3407              	.LBI5594:
 396:../../libdaisy/src/hid/disp/display.h ****     {
 3408              		.loc 5 396 10 view .LVU738
 3409              	.LBB5595:
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 3410              		.loc 5 401 20 is_stmt 0 view .LVU739
 3411 0030 A8F12004 		sub	r4, r8, #32
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 3412              		.loc 5 401 9 view .LVU740
 3413 0034 E3B2     		uxtb	r3, r4
 3414 0036 5E2B     		cmp	r3, #94
 3415 0038 00F29E80 		bhi	.L168
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3416              		.loc 5 405 17 view .LVU741
 3417 003c 3368     		ldr	r3, [r6]
 3418 003e 5E4A     		ldr	r2, .L208
 3419 0040 DB68     		ldr	r3, [r3, #12]
 3420 0042 9342     		cmp	r3, r2
 3421 0044 40F09B80 		bne	.L201
 3422 0048 8020     		movs	r0, #128
 3423              	.L167:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3424              		.loc 5 405 23 view .LVU742
 3425 004a B388     		ldrh	r3, [r6, #4]
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3426              		.loc 5 405 33 view .LVU743
 3427 004c 2B44     		add	r3, r3, r5
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3428              		.loc 5 406 12 view .LVU744
 3429 004e 8342     		cmp	r3, r0
 3430 0050 00F39280 		bgt	.L168
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3431              		.loc 5 406 21 view .LVU745
 3432 0054 3368     		ldr	r3, [r6]
 3433 0056 594A     		ldr	r2, .L208+4
 3434 0058 9B68     		ldr	r3, [r3, #8]
 3435 005a 9342     		cmp	r3, r2
 3436 005c 40F09280 		bne	.L202
 3437 0060 4020     		movs	r0, #64
 3438              	.L169:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3439              		.loc 5 406 27 view .LVU746
 3440 0062 F188     		ldrh	r1, [r6, #6]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3441              		.loc 5 406 37 view .LVU747
 3442 0064 039A     		ldr	r2, [sp, #12]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3443              		.loc 5 406 27 view .LVU748
 3444 0066 0291     		str	r1, [sp, #8]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3445              		.loc 5 406 37 view .LVU749
 3446 0068 8B18     		adds	r3, r1, r2
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3447              		.loc 5 406 12 view .LVU750
 3448 006a 8342     		cmp	r3, r0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 212


 3449 006c 00F38480 		bgt	.L168
 3450              	.LVL199:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3451              		.loc 5 413 22 is_stmt 1 view .LVU751
 3452 0070 002A     		cmp	r2, #0
 3453 0072 00F09180 		beq	.L170
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3454              		.loc 5 415 37 is_stmt 0 view .LVU752
 3455 0076 02FB04F4 		mul	r4, r2, r4
 3456 007a 6FF00049 		mvn	r9, #-2147483648
 3457 007e 059B     		ldr	r3, [sp, #20]
 3458 0080 A144     		add	r9, r9, r4
 3459 0082 1444     		add	r4, r4, r2
 434:../../libdaisy/src/hid/disp/display.h **** 
 3460              		.loc 5 434 19 view .LVU753
 3461 0084 B6F804B0 		ldrh	fp, [r6, #4]
 3462 0088 03EB4909 		add	r9, r3, r9, lsl #1
 3463 008c 023B     		subs	r3, r3, #2
 3464 008e CDF81080 		str	r8, [sp, #16]
 3465 0092 03EB4403 		add	r3, r3, r4, lsl #1
 3466 0096 0C46     		mov	r4, r1
 3467 0098 9A46     		mov	r10, r3
 3468              	.LVL200:
 3469              	.L173:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3470              		.loc 5 415 15 view .LVU754
 3471 009a 39F802CF 		ldrh	ip, [r9, #2]!
 3472              	.LVL201:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3473              		.loc 5 416 26 is_stmt 1 view .LVU755
 3474 009e A5B3     		cbz	r5, .L178
 3475              	.LBB5596:
 3476              	.LBB5597:
 3477              	.LBB5598:
 3478              	.LBB5599:
 3479              	.LBB5600:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3480              		.loc 14 246 55 is_stmt 0 view .LVU756
 3481 00a0 04F00703 		and	r3, r4, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3482              		.loc 14 246 49 view .LVU757
 3483 00a4 4FF0010E 		mov	lr, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3484              		.loc 14 246 28 view .LVU758
 3485 00a8 E208     		lsrs	r2, r4, #3
 3486 00aa 5946     		mov	r1, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3487              		.loc 14 246 49 view .LVU759
 3488 00ac 0EFA03FE 		lsl	lr, lr, r3
 3489 00b0 0BF11403 		add	r3, fp, #20
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3490              		.loc 14 246 42 view .LVU760
 3491 00b4 4FFA8EFE 		sxtb	lr, lr
 3492 00b8 03EBC212 		add	r2, r3, r2, lsl #7
 3493              	.LBE5600:
 3494              	.LBE5599:
 3495              	.LBE5598:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 213


 3496              	.LBE5597:
 3497              	.LBE5596:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3498              		.loc 5 416 19 view .LVU761
 3499 00bc 0023     		movs	r3, #0
 3500              	.LBB5618:
 3501              	.LBB5613:
 3502              	.LBB5608:
 3503              	.LBB5604:
 3504              	.LBB5601:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3505              		.loc 14 246 42 view .LVU762
 3506 00be 6FEA0E08 		mvn	r8, lr
 3507 00c2 3244     		add	r2, r2, r6
 3508 00c4 0DE0     		b	.L179
 3509              	.LVL202:
 3510              	.L203:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3511              		.loc 14 246 42 view .LVU763
 3512              	.LBE5601:
 3513              	.LBE5604:
 3514              	.LBE5608:
 3515              	.LBE5613:
 3516              	.LBE5618:
 3517              	.LBB5619:
 3518              	.LBI5619:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3519              		.loc 4 41 10 is_stmt 1 view .LVU764
 3520              	.LBB5620:
 3521              	.LBI5620:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3522              		.loc 14 239 10 view .LVU765
 3523              	.LBB5621:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3524              		.loc 14 241 9 is_stmt 0 view .LVU766
 3525 00c6 7F29     		cmp	r1, #127
 3526 00c8 06D8     		bhi	.L175
 3527 00ca 3F2C     		cmp	r4, #63
 3528 00cc 04D8     		bhi	.L175
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3529              		.loc 14 244 42 view .LVU767
 3530 00ce 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3531              		.loc 14 243 9 view .LVU768
 3532 00d0 97B1     		cbz	r7, .L177
 3533              	.L200:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3534              		.loc 14 243 9 view .LVU769
 3535              	.LBE5621:
 3536              	.LBE5620:
 3537              	.LBE5619:
 3538              	.LBB5622:
 3539              	.LBB5614:
 3540              	.LBB5609:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3541              		.loc 14 244 42 view .LVU770
 3542 00d2 4EEA0000 		orr	r0, lr, r0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 214


 3543 00d6 1070     		strb	r0, [r2]
 3544              	.L175:
 3545              	.LBE5609:
 3546              	.LBE5614:
 3547              	.LBE5622:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3548              		.loc 5 416 13 is_stmt 1 view .LVU771
 3549 00d8 0133     		adds	r3, r3, #1
 3550              	.LVL203:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3551              		.loc 5 416 26 view .LVU772
 3552 00da 0132     		adds	r2, r2, #1
 3553 00dc 0131     		adds	r1, r1, #1
 3554 00de AB42     		cmp	r3, r5
 3555 00e0 13D0     		beq	.L178
 3556              	.LVL204:
 3557              	.L179:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 3558              		.loc 5 418 23 is_stmt 0 view .LVU773
 3559 00e2 0CFA03F0 		lsl	r0, ip, r3
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 3560              		.loc 5 418 17 view .LVU774
 3561 00e6 0004     		lsls	r0, r0, #16
 3562 00e8 EDD4     		bmi	.L203
 3563              	.LVL205:
 3564              	.LBB5623:
 3565              	.LBI5596:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3566              		.loc 4 41 10 is_stmt 1 view .LVU775
 3567              	.LBB5615:
 3568              	.LBI5597:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3569              		.loc 14 239 10 view .LVU776
 3570              	.LBB5610:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3571              		.loc 14 241 9 is_stmt 0 view .LVU777
 3572 00ea 7F29     		cmp	r1, #127
 3573 00ec F4D8     		bhi	.L175
 3574 00ee 3F2C     		cmp	r4, #63
 3575 00f0 F2D8     		bhi	.L175
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3576              		.loc 14 244 42 view .LVU778
 3577 00f2 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3578              		.loc 14 243 9 view .LVU779
 3579 00f4 002F     		cmp	r7, #0
 3580 00f6 ECD0     		beq	.L200
 3581              	.L177:
 3582              	.LVL206:
 3583              	.LBB5605:
 3584              	.LBI5599:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3585              		.loc 14 239 10 is_stmt 1 view .LVU780
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3586              		.loc 14 239 10 is_stmt 0 view .LVU781
 3587              	.LBE5605:
 3588              	.LBE5610:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 215


 3589              	.LBE5615:
 3590              	.LBE5623:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3591              		.loc 5 416 13 view .LVU782
 3592 00f8 0133     		adds	r3, r3, #1
 3593              	.LVL207:
 3594              	.LBB5624:
 3595              	.LBB5616:
 3596              	.LBB5611:
 3597              	.LBB5606:
 3598              	.LBB5602:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3599              		.loc 14 246 42 view .LVU783
 3600 00fa 08EA0000 		and	r0, r8, r0
 3601              	.LBE5602:
 3602              	.LBE5606:
 3603              	.LBE5611:
 3604              	.LBE5616:
 3605              	.LBE5624:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3606              		.loc 5 416 26 view .LVU784
 3607 00fe 0132     		adds	r2, r2, #1
 3608 0100 0131     		adds	r1, r1, #1
 3609 0102 AB42     		cmp	r3, r5
 3610              	.LBB5625:
 3611              	.LBB5617:
 3612              	.LBB5612:
 3613              	.LBB5607:
 3614              	.LBB5603:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3615              		.loc 14 246 42 view .LVU785
 3616 0104 02F8010C 		strb	r0, [r2, #-1]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3617              		.loc 14 246 42 view .LVU786
 3618              	.LBE5603:
 3619              	.LBE5607:
 3620              	.LBE5612:
 3621              	.LBE5617:
 3622              	.LBE5625:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3623              		.loc 5 416 13 is_stmt 1 view .LVU787
 3624              	.LVL208:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3625              		.loc 5 416 26 view .LVU788
 3626 0108 EBD1     		bne	.L179
 3627              	.LVL209:
 3628              	.L178:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3629              		.loc 5 413 9 view .LVU789
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3630              		.loc 5 413 22 view .LVU790
 3631 010a D145     		cmp	r9, r10
 3632 010c 04F10104 		add	r4, r4, #1
 3633 0110 C3D1     		bne	.L173
 3634 0112 DDF81080 		ldr	r8, [sp, #16]
 3635              	.LVL210:
 3636              	.L172:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 216


 3637              	.LBB5626:
 3638              	.LBB5627:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3639              		.loc 5 173 33 is_stmt 0 view .LVU791
 3640 0116 3268     		ldr	r2, [r6]
 3641              	.LBE5627:
 3642              	.LBE5626:
 434:../../libdaisy/src/hid/disp/display.h **** 
 3643              		.loc 5 434 18 view .LVU792
 3644 0118 0BEB0504 		add	r4, fp, r5
 3645 011c 2649     		ldr	r1, .L208
 3646              	.LBB5632:
 3647              	.LBB5628:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3648              		.loc 5 173 33 view .LVU793
 3649 011e D368     		ldr	r3, [r2, #12]
 3650              	.LBE5628:
 3651              	.LBE5632:
 434:../../libdaisy/src/hid/disp/display.h **** 
 3652              		.loc 5 434 18 view .LVU794
 3653 0120 A4B2     		uxth	r4, r4
 3654              	.LVL211:
 3655              	.LBB5633:
 3656              	.LBI5626:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 3657              		.loc 5 171 10 is_stmt 1 view .LVU795
 3658              	.LBB5629:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3659              		.loc 5 173 9 view .LVU796
 3660 0122 8B42     		cmp	r3, r1
 3661 0124 34D1     		bne	.L204
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3662              		.loc 5 173 33 is_stmt 0 view .LVU797
 3663 0126 8020     		movs	r0, #128
 3664              	.L180:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3665              		.loc 5 173 19 view .LVU798
 3666 0128 8442     		cmp	r4, r0
 3667 012a 04D3     		bcc	.L181
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3668              		.loc 5 173 44 view .LVU799
 3669 012c D368     		ldr	r3, [r2, #12]
 3670 012e 2249     		ldr	r1, .L208
 3671 0130 8B42     		cmp	r3, r1
 3672 0132 3AD1     		bne	.L205
 3673 0134 7F24     		movs	r4, #127
 3674              	.LVL212:
 3675              	.L181:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3676              		.loc 5 174 34 view .LVU800
 3677 0136 9368     		ldr	r3, [r2, #8]
 3678 0138 204A     		ldr	r2, .L208+4
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3679              		.loc 5 173 19 view .LVU801
 3680 013a B480     		strh	r4, [r6, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3681              		.loc 5 174 9 is_stmt 1 view .LVU802
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 217


 3682 013c 9342     		cmp	r3, r2
 3683 013e 24D1     		bne	.L206
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3684              		.loc 5 174 34 is_stmt 0 view .LVU803
 3685 0140 4020     		movs	r0, #64
 3686              	.L183:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3687              		.loc 5 174 19 view .LVU804
 3688 0142 029B     		ldr	r3, [sp, #8]
 3689 0144 8342     		cmp	r3, r0
 3690 0146 06D3     		bcc	.L184
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3691              		.loc 5 174 46 view .LVU805
 3692 0148 3368     		ldr	r3, [r6]
 3693 014a 1C4A     		ldr	r2, .L208+4
 3694 014c 9B68     		ldr	r3, [r3, #8]
 3695 014e 9342     		cmp	r3, r2
 3696 0150 25D1     		bne	.L207
 3697 0152 3F23     		movs	r3, #63
 3698 0154 0293     		str	r3, [sp, #8]
 3699              	.LVL213:
 3700              	.L184:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3701              		.loc 5 174 19 view .LVU806
 3702 0156 029B     		ldr	r3, [sp, #8]
 3703 0158 F380     		strh	r3, [r6, #6]	@ movhi
 3704              	.LVL214:
 3705              	.L166:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3706              		.loc 5 174 19 view .LVU807
 3707              	.LBE5629:
 3708              	.LBE5633:
 3709              	.LBE5595:
 3710              	.LBE5594:
 444:../../libdaisy/src/hid/disp/display.h ****         {
 445:../../libdaisy/src/hid/disp/display.h ****             if(((ChildType*)(this))->ChildType::WriteChar(*str, font, on)
 446:../../libdaisy/src/hid/disp/display.h ****                != *str)
 3711              		.loc 5 446 16 view .LVU808
 3712 015a 019B     		ldr	r3, [sp, #4]
 3713 015c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 445:../../libdaisy/src/hid/disp/display.h ****                != *str)
 3714              		.loc 5 445 13 view .LVU809
 3715 015e 4045     		cmp	r0, r8
 3716 0160 07D1     		bne	.L164
 3717              	.LVL215:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 3718              		.loc 5 443 9 is_stmt 1 view .LVU810
 3719 0162 13F8018F 		ldrb	r8, [r3, #1]!	@ zero_extendqisi2
 3720              	.LVL216:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 3721              		.loc 5 443 9 is_stmt 0 view .LVU811
 3722 0166 0193     		str	r3, [sp, #4]
 3723 0168 B8F1000F 		cmp	r8, #0
 3724 016c 7FF460AF 		bne	.L187
 3725              	.LVL217:
 3726              	.L186:
 3727              	.LBB5638:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 218


 3728              	.LBB5636:
 402:../../libdaisy/src/hid/disp/display.h **** 
 3729              		.loc 5 402 20 view .LVU812
 3730 0170 0020     		movs	r0, #0
 3731              	.L164:
 3732              	.LBE5636:
 3733              	.LBE5638:
 447:../../libdaisy/src/hid/disp/display.h ****             {
 448:../../libdaisy/src/hid/disp/display.h ****                 // Char could not be written
 449:../../libdaisy/src/hid/disp/display.h ****                 return *str;
 450:../../libdaisy/src/hid/disp/display.h ****             }
 451:../../libdaisy/src/hid/disp/display.h **** 
 452:../../libdaisy/src/hid/disp/display.h ****             // Next char
 453:../../libdaisy/src/hid/disp/display.h ****             str++;
 454:../../libdaisy/src/hid/disp/display.h ****         }
 455:../../libdaisy/src/hid/disp/display.h **** 
 456:../../libdaisy/src/hid/disp/display.h ****         // Everything ok
 457:../../libdaisy/src/hid/disp/display.h ****         return *str;
 458:../../libdaisy/src/hid/disp/display.h ****     }
 3734              		.loc 5 458 5 view .LVU813
 3735 0172 09B0     		add	sp, sp, #36
 3736              		.cfi_remember_state
 3737              		.cfi_def_cfa_offset 36
 3738              		@ sp needed
 3739 0174 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3740              	.LVL218:
 3741              	.L168:
 3742              		.cfi_restore_state
 3743              	.LBB5639:
 3744              	.LBB5637:
 402:../../libdaisy/src/hid/disp/display.h **** 
 3745              		.loc 5 402 20 view .LVU814
 3746 0178 4FF00008 		mov	r8, #0
 3747              	.LVL219:
 402:../../libdaisy/src/hid/disp/display.h **** 
 3748              		.loc 5 402 20 view .LVU815
 3749 017c EDE7     		b	.L166
 3750              	.LVL220:
 3751              	.L201:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3752              		.loc 5 405 17 view .LVU816
 3753 017e 3046     		mov	r0, r6
 3754 0180 9847     		blx	r3
 3755              	.LVL221:
 3756 0182 62E7     		b	.L167
 3757              	.L202:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3758              		.loc 5 406 21 view .LVU817
 3759 0184 3046     		mov	r0, r6
 3760 0186 9847     		blx	r3
 3761              	.LVL222:
 3762 0188 6BE7     		b	.L169
 3763              	.LVL223:
 3764              	.L206:
 3765              	.LBB5634:
 3766              	.LBB5630:
 174:../../libdaisy/src/hid/disp/display.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 219


 3767              		.loc 5 174 33 view .LVU818
 3768 018a 3046     		mov	r0, r6
 3769 018c 9847     		blx	r3
 3770              	.LVL224:
 3771 018e D8E7     		b	.L183
 3772              	.LVL225:
 3773              	.L204:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3774              		.loc 5 173 32 view .LVU819
 3775 0190 3046     		mov	r0, r6
 3776 0192 9847     		blx	r3
 3777              	.LVL226:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3778              		.loc 5 173 44 view .LVU820
 3779 0194 3268     		ldr	r2, [r6]
 3780 0196 C7E7     		b	.L180
 3781              	.LVL227:
 3782              	.L170:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3783              		.loc 5 173 44 view .LVU821
 3784              	.LBE5630:
 3785              	.LBE5634:
 434:../../libdaisy/src/hid/disp/display.h **** 
 3786              		.loc 5 434 19 view .LVU822
 3787 0198 B6F804B0 		ldrh	fp, [r6, #4]
 3788 019c BBE7     		b	.L172
 3789              	.LVL228:
 3790              	.L207:
 3791              	.LBB5635:
 3792              	.LBB5631:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3793              		.loc 5 174 45 view .LVU823
 3794 019e 3046     		mov	r0, r6
 3795 01a0 9847     		blx	r3
 3796              	.LVL229:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3797              		.loc 5 174 19 view .LVU824
 3798 01a2 431E     		subs	r3, r0, #1
 3799 01a4 9BB2     		uxth	r3, r3
 3800 01a6 0293     		str	r3, [sp, #8]
 3801              	.LVL230:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3802              		.loc 5 174 19 view .LVU825
 3803 01a8 D5E7     		b	.L184
 3804              	.LVL231:
 3805              	.L205:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3806              		.loc 5 173 43 view .LVU826
 3807 01aa 3046     		mov	r0, r6
 3808 01ac 9847     		blx	r3
 3809              	.LVL232:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3810              		.loc 5 173 19 view .LVU827
 3811 01ae 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3812              		.loc 5 174 34 view .LVU828
 3813 01b0 3268     		ldr	r2, [r6]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 220


 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3814              		.loc 5 173 19 view .LVU829
 3815 01b2 84B2     		uxth	r4, r0
 3816              	.LVL233:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3817              		.loc 5 173 19 view .LVU830
 3818 01b4 BFE7     		b	.L181
 3819              	.L209:
 3820 01b6 00BF     		.align	2
 3821              	.L208:
 3822 01b8 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 3823 01bc 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 3824              	.LBE5631:
 3825              	.LBE5635:
 3826              	.LBE5637:
 3827              	.LBE5639:
 3828              		.cfi_endproc
 3829              	.LFE5545:
 3831              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 3832              		.align	1
 3833              		.p2align 2,,3
 3834              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawP
 3835              		.syntax unified
 3836              		.thumb
 3837              		.thumb_func
 3838              		.fpu fpv5-d16
 3840              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjj
 3841              	.LVL234:
 3842              	.LFB5754:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3843              		.loc 4 41 10 is_stmt 1 view -0
 3844              		.cfi_startproc
 3845              		@ args = 0, pretend = 0, frame = 0
 3846              		@ frame_needed = 0, uses_anonymous_args = 0
 3847              		@ link register save eliminated.
 3848              	.LBB5644:
 3849              	.LBI5644:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3850              		.loc 14 239 10 view .LVU832
 3851              	.LBB5645:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3852              		.loc 14 241 9 is_stmt 0 view .LVU833
 3853 0000 7F29     		cmp	r1, #127
 3854 0002 1ED8     		bhi	.L210
 3855 0004 3F2A     		cmp	r2, #63
 3856 0006 1CD8     		bhi	.L210
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3857              		.loc 14 243 9 view .LVU834
 3858 0008 6BB1     		cbz	r3, .L212
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3859              		.loc 14 244 28 view .LVU835
 3860 000a D308     		lsrs	r3, r2, #3
 3861              	.LVL235:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3862              		.loc 14 244 48 view .LVU836
 3863 000c 4FF0010C 		mov	ip, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 221


 3864              		.loc 14 244 54 view .LVU837
 3865 0010 02F00702 		and	r2, r2, #7
 3866              	.LVL236:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3867              		.loc 14 244 42 view .LVU838
 3868 0014 01EBC313 		add	r3, r1, r3, lsl #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3869              		.loc 14 244 48 view .LVU839
 3870 0018 0CFA02F2 		lsl	r2, ip, r2
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3871              		.loc 14 244 42 view .LVU840
 3872 001c C118     		adds	r1, r0, r3
 3873              	.LVL237:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3874              		.loc 14 244 42 view .LVU841
 3875 001e 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
 3876 0020 1A43     		orrs	r2, r2, r3
 3877 0022 0A75     		strb	r2, [r1, #20]
 3878 0024 7047     		bx	lr
 3879              	.LVL238:
 3880              	.L212:
 3881              	.LBB5646:
 3882              	.LBI5646:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3883              		.loc 14 239 10 is_stmt 1 view .LVU842
 3884              	.LBB5647:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3885              		.loc 14 246 28 is_stmt 0 view .LVU843
 3886 0026 D308     		lsrs	r3, r2, #3
 3887              	.LVL239:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3888              		.loc 14 246 49 view .LVU844
 3889 0028 4FF0010C 		mov	ip, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3890              		.loc 14 246 55 view .LVU845
 3891 002c 02F00702 		and	r2, r2, #7
 3892              	.LVL240:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3893              		.loc 14 246 42 view .LVU846
 3894 0030 01EBC313 		add	r3, r1, r3, lsl #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3895              		.loc 14 246 49 view .LVU847
 3896 0034 0CFA02FC 		lsl	ip, ip, r2
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3897              		.loc 14 246 42 view .LVU848
 3898 0038 C118     		adds	r1, r0, r3
 3899              	.LVL241:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3900              		.loc 14 246 42 view .LVU849
 3901 003a 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
 3902 003c 22EA0C02 		bic	r2, r2, ip
 3903 0040 0A75     		strb	r2, [r1, #20]
 3904              	.LVL242:
 3905              	.L210:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3906              		.loc 14 246 42 view .LVU850
 3907              	.LBE5647:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 222


 3908              	.LBE5646:
 3909              	.LBE5645:
 3910              	.LBE5644:
  44:../../libdaisy/src/hid/disp/oled_display.h **** 
 3911              		.loc 4 44 5 view .LVU851
 3912 0042 7047     		bx	lr
 3913              		.cfi_endproc
 3914              	.LFE5754:
 3916              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 3917              		.align	1
 3918              		.p2align 2,,3
 3919              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 3920              		.syntax unified
 3921              		.thumb
 3922              		.thumb_func
 3923              		.fpu fpv5-d16
 3925              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 3926              	.LVL243:
 3927              	.LFB5540:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 3928              		.loc 5 221 10 is_stmt 1 view -0
 3929              		.cfi_startproc
 3930              		@ args = 8, pretend = 0, frame = 8
 3931              		@ frame_needed = 0, uses_anonymous_args = 0
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 3932              		.loc 5 221 10 is_stmt 0 view .LVU853
 3933 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3934              		.cfi_def_cfa_offset 36
 3935              		.cfi_offset 4, -36
 3936              		.cfi_offset 5, -32
 3937              		.cfi_offset 6, -28
 3938              		.cfi_offset 7, -24
 3939              		.cfi_offset 8, -20
 3940              		.cfi_offset 9, -16
 3941              		.cfi_offset 10, -12
 3942              		.cfi_offset 11, -8
 3943              		.cfi_offset 14, -4
 3944 0004 83B0     		sub	sp, sp, #12
 3945              		.cfi_def_cfa_offset 48
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 3946              		.loc 5 227 52 view .LVU854
 3947 0006 5C1A     		subs	r4, r3, r1
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 3948              		.loc 5 221 10 view .LVU855
 3949 0008 0C9E     		ldr	r6, [sp, #48]
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 3950              		.loc 5 227 22 view .LVU856
 3951 000a 002C     		cmp	r4, #0
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 3952              		.loc 5 221 10 view .LVU857
 3953 000c 9DF83490 		ldrb	r9, [sp, #52]	@ zero_extendqisi2
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 3954              		.loc 5 228 52 view .LVU858
 3955 0010 A6EB0208 		sub	r8, r6, r2
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 3956              		.loc 5 227 22 view .LVU859
 3957 0014 B8BF     		it	lt
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 223


 3958 0016 6442     		rsblt	r4, r4, #0
 3959              	.LVL244:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 3960              		.loc 5 228 22 view .LVU860
 3961 0018 B8F1000F 		cmp	r8, #0
 3962 001c B8BF     		it	lt
 3963 001e C8F10008 		rsblt	r8, r8, #0
 3964              	.LVL245:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 3965              		.loc 5 229 42 view .LVU861
 3966 0022 8B42     		cmp	r3, r1
 3967 0024 8CBF     		ite	hi
 3968 0026 4FF0010A 		movhi	r10, #1
 3969 002a 4FF0FF3A 		movls	r10, #-1
 3970              	.LVL246:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 3971              		.loc 5 230 42 view .LVU862
 3972 002e 9642     		cmp	r6, r2
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 3973              		.loc 5 231 22 view .LVU863
 3974 0030 A4EB080C 		sub	ip, r4, r8
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 3975              		.loc 5 230 42 view .LVU864
 3976 0034 51D8     		bhi	.L215
 3977              	.LVL247:
 3978              	.LBB5664:
 3979              	.LBI5664:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3980              		.loc 4 41 10 is_stmt 1 discriminator 4 view .LVU865
 3981              	.LBB5665:
 3982              	.LBI5665:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3983              		.loc 14 239 10 discriminator 4 view .LVU866
 3984              	.LBE5665:
 3985              	.LBE5664:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 3986              		.loc 5 230 42 is_stmt 0 discriminator 4 view .LVU867
 3987 0036 4FF0FF35 		mov	r5, #-1
 3988              	.LBB5681:
 3989              	.LBB5675:
 3990              	.LBB5666:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3991              		.loc 14 241 9 discriminator 4 view .LVU868
 3992 003a 7F2B     		cmp	r3, #127
 3993              	.LBE5666:
 3994              	.LBE5675:
 3995              	.LBE5681:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 3996              		.loc 5 230 42 discriminator 4 view .LVU869
 3997 003c 0195     		str	r5, [sp, #4]
 3998              	.LBB5682:
 3999              	.LBB5676:
 4000              	.LBB5671:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4001              		.loc 14 241 9 discriminator 4 view .LVU870
 4002 003e 12D8     		bhi	.L216
 4003 0040 3F2E     		cmp	r6, #63
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 224


 4004 0042 10D8     		bhi	.L216
 4005              	.LVL248:
 4006              	.L227:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4007              		.loc 14 244 28 view .LVU871
 4008 0044 F508     		lsrs	r5, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4009              		.loc 14 244 54 view .LVU872
 4010 0046 06F0070E 		and	lr, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4011              		.loc 14 244 48 view .LVU873
 4012 004a 0127     		movs	r7, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4013              		.loc 14 244 42 view .LVU874
 4014 004c 03EBC515 		add	r5, r3, r5, lsl #7
 4015 0050 0544     		add	r5, r5, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4016              		.loc 14 243 9 view .LVU875
 4017 0052 B9F1000F 		cmp	r9, #0
 4018 0056 47D0     		beq	.L217
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4019              		.loc 14 244 48 view .LVU876
 4020 0058 07FA0EF7 		lsl	r7, r7, lr
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4021              		.loc 14 244 42 view .LVU877
 4022 005c 95F814E0 		ldrb	lr, [r5, #20]	@ zero_extendqisi2
 4023 0060 47EA0E07 		orr	r7, r7, lr
 4024 0064 2F75     		strb	r7, [r5, #20]
 4025              	.LVL249:
 4026              	.L216:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4027              		.loc 14 244 42 view .LVU878
 4028              	.LBE5671:
 4029              	.LBE5676:
 4030              	.LBE5682:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 4031              		.loc 5 239 26 is_stmt 1 view .LVU879
 4032 0066 9642     		cmp	r6, r2
 4033 0068 01D1     		bne	.L220
 4034              	.L239:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 4035              		.loc 5 239 26 is_stmt 0 view .LVU880
 4036 006a 8B42     		cmp	r3, r1
 4037 006c 29D0     		beq	.L213
 4038              	.L220:
 4039              	.LVL250:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 4040              		.loc 5 243 23 view .LVU881
 4041 006e C8F10007 		rsb	r7, r8, #0
 4042              	.L222:
 4043              	.LVL251:
 4044              	.LBB5683:
 4045              	.LBI5683:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4046              		.loc 4 41 10 is_stmt 1 view .LVU882
 4047              	.LBB5684:
 4048              	.LBI5684:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 225


 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4049              		.loc 14 239 10 view .LVU883
 4050              	.LBB5685:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4051              		.loc 14 241 9 is_stmt 0 view .LVU884
 4052 0072 7F29     		cmp	r1, #127
 4053 0074 14D8     		bhi	.L223
 4054 0076 3F2A     		cmp	r2, #63
 4055 0078 12D8     		bhi	.L223
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4056              		.loc 14 244 28 view .LVU885
 4057 007a D508     		lsrs	r5, r2, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4058              		.loc 14 244 54 view .LVU886
 4059 007c 02F0070B 		and	fp, r2, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4060              		.loc 14 244 48 view .LVU887
 4061 0080 4FF0010E 		mov	lr, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4062              		.loc 14 244 42 view .LVU888
 4063 0084 01EBC515 		add	r5, r1, r5, lsl #7
 4064 0088 0544     		add	r5, r5, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4065              		.loc 14 243 9 view .LVU889
 4066 008a B9F1000F 		cmp	r9, #0
 4067 008e 1BD0     		beq	.L224
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4068              		.loc 14 244 48 view .LVU890
 4069 0090 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4070              		.loc 14 244 42 view .LVU891
 4071 0094 95F814B0 		ldrb	fp, [r5, #20]	@ zero_extendqisi2
 4072 0098 4EEA0B0E 		orr	lr, lr, fp
 4073 009c 85F814E0 		strb	lr, [r5, #20]
 4074              	.L223:
 4075              	.LVL252:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4076              		.loc 14 244 42 view .LVU892
 4077              	.LBE5685:
 4078              	.LBE5684:
 4079              	.LBE5683:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 4080              		.loc 5 243 13 view .LVU893
 4081 00a0 B7EB4C0F 		cmp	r7, ip, lsl #1
 242:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 4082              		.loc 5 242 20 view .LVU894
 4083 00a4 4FEA4C05 		lsl	r5, ip, #1
 4084              	.LVL253:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 4085              		.loc 5 243 13 view .LVU895
 4086 00a8 02DA     		bge	.L225
 245:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 4087              		.loc 5 245 23 view .LVU896
 4088 00aa ACEB080C 		sub	ip, ip, r8
 4089              	.LVL254:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 4090              		.loc 5 246 20 view .LVU897
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 226


 4091 00ae 5144     		add	r1, r1, r10
 4092              	.LVL255:
 4093              	.L225:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 4094              		.loc 5 249 13 view .LVU898
 4095 00b0 AC42     		cmp	r4, r5
 4096 00b2 02DD     		ble	.L226
 252:../../libdaisy/src/hid/disp/display.h ****             }
 4097              		.loc 5 252 20 view .LVU899
 4098 00b4 019D     		ldr	r5, [sp, #4]
 4099              	.LVL256:
 251:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 4100              		.loc 5 251 23 view .LVU900
 4101 00b6 A444     		add	ip, ip, r4
 4102              	.LVL257:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 4103              		.loc 5 252 20 view .LVU901
 4104 00b8 2A44     		add	r2, r2, r5
 4105              	.LVL258:
 4106              	.L226:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 4107              		.loc 5 239 26 is_stmt 1 view .LVU902
 4108 00ba 9942     		cmp	r1, r3
 4109 00bc D9D1     		bne	.L222
 239:../../libdaisy/src/hid/disp/display.h ****         {
 4110              		.loc 5 239 26 is_stmt 0 view .LVU903
 4111 00be 9642     		cmp	r6, r2
 4112 00c0 D7D1     		bne	.L222
 4113              	.L213:
 255:../../libdaisy/src/hid/disp/display.h **** 
 4114              		.loc 5 255 5 view .LVU904
 4115 00c2 03B0     		add	sp, sp, #12
 4116              		.cfi_remember_state
 4117              		.cfi_def_cfa_offset 36
 4118              		@ sp needed
 4119 00c4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4120              	.LVL259:
 4121              	.L224:
 4122              		.cfi_restore_state
 4123              	.LBB5690:
 4124              	.LBB5689:
 4125              	.LBB5688:
 4126              	.LBB5686:
 4127              	.LBI5686:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4128              		.loc 14 239 10 is_stmt 1 view .LVU905
 4129              	.LBB5687:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4130              		.loc 14 246 49 is_stmt 0 view .LVU906
 4131 00c8 0EFA0BFB 		lsl	fp, lr, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4132              		.loc 14 246 42 view .LVU907
 4133 00cc 95F814E0 		ldrb	lr, [r5, #20]	@ zero_extendqisi2
 4134 00d0 2EEA0B0E 		bic	lr, lr, fp
 4135 00d4 85F814E0 		strb	lr, [r5, #20]
 4136 00d8 E2E7     		b	.L223
 4137              	.LVL260:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 227


 4138              	.L215:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4139              		.loc 14 246 42 view .LVU908
 4140              	.LBE5687:
 4141              	.LBE5686:
 4142              	.LBE5688:
 4143              	.LBE5689:
 4144              	.LBE5690:
 4145              	.LBB5691:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4146              		.loc 4 41 10 is_stmt 1 view .LVU909
 4147              	.LBB5677:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4148              		.loc 14 239 10 view .LVU910
 4149              	.LBE5677:
 4150              	.LBE5691:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 4151              		.loc 5 230 42 is_stmt 0 view .LVU911
 4152 00da 0125     		movs	r5, #1
 4153              	.LBB5692:
 4154              	.LBB5678:
 4155              	.LBB5672:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4156              		.loc 14 241 9 view .LVU912
 4157 00dc 7F2B     		cmp	r3, #127
 4158              	.LBE5672:
 4159              	.LBE5678:
 4160              	.LBE5692:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 4161              		.loc 5 230 42 view .LVU913
 4162 00de 0195     		str	r5, [sp, #4]
 4163              	.LBB5693:
 4164              	.LBB5679:
 4165              	.LBB5673:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4166              		.loc 14 241 9 view .LVU914
 4167 00e0 C5D8     		bhi	.L220
 4168 00e2 3F2E     		cmp	r6, #63
 4169 00e4 AED9     		bls	.L227
 4170 00e6 C2E7     		b	.L220
 4171              	.LVL261:
 4172              	.L217:
 4173              	.LBB5667:
 4174              	.LBI5667:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4175              		.loc 14 239 10 is_stmt 1 view .LVU915
 4176              	.LBB5668:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4177              		.loc 14 246 49 is_stmt 0 view .LVU916
 4178 00e8 07FA0EFE 		lsl	lr, r7, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4179              		.loc 14 246 42 view .LVU917
 4180 00ec 2F7D     		ldrb	r7, [r5, #20]	@ zero_extendqisi2
 4181              	.LBE5668:
 4182              	.LBE5667:
 4183              	.LBE5673:
 4184              	.LBE5679:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 228


 4185              	.LBE5693:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 4186              		.loc 5 239 26 view .LVU918
 4187 00ee 9642     		cmp	r6, r2
 4188              	.LBB5694:
 4189              	.LBB5680:
 4190              	.LBB5674:
 4191              	.LBB5670:
 4192              	.LBB5669:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4193              		.loc 14 246 42 view .LVU919
 4194 00f0 27EA0E07 		bic	r7, r7, lr
 4195 00f4 2F75     		strb	r7, [r5, #20]
 4196              	.LVL262:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4197              		.loc 14 246 42 view .LVU920
 4198              	.LBE5669:
 4199              	.LBE5670:
 4200              	.LBE5674:
 4201              	.LBE5680:
 4202              	.LBE5694:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 4203              		.loc 5 239 26 is_stmt 1 view .LVU921
 4204 00f6 B8D0     		beq	.L239
 4205 00f8 B9E7     		b	.L220
 4206              		.cfi_endproc
 4207              	.LFE5540:
 4209 00fa 00BF     		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 4210              		.align	1
 4211              		.p2align 2,,3
 4212              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 4213              		.syntax unified
 4214              		.thumb
 4215              		.thumb_func
 4216              		.fpu fpv5-d16
 4218              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 4219              	.LVL263:
 4220              	.LFB6195:
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 4221              		.loc 5 283 10 view -0
 4222              		.cfi_startproc
 4223              		@ args = 12, pretend = 0, frame = 8
 4224              		@ frame_needed = 0, uses_anonymous_args = 0
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 4225              		.loc 5 283 10 is_stmt 0 view .LVU923
 4226 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4227              		.cfi_def_cfa_offset 36
 4228              		.cfi_offset 4, -36
 4229              		.cfi_offset 5, -32
 4230              		.cfi_offset 6, -28
 4231              		.cfi_offset 7, -24
 4232              		.cfi_offset 8, -20
 4233              		.cfi_offset 9, -16
 4234              		.cfi_offset 10, -12
 4235              		.cfi_offset 11, -8
 4236              		.cfi_offset 14, -4
 4237 0004 2DED068B 		vpush.64	{d8, d9, d10}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 229


 4238              		.cfi_def_cfa_offset 60
 4239              		.cfi_offset 80, -60
 4240              		.cfi_offset 81, -56
 4241              		.cfi_offset 82, -52
 4242              		.cfi_offset 83, -48
 4243              		.cfi_offset 84, -44
 4244              		.cfi_offset 85, -40
 4245 0008 83B0     		sub	sp, sp, #12
 4246              		.cfi_def_cfa_offset 72
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 4247              		.loc 5 283 10 view .LVU924
 4248 000a 1F46     		mov	r7, r3
 4249 000c 8046     		mov	r8, r0
 4250 000e 0D46     		mov	r5, r1
 4251 0010 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 4252              	.LVL264:
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 4253              		.loc 5 283 10 view .LVU925
 4254 0014 1646     		mov	r6, r2
 4255 0016 0193     		str	r3, [sp, #4]
 306:../../libdaisy/src/hid/disp/display.h ****         {
 4256              		.loc 5 306 9 view .LVU926
 4257 0018 139B     		ldr	r3, [sp, #76]
 4258 001a 002B     		cmp	r3, #0
 4259 001c C0F22182 		blt	.L241
 313:../../libdaisy/src/hid/disp/display.h **** 
 4260              		.loc 5 313 27 view .LVU927
 4261 0020 129A     		ldr	r2, [sp, #72]
 4262              	.LVL265:
 313:../../libdaisy/src/hid/disp/display.h **** 
 4263              		.loc 5 313 27 view .LVU928
 4264 0022 1344     		add	r3, r3, r2
 4265 0024 06EE103A 		vmov	s12, r3	@ int
 4266              	.LVL266:
 4267              	.L242:
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 4268              		.loc 5 312 27 view .LVU929
 4269 0028 DDED127A 		vldr.32	s15, [sp, #72]	@ int
 313:../../libdaisy/src/hid/disp/display.h **** 
 4270              		.loc 5 313 27 view .LVU930
 4271 002c B8EEC66B 		vcvt.f64.s32	d6, s12
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 4272              		.loc 5 312 27 view .LVU931
 4273 0030 9FEDCD4B 		vldr.64	d4, .L317
 4274 0034 B8EEE77B 		vcvt.f64.s32	d7, s15
 4275 0038 9FEDCD5B 		vldr.64	d5, .L317+8
 4276 003c 27EE047B 		vmul.f64	d7, d7, d4
 313:../../libdaisy/src/hid/disp/display.h **** 
 4277              		.loc 5 313 27 view .LVU932
 4278 0040 26EE046B 		vmul.f64	d6, d6, d4
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 4279              		.loc 5 312 27 view .LVU933
 4280 0044 87EE050B 		vdiv.f64	d0, d7, d5
 313:../../libdaisy/src/hid/disp/display.h **** 
 4281              		.loc 5 313 27 view .LVU934
 4282 0048 86EE05AB 		vdiv.f64	d10, d6, d5
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 230


 4283              		.loc 5 312 25 view .LVU935
 4284 004c F7EEC08B 		vcvt.f32.f64	s17, d0
 4285              	.LVL267:
 4286              	.LBB5727:
 4287              	.LBB5728:
 4288              		.file 32 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** /** @file include/cmath
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  as macros in C).
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  */
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** //
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** //
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #pragma GCC system_header
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/c++config.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <ext/type_traits.h>
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include_next <math.h>
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/std_abs.h>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 231


  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef div
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acos
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asin
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan2
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ceil
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cos
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cosh
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fabs
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef floor
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmod
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef frexp
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ldexp
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log10
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef modf
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef pow
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sin
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sinh
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sqrt
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tan
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tanh
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** extern "C++"
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** {
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acos;
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(float __x)
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(long double __x)
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     acos(_Tp __x)
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acos(__x); }
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asin;
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(float __x)
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 232


 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(long double __x)
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     asin(_Tp __x)
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asin(__x); }
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(float __x)
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(long double __x)
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     atan(_Tp __x)
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atan(__x); }
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan2;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(float __y, float __x)
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(long double __y, long double __x)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ceil;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(float __x)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 233


 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(long double __x)
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     ceil(_Tp __x)
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cos;
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(float __x)
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 4289              		.loc 32 185 26 view .LVU936
 4290 0050 B0EE680A 		vmov.f32	s0, s17
 4291 0054 FFF7FEFF 		bl	cosf
 4292              	.LVL268:
 4293              		.loc 32 185 26 view .LVU937
 4294              	.LBE5728:
 4295              	.LBE5727:
 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 4296              		.loc 5 315 17 view .LVU938
 4297 0058 07EE907A 		vmov	s15, r7	@ int
 313:../../libdaisy/src/hid/disp/display.h **** 
 4298              		.loc 5 313 25 view .LVU939
 4299 005c B7EECAAB 		vcvt.f32.f64	s20, d10
 4300              	.LVL269:
 4301              	.LBB5731:
 4302              	.LBI5727:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 4303              		.loc 32 184 3 is_stmt 1 view .LVU940
 4304              	.LBB5729:
 4305              		.loc 32 185 5 view .LVU941
 4306              		.loc 32 185 5 is_stmt 0 view .LVU942
 4307              	.LBE5729:
 4308              	.LBE5731:
 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 4309              		.loc 5 315 17 view .LVU943
 4310 0060 F8EE679A 		vcvt.f32.u32	s19, s15
 4311              	.LBB5732:
 4312              	.LBB5730:
 4313              		.loc 32 185 26 view .LVU944
 4314 0064 B0EE408A 		vmov.f32	s16, s0
 4315              	.LBE5730:
 4316              	.LBE5732:
 4317              	.LBB5733:
 4318              	.LBB5734:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(long double __x)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 234


 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     cos(_Tp __x)
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cos(__x); }
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cosh;
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(float __x)
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(long double __x)
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     cosh(_Tp __x)
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp;
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(float __x)
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(long double __x)
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expl(__x); }
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     exp(_Tp __x)
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp(__x); }
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fabs;
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(float __x)
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(long double __x)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 235


 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     fabs(_Tp __x)
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::floor;
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(float __x)
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(long double __x)
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     floor(_Tp __x)
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_floor(__x); }
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmod;
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(float __x, float __y)
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(long double __x, long double __y)
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::frexp;
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(float __x, int* __exp)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 236


 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ldexp;
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(float __x, int __exp)
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log;
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log(float __x)
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logf(__x); }
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log(long double __x)
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logl(__x); }
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     log(_Tp __x)
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log(__x); }
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log10;
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(float __x)
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 237


 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(long double __x)
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     log10(_Tp __x)
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log10(__x); }
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::modf;
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(float __x, float* __iptr)
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::pow;
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, float __y)
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, long double __y)
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus < 201103L
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline double
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(double __x, int __i)
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, int __n)
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, int __n)
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     pow(_Tp __x, _Up __y)
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 238


 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       return pow(__type(__x), __type(__y));
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sin;
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(float __x)
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 4319              		.loc 32 426 26 view .LVU945
 4320 0068 B0EE680A 		vmov.f32	s0, s17
 4321 006c FFF7FEFF 		bl	sinf
 4322              	.LVL270:
 4323              	.LBE5734:
 4324              	.LBE5733:
 316:../../libdaisy/src/hid/disp/display.h ****         end_x   = cos(end_angle_rad) * radius;
 4325              		.loc 5 316 17 view .LVU946
 4326 0070 60EE698A 		vnmul.f32	s17, s0, s19
 4327              	.LVL271:
 4328              	.LBB5736:
 4329              	.LBB5737:
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4330              		.loc 32 185 26 view .LVU947
 4331 0074 B0EE4A0A 		vmov.f32	s0, s20
 4332 0078 FFF7FEFF 		bl	cosf
 4333              	.LVL272:
 4334 007c B0EE409A 		vmov.f32	s18, s0
 4335              	.LBE5737:
 4336              	.LBE5736:
 4337              	.LBB5739:
 4338              	.LBB5740:
 4339              		.loc 32 426 26 view .LVU948
 4340 0080 B0EE4A0A 		vmov.f32	s0, s20
 4341 0084 FFF7FEFF 		bl	sinf
 4342              	.LVL273:
 4343              	.LBE5740:
 4344              	.LBE5739:
 318:../../libdaisy/src/hid/disp/display.h **** 
 4345              		.loc 5 318 17 view .LVU949
 4346 0088 20EE690A 		vnmul.f32	s0, s0, s19
 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 4347              		.loc 5 315 17 view .LVU950
 4348 008c 29EE888A 		vmul.f32	s16, s19, s16
 4349              	.LVL274:
 4350              	.LBB5742:
 4351              	.LBI5733:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 4352              		.loc 32 425 3 is_stmt 1 view .LVU951
 4353              	.LBB5735:
 4354              		.loc 32 426 5 view .LVU952
 4355              		.loc 32 426 5 is_stmt 0 view .LVU953
 4356              	.LBE5735:
 4357              	.LBE5742:
 4358              	.LBB5743:
 4359              	.LBI5736:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 239


 4360              		.loc 32 184 3 is_stmt 1 view .LVU954
 4361              	.LBB5738:
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4362              		.loc 32 185 5 view .LVU955
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4363              		.loc 32 185 5 is_stmt 0 view .LVU956
 4364              	.LBE5738:
 4365              	.LBE5743:
 317:../../libdaisy/src/hid/disp/display.h ****         end_y   = -sin(end_angle_rad) * radius;
 4366              		.loc 5 317 17 view .LVU957
 4367 0090 29EE899A 		vmul.f32	s18, s19, s18
 4368              	.LVL275:
 4369              	.LBB5744:
 4370              	.LBI5739:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 4371              		.loc 32 425 3 is_stmt 1 view .LVU958
 4372              	.LBB5741:
 4373              		.loc 32 426 5 view .LVU959
 4374              		.loc 32 426 5 is_stmt 0 view .LVU960
 4375              	.LBE5741:
 4376              	.LBE5744:
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 4377              		.loc 5 322 25 view .LVU961
 4378 0094 70EE687A 		vsub.f32	s15, s0, s17
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 4379              		.loc 5 321 9 view .LVU962
 4380 0098 F0EE006A 		vmov.f32	s13, #2.0e+0
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 4381              		.loc 5 321 19 view .LVU963
 4382 009c 39EE487A 		vsub.f32	s14, s18, s16
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 4383              		.loc 5 322 36 view .LVU964
 4384 00a0 67EEA77A 		vmul.f32	s15, s15, s15
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 4385              		.loc 5 322 16 view .LVU965
 4386 00a4 E7EE077A 		vfma.f32	s15, s14, s14
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 4387              		.loc 5 321 9 view .LVU966
 4388 00a8 F4EEE67A 		vcmpe.f32	s15, s13
 4389 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4390 00b0 06D5     		bpl	.L299
 325:../../libdaisy/src/hid/disp/display.h ****                 circle = true;
 4391              		.loc 5 325 13 view .LVU967
 4392 00b2 139B     		ldr	r3, [sp, #76]
 4393 00b4 B42B     		cmp	r3, #180
 4394 00b6 40F39680 		ble	.L240
 326:../../libdaisy/src/hid/disp/display.h ****             else
 4395              		.loc 5 326 24 view .LVU968
 4396 00ba 4FF00109 		mov	r9, #1
 4397 00be 01E0     		b	.L243
 4398              	.L299:
 304:../../libdaisy/src/hid/disp/display.h **** 
 4399              		.loc 5 304 14 view .LVU969
 4400 00c0 4FF00009 		mov	r9, #0
 4401              	.L243:
 4402              	.LVL276:
 302:../../libdaisy/src/hid/disp/display.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 240


 4403              		.loc 5 302 27 view .LVU970
 4404 00c4 0124     		movs	r4, #1
 332:../../libdaisy/src/hid/disp/display.h ****         t_y = 0;
 4405              		.loc 5 332 13 view .LVU971
 4406 00c6 7842     		rsbs	r0, r7, #0
 4407              	.LVL277:
 333:../../libdaisy/src/hid/disp/display.h ****         err = 2 - 2 * radius;
 4408              		.loc 5 333 13 view .LVU972
 4409 00c8 4FF0000C 		mov	ip, #0
 4410 00cc 0095     		str	r5, [sp]
 334:../../libdaisy/src/hid/disp/display.h **** 
 4411              		.loc 5 334 17 view .LVU973
 4412 00ce E31B     		subs	r3, r4, r7
 302:../../libdaisy/src/hid/disp/display.h **** 
 4413              		.loc 5 302 17 view .LVU974
 4414 00d0 2146     		mov	r1, r4
 302:../../libdaisy/src/hid/disp/display.h **** 
 4415              		.loc 5 302 22 view .LVU975
 4416 00d2 2746     		mov	r7, r4
 4417              	.LVL278:
 302:../../libdaisy/src/hid/disp/display.h **** 
 4418              		.loc 5 302 12 view .LVU976
 4419 00d4 2246     		mov	r2, r4
 334:../../libdaisy/src/hid/disp/display.h **** 
 4420              		.loc 5 334 17 view .LVU977
 4421 00d6 A340     		lsls	r3, r3, r4
 4422              	.LVL279:
 4423              	.L269:
 338:../../libdaisy/src/hid/disp/display.h ****             {
 4424              		.loc 5 338 13 view .LVU978
 4425 00d8 B9F1000F 		cmp	r9, #0
 4426 00dc 6AD1     		bne	.L245
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4427              		.loc 5 343 34 view .LVU979
 4428 00de 4242     		rsbs	r2, r0, #0
 4429              	.LVL280:
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 4430              		.loc 5 340 24 view .LVU980
 4431 00e0 06EE90CA 		vmov	s13, ip	@ int
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4432              		.loc 5 342 34 view .LVU981
 4433 00e4 CCF10001 		rsb	r1, ip, #0
 4434              	.LVL281:
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4435              		.loc 5 343 34 view .LVU982
 4436 00e8 07EE102A 		vmov	s14, r2	@ int
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 4437              		.loc 5 340 24 view .LVU983
 4438 00ec B8EEE66A 		vcvt.f32.s32	s12, s13
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4439              		.loc 5 342 34 view .LVU984
 4440 00f0 07EE901A 		vmov	s15, r1	@ int
 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 4441              		.loc 5 341 24 view .LVU985
 4442 00f4 06EE900A 		vmov	s13, r0	@ int
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4443              		.loc 5 343 34 view .LVU986
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 241


 4444 00f8 B8EEC77A 		vcvt.f32.s32	s14, s14
 349:../../libdaisy/src/hid/disp/display.h ****                 {
 4445              		.loc 5 349 17 view .LVU987
 4446 00fc 139A     		ldr	r2, [sp, #76]
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 4447              		.loc 5 340 24 view .LVU988
 4448 00fe 66EE084A 		vmul.f32	s9, s12, s16
 4449              	.LVL282:
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4450              		.loc 5 342 34 view .LVU989
 4451 0102 F8EEE77A 		vcvt.f32.s32	s15, s15
 349:../../libdaisy/src/hid/disp/display.h ****                 {
 4452              		.loc 5 349 17 view .LVU990
 4453 0106 B42A     		cmp	r2, #180
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4454              		.loc 5 343 24 view .LVU991
 4455 0108 27EE284A 		vmul.f32	s8, s14, s17
 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 4456              		.loc 5 341 24 view .LVU992
 4457 010c F8EEE66A 		vcvt.f32.s32	s13, s13
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4458              		.loc 5 342 24 view .LVU993
 4459 0110 67EE885A 		vmul.f32	s11, s15, s16
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4460              		.loc 5 351 33 view .LVU994
 4461 0114 74EEC43A 		vsub.f32	s7, s9, s8
 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 4462              		.loc 5 341 24 view .LVU995
 4463 0118 26EEA85A 		vmul.f32	s10, s13, s17
 4464              	.LVL283:
 344:../../libdaisy/src/hid/disp/display.h ****                 t_eyx  = end_y * t_x;
 4465              		.loc 5 344 24 view .LVU996
 4466 011c 26EE096A 		vmul.f32	s12, s12, s18
 4467              	.LVL284:
 345:../../libdaisy/src/hid/disp/display.h ****                 t_exny = end_x * -t_y;
 4468              		.loc 5 345 24 view .LVU997
 4469 0120 66EE806A 		vmul.f32	s13, s13, s0
 4470              	.LVL285:
 346:../../libdaisy/src/hid/disp/display.h ****                 t_eynx = end_y * -t_x;
 4471              		.loc 5 346 24 view .LVU998
 4472 0124 67EE897A 		vmul.f32	s15, s15, s18
 4473              	.LVL286:
 347:../../libdaisy/src/hid/disp/display.h **** 
 4474              		.loc 5 347 24 view .LVU999
 4475 0128 27EE007A 		vmul.f32	s14, s14, s0
 4476              	.LVL287:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4477              		.loc 5 351 46 view .LVU1000
 4478 012c F5EEC03A 		vcmpe.f32	s7, #0
 349:../../libdaisy/src/hid/disp/display.h ****                 {
 4479              		.loc 5 349 17 view .LVU1001
 4480 0130 40F3F280 		ble	.L246
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4481              		.loc 5 351 46 view .LVU1002
 4482 0134 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4483 0138 00F17F81 		bmi	.L272
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 242


 4484              		.loc 5 351 55 discriminator 2 view .LVU1003
 4485 013c 76EE473A 		vsub.f32	s7, s12, s14
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4486              		.loc 5 352 33 discriminator 2 view .LVU1004
 4487 0140 74EEC54A 		vsub.f32	s9, s9, s10
 4488              	.LVL288:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4489              		.loc 5 351 46 discriminator 2 view .LVU1005
 4490 0144 F5EEC03A 		vcmpe.f32	s7, #0
 4491 0148 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4492              		.loc 5 352 45 discriminator 2 view .LVU1006
 4493 014c F5EEC04A 		vcmpe.f32	s9, #0
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4494              		.loc 5 351 46 discriminator 2 view .LVU1007
 4495 0150 CCBF     		ite	gt
 4496 0152 0122     		movgt	r2, #1
 4497 0154 0022     		movle	r2, #0
 4498              	.LVL289:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4499              		.loc 5 352 45 discriminator 2 view .LVU1008
 4500 0156 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4501 015a 00F17781 		bmi	.L273
 4502              	.L315:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4503              		.loc 5 352 54 discriminator 2 view .LVU1009
 4504 015e 36EE666A 		vsub.f32	s12, s12, s13
 4505              	.LVL290:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4506              		.loc 5 353 34 discriminator 2 view .LVU1010
 4507 0162 35EEC55A 		vsub.f32	s10, s11, s10
 4508              	.LVL291:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4509              		.loc 5 352 45 discriminator 2 view .LVU1011
 4510 0166 B5EEC06A 		vcmpe.f32	s12, #0
 4511 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4512              		.loc 5 353 46 discriminator 2 view .LVU1012
 4513 016e B5EEC05A 		vcmpe.f32	s10, #0
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4514              		.loc 5 352 45 discriminator 2 view .LVU1013
 4515 0172 CCBF     		ite	gt
 4516 0174 0121     		movgt	r1, #1
 4517 0176 0021     		movle	r1, #0
 4518              	.LVL292:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4519              		.loc 5 353 46 discriminator 2 view .LVU1014
 4520 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4521 017c 00F16F81 		bmi	.L274
 4522              	.L316:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4523              		.loc 5 353 56 discriminator 2 view .LVU1015
 4524 0180 77EEE66A 		vsub.f32	s13, s15, s13
 4525              	.LVL293:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4526              		.loc 5 353 46 discriminator 2 view .LVU1016
 4527 0184 F5EEC06A 		vcmpe.f32	s13, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 243


 4528 0188 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4529 018c CCBF     		ite	gt
 4530 018e 0127     		movgt	r7, #1
 4531              	.LVL294:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4532              		.loc 5 353 46 discriminator 2 view .LVU1017
 4533 0190 0027     		movle	r7, #0
 4534              	.L249:
 4535              	.LVL295:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 4536              		.loc 5 354 34 discriminator 6 view .LVU1018
 4537 0192 75EEC45A 		vsub.f32	s11, s11, s8
 4538              	.LVL296:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 4539              		.loc 5 354 47 discriminator 6 view .LVU1019
 4540 0196 F5EEC05A 		vcmpe.f32	s11, #0
 4541 019a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4542 019e 00F14781 		bmi	.L275
 4543              	.L305:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4544              		.loc 5 361 57 discriminator 1 view .LVU1020
 4545 01a2 77EEC77A 		vsub.f32	s15, s15, s14
 4546              	.LVL297:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4547              		.loc 5 361 47 discriminator 1 view .LVU1021
 4548 01a6 F5EEC07A 		vcmpe.f32	s15, #0
 4549 01aa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4550 01ae CCBF     		ite	gt
 4551 01b0 0124     		movgt	r4, #1
 4552              	.LVL298:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4553              		.loc 5 361 47 discriminator 1 view .LVU1022
 4554 01b2 0024     		movle	r4, #0
 4555              	.LVL299:
 4556              	.L245:
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4557              		.loc 5 365 13 view .LVU1023
 4558 01b4 002A     		cmp	r2, #0
 4559 01b6 40F08A80 		bne	.L306
 4560              	.L257:
 368:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4561              		.loc 5 368 13 view .LVU1024
 4562 01ba 0029     		cmp	r1, #0
 4563 01bc 64D1     		bne	.L307
 4564              	.L259:
 371:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4565              		.loc 5 371 13 view .LVU1025
 4566 01be BFB9     		cbnz	r7, .L308
 4567              	.L261:
 374:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4568              		.loc 5 374 13 view .LVU1026
 4569 01c0 C4BB     		cbnz	r4, .L309
 4570              	.L263:
 4571              	.LVL300:
 379:../../libdaisy/src/hid/disp/display.h ****             {
 4572              		.loc 5 379 13 view .LVU1027
 4573 01c2 9C45     		cmp	ip, r3
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 244


 4574 01c4 58DB     		blt	.L280
 4575              	.L311:
 381:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_y * 2 + 1);
 4576              		.loc 5 381 17 view .LVU1028
 4577 01c6 0CF1010C 		add	ip, ip, #1
 4578              	.LVL301:
 382:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 4579              		.loc 5 382 38 view .LVU1029
 4580 01ca 03EB4C0E 		add	lr, r3, ip, lsl #1
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 4581              		.loc 5 383 17 view .LVU1030
 4582 01ce 1CEB000F 		cmn	ip, r0
 382:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 4583              		.loc 5 382 21 view .LVU1031
 4584 01d2 0EF1010E 		add	lr, lr, #1
 4585              	.LVL302:
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 4586              		.loc 5 383 17 view .LVU1032
 4587 01d6 00F0C080 		beq	.L310
 4588              	.LVL303:
 4589              	.L265:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 4590              		.loc 5 388 13 view .LVU1033
 4591 01da 9842     		cmp	r0, r3
 4592 01dc 4FDB     		blt	.L266
 4593              	.L281:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 4594              		.loc 5 388 13 view .LVU1034
 4595 01de 7346     		mov	r3, lr
 4596              	.LVL304:
 4597              	.L267:
 393:../../libdaisy/src/hid/disp/display.h ****     }
 4598              		.loc 5 393 21 is_stmt 1 view .LVU1035
 4599 01e0 0028     		cmp	r0, #0
 4600 01e2 7FF779AF 		ble	.L269
 4601              	.LVL305:
 4602              	.L240:
 394:../../libdaisy/src/hid/disp/display.h **** 
 4603              		.loc 5 394 5 is_stmt 0 view .LVU1036
 4604 01e6 03B0     		add	sp, sp, #12
 4605              		.cfi_remember_state
 4606              		.cfi_def_cfa_offset 60
 4607              		@ sp needed
 4608 01e8 BDEC068B 		vldm	sp!, {d8-d10}
 4609              		.cfi_restore 84
 4610              		.cfi_restore 85
 4611              		.cfi_restore 82
 4612              		.cfi_restore 83
 4613              		.cfi_restore 80
 4614              		.cfi_restore 81
 4615              		.cfi_def_cfa_offset 36
 4616              	.LVL306:
 394:../../libdaisy/src/hid/disp/display.h **** 
 4617              		.loc 5 394 5 view .LVU1037
 4618 01ec BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4619              	.LVL307:
 4620              	.L308:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 245


 4621              		.cfi_restore_state
 373:../../libdaisy/src/hid/disp/display.h ****             if(d4)
 4622              		.loc 5 373 43 view .LVU1038
 4623 01f0 009D     		ldr	r5, [sp]
 4624 01f2 A6EB0C0E 		sub	lr, r6, ip
 4625 01f6 00EB050A 		add	r10, r0, r5
 4626              	.LVL308:
 4627              	.LBB5745:
 4628              	.LBI5745:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4629              		.loc 4 41 10 is_stmt 1 view .LVU1039
 4630              	.LBB5746:
 4631              	.LBI5746:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4632              		.loc 14 239 10 view .LVU1040
 4633              	.LBB5747:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4634              		.loc 14 241 9 is_stmt 0 view .LVU1041
 4635 01fa BAF17F0F 		cmp	r10, #127
 4636 01fe DFD8     		bhi	.L261
 4637 0200 BEF13F0F 		cmp	lr, #63
 4638 0204 DCD8     		bhi	.L261
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4639              		.loc 14 244 28 view .LVU1042
 4640 0206 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4641              		.loc 14 243 9 view .LVU1043
 4642 020a 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4643              		.loc 14 244 42 view .LVU1044
 4644 020c 0AEBCB1A 		add	r10, r10, fp, lsl #7
 4645              	.LVL309:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4646              		.loc 14 243 9 view .LVU1045
 4647 0210 002D     		cmp	r5, #0
 4648 0212 00F0B180 		beq	.L262
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4649              		.loc 14 244 54 view .LVU1046
 4650 0216 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4651              		.loc 14 244 42 view .LVU1047
 4652 021a C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4653              		.loc 14 244 48 view .LVU1048
 4654 021c 4FF0010E 		mov	lr, #1
 4655              	.LVL310:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4656              		.loc 14 244 48 view .LVU1049
 4657 0220 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4658              		.loc 14 244 42 view .LVU1050
 4659 0224 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4660 0228 4EEA0B0E 		orr	lr, lr, fp
 4661 022c 8AF814E0 		strb	lr, [r10, #20]
 4662              	.LVL311:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4663              		.loc 14 244 42 view .LVU1051
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 246


 4664              	.LBE5747:
 4665              	.LBE5746:
 4666              	.LBE5745:
 374:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4667              		.loc 5 374 13 view .LVU1052
 4668 0230 002C     		cmp	r4, #0
 4669 0232 C6D0     		beq	.L263
 4670              	.L309:
 376:../../libdaisy/src/hid/disp/display.h **** 
 4671              		.loc 5 376 43 view .LVU1053
 4672 0234 009D     		ldr	r5, [sp]
 4673 0236 A6EB0C0E 		sub	lr, r6, ip
 4674 023a A5EB000A 		sub	r10, r5, r0
 4675              	.LVL312:
 4676              	.LBB5752:
 4677              	.LBI5752:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4678              		.loc 4 41 10 is_stmt 1 view .LVU1054
 4679              	.LBB5753:
 4680              	.LBI5753:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4681              		.loc 14 239 10 view .LVU1055
 4682              	.LBB5754:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4683              		.loc 14 241 9 is_stmt 0 view .LVU1056
 4684 023e BAF17F0F 		cmp	r10, #127
 4685 0242 BED8     		bhi	.L263
 4686 0244 BEF13F0F 		cmp	lr, #63
 4687 0248 BBD8     		bhi	.L263
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4688              		.loc 14 244 28 view .LVU1057
 4689 024a 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4690              		.loc 14 243 9 view .LVU1058
 4691 024e 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4692              		.loc 14 244 42 view .LVU1059
 4693 0250 0AEBCB1A 		add	r10, r10, fp, lsl #7
 4694              	.LVL313:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4695              		.loc 14 243 9 view .LVU1060
 4696 0254 002D     		cmp	r5, #0
 4697 0256 00F0AE80 		beq	.L264
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4698              		.loc 14 244 54 view .LVU1061
 4699 025a 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4700              		.loc 14 244 42 view .LVU1062
 4701 025e C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4702              		.loc 14 244 48 view .LVU1063
 4703 0260 4FF0010E 		mov	lr, #1
 4704              	.LVL314:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4705              		.loc 14 244 48 view .LVU1064
 4706              	.LBE5754:
 4707              	.LBE5753:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 247


 4708              	.LBE5752:
 379:../../libdaisy/src/hid/disp/display.h ****             {
 4709              		.loc 5 379 13 view .LVU1065
 4710 0264 9C45     		cmp	ip, r3
 4711              	.LBB5761:
 4712              	.LBB5759:
 4713              	.LBB5757:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4714              		.loc 14 244 48 view .LVU1066
 4715 0266 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4716              		.loc 14 244 42 view .LVU1067
 4717 026a 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4718 026e 4EEA0B0E 		orr	lr, lr, fp
 4719 0272 8AF814E0 		strb	lr, [r10, #20]
 4720              	.LVL315:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4721              		.loc 14 244 42 view .LVU1068
 4722              	.LBE5757:
 4723              	.LBE5759:
 4724              	.LBE5761:
 379:../../libdaisy/src/hid/disp/display.h ****             {
 4725              		.loc 5 379 13 view .LVU1069
 4726 0276 A6DA     		bge	.L311
 4727              	.L280:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 4728              		.loc 5 388 13 view .LVU1070
 4729 0278 9842     		cmp	r0, r3
 4730 027a 9E46     		mov	lr, r3
 4731              	.LVL316:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 4732              		.loc 5 388 13 view .LVU1071
 4733 027c AFDA     		bge	.L281
 4734              	.LVL317:
 4735              	.L266:
 390:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_x * 2 + 1);
 4736              		.loc 5 390 17 view .LVU1072
 4737 027e 0130     		adds	r0, r0, #1
 4738              	.LVL318:
 391:../../libdaisy/src/hid/disp/display.h ****             }
 4739              		.loc 5 391 38 view .LVU1073
 4740 0280 0EEB4003 		add	r3, lr, r0, lsl #1
 391:../../libdaisy/src/hid/disp/display.h ****             }
 4741              		.loc 5 391 21 view .LVU1074
 4742 0284 0133     		adds	r3, r3, #1
 4743              	.LVL319:
 391:../../libdaisy/src/hid/disp/display.h ****             }
 4744              		.loc 5 391 21 view .LVU1075
 4745 0286 ABE7     		b	.L267
 4746              	.L307:
 370:../../libdaisy/src/hid/disp/display.h ****             if(d3)
 4747              		.loc 5 370 43 view .LVU1076
 4748 0288 009D     		ldr	r5, [sp]
 4749 028a 0CEB060E 		add	lr, ip, r6
 4750 028e 00EB050A 		add	r10, r0, r5
 4751              	.LVL320:
 4752              	.LBB5762:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 248


 4753              	.LBI5762:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4754              		.loc 4 41 10 is_stmt 1 view .LVU1077
 4755              	.LBB5763:
 4756              	.LBI5763:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4757              		.loc 14 239 10 view .LVU1078
 4758              	.LBB5764:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4759              		.loc 14 241 9 is_stmt 0 view .LVU1079
 4760 0292 BAF17F0F 		cmp	r10, #127
 4761 0296 92D8     		bhi	.L259
 4762 0298 BEF13F0F 		cmp	lr, #63
 4763 029c 8FD8     		bhi	.L259
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4764              		.loc 14 244 28 view .LVU1080
 4765 029e 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4766              		.loc 14 243 9 view .LVU1081
 4767 02a2 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4768              		.loc 14 244 42 view .LVU1082
 4769 02a4 0AEBCB1A 		add	r10, r10, fp, lsl #7
 4770              	.LVL321:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4771              		.loc 14 243 9 view .LVU1083
 4772 02a8 002D     		cmp	r5, #0
 4773 02aa 73D0     		beq	.L260
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4774              		.loc 14 244 54 view .LVU1084
 4775 02ac 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4776              		.loc 14 244 42 view .LVU1085
 4777 02b0 C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4778              		.loc 14 244 48 view .LVU1086
 4779 02b2 4FF0010E 		mov	lr, #1
 4780              	.LVL322:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4781              		.loc 14 244 48 view .LVU1087
 4782 02b6 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4783              		.loc 14 244 42 view .LVU1088
 4784 02ba 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4785 02be 4EEA0B0E 		orr	lr, lr, fp
 4786 02c2 8AF814E0 		strb	lr, [r10, #20]
 4787              	.LVL323:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4788              		.loc 14 244 42 view .LVU1089
 4789              	.LBE5764:
 4790              	.LBE5763:
 4791              	.LBE5762:
 371:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4792              		.loc 5 371 13 view .LVU1090
 4793 02c6 002F     		cmp	r7, #0
 4794 02c8 3FF47AAF 		beq	.L261
 4795 02cc 90E7     		b	.L308
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 249


 4796              	.L306:
 367:../../libdaisy/src/hid/disp/display.h ****             if(d2)
 4797              		.loc 5 367 43 view .LVU1091
 4798 02ce 009D     		ldr	r5, [sp]
 4799 02d0 0CEB060E 		add	lr, ip, r6
 4800 02d4 A5EB000A 		sub	r10, r5, r0
 4801              	.LVL324:
 4802              	.LBB5769:
 4803              	.LBI5769:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4804              		.loc 4 41 10 is_stmt 1 view .LVU1092
 4805              	.LBB5770:
 4806              	.LBI5770:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4807              		.loc 14 239 10 view .LVU1093
 4808              	.LBB5771:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4809              		.loc 14 241 9 is_stmt 0 view .LVU1094
 4810 02d8 BAF17F0F 		cmp	r10, #127
 4811 02dc 3FF66DAF 		bhi	.L257
 4812 02e0 BEF13F0F 		cmp	lr, #63
 4813 02e4 3FF669AF 		bhi	.L257
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4814              		.loc 14 244 28 view .LVU1095
 4815 02e8 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4816              		.loc 14 243 9 view .LVU1096
 4817 02ec 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4818              		.loc 14 244 42 view .LVU1097
 4819 02ee 0AEBCB1A 		add	r10, r10, fp, lsl #7
 4820              	.LVL325:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4821              		.loc 14 243 9 view .LVU1098
 4822 02f2 002D     		cmp	r5, #0
 4823 02f4 6DD0     		beq	.L258
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4824              		.loc 14 244 54 view .LVU1099
 4825 02f6 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4826              		.loc 14 244 42 view .LVU1100
 4827 02fa C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4828              		.loc 14 244 48 view .LVU1101
 4829 02fc 4FF0010E 		mov	lr, #1
 4830              	.LVL326:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4831              		.loc 14 244 48 view .LVU1102
 4832 0300 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4833              		.loc 14 244 42 view .LVU1103
 4834 0304 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4835 0308 4EEA0B0E 		orr	lr, lr, fp
 4836 030c 8AF814E0 		strb	lr, [r10, #20]
 4837              	.LVL327:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4838              		.loc 14 244 42 view .LVU1104
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 250


 4839              	.LBE5771:
 4840              	.LBE5770:
 4841              	.LBE5769:
 368:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4842              		.loc 5 368 13 view .LVU1105
 4843 0310 0029     		cmp	r1, #0
 4844 0312 3FF454AF 		beq	.L259
 4845 0316 B7E7     		b	.L307
 4846              	.LVL328:
 4847              	.L246:
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 4848              		.loc 5 358 46 view .LVU1106
 4849 0318 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4850 031c 7ED4     		bmi	.L312
 4851 031e 4A46     		mov	r2, r9
 4852              	.L250:
 4853              	.LVL329:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 4854              		.loc 5 359 33 discriminator 6 view .LVU1107
 4855 0320 74EEC54A 		vsub.f32	s9, s9, s10
 4856              	.LVL330:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 4857              		.loc 5 359 45 discriminator 6 view .LVU1108
 4858 0324 F5EEC04A 		vcmpe.f32	s9, #0
 4859 0328 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4860 032c 6CD4     		bmi	.L313
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 4861              		.loc 5 359 45 view .LVU1109
 4862 032e 0021     		movs	r1, #0
 4863              	.LVL331:
 4864              	.L252:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4865              		.loc 5 360 34 discriminator 6 view .LVU1110
 4866 0330 35EEC55A 		vsub.f32	s10, s11, s10
 4867              	.LVL332:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4868              		.loc 5 360 46 discriminator 6 view .LVU1111
 4869 0334 B5EEC05A 		vcmpe.f32	s10, #0
 4870 0338 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4871 033c 5AD4     		bmi	.L314
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4872              		.loc 5 360 46 view .LVU1112
 4873 033e 0027     		movs	r7, #0
 4874              	.LVL333:
 4875              	.L254:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4876              		.loc 5 361 34 discriminator 6 view .LVU1113
 4877 0340 75EEC45A 		vsub.f32	s11, s11, s8
 4878              	.LVL334:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4879              		.loc 5 361 47 discriminator 6 view .LVU1114
 4880 0344 F5EEC05A 		vcmpe.f32	s11, #0
 4881 0348 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4882 034c 3FF529AF 		bmi	.L305
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4883              		.loc 5 361 47 view .LVU1115
 4884 0350 0024     		movs	r4, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 251


 4885              	.LVL335:
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4886              		.loc 5 365 13 view .LVU1116
 4887 0352 002A     		cmp	r2, #0
 4888 0354 3FF431AF 		beq	.L257
 4889 0358 B9E7     		b	.L306
 4890              	.LVL336:
 4891              	.L310:
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 4892              		.loc 5 383 32 discriminator 1 view .LVU1117
 4893 035a 9842     		cmp	r0, r3
 4894 035c 8FDB     		blt	.L266
 385:../../libdaisy/src/hid/disp/display.h ****                 }
 4895              		.loc 5 385 24 view .LVU1118
 4896 035e 0023     		movs	r3, #0
 4897              	.LVL337:
 385:../../libdaisy/src/hid/disp/display.h ****                 }
 4898              		.loc 5 385 24 view .LVU1119
 4899 0360 3BE7     		b	.L265
 4900              	.L318:
 4901 0362 00BFAFF3 		.align	3
 4901      0080
 4902              	.L317:
 4903 0368 7A008BFC 		.word	-57999238
 4904 036c FA210940 		.word	1074340346
 4905 0370 00000000 		.word	0
 4906 0374 00806640 		.word	1080459264
 4907              	.LVL338:
 4908              	.L262:
 4909              	.LBB5776:
 4910              	.LBB5751:
 4911              	.LBB5750:
 4912              	.LBB5748:
 4913              	.LBI5748:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4914              		.loc 14 239 10 is_stmt 1 view .LVU1120
 4915              	.LBB5749:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4916              		.loc 14 246 42 is_stmt 0 view .LVU1121
 4917 0378 C244     		add	r10, r10, r8
 4918              	.LVL339:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4919              		.loc 14 246 49 view .LVU1122
 4920 037a 4FF0010B 		mov	fp, #1
 4921              	.LVL340:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4922              		.loc 14 246 55 view .LVU1123
 4923 037e 0EF0070E 		and	lr, lr, #7
 4924              	.LVL341:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4925              		.loc 14 246 49 view .LVU1124
 4926 0382 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4927              		.loc 14 246 42 view .LVU1125
 4928 0386 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4929 038a 2BEA0E0E 		bic	lr, fp, lr
 4930 038e 8AF814E0 		strb	lr, [r10, #20]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 252


 4931              	.LVL342:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4932              		.loc 14 246 42 view .LVU1126
 4933 0392 15E7     		b	.L261
 4934              	.LVL343:
 4935              	.L260:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4936              		.loc 14 246 42 view .LVU1127
 4937              	.LBE5749:
 4938              	.LBE5748:
 4939              	.LBE5750:
 4940              	.LBE5751:
 4941              	.LBE5776:
 4942              	.LBB5777:
 4943              	.LBB5768:
 4944              	.LBB5767:
 4945              	.LBB5765:
 4946              	.LBI5765:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4947              		.loc 14 239 10 is_stmt 1 view .LVU1128
 4948              	.LBB5766:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4949              		.loc 14 246 42 is_stmt 0 view .LVU1129
 4950 0394 C244     		add	r10, r10, r8
 4951              	.LVL344:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4952              		.loc 14 246 49 view .LVU1130
 4953 0396 4FF0010B 		mov	fp, #1
 4954              	.LVL345:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4955              		.loc 14 246 55 view .LVU1131
 4956 039a 0EF0070E 		and	lr, lr, #7
 4957              	.LVL346:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4958              		.loc 14 246 49 view .LVU1132
 4959 039e 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4960              		.loc 14 246 42 view .LVU1133
 4961 03a2 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4962 03a6 2BEA0E0E 		bic	lr, fp, lr
 4963 03aa 8AF814E0 		strb	lr, [r10, #20]
 4964              	.LVL347:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4965              		.loc 14 246 42 view .LVU1134
 4966              	.LBE5766:
 4967              	.LBE5765:
 4968              	.LBE5767:
 4969              	.LBE5768:
 4970              	.LBE5777:
 371:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4971              		.loc 5 371 13 view .LVU1135
 4972 03ae 002F     		cmp	r7, #0
 4973 03b0 3FF406AF 		beq	.L261
 4974 03b4 1CE7     		b	.L308
 4975              	.LVL348:
 4976              	.L264:
 4977              	.LBB5778:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 253


 4978              	.LBB5760:
 4979              	.LBB5758:
 4980              	.LBB5755:
 4981              	.LBI5755:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4982              		.loc 14 239 10 is_stmt 1 view .LVU1136
 4983              	.LBB5756:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4984              		.loc 14 246 42 is_stmt 0 view .LVU1137
 4985 03b6 C244     		add	r10, r10, r8
 4986              	.LVL349:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4987              		.loc 14 246 49 view .LVU1138
 4988 03b8 4FF0010B 		mov	fp, #1
 4989              	.LVL350:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4990              		.loc 14 246 55 view .LVU1139
 4991 03bc 0EF0070E 		and	lr, lr, #7
 4992              	.LVL351:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4993              		.loc 14 246 49 view .LVU1140
 4994 03c0 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4995              		.loc 14 246 42 view .LVU1141
 4996 03c4 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4997 03c8 2BEA0E0E 		bic	lr, fp, lr
 4998 03cc 8AF814E0 		strb	lr, [r10, #20]
 4999              	.LVL352:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5000              		.loc 14 246 42 view .LVU1142
 5001 03d0 F7E6     		b	.L263
 5002              	.LVL353:
 5003              	.L258:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5004              		.loc 14 246 42 view .LVU1143
 5005              	.LBE5756:
 5006              	.LBE5755:
 5007              	.LBE5758:
 5008              	.LBE5760:
 5009              	.LBE5778:
 5010              	.LBB5779:
 5011              	.LBB5775:
 5012              	.LBB5774:
 5013              	.LBB5772:
 5014              	.LBI5772:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5015              		.loc 14 239 10 is_stmt 1 view .LVU1144
 5016              	.LBB5773:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5017              		.loc 14 246 42 is_stmt 0 view .LVU1145
 5018 03d2 C244     		add	r10, r10, r8
 5019              	.LVL354:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5020              		.loc 14 246 49 view .LVU1146
 5021 03d4 4FF0010B 		mov	fp, #1
 5022              	.LVL355:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 254


 5023              		.loc 14 246 55 view .LVU1147
 5024 03d8 0EF0070E 		and	lr, lr, #7
 5025              	.LVL356:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5026              		.loc 14 246 49 view .LVU1148
 5027 03dc 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5028              		.loc 14 246 42 view .LVU1149
 5029 03e0 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 5030 03e4 2BEA0E0E 		bic	lr, fp, lr
 5031 03e8 8AF814E0 		strb	lr, [r10, #20]
 5032              	.LVL357:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5033              		.loc 14 246 42 view .LVU1150
 5034              	.LBE5773:
 5035              	.LBE5772:
 5036              	.LBE5774:
 5037              	.LBE5775:
 5038              	.LBE5779:
 368:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 5039              		.loc 5 368 13 view .LVU1151
 5040 03ec 0029     		cmp	r1, #0
 5041 03ee 3FF4E6AE 		beq	.L259
 5042 03f2 49E7     		b	.L307
 5043              	.LVL358:
 5044              	.L314:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 5045              		.loc 5 360 56 discriminator 1 view .LVU1152
 5046 03f4 77EEE66A 		vsub.f32	s13, s15, s13
 5047              	.LVL359:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 5048              		.loc 5 360 46 discriminator 1 view .LVU1153
 5049 03f8 F5EEC06A 		vcmpe.f32	s13, #0
 5050 03fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5051 0400 CCBF     		ite	gt
 5052 0402 0127     		movgt	r7, #1
 5053              	.LVL360:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 5054              		.loc 5 360 46 discriminator 1 view .LVU1154
 5055 0404 0027     		movle	r7, #0
 5056 0406 9BE7     		b	.L254
 5057              	.LVL361:
 5058              	.L313:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 5059              		.loc 5 359 54 discriminator 1 view .LVU1155
 5060 0408 36EE666A 		vsub.f32	s12, s12, s13
 5061              	.LVL362:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 5062              		.loc 5 359 45 discriminator 1 view .LVU1156
 5063 040c B5EEC06A 		vcmpe.f32	s12, #0
 5064 0410 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5065 0414 CCBF     		ite	gt
 5066 0416 0121     		movgt	r1, #1
 5067 0418 0021     		movle	r1, #0
 5068 041a 89E7     		b	.L252
 5069              	.LVL363:
 5070              	.L312:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 255


 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 5071              		.loc 5 358 55 discriminator 1 view .LVU1157
 5072 041c 76EE473A 		vsub.f32	s7, s12, s14
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 5073              		.loc 5 358 46 discriminator 1 view .LVU1158
 5074 0420 F5EEC03A 		vcmpe.f32	s7, #0
 5075 0424 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5076 0428 CCBF     		ite	gt
 5077 042a 0122     		movgt	r2, #1
 5078 042c 0022     		movle	r2, #0
 5079 042e 77E7     		b	.L250
 5080              	.LVL364:
 5081              	.L275:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 5082              		.loc 5 354 47 view .LVU1159
 5083 0430 0124     		movs	r4, #1
 5084              	.LVL365:
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 5085              		.loc 5 365 13 view .LVU1160
 5086 0432 002A     		cmp	r2, #0
 5087 0434 3FF4C1AE 		beq	.L257
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 5088              		.loc 5 365 13 view .LVU1161
 5089 0438 49E7     		b	.L306
 5090              	.LVL366:
 5091              	.L272:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 5092              		.loc 5 352 33 view .LVU1162
 5093 043a 74EEC54A 		vsub.f32	s9, s9, s10
 5094              	.LVL367:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 5095              		.loc 5 351 46 view .LVU1163
 5096 043e 0122     		movs	r2, #1
 5097              	.LVL368:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 5098              		.loc 5 352 45 view .LVU1164
 5099 0440 F5EEC04A 		vcmpe.f32	s9, #0
 5100 0444 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5101 0448 7FF589AE 		bpl	.L315
 5102              	.L273:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 5103              		.loc 5 353 34 view .LVU1165
 5104 044c 35EEC55A 		vsub.f32	s10, s11, s10
 5105              	.LVL369:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 5106              		.loc 5 352 45 view .LVU1166
 5107 0450 0121     		movs	r1, #1
 5108              	.LVL370:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 5109              		.loc 5 353 46 view .LVU1167
 5110 0452 B5EEC05A 		vcmpe.f32	s10, #0
 5111 0456 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5112 045a 7FF591AE 		bpl	.L316
 5113              	.LVL371:
 5114              	.L274:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 5115              		.loc 5 353 46 view .LVU1168
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 256


 5116 045e 0127     		movs	r7, #1
 5117              	.LVL372:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 5118              		.loc 5 353 46 view .LVU1169
 5119 0460 97E6     		b	.L249
 5120              	.LVL373:
 5121              	.L241:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 5122              		.loc 5 308 25 view .LVU1170
 5123 0462 DDE91223 		ldrd	r2, r3, [sp, #72]
 5124              	.LVL374:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 5125              		.loc 5 308 25 view .LVU1171
 5126 0466 1344     		add	r3, r3, r2
 5127              	.LVL375:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 5128              		.loc 5 308 25 view .LVU1172
 5129 0468 06EE102A 		vmov	s12, r2	@ int
 5130 046c 1293     		str	r3, [sp, #72]
 5131 046e 139B     		ldr	r3, [sp, #76]
 5132              	.LVL376:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 5133              		.loc 5 308 25 view .LVU1173
 5134 0470 5B42     		rsbs	r3, r3, #0
 5135 0472 1393     		str	r3, [sp, #76]
 5136              	.LVL377:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 5137              		.loc 5 308 25 view .LVU1174
 5138 0474 D8E5     		b	.L242
 5139              		.cfi_endproc
 5140              	.LFE6195:
 5142 0476 00BF     		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 5143              		.align	1
 5144              		.p2align 2,,3
 5145              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 5146              		.syntax unified
 5147              		.thumb
 5148              		.thumb_func
 5149              		.fpu fpv5-d16
 5151              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 5152              	.LVL378:
 5153              	.LFB6196:
 459:../../libdaisy/src/hid/disp/display.h **** 
 460:../../libdaisy/src/hid/disp/display.h ****     Rectangle WriteStringAligned(const char*    str,
 5154              		.loc 5 460 15 is_stmt 1 view -0
 5155              		.cfi_startproc
 5156              		@ args = 12, pretend = 0, frame = 32
 5157              		@ frame_needed = 0, uses_anonymous_args = 0
 5158              		.loc 5 460 15 is_stmt 0 view .LVU1176
 5159 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5160              		.cfi_def_cfa_offset 36
 5161              		.cfi_offset 4, -36
 5162              		.cfi_offset 5, -32
 5163              		.cfi_offset 6, -28
 5164              		.cfi_offset 7, -24
 5165              		.cfi_offset 8, -20
 5166              		.cfi_offset 9, -16
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 257


 5167              		.cfi_offset 10, -12
 5168              		.cfi_offset 11, -8
 5169              		.cfi_offset 14, -4
 5170 0004 89B0     		sub	sp, sp, #36
 5171              		.cfi_def_cfa_offset 72
 5172              		.loc 5 460 15 view .LVU1177
 5173 0006 1D46     		mov	r5, r3
 5174 0008 8846     		mov	r8, r1
 5175              	.LVL379:
 5176              	.LBB5918:
 5177              	.LBI5918:
 461:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 462:../../libdaisy/src/hid/disp/display.h ****                                  Rectangle      boundingBox,
 463:../../libdaisy/src/hid/disp/display.h ****                                  Alignment      alignment,
 464:../../libdaisy/src/hid/disp/display.h ****                                  bool           on) override
 465:../../libdaisy/src/hid/disp/display.h ****     {
 466:../../libdaisy/src/hid/disp/display.h ****         const auto alignedRect
 467:../../libdaisy/src/hid/disp/display.h ****             = GetTextRect(str, font).AlignedWithin(boundingBox, alignment);
 468:../../libdaisy/src/hid/disp/display.h ****         SetCursor(alignedRect.GetX(), alignedRect.GetY());
 469:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 470:../../libdaisy/src/hid/disp/display.h ****         return alignedRect;
 471:../../libdaisy/src/hid/disp/display.h ****     }
 472:../../libdaisy/src/hid/disp/display.h **** 
 473:../../libdaisy/src/hid/disp/display.h ****   private:
 474:../../libdaisy/src/hid/disp/display.h ****     uint32_t strlen(const char* string)
 475:../../libdaisy/src/hid/disp/display.h ****     {
 476:../../libdaisy/src/hid/disp/display.h ****         uint32_t result = 0;
 477:../../libdaisy/src/hid/disp/display.h ****         while(*string++ != '\0')
 478:../../libdaisy/src/hid/disp/display.h ****             result++;
 479:../../libdaisy/src/hid/disp/display.h ****         return result;
 480:../../libdaisy/src/hid/disp/display.h ****     }
 481:../../libdaisy/src/hid/disp/display.h **** 
 482:../../libdaisy/src/hid/disp/display.h ****     Rectangle GetTextRect(const char* text, const FontDef& font)
 5178              		.loc 5 482 15 is_stmt 1 view .LVU1178
 5179              	.LBB5919:
 5180              	.LBB5920:
 5181              	.LBI5920:
 474:../../libdaisy/src/hid/disp/display.h ****     {
 5182              		.loc 5 474 14 view .LVU1179
 5183              	.LBB5921:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5184              		.loc 5 477 25 view .LVU1180
 5185              	.LBE5921:
 5186              	.LBE5920:
 5187              	.LBE5919:
 5188              	.LBE5918:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 5189              		.loc 5 460 15 is_stmt 0 view .LVU1181
 5190 000a 0690     		str	r0, [sp, #24]
 5191              	.LBB5936:
 5192              	.LBB5932:
 5193              	.LBB5925:
 5194              	.LBB5922:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5195              		.loc 5 477 25 view .LVU1182
 5196 000c 1046     		mov	r0, r2
 5197              	.LVL380:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 258


 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5198              		.loc 5 477 25 view .LVU1183
 5199              	.LBE5922:
 5200              	.LBE5925:
 5201              	.LBE5932:
 5202              	.LBE5936:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 5203              		.loc 5 460 15 view .LVU1184
 5204 000e 129C     		ldr	r4, [sp, #72]
 5205              	.LBB5937:
 5206              	.LBB5933:
 5207              	.LBB5926:
 5208              	.LBB5923:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5209              		.loc 5 477 25 view .LVU1185
 5210 0010 10F8013B 		ldrb	r3, [r0], #1	@ zero_extendqisi2
 5211              	.LVL381:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5212              		.loc 5 477 25 view .LVU1186
 5213              	.LBE5923:
 5214              	.LBE5926:
 5215              	.LBE5933:
 5216              	.LBE5937:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 5217              		.loc 5 460 15 view .LVU1187
 5218 0014 1399     		ldr	r1, [sp, #76]
 5219              	.LVL382:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 5220              		.loc 5 460 15 view .LVU1188
 5221 0016 9DF85060 		ldrb	r6, [sp, #80]	@ zero_extendqisi2
 5222 001a 0092     		str	r2, [sp]
 5223              	.LBB5938:
 5224              	.LBB5934:
 5225              	.LBB5927:
 5226              	.LBB5924:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5227              		.loc 5 477 25 view .LVU1189
 5228 001c 33B1     		cbz	r3, .L320
 476:../../libdaisy/src/hid/disp/display.h ****         while(*string++ != '\0')
 5229              		.loc 5 476 18 view .LVU1190
 5230 001e 0022     		movs	r2, #0
 5231              	.LVL383:
 5232              	.L321:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5233              		.loc 5 477 25 view .LVU1191
 5234 0020 10F8013B 		ldrb	r3, [r0], #1	@ zero_extendqisi2
 5235              	.LVL384:
 478:../../libdaisy/src/hid/disp/display.h ****         return result;
 5236              		.loc 5 478 13 view .LVU1192
 5237 0024 0132     		adds	r2, r2, #1
 5238              	.LVL385:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5239              		.loc 5 477 25 is_stmt 1 view .LVU1193
 5240 0026 002B     		cmp	r3, #0
 5241 0028 FAD1     		bne	.L321
 5242              	.LBE5924:
 5243              	.LBE5927:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 259


 483:../../libdaisy/src/hid/disp/display.h ****     {
 484:../../libdaisy/src/hid/disp/display.h ****         const auto numChars = strlen(text);
 485:../../libdaisy/src/hid/disp/display.h ****         return {int16_t(numChars * font.FontWidth), font.FontHeight};
 5244              		.loc 5 485 68 is_stmt 0 view .LVU1194
 5245 002a 93B2     		uxth	r3, r2
 5246              	.LVL386:
 5247              	.L320:
 5248              		.loc 5 485 68 view .LVU1195
 5249 002c 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 5250              		.loc 5 485 58 view .LVU1196
 5251 002e 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 5252              		.loc 5 485 68 view .LVU1197
 5253 0030 12FB03F3 		smulbb	r3, r2, r3
 5254 0034 02B2     		sxth	r2, r0
 5255              	.LVL387:
 5256              	.LBB5928:
 5257              	.LBI5928:
 5258              		.file 33 "../../libdaisy/src/hid/disp/graphics_common.h"
   1:../../libdaisy/src/hid/disp/graphics_common.h **** #pragma once
   2:../../libdaisy/src/hid/disp/graphics_common.h **** 
   3:../../libdaisy/src/hid/disp/graphics_common.h **** #include <cstdint>
   4:../../libdaisy/src/hid/disp/graphics_common.h **** 
   5:../../libdaisy/src/hid/disp/graphics_common.h **** namespace daisy
   6:../../libdaisy/src/hid/disp/graphics_common.h **** {
   7:../../libdaisy/src/hid/disp/graphics_common.h **** /** Justifications */
   8:../../libdaisy/src/hid/disp/graphics_common.h **** enum class Alignment
   9:../../libdaisy/src/hid/disp/graphics_common.h **** {
  10:../../libdaisy/src/hid/disp/graphics_common.h ****     centered,
  11:../../libdaisy/src/hid/disp/graphics_common.h ****     topLeft,
  12:../../libdaisy/src/hid/disp/graphics_common.h ****     topCentered,
  13:../../libdaisy/src/hid/disp/graphics_common.h ****     topRight,
  14:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomLeft,
  15:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomCentered,
  16:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomRight,
  17:../../libdaisy/src/hid/disp/graphics_common.h ****     centeredLeft,
  18:../../libdaisy/src/hid/disp/graphics_common.h ****     centeredRight
  19:../../libdaisy/src/hid/disp/graphics_common.h **** };
  20:../../libdaisy/src/hid/disp/graphics_common.h **** 
  21:../../libdaisy/src/hid/disp/graphics_common.h **** class Rectangle
  22:../../libdaisy/src/hid/disp/graphics_common.h **** {
  23:../../libdaisy/src/hid/disp/graphics_common.h ****   public:
  24:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle() : x_(0), y_(0), width_(0), height_(0) {}
  25:../../libdaisy/src/hid/disp/graphics_common.h **** 
  26:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(int16_t width, int16_t height)
 5259              		.loc 33 26 5 is_stmt 1 view .LVU1198
 5260              	.LBB5929:
 5261              	.LBI5929:
  27:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(0), y_(0), width_(max(0, width)), height_(max(0, height))
  28:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  29:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  30:../../libdaisy/src/hid/disp/graphics_common.h **** 
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(int16_t x, int16_t y, int16_t width, int16_t height)
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
  33:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  34:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  35:../../libdaisy/src/hid/disp/graphics_common.h **** 
  36:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(const Rectangle& other) { *this = other; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 260


  37:../../libdaisy/src/hid/disp/graphics_common.h **** 
  38:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle& operator=(const Rectangle& other)
  39:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  40:../../libdaisy/src/hid/disp/graphics_common.h ****         x_      = other.x_;
  41:../../libdaisy/src/hid/disp/graphics_common.h ****         y_      = other.y_;
  42:../../libdaisy/src/hid/disp/graphics_common.h ****         width_  = other.width_;
  43:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ = other.height_;
  44:../../libdaisy/src/hid/disp/graphics_common.h ****         return *this;
  45:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  46:../../libdaisy/src/hid/disp/graphics_common.h **** 
  47:../../libdaisy/src/hid/disp/graphics_common.h ****     bool operator==(const Rectangle& other) const
  48:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  49:../../libdaisy/src/hid/disp/graphics_common.h ****         return (x_ == other.x_) && (y_ == other.y_) && (width_ == other.width_)
  50:../../libdaisy/src/hid/disp/graphics_common.h ****                && (height_ == other.height_);
  51:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  52:../../libdaisy/src/hid/disp/graphics_common.h ****     bool operator!=(const Rectangle& other) const { return !(*this == other); }
  53:../../libdaisy/src/hid/disp/graphics_common.h **** 
  54:../../libdaisy/src/hid/disp/graphics_common.h ****     bool IsEmpty() const { return (width_ <= 0) || (height_ <= 0); }
  55:../../libdaisy/src/hid/disp/graphics_common.h **** 
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetX() const { return x_; }
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
  58:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
  59:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetHeight() const { return height_; }
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetRight() const { return x_ + width_; }
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
  63:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
  64:../../libdaisy/src/hid/disp/graphics_common.h **** 
  65:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithX(int16_t x) const { return {x, y_, width_, height_}; }
  66:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithY(int16_t y) const { return {x_, y, width_, height_}; }
  67:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithWidth(int16_t width) const
  68:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  69:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width, height_};
  70:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  71:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithHeight(int16_t height) const
  72:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  73:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, height};
  74:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  75:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithSize(int16_t width, int16_t height) const
  76:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  77:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width, height};
  78:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  79:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithWidthKeepingCenter(int16_t width) const
  80:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  81:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width, height_)
  82:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  83:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  84:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithHeightKeepingCenter(int16_t height) const
  85:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  86:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width_, height)
  87:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  88:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  89:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithSizeKeepingCenter(int16_t width, int16_t height) const
  90:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  91:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width, height)
  92:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  93:../../libdaisy/src/hid/disp/graphics_common.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 261


  94:../../libdaisy/src/hid/disp/graphics_common.h **** 
  95:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Reduced(int16_t sizeToReduce) const
  96:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  97:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + sizeToReduce),
  98:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + sizeToReduce),
  99:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(width_ - 2 * sizeToReduce),
 100:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(height_ - 2 * sizeToReduce)};
 101:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 102:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Reduced(int16_t xToReduce, int16_t yToReduce) const
 103:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 104:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + xToReduce),
 105:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + yToReduce),
 106:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(width_ - 2 * xToReduce),
 107:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(height_ - 2 * yToReduce)};
 108:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 109:../../libdaisy/src/hid/disp/graphics_common.h **** 
 110:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Translated(int16_t x, int16_t y) const
 111:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 112:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + x), int16_t(y_ + y), width_, height_};
 113:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 114:../../libdaisy/src/hid/disp/graphics_common.h **** 
 115:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithLeft(int16_t left) const
 116:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 117:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newWidth = int16_t((x_ - left) + width_);
 118:../../libdaisy/src/hid/disp/graphics_common.h ****         return {left, y_, newWidth, height_};
 119:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 120:../../libdaisy/src/hid/disp/graphics_common.h **** 
 121:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithRight(int16_t right) const
 122:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 123:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newWidth = int16_t(right - x_);
 124:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, newWidth, height_};
 125:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 126:../../libdaisy/src/hid/disp/graphics_common.h **** 
 127:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTop(int16_t top) const
 128:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 129:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newHeight = int16_t((y_ - top) + height_);
 130:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, top, width_, newHeight};
 131:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 132:../../libdaisy/src/hid/disp/graphics_common.h **** 
 133:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithBottom(int16_t bottom) const
 134:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 135:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newHeight = int16_t(bottom - y_);
 136:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, newHeight};
 137:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 138:../../libdaisy/src/hid/disp/graphics_common.h **** 
 139:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedLeft(int16_t pxToTrim) const
 140:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 141:../../libdaisy/src/hid/disp/graphics_common.h ****         return {
 142:../../libdaisy/src/hid/disp/graphics_common.h ****             int16_t(x_ + pxToTrim), y_, int16_t(width_ - pxToTrim), height_};
 143:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 144:../../libdaisy/src/hid/disp/graphics_common.h **** 
 145:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedRight(int16_t pxToTrim) const
 146:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 147:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, int16_t(width_ - pxToTrim), height_};
 148:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 149:../../libdaisy/src/hid/disp/graphics_common.h **** 
 150:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedTop(int16_t pxToTrim) const
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 262


 151:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 152:../../libdaisy/src/hid/disp/graphics_common.h ****         return {
 153:../../libdaisy/src/hid/disp/graphics_common.h ****             x_, int16_t(y_ + pxToTrim), width_, int16_t(height_ - pxToTrim)};
 154:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 155:../../libdaisy/src/hid/disp/graphics_common.h **** 
 156:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedBottom(int16_t pxToTrim) const
 157:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 158:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, int16_t(height_ - pxToTrim)};
 159:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 160:../../libdaisy/src/hid/disp/graphics_common.h **** 
 161:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenterX(int16_t centerX) const
 162:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 163:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + centerX - GetCenterX()), y_, width_, height_};
 164:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 165:../../libdaisy/src/hid/disp/graphics_common.h **** 
 166:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenterY(int16_t centerY) const
 167:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 168:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, int16_t(y_ + centerY - GetCenterY()), width_, height_};
 169:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 170:../../libdaisy/src/hid/disp/graphics_common.h **** 
 171:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenter(int16_t centerX, int16_t centerY) const
 172:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 173:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + centerX - GetCenterX()),
 174:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + centerY - GetCenterY()),
 175:../../libdaisy/src/hid/disp/graphics_common.h ****                 width_,
 176:../../libdaisy/src/hid/disp/graphics_common.h ****                 height_};
 177:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 178:../../libdaisy/src/hid/disp/graphics_common.h **** 
 179:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromLeft(int16_t pxToRemove)
 180:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 181:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto result = this->WithWidth(min(pxToRemove, width_));
 182:../../libdaisy/src/hid/disp/graphics_common.h ****         x_ += min(pxToRemove, width_);
 183:../../libdaisy/src/hid/disp/graphics_common.h ****         width_ = max(int16_t(width_ - pxToRemove), 0);
 184:../../libdaisy/src/hid/disp/graphics_common.h ****         return result;
 185:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 186:../../libdaisy/src/hid/disp/graphics_common.h **** 
 187:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromRight(int16_t pxToRemove)
 188:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 189:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto canRemove = min(pxToRemove, width_);
 190:../../libdaisy/src/hid/disp/graphics_common.h ****         width_ -= canRemove;
 191:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + width_), y_, canRemove, height_};
 192:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 193:../../libdaisy/src/hid/disp/graphics_common.h **** 
 194:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromTop(int16_t pxToRemove)
 195:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 196:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto result = this->WithHeight(min(pxToRemove, height_));
 197:../../libdaisy/src/hid/disp/graphics_common.h ****         y_ += min(pxToRemove, height_);
 198:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ = max(height_ - pxToRemove, 0);
 199:../../libdaisy/src/hid/disp/graphics_common.h ****         return result;
 200:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 201:../../libdaisy/src/hid/disp/graphics_common.h **** 
 202:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromBottom(int16_t pxToRemove)
 203:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 204:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto canRemove = min(pxToRemove, height_);
 205:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ -= canRemove;
 206:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, int16_t(y_ + height_), width_, canRemove};
 207:../../libdaisy/src/hid/disp/graphics_common.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 263


 208:../../libdaisy/src/hid/disp/graphics_common.h **** 
 209:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle AlignedWithin(const Rectangle& other, Alignment alignment) const
 210:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 211:../../libdaisy/src/hid/disp/graphics_common.h ****         switch(alignment)
 212:../../libdaisy/src/hid/disp/graphics_common.h ****         {
 213:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topLeft:
 214:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_, other.y_, width_, height_};
 215:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 217:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 218:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 219:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 220:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topCentered:
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 222:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 223:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 224:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 225:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomLeft:
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 228:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 229:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 230:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomRight:
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 232:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 233:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 234:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 235:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomCentered:
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 238:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 239:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 240:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centeredLeft:
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 242:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 243:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 244:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 245:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centeredRight:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 247:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 248:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 249:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 250:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centered:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 253:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 254:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 255:../../libdaisy/src/hid/disp/graphics_common.h ****             default: return {};
 256:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 257:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 258:../../libdaisy/src/hid/disp/graphics_common.h **** 
 259:../../libdaisy/src/hid/disp/graphics_common.h ****   private:
 260:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t x_, y_, width_, height_;
 261:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t max(int16_t a, int16_t b) { return (a > b) ? a : b; }
 5262              		.loc 33 261 13 view .LVU1199
 5263              	.LBE5929:
 5264              	.LBE5928:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 264


 5265              	.LBE5934:
 5266              	.LBE5938:
 5267              		.loc 33 261 41 view .LVU1200
 5268              	.LBB5939:
 5269              	.LBB5935:
 5270              	.LBB5931:
 5271              	.LBB5930:
 5272              	.LBI5930:
 5273              		.loc 33 261 13 view .LVU1201
 5274              	.LBE5930:
 5275              	.LBE5931:
 5276              	.LBE5935:
 5277              	.LBE5939:
 5278              		.loc 33 261 41 view .LVU1202
 5279              	.LBB5940:
 5280              	.LBI5940:
 209:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5281              		.loc 33 209 15 view .LVU1203
 5282              	.LBB5941:
 211:../../libdaisy/src/hid/disp/graphics_common.h ****         {
 5283              		.loc 33 211 9 view .LVU1204
 5284 0036 1BB2     		sxth	r3, r3
 5285 0038 23EAE373 		bic	r3, r3, r3, asr #31
 5286 003c 0829     		cmp	r1, #8
 5287 003e 00F2A981 		bhi	.L322
 5288 0042 DFE811F0 		tbh	[pc, r1, lsl #1]
 5289              	.L324:
 5290 0046 0201     		.2byte	(.L332-.L324)/2
 5291 0048 1401     		.2byte	(.L331-.L324)/2
 5292 004a 2001     		.2byte	(.L330-.L324)/2
 5293 004c 3401     		.2byte	(.L329-.L324)/2
 5294 004e 4201     		.2byte	(.L328-.L324)/2
 5295 0050 5001     		.2byte	(.L327-.L324)/2
 5296 0052 6701     		.2byte	(.L326-.L324)/2
 5297 0054 7101     		.2byte	(.L325-.L324)/2
 5298 0056 0900     		.2byte	(.L323-.L324)/2
 5299              		.p2align 1
 5300              	.L323:
 245:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 5301              		.loc 33 245 13 view .LVU1205
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5302              		.loc 33 246 17 view .LVU1206
 5303              	.LVL388:
 5304              	.LBB5942:
 5305              	.LBI5942:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5306              		.loc 33 60 13 view .LVU1207
 5307              	.LBB5943:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5308              		.loc 33 60 32 view .LVU1208
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5309              		.loc 33 60 42 is_stmt 0 view .LVU1209
 5310 0058 A188     		ldrh	r1, [r4, #4]
 5311              	.LVL389:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5312              		.loc 33 60 42 view .LVU1210
 5313 005a 2788     		ldrh	r7, [r4]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 265


 5314 005c 0F44     		add	r7, r7, r1
 5315              	.LBE5943:
 5316              	.LBE5942:
 5317              	.LBB5944:
 5318              	.LBB5945:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5319              		.loc 33 63 54 view .LVU1211
 5320 005e B4F90610 		ldrsh	r1, [r4, #6]
 5321              	.LBE5945:
 5322              	.LBE5944:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5323              		.loc 33 246 50 view .LVU1212
 5324 0062 FF1A     		subs	r7, r7, r3
 5325              	.LBB5949:
 5326              	.LBB5946:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5327              		.loc 33 63 54 view .LVU1213
 5328 0064 0029     		cmp	r1, #0
 5329              	.LBE5946:
 5330              	.LBE5949:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5331              		.loc 33 246 50 view .LVU1214
 5332 0066 BFB2     		uxth	r7, r7
 5333              	.LVL390:
 5334              	.LBB5950:
 5335              	.LBI5944:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5336              		.loc 33 63 13 is_stmt 1 view .LVU1215
 5337              	.LBB5947:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5338              		.loc 33 63 34 view .LVU1216
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5339              		.loc 33 63 34 is_stmt 0 view .LVU1217
 5340              	.LBE5947:
 5341              	.LBE5950:
 5342              	.LBB5951:
 5343              	.LBI5951:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5344              		.loc 33 63 13 is_stmt 1 view .LVU1218
 5345              	.LBB5952:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5346              		.loc 33 63 34 view .LVU1219
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5347              		.loc 33 63 34 is_stmt 0 view .LVU1220
 5348              	.LBE5952:
 5349              	.LBE5951:
 5350              	.LBB5953:
 5351              	.LBB5948:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5352              		.loc 33 63 54 view .LVU1221
 5353 0068 C0F2FF80 		blt	.L395
 5354              	.L339:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5355              		.loc 33 63 54 view .LVU1222
 5356              	.LBE5948:
 5357              	.LBE5953:
 5358              	.LBB5954:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 266


 5359              	.LBB5955:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5360              		.loc 33 63 44 view .LVU1223
 5361 006c B4F802C0 		ldrh	ip, [r4, #2]
 5362              	.LBE5955:
 5363              	.LBE5954:
 5364              	.LBB5961:
 5365              	.LBB5962:
 5366              	.LBB5963:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5367              		.loc 33 32 66 view .LVU1224
 5368 0070 0698     		ldr	r0, [sp, #24]
 5369              	.LBE5963:
 5370              	.LBE5962:
 5371              	.LBE5961:
 5372              	.LBB5974:
 5373              	.LBB5956:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5374              		.loc 33 63 44 view .LVU1225
 5375 0072 0CEB6104 		add	r4, ip, r1, asr #1
 5376              	.LVL391:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5377              		.loc 33 63 44 view .LVU1226
 5378              	.LBE5956:
 5379              	.LBE5974:
 5380              	.LBB5975:
 5381              	.LBB5970:
 5382              	.LBB5966:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5383              		.loc 33 32 66 view .LVU1227
 5384 0076 C280     		strh	r2, [r0, #6]	@ movhi
 5385              	.LBE5966:
 5386              	.LBE5970:
 5387              	.LBE5975:
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5388              		.loc 33 252 58 view .LVU1228
 5389 0078 A4EB5202 		sub	r2, r4, r2, lsr #1
 5390              	.LBB5976:
 5391              	.LBB5971:
 5392              	.LBB5967:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5393              		.loc 33 32 66 view .LVU1229
 5394 007c 8380     		strh	r3, [r0, #4]	@ movhi
 5395 007e 0780     		strh	r7, [r0]	@ movhi
 5396              	.LBE5967:
 5397              	.LBE5971:
 5398              	.LBE5976:
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5399              		.loc 33 252 58 view .LVU1230
 5400 0080 94B2     		uxth	r4, r2
 5401              	.LVL392:
 5402              	.LBB5977:
 5403              	.LBI5961:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5404              		.loc 33 31 5 is_stmt 1 view .LVU1231
 5405              	.LBB5972:
 5406              	.LBB5968:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 267


  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5407              		.loc 33 32 66 is_stmt 0 view .LVU1232
 5408 0082 4480     		strh	r4, [r0, #2]	@ movhi
 5409              	.LVL393:
 5410              	.LBB5964:
 5411              	.LBI5964:
 5412              		.loc 33 261 13 is_stmt 1 view .LVU1233
 5413              	.LBE5964:
 5414              	.LBE5968:
 5415              	.LBE5972:
 5416              	.LBE5977:
 5417              	.LBE5941:
 5418              	.LBE5940:
 5419              		.loc 33 261 41 view .LVU1234
 5420              	.LBB6164:
 5421              	.LBB6142:
 5422              	.LBB5978:
 5423              	.LBB5973:
 5424              	.LBB5969:
 5425              	.LBB5965:
 5426              	.LBI5965:
 5427              		.loc 33 261 13 view .LVU1235
 5428              	.LBE5965:
 5429              	.LBE5969:
 5430              	.LBE5973:
 5431              	.LBE5978:
 5432              	.LBE6142:
 5433              	.LBE6164:
 5434              		.loc 33 261 41 view .LVU1236
 5435              	.L333:
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
 5436              		.loc 33 56 28 view .LVU1237
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
 5437              		.loc 33 57 28 view .LVU1238
 5438              	.LBB6165:
 5439              	.LBI6165:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 5440              		.loc 5 171 10 view .LVU1239
 5441              	.LBB6166:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5442              		.loc 5 173 9 view .LVU1240
 5443 0084 A64A     		ldr	r2, .L405
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5444              		.loc 5 173 33 is_stmt 0 view .LVU1241
 5445 0086 D8F80030 		ldr	r3, [r8]
 5446 008a 1146     		mov	r1, r2
 5447 008c 0192     		str	r2, [sp, #4]
 5448 008e DA68     		ldr	r2, [r3, #12]
 5449 0090 8A42     		cmp	r2, r1
 5450 0092 40F08D81 		bne	.L341
 5451 0096 8020     		movs	r0, #128
 5452              	.LVL394:
 5453              	.L342:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5454              		.loc 5 173 19 view .LVU1242
 5455 0098 B842     		cmp	r0, r7
 5456 009a 05D8     		bhi	.L343
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 268


 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5457              		.loc 5 173 44 view .LVU1243
 5458 009c DA68     		ldr	r2, [r3, #12]
 5459 009e 0199     		ldr	r1, [sp, #4]
 5460 00a0 8A42     		cmp	r2, r1
 5461 00a2 40F09A81 		bne	.L396
 5462 00a6 7F27     		movs	r7, #127
 5463              	.L343:
 5464 00a8 9E4A     		ldr	r2, .L405+4
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5465              		.loc 5 174 34 view .LVU1244
 5466 00aa 9B68     		ldr	r3, [r3, #8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5467              		.loc 5 173 19 view .LVU1245
 5468 00ac A8F80470 		strh	r7, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5469              		.loc 5 174 9 is_stmt 1 view .LVU1246
 5470 00b0 9342     		cmp	r3, r2
 5471 00b2 0392     		str	r2, [sp, #12]
 5472 00b4 40F08981 		bne	.L373
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5473              		.loc 5 174 34 is_stmt 0 view .LVU1247
 5474 00b8 4020     		movs	r0, #64
 5475              	.L345:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5476              		.loc 5 174 19 view .LVU1248
 5477 00ba A042     		cmp	r0, r4
 5478 00bc 07D8     		bhi	.L347
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5479              		.loc 5 174 46 view .LVU1249
 5480 00be D8F80030 		ldr	r3, [r8]
 5481 00c2 039A     		ldr	r2, [sp, #12]
 5482 00c4 9B68     		ldr	r3, [r3, #8]
 5483 00c6 9342     		cmp	r3, r2
 5484 00c8 40F08281 		bne	.L397
 5485 00cc 3F24     		movs	r4, #63
 5486              	.L347:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5487              		.loc 5 174 46 view .LVU1250
 5488              	.LBE6166:
 5489              	.LBE6165:
 5490              	.LBB6170:
 5491              	.LBB6171:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5492              		.loc 5 443 9 view .LVU1251
 5493 00ce 009B     		ldr	r3, [sp]
 5494              	.LBE6171:
 5495              	.LBE6170:
 5496              	.LBB6219:
 5497              	.LBB6167:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5498              		.loc 5 174 19 view .LVU1252
 5499 00d0 A8F80640 		strh	r4, [r8, #6]	@ movhi
 5500              	.LVL395:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5501              		.loc 5 174 19 view .LVU1253
 5502              	.LBE6167:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 269


 5503              	.LBE6219:
 5504              	.LBB6220:
 5505              	.LBB6216:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5506              		.loc 5 443 9 view .LVU1254
 5507 00d4 93F800B0 		ldrb	fp, [r3]	@ zero_extendqisi2
 5508 00d8 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 5509              	.LVL396:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5510              		.loc 5 443 9 view .LVU1255
 5511 00da 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 5512              	.LVL397:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5513              		.loc 5 443 9 view .LVU1256
 5514 00dc 0493     		str	r3, [sp, #16]
 5515              	.LVL398:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5516              		.loc 5 443 9 view .LVU1257
 5517 00de 6B68     		ldr	r3, [r5, #4]
 5518 00e0 0793     		str	r3, [sp, #28]
 5519              	.LVL399:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5520              		.loc 5 443 9 view .LVU1258
 5521              	.LBE6216:
 5522              	.LBI6170:
 440:../../libdaisy/src/hid/disp/display.h ****     {
 5523              		.loc 5 440 10 is_stmt 1 view .LVU1259
 5524              	.LBB6217:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5525              		.loc 5 443 9 view .LVU1260
 5526 00e2 BBF1000F 		cmp	fp, #0
 5527 00e6 00F0AC80 		beq	.L319
 5528              	.LVL400:
 5529              	.L349:
 5530              	.LBB6172:
 5531              	.LBI6172:
 396:../../libdaisy/src/hid/disp/display.h ****     {
 5532              		.loc 5 396 10 view .LVU1261
 5533              	.LBB6173:
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 5534              		.loc 5 401 20 is_stmt 0 view .LVU1262
 5535 00ea ABF12005 		sub	r5, fp, #32
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 5536              		.loc 5 401 9 view .LVU1263
 5537 00ee EBB2     		uxtb	r3, r5
 5538 00f0 5E2B     		cmp	r3, #94
 5539 00f2 00F22E81 		bhi	.L353
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 5540              		.loc 5 405 17 view .LVU1264
 5541 00f6 D8F80030 		ldr	r3, [r8]
 5542 00fa 019A     		ldr	r2, [sp, #4]
 5543 00fc DB68     		ldr	r3, [r3, #12]
 5544 00fe 9342     		cmp	r3, r2
 5545 0100 40F02A81 		bne	.L398
 5546 0104 8020     		movs	r0, #128
 5547              	.L352:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 270


 5548              		.loc 5 405 23 view .LVU1265
 5549 0106 B8F80430 		ldrh	r3, [r8, #4]
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 5550              		.loc 5 405 33 view .LVU1266
 5551 010a 2344     		add	r3, r3, r4
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5552              		.loc 5 406 12 view .LVU1267
 5553 010c 9842     		cmp	r0, r3
 5554 010e C0F22081 		blt	.L353
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5555              		.loc 5 406 21 view .LVU1268
 5556 0112 D8F80030 		ldr	r3, [r8]
 5557 0116 039A     		ldr	r2, [sp, #12]
 5558 0118 9B68     		ldr	r3, [r3, #8]
 5559 011a 9342     		cmp	r3, r2
 5560 011c 40F01F81 		bne	.L399
 5561 0120 4020     		movs	r0, #64
 5562              	.L354:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5563              		.loc 5 406 27 view .LVU1269
 5564 0122 B8F80610 		ldrh	r1, [r8, #6]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5565              		.loc 5 406 37 view .LVU1270
 5566 0126 049A     		ldr	r2, [sp, #16]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5567              		.loc 5 406 27 view .LVU1271
 5568 0128 0291     		str	r1, [sp, #8]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5569              		.loc 5 406 37 view .LVU1272
 5570 012a 8B18     		adds	r3, r1, r2
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5571              		.loc 5 406 12 view .LVU1273
 5572 012c 9842     		cmp	r0, r3
 5573 012e C0F21081 		blt	.L353
 5574              	.LVL401:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 5575              		.loc 5 413 22 is_stmt 1 view .LVU1274
 5576 0132 002A     		cmp	r2, #0
 5577 0134 00F01E81 		beq	.L355
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 5578              		.loc 5 415 37 is_stmt 0 view .LVU1275
 5579 0138 02FB05F5 		mul	r5, r2, r5
 5580 013c 6FF0004E 		mvn	lr, #-2147483648
 5581 0140 079B     		ldr	r3, [sp, #28]
 5582 0142 AE44     		add	lr, lr, r5
 5583 0144 1544     		add	r5, r5, r2
 5584 0146 CDF814B0 		str	fp, [sp, #20]
 5585 014a 03EB4E0E 		add	lr, r3, lr, lsl #1
 5586 014e 023B     		subs	r3, r3, #2
 434:../../libdaisy/src/hid/disp/display.h **** 
 5587              		.loc 5 434 19 view .LVU1276
 5588 0150 B8F804A0 		ldrh	r10, [r8, #4]
 5589 0154 03EB4503 		add	r3, r3, r5, lsl #1
 5590 0158 0D46     		mov	r5, r1
 5591 015a 9B46     		mov	fp, r3
 5592              	.LVL402:
 5593              	.L358:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 271


 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 5594              		.loc 5 415 15 view .LVU1277
 5595 015c 3EF8027F 		ldrh	r7, [lr, #2]!
 5596              	.LVL403:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5597              		.loc 5 416 26 is_stmt 1 view .LVU1278
 5598 0160 A4B3     		cbz	r4, .L363
 5599              	.LBB6174:
 5600              	.LBB6175:
 5601              	.LBB6176:
 5602              	.LBB6177:
 5603              	.LBB6178:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5604              		.loc 14 246 55 is_stmt 0 view .LVU1279
 5605 0162 05F00703 		and	r3, r5, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5606              		.loc 14 246 49 view .LVU1280
 5607 0166 4FF0010C 		mov	ip, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5608              		.loc 14 246 28 view .LVU1281
 5609 016a EA08     		lsrs	r2, r5, #3
 5610 016c 5146     		mov	r1, r10
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5611              		.loc 14 246 49 view .LVU1282
 5612 016e 0CFA03FC 		lsl	ip, ip, r3
 5613 0172 0AF11403 		add	r3, r10, #20
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5614              		.loc 14 246 42 view .LVU1283
 5615 0176 4FFA8CFC 		sxtb	ip, ip
 5616 017a 03EBC212 		add	r2, r3, r2, lsl #7
 5617              	.LBE6178:
 5618              	.LBE6177:
 5619              	.LBE6176:
 5620              	.LBE6175:
 5621              	.LBE6174:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5622              		.loc 5 416 19 view .LVU1284
 5623 017e 0023     		movs	r3, #0
 5624              	.LBB6196:
 5625              	.LBB6191:
 5626              	.LBB6186:
 5627              	.LBB6182:
 5628              	.LBB6179:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5629              		.loc 14 246 42 view .LVU1285
 5630 0180 6FEA0C09 		mvn	r9, ip
 5631 0184 4244     		add	r2, r2, r8
 5632 0186 0DE0     		b	.L364
 5633              	.LVL404:
 5634              	.L400:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5635              		.loc 14 246 42 view .LVU1286
 5636              	.LBE6179:
 5637              	.LBE6182:
 5638              	.LBE6186:
 5639              	.LBE6191:
 5640              	.LBE6196:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 272


 5641              	.LBB6197:
 5642              	.LBI6197:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 5643              		.loc 4 41 10 is_stmt 1 view .LVU1287
 5644              	.LBB6198:
 5645              	.LBI6198:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5646              		.loc 14 239 10 view .LVU1288
 5647              	.LBB6199:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 5648              		.loc 14 241 9 is_stmt 0 view .LVU1289
 5649 0188 7F29     		cmp	r1, #127
 5650 018a 06D8     		bhi	.L360
 5651 018c 3F2D     		cmp	r5, #63
 5652 018e 04D8     		bhi	.L360
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5653              		.loc 14 244 42 view .LVU1290
 5654 0190 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5655              		.loc 14 243 9 view .LVU1291
 5656 0192 96B1     		cbz	r6, .L362
 5657              	.L394:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5658              		.loc 14 243 9 view .LVU1292
 5659              	.LBE6199:
 5660              	.LBE6198:
 5661              	.LBE6197:
 5662              	.LBB6200:
 5663              	.LBB6192:
 5664              	.LBB6187:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5665              		.loc 14 244 42 view .LVU1293
 5666 0194 4CEA0000 		orr	r0, ip, r0
 5667 0198 1070     		strb	r0, [r2]
 5668              	.L360:
 5669              	.LBE6187:
 5670              	.LBE6192:
 5671              	.LBE6200:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5672              		.loc 5 416 13 is_stmt 1 view .LVU1294
 5673 019a 0133     		adds	r3, r3, #1
 5674              	.LVL405:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5675              		.loc 5 416 26 view .LVU1295
 5676 019c 0132     		adds	r2, r2, #1
 5677 019e 0131     		adds	r1, r1, #1
 5678 01a0 9C42     		cmp	r4, r3
 5679 01a2 13D0     		beq	.L363
 5680              	.LVL406:
 5681              	.L364:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 5682              		.loc 5 418 23 is_stmt 0 view .LVU1296
 5683 01a4 07FA03F0 		lsl	r0, r7, r3
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 5684              		.loc 5 418 17 view .LVU1297
 5685 01a8 0004     		lsls	r0, r0, #16
 5686 01aa EDD4     		bmi	.L400
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 273


 5687              	.LVL407:
 5688              	.LBB6201:
 5689              	.LBI6174:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 5690              		.loc 4 41 10 is_stmt 1 view .LVU1298
 5691              	.LBB6193:
 5692              	.LBI6175:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5693              		.loc 14 239 10 view .LVU1299
 5694              	.LBB6188:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 5695              		.loc 14 241 9 is_stmt 0 view .LVU1300
 5696 01ac 7F29     		cmp	r1, #127
 5697 01ae F4D8     		bhi	.L360
 5698 01b0 3F2D     		cmp	r5, #63
 5699 01b2 F2D8     		bhi	.L360
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5700              		.loc 14 244 42 view .LVU1301
 5701 01b4 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5702              		.loc 14 243 9 view .LVU1302
 5703 01b6 002E     		cmp	r6, #0
 5704 01b8 ECD0     		beq	.L394
 5705              	.L362:
 5706              	.LVL408:
 5707              	.LBB6183:
 5708              	.LBI6177:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5709              		.loc 14 239 10 is_stmt 1 view .LVU1303
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5710              		.loc 14 239 10 is_stmt 0 view .LVU1304
 5711              	.LBE6183:
 5712              	.LBE6188:
 5713              	.LBE6193:
 5714              	.LBE6201:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5715              		.loc 5 416 13 view .LVU1305
 5716 01ba 0133     		adds	r3, r3, #1
 5717              	.LVL409:
 5718              	.LBB6202:
 5719              	.LBB6194:
 5720              	.LBB6189:
 5721              	.LBB6184:
 5722              	.LBB6180:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5723              		.loc 14 246 42 view .LVU1306
 5724 01bc 09EA0000 		and	r0, r9, r0
 5725              	.LBE6180:
 5726              	.LBE6184:
 5727              	.LBE6189:
 5728              	.LBE6194:
 5729              	.LBE6202:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5730              		.loc 5 416 26 view .LVU1307
 5731 01c0 0132     		adds	r2, r2, #1
 5732 01c2 0131     		adds	r1, r1, #1
 5733 01c4 9C42     		cmp	r4, r3
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 274


 5734              	.LBB6203:
 5735              	.LBB6195:
 5736              	.LBB6190:
 5737              	.LBB6185:
 5738              	.LBB6181:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5739              		.loc 14 246 42 view .LVU1308
 5740 01c6 02F8010C 		strb	r0, [r2, #-1]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5741              		.loc 14 246 42 view .LVU1309
 5742              	.LBE6181:
 5743              	.LBE6185:
 5744              	.LBE6190:
 5745              	.LBE6195:
 5746              	.LBE6203:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5747              		.loc 5 416 13 is_stmt 1 view .LVU1310
 5748              	.LVL410:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5749              		.loc 5 416 26 view .LVU1311
 5750 01ca EBD1     		bne	.L364
 5751              	.LVL411:
 5752              	.L363:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 5753              		.loc 5 413 9 view .LVU1312
 413:../../libdaisy/src/hid/disp/display.h ****         {
 5754              		.loc 5 413 22 view .LVU1313
 5755 01cc F345     		cmp	fp, lr
 5756 01ce 05F10105 		add	r5, r5, #1
 5757 01d2 C3D1     		bne	.L358
 5758 01d4 DDF814B0 		ldr	fp, [sp, #20]
 5759              	.LVL412:
 5760              	.L357:
 5761              	.LBB6204:
 5762              	.LBB6205:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5763              		.loc 5 173 33 is_stmt 0 view .LVU1314
 5764 01d8 D8F80020 		ldr	r2, [r8]
 5765              	.LBE6205:
 5766              	.LBE6204:
 434:../../libdaisy/src/hid/disp/display.h **** 
 5767              		.loc 5 434 18 view .LVU1315
 5768 01dc 0AEB0405 		add	r5, r10, r4
 5769 01e0 0199     		ldr	r1, [sp, #4]
 5770              	.LBB6210:
 5771              	.LBB6206:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5772              		.loc 5 173 33 view .LVU1316
 5773 01e2 D368     		ldr	r3, [r2, #12]
 5774              	.LBE6206:
 5775              	.LBE6210:
 434:../../libdaisy/src/hid/disp/display.h **** 
 5776              		.loc 5 434 18 view .LVU1317
 5777 01e4 ADB2     		uxth	r5, r5
 5778              	.LVL413:
 5779              	.LBB6211:
 5780              	.LBI6204:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 275


 171:../../libdaisy/src/hid/disp/display.h ****     {
 5781              		.loc 5 171 10 is_stmt 1 view .LVU1318
 5782              	.LBB6207:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5783              		.loc 5 173 9 view .LVU1319
 5784 01e6 8B42     		cmp	r3, r1
 5785 01e8 40F0BF80 		bne	.L401
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5786              		.loc 5 173 33 is_stmt 0 view .LVU1320
 5787 01ec 8020     		movs	r0, #128
 5788              	.L365:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5789              		.loc 5 173 19 view .LVU1321
 5790 01ee 8542     		cmp	r5, r0
 5791 01f0 05D3     		bcc	.L366
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5792              		.loc 5 173 44 view .LVU1322
 5793 01f2 D368     		ldr	r3, [r2, #12]
 5794 01f4 0199     		ldr	r1, [sp, #4]
 5795 01f6 8B42     		cmp	r3, r1
 5796 01f8 40F0C580 		bne	.L402
 5797 01fc 7F25     		movs	r5, #127
 5798              	.LVL414:
 5799              	.L366:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5800              		.loc 5 174 34 view .LVU1323
 5801 01fe 9368     		ldr	r3, [r2, #8]
 5802 0200 039A     		ldr	r2, [sp, #12]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5803              		.loc 5 173 19 view .LVU1324
 5804 0202 A8F80450 		strh	r5, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5805              		.loc 5 174 9 is_stmt 1 view .LVU1325
 5806 0206 9342     		cmp	r3, r2
 5807 0208 40F0AC80 		bne	.L403
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5808              		.loc 5 174 34 is_stmt 0 view .LVU1326
 5809 020c 4020     		movs	r0, #64
 5810              	.L368:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5811              		.loc 5 174 19 view .LVU1327
 5812 020e 029B     		ldr	r3, [sp, #8]
 5813 0210 8342     		cmp	r3, r0
 5814 0212 08D3     		bcc	.L369
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5815              		.loc 5 174 46 view .LVU1328
 5816 0214 D8F80030 		ldr	r3, [r8]
 5817 0218 039A     		ldr	r2, [sp, #12]
 5818 021a 9B68     		ldr	r3, [r3, #8]
 5819 021c 9342     		cmp	r3, r2
 5820 021e 40F0AC80 		bne	.L404
 5821 0222 3F23     		movs	r3, #63
 5822 0224 0293     		str	r3, [sp, #8]
 5823              	.LVL415:
 5824              	.L369:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5825              		.loc 5 174 19 view .LVU1329
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 276


 5826 0226 029B     		ldr	r3, [sp, #8]
 5827 0228 A8F80630 		strh	r3, [r8, #6]	@ movhi
 5828              	.LVL416:
 5829              	.L351:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5830              		.loc 5 174 19 view .LVU1330
 5831              	.LBE6207:
 5832              	.LBE6211:
 5833              	.LBE6173:
 5834              	.LBE6172:
 445:../../libdaisy/src/hid/disp/display.h ****                != *str)
 5835              		.loc 5 445 13 view .LVU1331
 5836 022c 009A     		ldr	r2, [sp]
 5837 022e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 5838 0230 5B45     		cmp	r3, fp
 5839 0232 06D1     		bne	.L319
 5840              	.LVL417:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5841              		.loc 5 443 9 is_stmt 1 view .LVU1332
 5842 0234 12F801BF 		ldrb	fp, [r2, #1]!	@ zero_extendqisi2
 5843              	.LVL418:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5844              		.loc 5 443 9 is_stmt 0 view .LVU1333
 5845 0238 0092     		str	r2, [sp]
 5846 023a BBF1000F 		cmp	fp, #0
 5847 023e 7FF454AF 		bne	.L349
 5848              	.LVL419:
 5849              	.L319:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5850              		.loc 5 443 9 view .LVU1334
 5851              	.LBE6217:
 5852              	.LBE6220:
 471:../../libdaisy/src/hid/disp/display.h **** 
 5853              		.loc 5 471 5 view .LVU1335
 5854 0242 0698     		ldr	r0, [sp, #24]
 5855 0244 09B0     		add	sp, sp, #36
 5856              		.cfi_remember_state
 5857              		.cfi_def_cfa_offset 36
 5858              		@ sp needed
 5859 0246 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5860              	.LVL420:
 5861              	.L332:
 5862              		.cfi_restore_state
 5863              	.LBB6221:
 5864              	.LBB6143:
 250:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 5865              		.loc 33 250 13 is_stmt 1 view .LVU1336
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5866              		.loc 33 251 17 view .LVU1337
 5867              	.LBB5979:
 5868              	.LBI5979:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5869              		.loc 33 62 13 view .LVU1338
 5870              	.LBB5980:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5871              		.loc 33 62 34 view .LVU1339
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 277


 5872              		.loc 33 62 34 is_stmt 0 view .LVU1340
 5873              	.LBE5980:
 5874              	.LBE5979:
 5875              	.LBB5982:
 5876              	.LBI5982:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5877              		.loc 33 62 13 is_stmt 1 view .LVU1341
 5878              	.LBB5983:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5879              		.loc 33 62 34 view .LVU1342
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5880              		.loc 33 62 34 is_stmt 0 view .LVU1343
 5881              	.LBE5983:
 5882              	.LBE5982:
 5883              	.LBB5984:
 5884              	.LBB5981:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5885              		.loc 33 62 53 view .LVU1344
 5886 024a B4F90410 		ldrsh	r1, [r4, #4]
 5887              	.LVL421:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5888              		.loc 33 62 44 view .LVU1345
 5889 024e 2788     		ldrh	r7, [r4]
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5890              		.loc 33 62 53 view .LVU1346
 5891 0250 0029     		cmp	r1, #0
 5892 0252 B8BF     		it	lt
 5893 0254 0131     		addlt	r1, r1, #1
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5894              		.loc 33 62 44 view .LVU1347
 5895 0256 07EB6107 		add	r7, r7, r1, asr #1
 5896              	.LBE5981:
 5897              	.LBE5984:
 5898              	.LBB5985:
 5899              	.LBB5957:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5900              		.loc 33 63 54 view .LVU1348
 5901 025a B4F90610 		ldrsh	r1, [r4, #6]
 5902              	.LBE5957:
 5903              	.LBE5985:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5904              		.loc 33 251 58 view .LVU1349
 5905 025e A7EB6307 		sub	r7, r7, r3, asr #1
 5906              	.LBB5986:
 5907              	.LBB5958:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5908              		.loc 33 63 54 view .LVU1350
 5909 0262 0029     		cmp	r1, #0
 5910              	.LBE5958:
 5911              	.LBE5986:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5912              		.loc 33 251 58 view .LVU1351
 5913 0264 BFB2     		uxth	r7, r7
 5914              	.LVL422:
 5915              	.LBB5987:
 5916              	.LBI5954:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 278


 5917              		.loc 33 63 13 is_stmt 1 view .LVU1352
 5918              	.LBB5959:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5919              		.loc 33 63 34 view .LVU1353
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5920              		.loc 33 63 34 is_stmt 0 view .LVU1354
 5921              	.LBE5959:
 5922              	.LBE5987:
 5923              	.LBB5988:
 5924              	.LBI5988:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5925              		.loc 33 63 13 is_stmt 1 view .LVU1355
 5926              	.LBB5989:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5927              		.loc 33 63 34 view .LVU1356
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5928              		.loc 33 63 34 is_stmt 0 view .LVU1357
 5929              	.LBE5989:
 5930              	.LBE5988:
 5931              	.LBB5990:
 5932              	.LBB5960:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5933              		.loc 33 63 54 view .LVU1358
 5934 0266 BFF601AF 		bge	.L339
 5935              	.L395:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5936              		.loc 33 63 54 view .LVU1359
 5937 026a 0131     		adds	r1, r1, #1
 5938 026c FEE6     		b	.L339
 5939              	.LVL423:
 5940              	.L331:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5941              		.loc 33 63 54 view .LVU1360
 5942              	.LBE5960:
 5943              	.LBE5990:
 213:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_, other.y_, width_, height_};
 5944              		.loc 33 213 13 is_stmt 1 view .LVU1361
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 5945              		.loc 33 214 17 view .LVU1362
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 5946              		.loc 33 214 31 is_stmt 0 view .LVU1363
 5947 026e B4F90070 		ldrsh	r7, [r4]
 5948              	.LBB5991:
 5949              	.LBB5992:
 5950              	.LBB5993:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5951              		.loc 33 32 66 view .LVU1364
 5952 0272 0699     		ldr	r1, [sp, #24]
 5953              	.LVL424:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5954              		.loc 33 32 66 view .LVU1365
 5955              	.LBE5993:
 5956              	.LBE5992:
 5957              	.LBE5991:
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 5958              		.loc 33 214 41 view .LVU1366
 5959 0274 B4F90240 		ldrsh	r4, [r4, #2]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 279


 5960              	.LVL425:
 5961              	.LBB6006:
 5962              	.LBI5991:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5963              		.loc 33 31 5 is_stmt 1 view .LVU1367
 5964              	.LBB6001:
 5965              	.LBB5996:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5966              		.loc 33 32 66 is_stmt 0 view .LVU1368
 5967 0278 0F80     		strh	r7, [r1]	@ movhi
 5968              	.LBE5996:
 5969              	.LBE6001:
 5970              	.LBE6006:
 5971              	.LBE6143:
 5972              	.LBE6221:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 5973              		.loc 5 468 18 view .LVU1369
 5974 027a BFB2     		uxth	r7, r7
 5975              	.LVL426:
 5976              	.LBB6222:
 5977              	.LBB6144:
 5978              	.LBB6007:
 5979              	.LBB6002:
 5980              	.LBB5997:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5981              		.loc 33 32 66 view .LVU1370
 5982 027c 4C80     		strh	r4, [r1, #2]	@ movhi
 5983              	.LBE5997:
 5984              	.LBE6002:
 5985              	.LBE6007:
 5986              	.LBE6144:
 5987              	.LBE6222:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 5988              		.loc 5 468 18 view .LVU1371
 5989 027e A4B2     		uxth	r4, r4
 5990              	.LVL427:
 5991              	.LBB6223:
 5992              	.LBB6145:
 5993              	.LBB6008:
 5994              	.LBB6003:
 5995              	.LBB5998:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5996              		.loc 33 32 66 view .LVU1372
 5997 0280 8B80     		strh	r3, [r1, #4]	@ movhi
 5998              	.LVL428:
 5999              	.LBB5994:
 6000              	.LBI5994:
 6001              		.loc 33 261 13 is_stmt 1 view .LVU1373
 6002              	.LBE5994:
 6003              	.LBE5998:
 6004              	.LBE6003:
 6005              	.LBE6008:
 6006              	.LBE6145:
 6007              	.LBE6223:
 6008              		.loc 33 261 41 view .LVU1374
 6009              	.LBB6224:
 6010              	.LBB6146:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 280


 6011              	.LBB6009:
 6012              	.LBB6004:
 6013              	.LBB5999:
 6014              	.LBB5995:
 6015              	.LBI5995:
 6016              		.loc 33 261 13 view .LVU1375
 6017              	.LBE5995:
 6018              	.LBE5999:
 6019              	.LBE6004:
 6020              	.LBE6009:
 6021              	.LBE6146:
 6022              	.LBE6224:
 6023              		.loc 33 261 41 view .LVU1376
 6024              	.LBB6225:
 6025              	.LBB6147:
 6026              	.LBB6010:
 6027              	.LBB6005:
 6028              	.LBB6000:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6029              		.loc 33 32 66 is_stmt 0 view .LVU1377
 6030 0282 CA80     		strh	r2, [r1, #6]	@ movhi
 6031              	.LBE6000:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6032              		.loc 33 34 5 view .LVU1378
 6033 0284 FEE6     		b	.L333
 6034              	.LVL429:
 6035              	.L330:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6036              		.loc 33 34 5 view .LVU1379
 6037              	.LBE6005:
 6038              	.LBE6010:
 220:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 6039              		.loc 33 220 13 is_stmt 1 view .LVU1380
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6040              		.loc 33 221 17 view .LVU1381
 6041              	.LBB6011:
 6042              	.LBI6011:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6043              		.loc 33 62 13 view .LVU1382
 6044              	.LBB6012:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6045              		.loc 33 62 34 view .LVU1383
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6046              		.loc 33 62 34 is_stmt 0 view .LVU1384
 6047              	.LBE6012:
 6048              	.LBE6011:
 6049              	.LBB6015:
 6050              	.LBI6015:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6051              		.loc 33 62 13 is_stmt 1 view .LVU1385
 6052              	.LBB6016:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6053              		.loc 33 62 34 view .LVU1386
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6054              		.loc 33 62 34 is_stmt 0 view .LVU1387
 6055              	.LBE6016:
 6056              	.LBE6015:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 281


 6057              	.LBB6017:
 6058              	.LBB6013:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6059              		.loc 33 62 53 view .LVU1388
 6060 0286 B4F90410 		ldrsh	r1, [r4, #4]
 6061              	.LVL430:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6062              		.loc 33 62 44 view .LVU1389
 6063 028a 2788     		ldrh	r7, [r4]
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6064              		.loc 33 62 53 view .LVU1390
 6065 028c 0029     		cmp	r1, #0
 6066              	.LBE6013:
 6067              	.LBE6017:
 222:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6068              		.loc 33 222 31 view .LVU1391
 6069 028e B4F90240 		ldrsh	r4, [r4, #2]
 6070              	.LVL431:
 6071              	.LBB6018:
 6072              	.LBB6014:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6073              		.loc 33 62 53 view .LVU1392
 6074 0292 B8BF     		it	lt
 6075 0294 0131     		addlt	r1, r1, #1
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6076              		.loc 33 62 44 view .LVU1393
 6077 0296 07EB6107 		add	r7, r7, r1, asr #1
 6078              	.LBE6014:
 6079              	.LBE6018:
 6080              	.LBB6019:
 6081              	.LBB6020:
 6082              	.LBB6021:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6083              		.loc 33 32 66 view .LVU1394
 6084 029a 0699     		ldr	r1, [sp, #24]
 6085 029c 8B80     		strh	r3, [r1, #4]	@ movhi
 6086              	.LBE6021:
 6087              	.LBE6020:
 6088              	.LBE6019:
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6089              		.loc 33 221 58 view .LVU1395
 6090 029e A7EB6303 		sub	r3, r7, r3, asr #1
 6091              	.LBB6032:
 6092              	.LBB6028:
 6093              	.LBB6024:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6094              		.loc 33 32 66 view .LVU1396
 6095 02a2 4C80     		strh	r4, [r1, #2]	@ movhi
 6096              	.LBE6024:
 6097              	.LBE6028:
 6098              	.LBE6032:
 6099              	.LBE6147:
 6100              	.LBE6225:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6101              		.loc 5 468 18 view .LVU1397
 6102 02a4 A4B2     		uxth	r4, r4
 6103              	.LBB6226:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 282


 6104              	.LBB6148:
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6105              		.loc 33 221 58 view .LVU1398
 6106 02a6 9FB2     		uxth	r7, r3
 6107              	.LVL432:
 6108              	.LBB6033:
 6109              	.LBI6019:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6110              		.loc 33 31 5 is_stmt 1 view .LVU1399
 6111              	.LBB6029:
 6112              	.LBB6025:
 6113              	.LBB6022:
 6114              	.LBI6022:
 6115              		.loc 33 261 13 view .LVU1400
 6116              	.LBE6022:
 6117              	.LBE6025:
 6118              	.LBE6029:
 6119              	.LBE6033:
 6120              	.LBE6148:
 6121              	.LBE6226:
 6122              		.loc 33 261 41 view .LVU1401
 6123              	.LBB6227:
 6124              	.LBB6149:
 6125              	.LBB6034:
 6126              	.LBB6030:
 6127              	.LBB6026:
 6128              	.LBB6023:
 6129              	.LBI6023:
 6130              		.loc 33 261 13 view .LVU1402
 6131              	.LBE6023:
 6132              	.LBE6026:
 6133              	.LBE6030:
 6134              	.LBE6034:
 6135              	.LBE6149:
 6136              	.LBE6227:
 6137              		.loc 33 261 41 view .LVU1403
 6138              	.LBB6228:
 6139              	.LBB6150:
 6140              	.LBB6035:
 6141              	.LBB6031:
 6142              	.LBB6027:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6143              		.loc 33 32 66 is_stmt 0 view .LVU1404
 6144 02a8 CA80     		strh	r2, [r1, #6]	@ movhi
 6145 02aa 0F80     		strh	r7, [r1]	@ movhi
 6146              	.LBE6027:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6147              		.loc 33 34 5 view .LVU1405
 6148 02ac EAE6     		b	.L333
 6149              	.LVL433:
 6150              	.L329:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6151              		.loc 33 34 5 view .LVU1406
 6152              	.LBE6031:
 6153              	.LBE6035:
 215:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 6154              		.loc 33 215 13 is_stmt 1 view .LVU1407
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 283


 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6155              		.loc 33 216 17 view .LVU1408
 6156              	.LBB6036:
 6157              	.LBI6036:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6158              		.loc 33 60 13 view .LVU1409
 6159              	.LBB6037:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6160              		.loc 33 60 32 view .LVU1410
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6161              		.loc 33 60 42 is_stmt 0 view .LVU1411
 6162 02ae A188     		ldrh	r1, [r4, #4]
 6163              	.LVL434:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6164              		.loc 33 60 42 view .LVU1412
 6165 02b0 2788     		ldrh	r7, [r4]
 6166              	.LBE6037:
 6167              	.LBE6036:
 217:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6168              		.loc 33 217 31 view .LVU1413
 6169 02b2 B4F90240 		ldrsh	r4, [r4, #2]
 6170              	.LVL435:
 6171              	.LBB6039:
 6172              	.LBB6038:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6173              		.loc 33 60 42 view .LVU1414
 6174 02b6 0F44     		add	r7, r7, r1
 6175              	.LBE6038:
 6176              	.LBE6039:
 6177              	.LBB6040:
 6178              	.LBB6041:
 6179              	.LBB6042:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6180              		.loc 33 32 66 view .LVU1415
 6181 02b8 0699     		ldr	r1, [sp, #24]
 6182 02ba 8B80     		strh	r3, [r1, #4]	@ movhi
 6183              	.LBE6042:
 6184              	.LBE6041:
 6185              	.LBE6040:
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6186              		.loc 33 216 50 view .LVU1416
 6187 02bc FB1A     		subs	r3, r7, r3
 6188              	.LBB6053:
 6189              	.LBB6049:
 6190              	.LBB6045:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6191              		.loc 33 32 66 view .LVU1417
 6192 02be 4C80     		strh	r4, [r1, #2]	@ movhi
 6193              	.LBE6045:
 6194              	.LBE6049:
 6195              	.LBE6053:
 6196              	.LBE6150:
 6197              	.LBE6228:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6198              		.loc 5 468 18 view .LVU1418
 6199 02c0 A4B2     		uxth	r4, r4
 6200              	.LBB6229:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 284


 6201              	.LBB6151:
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6202              		.loc 33 216 50 view .LVU1419
 6203 02c2 9FB2     		uxth	r7, r3
 6204              	.LVL436:
 6205              	.LBB6054:
 6206              	.LBI6040:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6207              		.loc 33 31 5 is_stmt 1 view .LVU1420
 6208              	.LBB6050:
 6209              	.LBB6046:
 6210              	.LBB6043:
 6211              	.LBI6043:
 6212              		.loc 33 261 13 view .LVU1421
 6213              	.LBE6043:
 6214              	.LBE6046:
 6215              	.LBE6050:
 6216              	.LBE6054:
 6217              	.LBE6151:
 6218              	.LBE6229:
 6219              		.loc 33 261 41 view .LVU1422
 6220              	.LBB6230:
 6221              	.LBB6152:
 6222              	.LBB6055:
 6223              	.LBB6051:
 6224              	.LBB6047:
 6225              	.LBB6044:
 6226              	.LBI6044:
 6227              		.loc 33 261 13 view .LVU1423
 6228              	.LBE6044:
 6229              	.LBE6047:
 6230              	.LBE6051:
 6231              	.LBE6055:
 6232              	.LBE6152:
 6233              	.LBE6230:
 6234              		.loc 33 261 41 view .LVU1424
 6235              	.LBB6231:
 6236              	.LBB6153:
 6237              	.LBB6056:
 6238              	.LBB6052:
 6239              	.LBB6048:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6240              		.loc 33 32 66 is_stmt 0 view .LVU1425
 6241 02c4 CA80     		strh	r2, [r1, #6]	@ movhi
 6242 02c6 0F80     		strh	r7, [r1]	@ movhi
 6243              	.LBE6048:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6244              		.loc 33 34 5 view .LVU1426
 6245 02c8 DCE6     		b	.L333
 6246              	.LVL437:
 6247              	.L328:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6248              		.loc 33 34 5 view .LVU1427
 6249              	.LBE6052:
 6250              	.LBE6056:
 225:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 6251              		.loc 33 225 13 is_stmt 1 view .LVU1428
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 285


 226:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6252              		.loc 33 226 17 view .LVU1429
 6253              	.LBB6057:
 6254              	.LBB6058:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6255              		.loc 33 61 43 is_stmt 0 view .LVU1430
 6256 02ca E788     		ldrh	r7, [r4, #6]
 6257 02cc 6188     		ldrh	r1, [r4, #2]
 6258              	.LVL438:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6259              		.loc 33 61 43 view .LVU1431
 6260 02ce 3944     		add	r1, r1, r7
 6261              	.LBE6058:
 6262              	.LBE6057:
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6263              		.loc 33 226 31 view .LVU1432
 6264 02d0 B4F90070 		ldrsh	r7, [r4]
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6265              		.loc 33 227 51 view .LVU1433
 6266 02d4 081A     		subs	r0, r1, r0
 6267              	.LVL439:
 6268              	.LBB6060:
 6269              	.LBI6057:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6270              		.loc 33 61 13 is_stmt 1 view .LVU1434
 6271              	.LBB6059:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6272              		.loc 33 61 33 view .LVU1435
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6273              		.loc 33 61 33 is_stmt 0 view .LVU1436
 6274              	.LBE6059:
 6275              	.LBE6060:
 6276              	.LBB6061:
 6277              	.LBB6062:
 6278              	.LBB6063:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6279              		.loc 33 32 66 view .LVU1437
 6280 02d6 0699     		ldr	r1, [sp, #24]
 6281              	.LBE6063:
 6282              	.LBE6062:
 6283              	.LBE6061:
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6284              		.loc 33 227 51 view .LVU1438
 6285 02d8 84B2     		uxth	r4, r0
 6286              	.LVL440:
 6287              	.LBB6073:
 6288              	.LBB6069:
 6289              	.LBB6066:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6290              		.loc 33 32 66 view .LVU1439
 6291 02da 0F80     		strh	r7, [r1]	@ movhi
 6292 02dc 8B80     		strh	r3, [r1, #4]	@ movhi
 6293              	.LVL441:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6294              		.loc 33 32 66 view .LVU1440
 6295              	.LBE6066:
 6296              	.LBE6069:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 286


 6297              	.LBI6061:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6298              		.loc 33 31 5 is_stmt 1 view .LVU1441
 6299              	.LBE6073:
 6300              	.LBE6153:
 6301              	.LBE6231:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6302              		.loc 5 468 18 is_stmt 0 view .LVU1442
 6303 02de BFB2     		uxth	r7, r7
 6304              	.LVL442:
 6305              	.LBB6232:
 6306              	.LBB6154:
 6307              	.LBB6074:
 6308              	.LBB6070:
 6309              	.LBB6067:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6310              		.loc 33 32 66 view .LVU1443
 6311 02e0 CA80     		strh	r2, [r1, #6]	@ movhi
 6312 02e2 4C80     		strh	r4, [r1, #2]	@ movhi
 6313              	.LVL443:
 6314              	.LBB6064:
 6315              	.LBI6064:
 6316              		.loc 33 261 13 is_stmt 1 view .LVU1444
 6317              	.LBE6064:
 6318              	.LBE6067:
 6319              	.LBE6070:
 6320              	.LBE6074:
 6321              	.LBE6154:
 6322              	.LBE6232:
 6323              		.loc 33 261 41 view .LVU1445
 6324              	.LBB6233:
 6325              	.LBB6155:
 6326              	.LBB6075:
 6327              	.LBB6071:
 6328              	.LBB6068:
 6329              	.LBB6065:
 6330              	.LBI6065:
 6331              		.loc 33 261 13 view .LVU1446
 6332              	.LBE6065:
 6333              	.LBE6068:
 6334              	.LBE6071:
 6335              	.LBE6075:
 6336              	.LBE6155:
 6337              	.LBE6233:
 6338              		.loc 33 261 41 view .LVU1447
 6339              	.LBB6234:
 6340              	.LBB6156:
 6341              	.LBB6076:
 6342              	.LBB6072:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6343              		.loc 33 34 5 is_stmt 0 view .LVU1448
 6344 02e4 CEE6     		b	.L333
 6345              	.LVL444:
 6346              	.L327:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6347              		.loc 33 34 5 view .LVU1449
 6348              	.LBE6072:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 287


 6349              	.LBE6076:
 235:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 6350              		.loc 33 235 13 is_stmt 1 view .LVU1450
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6351              		.loc 33 236 17 view .LVU1451
 6352              	.LBB6077:
 6353              	.LBI6077:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6354              		.loc 33 62 13 view .LVU1452
 6355              	.LBB6078:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6356              		.loc 33 62 34 view .LVU1453
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6357              		.loc 33 62 34 is_stmt 0 view .LVU1454
 6358              	.LBE6078:
 6359              	.LBE6077:
 6360              	.LBB6080:
 6361              	.LBI6080:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6362              		.loc 33 62 13 is_stmt 1 view .LVU1455
 6363              	.LBB6081:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6364              		.loc 33 62 34 view .LVU1456
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6365              		.loc 33 62 34 is_stmt 0 view .LVU1457
 6366              	.LBE6081:
 6367              	.LBE6080:
 6368              	.LBB6082:
 6369              	.LBB6079:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6370              		.loc 33 62 53 view .LVU1458
 6371 02e6 B4F90410 		ldrsh	r1, [r4, #4]
 6372              	.LVL445:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6373              		.loc 33 62 44 view .LVU1459
 6374 02ea 2788     		ldrh	r7, [r4]
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6375              		.loc 33 62 53 view .LVU1460
 6376 02ec 0029     		cmp	r1, #0
 6377 02ee B8BF     		it	lt
 6378 02f0 0131     		addlt	r1, r1, #1
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6379              		.loc 33 62 44 view .LVU1461
 6380 02f2 07EB6107 		add	r7, r7, r1, asr #1
 6381              	.LBE6079:
 6382              	.LBE6082:
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6383              		.loc 33 236 58 view .LVU1462
 6384 02f6 A7EB6307 		sub	r7, r7, r3, asr #1
 6385              	.L393:
 6386              	.LBB6083:
 6387              	.LBB6084:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6388              		.loc 33 61 43 view .LVU1463
 6389 02fa B4F802C0 		ldrh	ip, [r4, #2]
 6390              	.LBE6084:
 6391              	.LBE6083:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 288


 236:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6392              		.loc 33 236 58 view .LVU1464
 6393 02fe BFB2     		uxth	r7, r7
 6394              	.LVL446:
 6395              	.LBB6087:
 6396              	.LBI6083:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6397              		.loc 33 61 13 is_stmt 1 view .LVU1465
 6398              	.LBB6085:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6399              		.loc 33 61 33 view .LVU1466
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6400              		.loc 33 61 43 is_stmt 0 view .LVU1467
 6401 0300 E488     		ldrh	r4, [r4, #6]
 6402              	.LVL447:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6403              		.loc 33 61 43 view .LVU1468
 6404              	.LBE6085:
 6405              	.LBE6087:
 6406              	.LBB6088:
 6407              	.LBB6089:
 6408              	.LBB6090:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6409              		.loc 33 32 66 view .LVU1469
 6410 0302 0699     		ldr	r1, [sp, #24]
 6411              	.LBE6090:
 6412              	.LBE6089:
 6413              	.LBE6088:
 6414              	.LBB6102:
 6415              	.LBB6086:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6416              		.loc 33 61 43 view .LVU1470
 6417 0304 6444     		add	r4, r4, ip
 6418              	.LBE6086:
 6419              	.LBE6102:
 6420              	.LBB6103:
 6421              	.LBB6097:
 6422              	.LBB6093:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6423              		.loc 33 32 66 view .LVU1471
 6424 0306 8B80     		strh	r3, [r1, #4]	@ movhi
 6425              	.LBE6093:
 6426              	.LBE6097:
 6427              	.LBE6103:
 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6428              		.loc 33 237 51 view .LVU1472
 6429 0308 201A     		subs	r0, r4, r0
 6430              	.LBB6104:
 6431              	.LBB6098:
 6432              	.LBB6094:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6433              		.loc 33 32 66 view .LVU1473
 6434 030a CA80     		strh	r2, [r1, #6]	@ movhi
 6435 030c 0F80     		strh	r7, [r1]	@ movhi
 6436              	.LBE6094:
 6437              	.LBE6098:
 6438              	.LBE6104:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 289


 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6439              		.loc 33 237 51 view .LVU1474
 6440 030e 84B2     		uxth	r4, r0
 6441              	.LVL448:
 6442              	.LBB6105:
 6443              	.LBI6088:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6444              		.loc 33 31 5 is_stmt 1 view .LVU1475
 6445              	.LBB6099:
 6446              	.LBB6095:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6447              		.loc 33 32 66 is_stmt 0 view .LVU1476
 6448 0310 4C80     		strh	r4, [r1, #2]	@ movhi
 6449              	.LVL449:
 6450              	.LBB6091:
 6451              	.LBI6091:
 6452              		.loc 33 261 13 is_stmt 1 view .LVU1477
 6453              	.LBE6091:
 6454              	.LBE6095:
 6455              	.LBE6099:
 6456              	.LBE6105:
 6457              	.LBE6156:
 6458              	.LBE6234:
 6459              		.loc 33 261 41 view .LVU1478
 6460              	.LBB6235:
 6461              	.LBB6157:
 6462              	.LBB6106:
 6463              	.LBB6100:
 6464              	.LBB6096:
 6465              	.LBB6092:
 6466              	.LBI6092:
 6467              		.loc 33 261 13 view .LVU1479
 6468              	.LBE6092:
 6469              	.LBE6096:
 6470              	.LBE6100:
 6471              	.LBE6106:
 6472              	.LBE6157:
 6473              	.LBE6235:
 6474              		.loc 33 261 41 view .LVU1480
 6475              	.LBB6236:
 6476              	.LBB6158:
 6477              	.LBB6107:
 6478              	.LBB6101:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6479              		.loc 33 34 5 is_stmt 0 view .LVU1481
 6480 0312 B7E6     		b	.L333
 6481              	.LVL450:
 6482              	.L326:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6483              		.loc 33 34 5 view .LVU1482
 6484              	.LBE6101:
 6485              	.LBE6107:
 230:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 6486              		.loc 33 230 13 is_stmt 1 view .LVU1483
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6487              		.loc 33 231 17 view .LVU1484
 6488              	.LBB6108:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 290


 6489              	.LBI6108:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6490              		.loc 33 60 13 view .LVU1485
 6491              	.LBB6109:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6492              		.loc 33 60 32 view .LVU1486
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6493              		.loc 33 60 42 is_stmt 0 view .LVU1487
 6494 0314 2788     		ldrh	r7, [r4]
 6495 0316 A188     		ldrh	r1, [r4, #4]
 6496              	.LVL451:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6497              		.loc 33 60 42 view .LVU1488
 6498 0318 0F44     		add	r7, r7, r1
 6499              	.LBE6109:
 6500              	.LBE6108:
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6501              		.loc 33 231 50 view .LVU1489
 6502 031a FF1A     		subs	r7, r7, r3
 6503 031c EDE7     		b	.L393
 6504              	.L406:
 6505 031e 00BF     		.align	2
 6506              	.L405:
 6507 0320 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 6508 0324 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 6509              	.LVL452:
 6510              	.L325:
 240:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 6511              		.loc 33 240 13 is_stmt 1 view .LVU1490
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 6512              		.loc 33 241 17 view .LVU1491
 6513              	.LBB6110:
 6514              	.LBB6111:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6515              		.loc 33 63 54 is_stmt 0 view .LVU1492
 6516 0328 B4F90610 		ldrsh	r1, [r4, #6]
 6517              	.LVL453:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6518              		.loc 33 63 44 view .LVU1493
 6519 032c B4F802C0 		ldrh	ip, [r4, #2]
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6520              		.loc 33 63 54 view .LVU1494
 6521 0330 0029     		cmp	r1, #0
 6522              	.LBE6111:
 6523              	.LBE6110:
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 6524              		.loc 33 241 31 view .LVU1495
 6525 0332 B4F90070 		ldrsh	r7, [r4]
 6526              	.LVL454:
 6527              	.LBB6115:
 6528              	.LBI6110:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6529              		.loc 33 63 13 is_stmt 1 view .LVU1496
 6530              	.LBB6112:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6531              		.loc 33 63 34 view .LVU1497
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 291


 6532              		.loc 33 63 34 is_stmt 0 view .LVU1498
 6533              	.LBE6112:
 6534              	.LBE6115:
 6535              	.LBB6116:
 6536              	.LBI6116:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6537              		.loc 33 63 13 is_stmt 1 view .LVU1499
 6538              	.LBB6117:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6539              		.loc 33 63 34 view .LVU1500
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6540              		.loc 33 63 34 is_stmt 0 view .LVU1501
 6541              	.LBE6117:
 6542              	.LBE6116:
 6543              	.LBB6118:
 6544              	.LBB6119:
 6545              	.LBB6120:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6546              		.loc 33 32 66 view .LVU1502
 6547 0336 0698     		ldr	r0, [sp, #24]
 6548              	.LBE6120:
 6549              	.LBE6119:
 6550              	.LBE6118:
 6551              	.LBB6132:
 6552              	.LBB6113:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6553              		.loc 33 63 54 view .LVU1503
 6554 0338 B8BF     		it	lt
 6555 033a 0131     		addlt	r1, r1, #1
 6556              	.LBE6113:
 6557              	.LBE6132:
 6558              	.LBB6133:
 6559              	.LBB6127:
 6560              	.LBB6123:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6561              		.loc 33 32 66 view .LVU1504
 6562 033c C280     		strh	r2, [r0, #6]	@ movhi
 6563              	.LBE6123:
 6564              	.LBE6127:
 6565              	.LBE6133:
 6566              	.LBB6134:
 6567              	.LBB6114:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6568              		.loc 33 63 44 view .LVU1505
 6569 033e 0CEB6104 		add	r4, ip, r1, asr #1
 6570              	.LVL455:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6571              		.loc 33 63 44 view .LVU1506
 6572              	.LBE6114:
 6573              	.LBE6134:
 6574              	.LBB6135:
 6575              	.LBB6128:
 6576              	.LBB6124:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6577              		.loc 33 32 66 view .LVU1507
 6578 0342 0780     		strh	r7, [r0]	@ movhi
 6579 0344 8380     		strh	r3, [r0, #4]	@ movhi
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 292


 6580              	.LBE6124:
 6581              	.LBE6128:
 6582              	.LBE6135:
 6583              	.LBE6158:
 6584              	.LBE6236:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6585              		.loc 5 468 18 view .LVU1508
 6586 0346 BFB2     		uxth	r7, r7
 6587              	.LBB6237:
 6588              	.LBB6159:
 242:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6589              		.loc 33 242 58 view .LVU1509
 6590 0348 A4EB5202 		sub	r2, r4, r2, lsr #1
 6591 034c 94B2     		uxth	r4, r2
 6592              	.LVL456:
 6593              	.LBB6136:
 6594              	.LBI6118:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6595              		.loc 33 31 5 is_stmt 1 view .LVU1510
 6596              	.LBB6129:
 6597              	.LBB6125:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6598              		.loc 33 32 66 is_stmt 0 view .LVU1511
 6599 034e 4480     		strh	r4, [r0, #2]	@ movhi
 6600              	.LVL457:
 6601              	.LBB6121:
 6602              	.LBI6121:
 6603              		.loc 33 261 13 is_stmt 1 view .LVU1512
 6604              	.LBE6121:
 6605              	.LBE6125:
 6606              	.LBE6129:
 6607              	.LBE6136:
 6608              	.LBE6159:
 6609              	.LBE6237:
 6610              		.loc 33 261 41 view .LVU1513
 6611              	.LBB6238:
 6612              	.LBB6160:
 6613              	.LBB6137:
 6614              	.LBB6130:
 6615              	.LBB6126:
 6616              	.LBB6122:
 6617              	.LBI6122:
 6618              		.loc 33 261 13 view .LVU1514
 6619              	.LBE6122:
 6620              	.LBE6126:
 6621              	.LBE6130:
 6622              	.LBE6137:
 6623              	.LBE6160:
 6624              	.LBE6238:
 6625              		.loc 33 261 41 view .LVU1515
 6626              	.LBB6239:
 6627              	.LBB6161:
 6628              	.LBB6138:
 6629              	.LBB6131:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6630              		.loc 33 34 5 is_stmt 0 view .LVU1516
 6631 0350 98E6     		b	.L333
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 293


 6632              	.LVL458:
 6633              	.L353:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6634              		.loc 33 34 5 view .LVU1517
 6635              	.LBE6131:
 6636              	.LBE6138:
 6637              	.LBE6161:
 6638              	.LBE6239:
 6639              	.LBB6240:
 6640              	.LBB6218:
 6641              	.LBB6215:
 6642              	.LBB6214:
 402:../../libdaisy/src/hid/disp/display.h **** 
 6643              		.loc 5 402 20 view .LVU1518
 6644 0352 4FF0000B 		mov	fp, #0
 6645              	.LVL459:
 402:../../libdaisy/src/hid/disp/display.h **** 
 6646              		.loc 5 402 20 view .LVU1519
 6647 0356 69E7     		b	.L351
 6648              	.LVL460:
 6649              	.L398:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 6650              		.loc 5 405 17 view .LVU1520
 6651 0358 4046     		mov	r0, r8
 6652 035a 9847     		blx	r3
 6653              	.LVL461:
 6654 035c D3E6     		b	.L352
 6655              	.L399:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 6656              		.loc 5 406 21 view .LVU1521
 6657 035e 4046     		mov	r0, r8
 6658 0360 9847     		blx	r3
 6659              	.LVL462:
 6660 0362 DEE6     		b	.L354
 6661              	.LVL463:
 6662              	.L403:
 6663              	.LBB6212:
 6664              	.LBB6208:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6665              		.loc 5 174 33 view .LVU1522
 6666 0364 4046     		mov	r0, r8
 6667 0366 9847     		blx	r3
 6668              	.LVL464:
 6669 0368 51E7     		b	.L368
 6670              	.LVL465:
 6671              	.L401:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6672              		.loc 5 173 32 view .LVU1523
 6673 036a 4046     		mov	r0, r8
 6674 036c 9847     		blx	r3
 6675              	.LVL466:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6676              		.loc 5 173 44 view .LVU1524
 6677 036e D8F80020 		ldr	r2, [r8]
 6678 0372 3CE7     		b	.L365
 6679              	.LVL467:
 6680              	.L355:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 294


 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6681              		.loc 5 173 44 view .LVU1525
 6682              	.LBE6208:
 6683              	.LBE6212:
 434:../../libdaisy/src/hid/disp/display.h **** 
 6684              		.loc 5 434 19 view .LVU1526
 6685 0374 B8F804A0 		ldrh	r10, [r8, #4]
 6686 0378 2EE7     		b	.L357
 6687              	.LVL468:
 6688              	.L404:
 6689              	.LBB6213:
 6690              	.LBB6209:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6691              		.loc 5 174 45 view .LVU1527
 6692 037a 4046     		mov	r0, r8
 6693 037c 9847     		blx	r3
 6694              	.LVL469:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6695              		.loc 5 174 19 view .LVU1528
 6696 037e 0138     		subs	r0, r0, #1
 6697 0380 83B2     		uxth	r3, r0
 6698 0382 0293     		str	r3, [sp, #8]
 6699              	.LVL470:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6700              		.loc 5 174 19 view .LVU1529
 6701 0384 4FE7     		b	.L369
 6702              	.LVL471:
 6703              	.L402:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6704              		.loc 5 173 43 view .LVU1530
 6705 0386 4046     		mov	r0, r8
 6706 0388 9847     		blx	r3
 6707              	.LVL472:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6708              		.loc 5 173 19 view .LVU1531
 6709 038a 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6710              		.loc 5 174 34 view .LVU1532
 6711 038c D8F80020 		ldr	r2, [r8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6712              		.loc 5 173 19 view .LVU1533
 6713 0390 85B2     		uxth	r5, r0
 6714              	.LVL473:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6715              		.loc 5 173 19 view .LVU1534
 6716 0392 34E7     		b	.L366
 6717              	.LVL474:
 6718              	.L322:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6719              		.loc 5 173 19 view .LVU1535
 6720              	.LBE6209:
 6721              	.LBE6213:
 6722              	.LBE6214:
 6723              	.LBE6215:
 6724              	.LBE6218:
 6725              	.LBE6240:
 6726              	.LBB6241:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 295


 6727              	.LBB6162:
 255:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 6728              		.loc 33 255 13 is_stmt 1 view .LVU1536
 255:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 6729              		.loc 33 255 22 view .LVU1537
 6730              	.LBB6139:
 6731              	.LBI6139:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6732              		.loc 33 24 5 view .LVU1538
 6733              	.LBE6139:
 6734              	.LBE6162:
 6735              	.LBE6241:
 6736              	.LBB6242:
 6737              	.LBB6168:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6738              		.loc 5 173 33 is_stmt 0 view .LVU1539
 6739 0394 D8F80030 		ldr	r3, [r8]
 6740              	.LBE6168:
 6741              	.LBE6242:
 6742              	.LBB6243:
 6743              	.LBB6163:
 6744              	.LBB6141:
 6745              	.LBB6140:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6746              		.loc 33 24 53 view .LVU1540
 6747 0398 0024     		movs	r4, #0
 6748              	.LVL475:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6749              		.loc 33 24 53 view .LVU1541
 6750 039a 069A     		ldr	r2, [sp, #24]
 6751 039c 1249     		ldr	r1, .L407
 6752              	.LVL476:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6753              		.loc 33 24 53 view .LVU1542
 6754 039e 1480     		strh	r4, [r2]	@ movhi
 6755 03a0 5480     		strh	r4, [r2, #2]	@ movhi
 6756 03a2 9480     		strh	r4, [r2, #4]	@ movhi
 6757 03a4 D480     		strh	r4, [r2, #6]	@ movhi
 6758              	.LVL477:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6759              		.loc 33 24 53 view .LVU1543
 6760              	.LBE6140:
 6761              	.LBE6141:
 6762              	.LBE6163:
 6763              	.LBE6243:
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
 6764              		.loc 33 56 28 is_stmt 1 view .LVU1544
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
 6765              		.loc 33 57 28 view .LVU1545
 6766              	.LBB6244:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 6767              		.loc 5 171 10 view .LVU1546
 6768              	.LBB6169:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6769              		.loc 5 173 9 view .LVU1547
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6770              		.loc 5 173 33 is_stmt 0 view .LVU1548
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 296


 6771 03a6 DA68     		ldr	r2, [r3, #12]
 6772 03a8 0191     		str	r1, [sp, #4]
 6773 03aa 8A42     		cmp	r2, r1
 6774 03ac 05D0     		beq	.L340
 6775 03ae 2746     		mov	r7, r4
 6776              	.LVL478:
 6777              	.L341:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6778              		.loc 5 173 32 view .LVU1549
 6779 03b0 4046     		mov	r0, r8
 6780 03b2 9047     		blx	r2
 6781              	.LVL479:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6782              		.loc 5 173 44 view .LVU1550
 6783 03b4 D8F80030 		ldr	r3, [r8]
 6784 03b8 6EE6     		b	.L342
 6785              	.LVL480:
 6786              	.L340:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6787              		.loc 5 174 34 view .LVU1551
 6788 03ba 9B68     		ldr	r3, [r3, #8]
 6789 03bc 0B4A     		ldr	r2, .L407+4
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6790              		.loc 5 173 19 view .LVU1552
 6791 03be A8F80440 		strh	r4, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6792              		.loc 5 174 9 is_stmt 1 view .LVU1553
 6793 03c2 9342     		cmp	r3, r2
 6794 03c4 0392     		str	r2, [sp, #12]
 6795 03c6 3FF482AE 		beq	.L347
 6796              	.LVL481:
 6797              	.L373:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6798              		.loc 5 174 33 is_stmt 0 view .LVU1554
 6799 03ca 4046     		mov	r0, r8
 6800 03cc 9847     		blx	r3
 6801              	.LVL482:
 6802 03ce 74E6     		b	.L345
 6803              	.L397:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6804              		.loc 5 174 45 view .LVU1555
 6805 03d0 4046     		mov	r0, r8
 6806 03d2 9847     		blx	r3
 6807              	.LVL483:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6808              		.loc 5 174 19 view .LVU1556
 6809 03d4 0138     		subs	r0, r0, #1
 6810 03d6 84B2     		uxth	r4, r0
 6811 03d8 79E6     		b	.L347
 6812              	.L396:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6813              		.loc 5 173 43 view .LVU1557
 6814 03da 4046     		mov	r0, r8
 6815 03dc 9047     		blx	r2
 6816              	.LVL484:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6817              		.loc 5 173 19 view .LVU1558
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 297


 6818 03de 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6819              		.loc 5 174 34 view .LVU1559
 6820 03e0 D8F80030 		ldr	r3, [r8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6821              		.loc 5 173 19 view .LVU1560
 6822 03e4 87B2     		uxth	r7, r0
 6823 03e6 5FE6     		b	.L343
 6824              	.L408:
 6825              		.align	2
 6826              	.L407:
 6827 03e8 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 6828 03ec 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 6829              	.LBE6169:
 6830              	.LBE6244:
 6831              		.cfi_endproc
 6832              	.LFE6196:
 6834              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 6835              		.align	1
 6836              		.p2align 2,,3
 6837              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 6838              		.syntax unified
 6839              		.thumb
 6840              		.thumb_func
 6841              		.fpu fpv5-d16
 6843              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 6844              	.LVL485:
 6845              	.LFB6194:
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6846              		.loc 5 257 10 is_stmt 1 view -0
 6847              		.cfi_startproc
 6848              		@ args = 12, pretend = 0, frame = 24
 6849              		@ frame_needed = 0, uses_anonymous_args = 0
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6850              		.loc 5 257 10 is_stmt 0 view .LVU1562
 6851 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6852              		.cfi_def_cfa_offset 36
 6853              		.cfi_offset 4, -36
 6854              		.cfi_offset 5, -32
 6855              		.cfi_offset 6, -28
 6856              		.cfi_offset 7, -24
 6857              		.cfi_offset 8, -20
 6858              		.cfi_offset 9, -16
 6859              		.cfi_offset 10, -12
 6860              		.cfi_offset 11, -8
 6861              		.cfi_offset 14, -4
 6862 0004 87B0     		sub	sp, sp, #28
 6863              		.cfi_def_cfa_offset 64
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6864              		.loc 5 257 10 view .LVU1563
 6865 0006 9DF84850 		ldrb	r5, [sp, #72]	@ zero_extendqisi2
 6866 000a 109C     		ldr	r4, [sp, #64]
 6867 000c 2E46     		mov	r6, r5
 6868 000e 0195     		str	r5, [sp, #4]
 6869 0010 9DF84450 		ldrb	r5, [sp, #68]	@ zero_extendqisi2
 6870              	.LBB6314:
 264:../../libdaisy/src/hid/disp/display.h ****         {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 298


 6871              		.loc 5 264 9 view .LVU1564
 6872 0014 9EB3     		cbz	r6, .L410
 6873              	.LVL486:
 264:../../libdaisy/src/hid/disp/display.h ****         {
 6874              		.loc 5 264 9 view .LVU1565
 6875              	.LBE6314:
 6876              	.LBB6436:
 6877              	.LBB6437:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 6878              		.loc 5 266 40 is_stmt 1 view .LVU1566
 6879 0016 9942     		cmp	r1, r3
 6880 0018 2ED8     		bhi	.L409
 6881 001a 9946     		mov	r9, r3
 6882              	.LVL487:
 6883              	.L413:
 6884              	.LBB6438:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6885              		.loc 5 268 44 view .LVU1567
 6886 001c A242     		cmp	r2, r4
 6887 001e 28D8     		bhi	.L416
 6888              	.LBB6439:
 6889              	.LBB6440:
 6890              	.LBB6441:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6891              		.loc 14 241 14 is_stmt 0 view .LVU1568
 6892 0020 7F29     		cmp	r1, #127
 6893 0022 1646     		mov	r6, r2
 6894 0024 94BF     		ite	ls
 6895 0026 0023     		movls	r3, #0
 6896 0028 0123     		movhi	r3, #1
 6897 002a 08E0     		b	.L417
 6898              	.LVL488:
 6899              	.L500:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6900              		.loc 14 244 42 view .LVU1569
 6901 002c 9CF81480 		ldrb	r8, [ip, #20]	@ zero_extendqisi2
 6902 0030 4EEA080E 		orr	lr, lr, r8
 6903 0034 8CF814E0 		strb	lr, [ip, #20]
 6904              	.LVL489:
 6905              	.L414:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6906              		.loc 14 244 42 view .LVU1570
 6907              	.LBE6441:
 6908              	.LBE6440:
 6909              	.LBE6439:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6910              		.loc 5 268 17 is_stmt 1 view .LVU1571
 6911 0038 0136     		adds	r6, r6, #1
 6912              	.LVL490:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6913              		.loc 5 268 44 view .LVU1572
 6914 003a B442     		cmp	r4, r6
 6915 003c 19D3     		bcc	.L416
 6916              	.L417:
 6917              	.LVL491:
 6918              	.LBB6455:
 6919              	.LBI6439:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 299


  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 6920              		.loc 4 41 10 view .LVU1573
 6921              	.LBB6452:
 6922              	.LBI6440:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6923              		.loc 14 239 10 view .LVU1574
 6924              	.LBB6449:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6925              		.loc 14 241 9 is_stmt 0 view .LVU1575
 6926 003e 3F2E     		cmp	r6, #63
 6927 0040 FAD8     		bhi	.L414
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6928              		.loc 14 241 9 view .LVU1576
 6929 0042 002B     		cmp	r3, #0
 6930 0044 F8D1     		bne	.L414
 6931              	.LVL492:
 6932              	.LBB6442:
 6933              	.LBI6442:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6934              		.loc 14 239 10 is_stmt 1 view .LVU1577
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6935              		.loc 14 239 10 is_stmt 0 view .LVU1578
 6936              	.LBE6442:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6937              		.loc 14 244 28 view .LVU1579
 6938 0046 4FEAD60C 		lsr	ip, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6939              		.loc 14 244 54 view .LVU1580
 6940 004a 06F0070E 		and	lr, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6941              		.loc 14 244 48 view .LVU1581
 6942 004e 4FF00108 		mov	r8, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6943              		.loc 14 244 42 view .LVU1582
 6944 0052 01EBCC1C 		add	ip, r1, ip, lsl #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6945              		.loc 14 244 48 view .LVU1583
 6946 0056 08FA0EFE 		lsl	lr, r8, lr
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6947              		.loc 14 244 42 view .LVU1584
 6948 005a 8444     		add	ip, ip, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 6949              		.loc 14 243 9 view .LVU1585
 6950 005c 002D     		cmp	r5, #0
 6951 005e E5D1     		bne	.L500
 6952              	.LBB6446:
 6953              	.LBB6443:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6954              		.loc 14 246 42 view .LVU1586
 6955 0060 9CF814B0 		ldrb	fp, [ip, #20]	@ zero_extendqisi2
 6956              	.LBE6443:
 6957              	.LBE6446:
 6958              	.LBE6449:
 6959              	.LBE6452:
 6960              	.LBE6455:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6961              		.loc 5 268 17 view .LVU1587
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 300


 6962 0064 0136     		adds	r6, r6, #1
 6963              	.LVL493:
 6964              	.LBB6456:
 6965              	.LBB6453:
 6966              	.LBB6450:
 6967              	.LBB6447:
 6968              	.LBB6444:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6969              		.loc 14 246 42 view .LVU1588
 6970 0066 2BEA0E0A 		bic	r10, fp, lr
 6971              	.LBE6444:
 6972              	.LBE6447:
 6973              	.LBE6450:
 6974              	.LBE6453:
 6975              	.LBE6456:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6976              		.loc 5 268 44 view .LVU1589
 6977 006a B442     		cmp	r4, r6
 6978              	.LBB6457:
 6979              	.LBB6454:
 6980              	.LBB6451:
 6981              	.LBB6448:
 6982              	.LBB6445:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6983              		.loc 14 246 42 view .LVU1590
 6984 006c 8CF814A0 		strb	r10, [ip, #20]
 6985              	.LVL494:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6986              		.loc 14 246 42 view .LVU1591
 6987              	.LBE6445:
 6988              	.LBE6448:
 6989              	.LBE6451:
 6990              	.LBE6454:
 6991              	.LBE6457:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6992              		.loc 5 268 17 is_stmt 1 view .LVU1592
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6993              		.loc 5 268 44 view .LVU1593
 6994 0070 E5D2     		bcs	.L417
 6995              	.LVL495:
 6996              	.L416:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6997              		.loc 5 268 44 is_stmt 0 view .LVU1594
 6998              	.LBE6438:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 6999              		.loc 5 266 13 is_stmt 1 view .LVU1595
 7000 0072 0131     		adds	r1, r1, #1
 7001              	.LVL496:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 7002              		.loc 5 266 40 view .LVU1596
 7003 0074 8945     		cmp	r9, r1
 7004 0076 D1D2     		bcs	.L413
 7005              	.LVL497:
 7006              	.L409:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 7007              		.loc 5 266 40 is_stmt 0 view .LVU1597
 7008              	.LBE6437:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 301


 7009              	.LBE6436:
 281:../../libdaisy/src/hid/disp/display.h **** 
 7010              		.loc 5 281 5 view .LVU1598
 7011 0078 07B0     		add	sp, sp, #28
 7012              		.cfi_remember_state
 7013              		.cfi_def_cfa_offset 36
 7014              		@ sp needed
 7015 007a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7016              	.LVL498:
 7017              	.L410:
 7018              		.cfi_restore_state
 7019              	.LBB6458:
 7020              	.LBB6315:
 7021              	.LBI6315:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7022              		.loc 5 221 10 is_stmt 1 view .LVU1599
 7023              	.LBB6316:
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7024              		.loc 5 227 52 is_stmt 0 view .LVU1600
 7025 007e A3EB0108 		sub	r8, r3, r1
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7026              		.loc 5 227 22 view .LVU1601
 7027 0082 B8F1000F 		cmp	r8, #0
 7028 0086 B8BF     		it	lt
 7029 0088 C8F10008 		rsblt	r8, r8, #0
 7030              	.LVL499:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 7031              		.loc 5 229 42 view .LVU1602
 7032 008c 9942     		cmp	r1, r3
 7033 008e C0F04E81 		bcc	.L418
 7034              	.LVL500:
 7035              	.LBB6317:
 7036              	.LBI6317:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7037              		.loc 4 41 10 is_stmt 1 view .LVU1603
 7038              	.LBB6318:
 7039              	.LBI6318:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7040              		.loc 14 239 10 view .LVU1604
 7041              	.LBB6319:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7042              		.loc 14 241 14 is_stmt 0 view .LVU1605
 7043 0092 7F2B     		cmp	r3, #127
 7044              	.LBE6319:
 7045              	.LBE6318:
 7046              	.LBE6317:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 7047              		.loc 5 229 42 view .LVU1606
 7048 0094 4FF0FF3A 		mov	r10, #-1
 7049              	.LBB6330:
 7050              	.LBB6326:
 7051              	.LBB6322:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7052              		.loc 14 241 14 view .LVU1607
 7053 0098 94BF     		ite	ls
 7054 009a 0026     		movls	r6, #0
 7055 009c 0126     		movhi	r6, #1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 302


 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7056              		.loc 14 241 28 view .LVU1608
 7057 009e 3F2A     		cmp	r2, #63
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7058              		.loc 14 241 14 view .LVU1609
 7059 00a0 0096     		str	r6, [sp]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7060              		.loc 14 241 28 view .LVU1610
 7061 00a2 94BF     		ite	ls
 7062 00a4 0027     		movls	r7, #0
 7063 00a6 0127     		movhi	r7, #1
 7064 00a8 0297     		str	r7, [sp, #8]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7065              		.loc 14 241 9 view .LVU1611
 7066 00aa A6B9     		cbnz	r6, .L419
 7067 00ac 9FB9     		cbnz	r7, .L419
 7068              	.LVL501:
 7069              	.L460:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7070              		.loc 14 244 28 view .LVU1612
 7071 00ae D608     		lsrs	r6, r2, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7072              		.loc 14 244 54 view .LVU1613
 7073 00b0 02F0070C 		and	ip, r2, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7074              		.loc 14 244 48 view .LVU1614
 7075 00b4 0127     		movs	r7, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7076              		.loc 14 244 42 view .LVU1615
 7077 00b6 03EBC616 		add	r6, r3, r6, lsl #7
 7078 00ba 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7079              		.loc 14 243 9 view .LVU1616
 7080 00bc 002D     		cmp	r5, #0
 7081 00be 00F09481 		beq	.L420
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7082              		.loc 14 244 48 view .LVU1617
 7083 00c2 07FA0CF7 		lsl	r7, r7, ip
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7084              		.loc 14 244 42 view .LVU1618
 7085 00c6 96F814C0 		ldrb	ip, [r6, #20]	@ zero_extendqisi2
 7086 00ca 47EA0C07 		orr	r7, r7, ip
 7087 00ce 3775     		strb	r7, [r6, #20]
 7088 00d0 0026     		movs	r6, #0
 7089 00d2 0296     		str	r6, [sp, #8]
 7090 00d4 0096     		str	r6, [sp]
 7091              	.L419:
 7092              	.LVL502:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7093              		.loc 14 244 42 view .LVU1619
 7094              	.LBE6322:
 7095              	.LBE6326:
 7096              	.LBE6330:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7097              		.loc 5 239 26 is_stmt 1 view .LVU1620
 7098 00d6 9942     		cmp	r1, r3
 7099 00d8 00F09781 		beq	.L501
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 303


 7100              	.L422:
 7101              	.LVL503:
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7102              		.loc 5 227 22 is_stmt 0 view .LVU1621
 7103 00dc 4646     		mov	r6, r8
 7104 00de 9446     		mov	ip, r2
 7105 00e0 8E46     		mov	lr, r1
 7106              	.LVL504:
 7107              	.L424:
 7108              	.LBB6331:
 7109              	.LBI6331:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7110              		.loc 4 41 10 is_stmt 1 view .LVU1622
 7111              	.LBB6332:
 7112              	.LBI6332:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7113              		.loc 14 239 10 view .LVU1623
 7114              	.LBB6333:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7115              		.loc 14 241 9 is_stmt 0 view .LVU1624
 7116 00e2 BEF17F0F 		cmp	lr, #127
 7117 00e6 16D8     		bhi	.L425
 7118 00e8 BCF13F0F 		cmp	ip, #63
 7119 00ec 13D8     		bhi	.L425
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7120              		.loc 14 244 28 view .LVU1625
 7121 00ee 4FEADC07 		lsr	r7, ip, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7122              		.loc 14 244 54 view .LVU1626
 7123 00f2 0CF0070B 		and	fp, ip, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7124              		.loc 14 244 48 view .LVU1627
 7125 00f6 4FF00109 		mov	r9, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7126              		.loc 14 244 42 view .LVU1628
 7127 00fa 0EEBC717 		add	r7, lr, r7, lsl #7
 7128 00fe 0744     		add	r7, r7, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7129              		.loc 14 243 9 view .LVU1629
 7130 0100 002D     		cmp	r5, #0
 7131 0102 00F03981 		beq	.L426
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7132              		.loc 14 244 48 view .LVU1630
 7133 0106 09FA0BF9 		lsl	r9, r9, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7134              		.loc 14 244 42 view .LVU1631
 7135 010a 97F814B0 		ldrb	fp, [r7, #20]	@ zero_extendqisi2
 7136 010e 49EA0B09 		orr	r9, r9, fp
 7137 0112 87F81490 		strb	r9, [r7, #20]
 7138              	.L425:
 7139              	.LVL505:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7140              		.loc 14 244 42 view .LVU1632
 7141              	.LBE6333:
 7142              	.LBE6332:
 7143              	.LBE6331:
 243:../../libdaisy/src/hid/disp/display.h ****             {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 304


 7144              		.loc 5 243 13 view .LVU1633
 7145 0116 7700     		lsls	r7, r6, #1
 7146              	.LVL506:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7147              		.loc 5 246 20 view .LVU1634
 7148 0118 18BF     		it	ne
 7149 011a D644     		addne	lr, lr, r10
 7150              	.LVL507:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7151              		.loc 5 249 13 view .LVU1635
 7152 011c B845     		cmp	r8, r7
 7153 011e 02DD     		ble	.L428
 251:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 7154              		.loc 5 251 23 view .LVU1636
 7155 0120 4644     		add	r6, r6, r8
 7156              	.LVL508:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7157              		.loc 5 252 20 view .LVU1637
 7158 0122 0CF1FF3C 		add	ip, ip, #-1
 7159              	.LVL509:
 7160              	.L428:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7161              		.loc 5 239 26 is_stmt 1 view .LVU1638
 7162 0126 7345     		cmp	r3, lr
 7163 0128 DBD1     		bne	.L424
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7164              		.loc 5 239 26 is_stmt 0 view .LVU1639
 7165 012a 6245     		cmp	r2, ip
 7166 012c D9D1     		bne	.L424
 7167 012e 0026     		movs	r6, #0
 7168              	.LVL510:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7169              		.loc 5 239 26 view .LVU1640
 7170 0130 0496     		str	r6, [sp, #16]
 7171              	.LVL511:
 7172              	.L421:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7173              		.loc 5 239 26 view .LVU1641
 7174              	.LBE6316:
 7175              	.LBE6315:
 7176              	.LBB6346:
 7177              	.LBI6346:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7178              		.loc 5 221 10 is_stmt 1 view .LVU1642
 7179              	.LBB6347:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 7180              		.loc 5 228 52 is_stmt 0 view .LVU1643
 7181 0132 A4EB0209 		sub	r9, r4, r2
 7182              	.LBB6348:
 7183              	.LBB6349:
 7184              	.LBB6350:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7185              		.loc 14 241 9 view .LVU1644
 7186 0136 009F     		ldr	r7, [sp]
 7187              	.LBE6350:
 7188              	.LBE6349:
 7189              	.LBE6348:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 305


 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 7190              		.loc 5 228 22 view .LVU1645
 7191 0138 B9F1000F 		cmp	r9, #0
 7192 013c B8BF     		it	lt
 7193 013e C9F10009 		rsblt	r9, r9, #0
 7194              	.LVL512:
 7195              	.LBB6365:
 7196              	.LBB6359:
 7197              	.LBB6353:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7198              		.loc 14 241 28 view .LVU1646
 7199 0142 3F2C     		cmp	r4, #63
 7200 0144 94BF     		ite	ls
 7201 0146 0026     		movls	r6, #0
 7202 0148 0126     		movhi	r6, #1
 7203              	.LBE6353:
 7204              	.LBE6359:
 7205              	.LBE6365:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7206              		.loc 5 230 42 view .LVU1647
 7207 014a A242     		cmp	r2, r4
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 7208              		.loc 5 231 22 view .LVU1648
 7209 014c C9F10008 		rsb	r8, r9, #0
 7210              	.LVL513:
 7211              	.LBB6366:
 7212              	.LBI6348:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7213              		.loc 4 41 10 is_stmt 1 view .LVU1649
 7214              	.LBB6360:
 7215              	.LBI6349:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7216              		.loc 14 239 10 view .LVU1650
 7217              	.LBB6354:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7218              		.loc 14 241 28 is_stmt 0 view .LVU1651
 7219 0150 0396     		str	r6, [sp, #12]
 7220              	.LBE6354:
 7221              	.LBE6360:
 7222              	.LBE6366:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7223              		.loc 5 230 42 view .LVU1652
 7224 0152 C0F02381 		bcc	.L429
 7225              	.LVL514:
 7226              	.LBB6367:
 7227              	.LBB6361:
 7228              	.LBB6355:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7229              		.loc 14 241 9 view .LVU1653
 7230 0156 002F     		cmp	r7, #0
 7231 0158 40F05081 		bne	.L464
 7232 015c 002E     		cmp	r6, #0
 7233 015e 40F04D81 		bne	.L464
 7234              	.LBE6355:
 7235              	.LBE6361:
 7236              	.LBE6367:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 306


 7237              		.loc 5 230 42 view .LVU1654
 7238 0162 4FF0FF36 		mov	r6, #-1
 7239 0166 0096     		str	r6, [sp]
 7240              	.LBB6368:
 7241              	.LBB6362:
 7242              	.LBB6356:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7243              		.loc 14 244 28 view .LVU1655
 7244 0168 E608     		lsrs	r6, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7245              		.loc 14 244 42 view .LVU1656
 7246 016a 03EBC616 		add	r6, r3, r6, lsl #7
 7247 016e 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7248              		.loc 14 243 9 view .LVU1657
 7249 0170 002D     		cmp	r5, #0
 7250 0172 00F01E81 		beq	.L431
 7251              	.LVL515:
 7252              	.L503:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7253              		.loc 14 244 48 view .LVU1658
 7254 0176 4FF0010C 		mov	ip, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7255              		.loc 14 244 54 view .LVU1659
 7256 017a 04F00707 		and	r7, r4, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7257              		.loc 14 244 48 view .LVU1660
 7258 017e 0CFA07F7 		lsl	r7, ip, r7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7259              		.loc 14 244 42 view .LVU1661
 7260 0182 96F814C0 		ldrb	ip, [r6, #20]	@ zero_extendqisi2
 7261 0186 47EA0C07 		orr	r7, r7, ip
 7262 018a 3775     		strb	r7, [r6, #20]
 7263 018c 0026     		movs	r6, #0
 7264 018e 0396     		str	r6, [sp, #12]
 7265              	.L430:
 7266              	.LVL516:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7267              		.loc 14 244 42 view .LVU1662
 7268              	.LBE6356:
 7269              	.LBE6362:
 7270              	.LBE6368:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7271              		.loc 5 239 26 is_stmt 1 view .LVU1663
 7272 0190 A242     		cmp	r2, r4
 7273 0192 00F03D81 		beq	.L502
 7274              	.L433:
 7275              	.LVL517:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7276              		.loc 5 230 42 is_stmt 0 view .LVU1664
 7277 0196 C446     		mov	ip, r8
 7278 0198 1646     		mov	r6, r2
 7279 019a 1F46     		mov	r7, r3
 7280 019c 0592     		str	r2, [sp, #20]
 7281              	.LVL518:
 7282              	.L435:
 7283              	.LBB6369:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 307


 7284              	.LBI6369:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7285              		.loc 4 41 10 is_stmt 1 view .LVU1665
 7286              	.LBB6370:
 7287              	.LBI6370:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7288              		.loc 14 239 10 view .LVU1666
 7289              	.LBB6371:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7290              		.loc 14 241 9 is_stmt 0 view .LVU1667
 7291 019e 7F2F     		cmp	r7, #127
 7292 01a0 15D8     		bhi	.L436
 7293 01a2 3F2E     		cmp	r6, #63
 7294 01a4 13D8     		bhi	.L436
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7295              		.loc 14 244 28 view .LVU1668
 7296 01a6 4FEAD60E 		lsr	lr, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7297              		.loc 14 244 54 view .LVU1669
 7298 01aa 06F0070B 		and	fp, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7299              		.loc 14 244 48 view .LVU1670
 7300 01ae 4FF0010A 		mov	r10, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7301              		.loc 14 244 42 view .LVU1671
 7302 01b2 07EBCE1E 		add	lr, r7, lr, lsl #7
 7303 01b6 8644     		add	lr, lr, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7304              		.loc 14 243 9 view .LVU1672
 7305 01b8 002D     		cmp	r5, #0
 7306 01ba 00F0E680 		beq	.L437
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7307              		.loc 14 244 48 view .LVU1673
 7308 01be 0AFA0BFA 		lsl	r10, r10, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7309              		.loc 14 244 42 view .LVU1674
 7310 01c2 9EF814B0 		ldrb	fp, [lr, #20]	@ zero_extendqisi2
 7311 01c6 4AEA0B0A 		orr	r10, r10, fp
 7312 01ca 8EF814A0 		strb	r10, [lr, #20]
 7313              	.L436:
 7314              	.LVL519:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7315              		.loc 14 244 42 view .LVU1675
 7316              	.LBE6371:
 7317              	.LBE6370:
 7318              	.LBE6369:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7319              		.loc 5 243 13 view .LVU1676
 7320 01ce B8EB4C0F 		cmp	r8, ip, lsl #1
 242:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 7321              		.loc 5 242 20 view .LVU1677
 7322 01d2 4FEA4C0E 		lsl	lr, ip, #1
 7323              	.LVL520:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7324              		.loc 5 243 13 view .LVU1678
 7325 01d6 02DA     		bge	.L438
 245:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 308


 7326              		.loc 5 245 23 view .LVU1679
 7327 01d8 ACEB090C 		sub	ip, ip, r9
 7328              	.LVL521:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7329              		.loc 5 246 20 view .LVU1680
 7330 01dc 013F     		subs	r7, r7, #1
 7331              	.LVL522:
 7332              	.L438:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7333              		.loc 5 249 13 view .LVU1681
 7334 01de BEF1000F 		cmp	lr, #0
 7335 01e2 01D0     		beq	.L439
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7336              		.loc 5 252 20 view .LVU1682
 7337 01e4 009A     		ldr	r2, [sp]
 7338 01e6 1644     		add	r6, r6, r2
 7339              	.LVL523:
 7340              	.L439:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7341              		.loc 5 239 26 is_stmt 1 view .LVU1683
 7342 01e8 BB42     		cmp	r3, r7
 7343 01ea D8D1     		bne	.L435
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7344              		.loc 5 239 26 is_stmt 0 view .LVU1684
 7345 01ec B442     		cmp	r4, r6
 7346 01ee D6D1     		bne	.L435
 7347 01f0 059A     		ldr	r2, [sp, #20]
 7348              	.LVL524:
 7349              	.L432:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7350              		.loc 5 239 26 view .LVU1685
 7351              	.LBE6347:
 7352              	.LBE6346:
 7353              	.LBB6382:
 7354              	.LBI6382:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7355              		.loc 5 221 10 is_stmt 1 view .LVU1686
 7356              	.LBB6383:
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7357              		.loc 5 227 52 is_stmt 0 view .LVU1687
 7358 01f2 A1EB030E 		sub	lr, r1, r3
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7359              		.loc 5 227 22 view .LVU1688
 7360 01f6 BEF1000F 		cmp	lr, #0
 7361 01fa B8BF     		it	lt
 7362 01fc CEF1000E 		rsblt	lr, lr, #0
 7363              	.LVL525:
 7364              	.LBB6384:
 7365              	.LBB6385:
 7366              	.LBB6386:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7367              		.loc 14 241 14 view .LVU1689
 7368 0200 7F29     		cmp	r1, #127
 7369 0202 94BF     		ite	ls
 7370 0204 4FF0000A 		movls	r10, #0
 7371 0208 4FF0010A 		movhi	r10, #1
 7372              	.LBE6386:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 309


 7373              	.LBE6385:
 7374              	.LBE6384:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 7375              		.loc 5 229 42 view .LVU1690
 7376 020c 9942     		cmp	r1, r3
 7377 020e 8CBF     		ite	hi
 7378 0210 4FF00109 		movhi	r9, #1
 7379 0214 4FF0FF39 		movls	r9, #-1
 7380              	.LVL526:
 7381              	.LBB6393:
 7382              	.LBI6384:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7383              		.loc 4 41 10 is_stmt 1 view .LVU1691
 7384              	.LBB6391:
 7385              	.LBI6385:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7386              		.loc 14 239 10 view .LVU1692
 7387              	.LBB6389:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7388              		.loc 14 241 9 is_stmt 0 view .LVU1693
 7389 0218 BAF1000F 		cmp	r10, #0
 7390 021c 13D1     		bne	.L441
 7391 021e 039E     		ldr	r6, [sp, #12]
 7392 0220 8EB9     		cbnz	r6, .L441
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7393              		.loc 14 244 28 view .LVU1694
 7394 0222 E608     		lsrs	r6, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7395              		.loc 14 244 42 view .LVU1695
 7396 0224 01EBC616 		add	r6, r1, r6, lsl #7
 7397 0228 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7398              		.loc 14 243 9 view .LVU1696
 7399 022a 002D     		cmp	r5, #0
 7400 022c 00F0D380 		beq	.L442
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7401              		.loc 14 244 48 view .LVU1697
 7402 0230 4FF0010C 		mov	ip, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7403              		.loc 14 244 54 view .LVU1698
 7404 0234 04F00707 		and	r7, r4, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7405              		.loc 14 244 48 view .LVU1699
 7406 0238 0CFA07F7 		lsl	r7, ip, r7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7407              		.loc 14 244 42 view .LVU1700
 7408 023c 96F814C0 		ldrb	ip, [r6, #20]	@ zero_extendqisi2
 7409 0240 47EA0C07 		orr	r7, r7, ip
 7410 0244 3775     		strb	r7, [r6, #20]
 7411              	.L441:
 7412              	.LVL527:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7413              		.loc 14 244 42 view .LVU1701
 7414              	.LBE6389:
 7415              	.LBE6391:
 7416              	.LBE6393:
 239:../../libdaisy/src/hid/disp/display.h ****         {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 310


 7417              		.loc 5 239 26 is_stmt 1 view .LVU1702
 7418 0246 049E     		ldr	r6, [sp, #16]
 7419 0248 26BB     		cbnz	r6, .L443
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7420              		.loc 5 227 22 is_stmt 0 view .LVU1703
 7421 024a 7746     		mov	r7, lr
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7422              		.loc 5 239 26 view .LVU1704
 7423 024c 2646     		mov	r6, r4
 7424              	.LVL528:
 7425              	.L444:
 7426              	.LBB6394:
 7427              	.LBI6394:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7428              		.loc 4 41 10 is_stmt 1 view .LVU1705
 7429              	.LBB6395:
 7430              	.LBI6395:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7431              		.loc 14 239 10 view .LVU1706
 7432              	.LBB6396:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7433              		.loc 14 241 9 is_stmt 0 view .LVU1707
 7434 024e 7F2B     		cmp	r3, #127
 7435 0250 14D8     		bhi	.L446
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7436              		.loc 14 241 9 view .LVU1708
 7437 0252 3F2E     		cmp	r6, #63
 7438 0254 12D8     		bhi	.L446
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7439              		.loc 14 244 28 view .LVU1709
 7440 0256 4FEAD60C 		lsr	ip, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7441              		.loc 14 244 54 view .LVU1710
 7442 025a 06F0070B 		and	fp, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7443              		.loc 14 244 48 view .LVU1711
 7444 025e 4FF00108 		mov	r8, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7445              		.loc 14 244 42 view .LVU1712
 7446 0262 03EBCC1C 		add	ip, r3, ip, lsl #7
 7447 0266 8444     		add	ip, ip, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7448              		.loc 14 243 9 view .LVU1713
 7449 0268 002D     		cmp	r5, #0
 7450 026a 73D0     		beq	.L447
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7451              		.loc 14 244 48 view .LVU1714
 7452 026c 08FA0BF8 		lsl	r8, r8, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7453              		.loc 14 244 42 view .LVU1715
 7454 0270 9CF814B0 		ldrb	fp, [ip, #20]	@ zero_extendqisi2
 7455 0274 48EA0B08 		orr	r8, r8, fp
 7456 0278 8CF81480 		strb	r8, [ip, #20]
 7457              	.L446:
 7458              	.LVL529:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7459              		.loc 14 244 42 view .LVU1716
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 311


 7460              	.LBE6396:
 7461              	.LBE6395:
 7462              	.LBE6394:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7463              		.loc 5 243 13 view .LVU1717
 7464 027c 5FEA470C 		lsls	ip, r7, #1
 7465              	.LVL530:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7466              		.loc 5 246 20 view .LVU1718
 7467 0280 18BF     		it	ne
 7468 0282 4B44     		addne	r3, r3, r9
 7469              	.LVL531:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7470              		.loc 5 249 13 view .LVU1719
 7471 0284 E645     		cmp	lr, ip
 7472 0286 01DD     		ble	.L449
 251:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 7473              		.loc 5 251 23 view .LVU1720
 7474 0288 7744     		add	r7, r7, lr
 7475              	.LVL532:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7476              		.loc 5 252 20 view .LVU1721
 7477 028a 013E     		subs	r6, r6, #1
 7478              	.LVL533:
 7479              	.L449:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7480              		.loc 5 239 26 is_stmt 1 view .LVU1722
 7481 028c 9942     		cmp	r1, r3
 7482 028e DED1     		bne	.L444
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7483              		.loc 5 239 26 is_stmt 0 view .LVU1723
 7484 0290 B442     		cmp	r4, r6
 7485 0292 DCD1     		bne	.L444
 7486              	.LVL534:
 7487              	.L443:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7488              		.loc 5 239 26 view .LVU1724
 7489              	.LBE6383:
 7490              	.LBE6382:
 7491              	.LBB6405:
 7492              	.LBI6405:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7493              		.loc 5 221 10 is_stmt 1 view .LVU1725
 7494              	.LBB6406:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 7495              		.loc 5 228 52 is_stmt 0 view .LVU1726
 7496 0294 A2EB040E 		sub	lr, r2, r4
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 7497              		.loc 5 228 22 view .LVU1727
 7498 0298 BEF1000F 		cmp	lr, #0
 7499 029c B8BF     		it	lt
 7500 029e CEF1000E 		rsblt	lr, lr, #0
 7501              	.LVL535:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7502              		.loc 5 230 42 view .LVU1728
 7503 02a2 A242     		cmp	r2, r4
 7504 02a4 8CBF     		ite	hi
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 312


 7505 02a6 4FF00108 		movhi	r8, #1
 7506 02aa 4FF0FF38 		movls	r8, #-1
 7507              	.LVL536:
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 7508              		.loc 5 231 22 view .LVU1729
 7509 02ae CEF1000C 		rsb	ip, lr, #0
 7510              	.LVL537:
 7511              	.LBB6407:
 7512              	.LBI6407:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7513              		.loc 4 41 10 is_stmt 1 view .LVU1730
 7514              	.LBB6408:
 7515              	.LBI6408:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7516              		.loc 14 239 10 view .LVU1731
 7517              	.LBB6409:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7518              		.loc 14 241 9 is_stmt 0 view .LVU1732
 7519 02b2 BAF1000F 		cmp	r10, #0
 7520 02b6 0ED1     		bne	.L451
 7521 02b8 029B     		ldr	r3, [sp, #8]
 7522 02ba 63B9     		cbnz	r3, .L451
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7523              		.loc 14 244 28 view .LVU1733
 7524 02bc D308     		lsrs	r3, r2, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7525              		.loc 14 244 54 view .LVU1734
 7526 02be 02F00707 		and	r7, r2, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7527              		.loc 14 244 48 view .LVU1735
 7528 02c2 0126     		movs	r6, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7529              		.loc 14 244 42 view .LVU1736
 7530 02c4 01EBC313 		add	r3, r1, r3, lsl #7
 7531 02c8 0344     		add	r3, r3, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7532              		.loc 14 243 9 view .LVU1737
 7533 02ca 002D     		cmp	r5, #0
 7534 02cc 7CD0     		beq	.L452
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7535              		.loc 14 244 48 view .LVU1738
 7536 02ce BE40     		lsls	r6, r6, r7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7537              		.loc 14 244 42 view .LVU1739
 7538 02d0 1F7D     		ldrb	r7, [r3, #20]	@ zero_extendqisi2
 7539 02d2 3E43     		orrs	r6, r6, r7
 7540 02d4 1E75     		strb	r6, [r3, #20]
 7541              	.L451:
 7542              	.LVL538:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7543              		.loc 14 244 42 view .LVU1740
 7544              	.LBE6409:
 7545              	.LBE6408:
 7546              	.LBE6407:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7547              		.loc 5 239 26 is_stmt 1 view .LVU1741
 7548 02d6 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 313


 7549 02d8 002B     		cmp	r3, #0
 7550 02da 7FF4CDAE 		bne	.L409
 7551 02de 6646     		mov	r6, ip
 7552 02e0 0B46     		mov	r3, r1
 7553              	.LVL539:
 7554              	.L453:
 7555              	.LBB6414:
 7556              	.LBI6414:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7557              		.loc 4 41 10 view .LVU1742
 7558              	.LBB6415:
 7559              	.LBI6415:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7560              		.loc 14 239 10 view .LVU1743
 7561              	.LBB6416:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7562              		.loc 14 241 9 is_stmt 0 view .LVU1744
 7563 02e2 7F2B     		cmp	r3, #127
 7564 02e4 12D8     		bhi	.L455
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7565              		.loc 14 241 9 view .LVU1745
 7566 02e6 3F2C     		cmp	r4, #63
 7567 02e8 10D8     		bhi	.L455
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7568              		.loc 14 244 28 view .LVU1746
 7569 02ea E708     		lsrs	r7, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7570              		.loc 14 244 54 view .LVU1747
 7571 02ec 04F0070A 		and	r10, r4, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7572              		.loc 14 244 48 view .LVU1748
 7573 02f0 4FF00109 		mov	r9, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7574              		.loc 14 244 42 view .LVU1749
 7575 02f4 03EBC717 		add	r7, r3, r7, lsl #7
 7576 02f8 0744     		add	r7, r7, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7577              		.loc 14 243 9 view .LVU1750
 7578 02fa A5B3     		cbz	r5, .L456
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7579              		.loc 14 244 48 view .LVU1751
 7580 02fc 09FA0AF9 		lsl	r9, r9, r10
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7581              		.loc 14 244 42 view .LVU1752
 7582 0300 97F814A0 		ldrb	r10, [r7, #20]	@ zero_extendqisi2
 7583 0304 49EA0A09 		orr	r9, r9, r10
 7584 0308 87F81490 		strb	r9, [r7, #20]
 7585              	.L455:
 7586              	.LVL540:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7587              		.loc 14 244 42 view .LVU1753
 7588              	.LBE6416:
 7589              	.LBE6415:
 7590              	.LBE6414:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7591              		.loc 5 243 13 view .LVU1754
 7592 030c BCEB460F 		cmp	ip, r6, lsl #1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 314


 242:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 7593              		.loc 5 242 20 view .LVU1755
 7594 0310 4FEA4607 		lsl	r7, r6, #1
 7595              	.LVL541:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7596              		.loc 5 243 13 view .LVU1756
 7597 0314 02DA     		bge	.L457
 245:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 7598              		.loc 5 245 23 view .LVU1757
 7599 0316 A6EB0E06 		sub	r6, r6, lr
 7600              	.LVL542:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7601              		.loc 5 246 20 view .LVU1758
 7602 031a 013B     		subs	r3, r3, #1
 7603              	.LVL543:
 7604              	.L457:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7605              		.loc 5 249 13 view .LVU1759
 7606 031c 07B1     		cbz	r7, .L458
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7607              		.loc 5 252 20 view .LVU1760
 7608 031e 4444     		add	r4, r4, r8
 7609              	.LVL544:
 7610              	.L458:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7611              		.loc 5 239 26 is_stmt 1 view .LVU1761
 7612 0320 9942     		cmp	r1, r3
 7613 0322 DED1     		bne	.L453
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7614              		.loc 5 239 26 is_stmt 0 view .LVU1762
 7615 0324 A242     		cmp	r2, r4
 7616 0326 DCD1     		bne	.L453
 7617              	.LBE6406:
 7618              	.LBE6405:
 7619              	.LBE6458:
 281:../../libdaisy/src/hid/disp/display.h **** 
 7620              		.loc 5 281 5 view .LVU1763
 7621 0328 07B0     		add	sp, sp, #28
 7622              		.cfi_remember_state
 7623              		.cfi_def_cfa_offset 36
 7624              		@ sp needed
 7625 032a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7626              	.LVL545:
 7627              	.L418:
 7628              		.cfi_restore_state
 7629              	.LBB6459:
 7630              	.LBB6425:
 7631              	.LBB6342:
 7632              	.LBB6338:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7633              		.loc 4 41 10 is_stmt 1 view .LVU1764
 7634              	.LBB6327:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7635              		.loc 14 239 10 view .LVU1765
 7636              	.LBB6323:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7637              		.loc 14 241 28 is_stmt 0 view .LVU1766
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 315


 7638 032e 3F2A     		cmp	r2, #63
 7639              	.LBE6323:
 7640              	.LBE6327:
 7641              	.LBE6338:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 7642              		.loc 5 229 42 view .LVU1767
 7643 0330 4FF0010A 		mov	r10, #1
 7644              	.LBB6339:
 7645              	.LBB6328:
 7646              	.LBB6324:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7647              		.loc 14 241 28 view .LVU1768
 7648 0334 94BF     		ite	ls
 7649 0336 0026     		movls	r6, #0
 7650 0338 0126     		movhi	r6, #1
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7651              		.loc 14 241 14 view .LVU1769
 7652 033a 7F2B     		cmp	r3, #127
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7653              		.loc 14 241 28 view .LVU1770
 7654 033c 0296     		str	r6, [sp, #8]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7655              		.loc 14 241 14 view .LVU1771
 7656 033e 94BF     		ite	ls
 7657 0340 0027     		movls	r7, #0
 7658 0342 0127     		movhi	r7, #1
 7659 0344 0097     		str	r7, [sp]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7660              		.loc 14 241 9 view .LVU1772
 7661 0346 002E     		cmp	r6, #0
 7662 0348 7FF4C8AE 		bne	.L422
 7663 034c 002F     		cmp	r7, #0
 7664 034e 3FF4AEAE 		beq	.L460
 7665 0352 C3E6     		b	.L422
 7666              	.LVL546:
 7667              	.L447:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7668              		.loc 14 241 9 view .LVU1773
 7669              	.LBE6324:
 7670              	.LBE6328:
 7671              	.LBE6339:
 7672              	.LBE6342:
 7673              	.LBE6425:
 7674              	.LBB6426:
 7675              	.LBB6403:
 7676              	.LBB6401:
 7677              	.LBB6400:
 7678              	.LBB6399:
 7679              	.LBB6397:
 7680              	.LBI6397:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7681              		.loc 14 239 10 is_stmt 1 view .LVU1774
 7682              	.LBB6398:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7683              		.loc 14 246 49 is_stmt 0 view .LVU1775
 7684 0354 08FA0BFB 		lsl	fp, r8, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 316


 7685              		.loc 14 246 42 view .LVU1776
 7686 0358 9CF81480 		ldrb	r8, [ip, #20]	@ zero_extendqisi2
 7687 035c 28EA0B08 		bic	r8, r8, fp
 7688 0360 8CF81480 		strb	r8, [ip, #20]
 7689 0364 8AE7     		b	.L446
 7690              	.LVL547:
 7691              	.L456:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7692              		.loc 14 246 42 view .LVU1777
 7693              	.LBE6398:
 7694              	.LBE6397:
 7695              	.LBE6399:
 7696              	.LBE6400:
 7697              	.LBE6401:
 7698              	.LBE6403:
 7699              	.LBE6426:
 7700              	.LBB6427:
 7701              	.LBB6423:
 7702              	.LBB6421:
 7703              	.LBB6420:
 7704              	.LBB6419:
 7705              	.LBB6417:
 7706              	.LBI6417:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7707              		.loc 14 239 10 is_stmt 1 view .LVU1778
 7708              	.LBB6418:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7709              		.loc 14 246 49 is_stmt 0 view .LVU1779
 7710 0366 09FA0AFA 		lsl	r10, r9, r10
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7711              		.loc 14 246 42 view .LVU1780
 7712 036a 97F81490 		ldrb	r9, [r7, #20]	@ zero_extendqisi2
 7713 036e 29EA0A09 		bic	r9, r9, r10
 7714 0372 87F81490 		strb	r9, [r7, #20]
 7715 0376 C9E7     		b	.L455
 7716              	.LVL548:
 7717              	.L426:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7718              		.loc 14 246 42 view .LVU1781
 7719              	.LBE6418:
 7720              	.LBE6417:
 7721              	.LBE6419:
 7722              	.LBE6420:
 7723              	.LBE6421:
 7724              	.LBE6423:
 7725              	.LBE6427:
 7726              	.LBB6428:
 7727              	.LBB6343:
 7728              	.LBB6340:
 7729              	.LBB6337:
 7730              	.LBB6336:
 7731              	.LBB6334:
 7732              	.LBI6334:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7733              		.loc 14 239 10 is_stmt 1 view .LVU1782
 7734              	.LBB6335:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 317


 7735              		.loc 14 246 49 is_stmt 0 view .LVU1783
 7736 0378 09FA0BFB 		lsl	fp, r9, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7737              		.loc 14 246 42 view .LVU1784
 7738 037c 97F81490 		ldrb	r9, [r7, #20]	@ zero_extendqisi2
 7739 0380 29EA0B09 		bic	r9, r9, fp
 7740 0384 87F81490 		strb	r9, [r7, #20]
 7741 0388 C5E6     		b	.L425
 7742              	.LVL549:
 7743              	.L437:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7744              		.loc 14 246 42 view .LVU1785
 7745              	.LBE6335:
 7746              	.LBE6334:
 7747              	.LBE6336:
 7748              	.LBE6337:
 7749              	.LBE6340:
 7750              	.LBE6343:
 7751              	.LBE6428:
 7752              	.LBB6429:
 7753              	.LBB6379:
 7754              	.LBB6376:
 7755              	.LBB6375:
 7756              	.LBB6374:
 7757              	.LBB6372:
 7758              	.LBI6372:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7759              		.loc 14 239 10 is_stmt 1 view .LVU1786
 7760              	.LBB6373:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7761              		.loc 14 246 49 is_stmt 0 view .LVU1787
 7762 038a 0AFA0BFB 		lsl	fp, r10, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7763              		.loc 14 246 42 view .LVU1788
 7764 038e 9EF814A0 		ldrb	r10, [lr, #20]	@ zero_extendqisi2
 7765 0392 2AEA0B0A 		bic	r10, r10, fp
 7766 0396 8EF814A0 		strb	r10, [lr, #20]
 7767 039a 18E7     		b	.L436
 7768              	.LVL550:
 7769              	.L429:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7770              		.loc 14 246 42 view .LVU1789
 7771              	.LBE6373:
 7772              	.LBE6372:
 7773              	.LBE6374:
 7774              	.LBE6375:
 7775              	.LBE6376:
 7776              	.LBB6377:
 7777              	.LBB6363:
 7778              	.LBB6357:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7779              		.loc 14 241 9 view .LVU1790
 7780 039c 97BB     		cbnz	r7, .L468
 7781 039e 8EBB     		cbnz	r6, .L468
 7782              	.LBE6357:
 7783              	.LBE6363:
 7784              	.LBE6377:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 318


 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7785              		.loc 5 230 42 view .LVU1791
 7786 03a0 0126     		movs	r6, #1
 7787 03a2 0096     		str	r6, [sp]
 7788              	.LBB6378:
 7789              	.LBB6364:
 7790              	.LBB6358:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7791              		.loc 14 244 28 view .LVU1792
 7792 03a4 E608     		lsrs	r6, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7793              		.loc 14 244 42 view .LVU1793
 7794 03a6 03EBC616 		add	r6, r3, r6, lsl #7
 7795 03aa 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7796              		.loc 14 243 9 view .LVU1794
 7797 03ac 002D     		cmp	r5, #0
 7798 03ae 7FF4E2AE 		bne	.L503
 7799              	.LVL551:
 7800              	.L431:
 7801              	.LBB6351:
 7802              	.LBI6351:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7803              		.loc 14 239 10 is_stmt 1 view .LVU1795
 7804              	.LBB6352:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7805              		.loc 14 246 49 is_stmt 0 view .LVU1796
 7806 03b2 0127     		movs	r7, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7807              		.loc 14 246 55 view .LVU1797
 7808 03b4 04F0070C 		and	ip, r4, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7809              		.loc 14 246 42 view .LVU1798
 7810 03b8 0395     		str	r5, [sp, #12]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7811              		.loc 14 246 49 view .LVU1799
 7812 03ba 07FA0CFC 		lsl	ip, r7, ip
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7813              		.loc 14 246 42 view .LVU1800
 7814 03be 377D     		ldrb	r7, [r6, #20]	@ zero_extendqisi2
 7815 03c0 27EA0C07 		bic	r7, r7, ip
 7816 03c4 3775     		strb	r7, [r6, #20]
 7817 03c6 E3E6     		b	.L430
 7818              	.LVL552:
 7819              	.L452:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7820              		.loc 14 246 42 view .LVU1801
 7821              	.LBE6352:
 7822              	.LBE6351:
 7823              	.LBE6358:
 7824              	.LBE6364:
 7825              	.LBE6378:
 7826              	.LBE6379:
 7827              	.LBE6429:
 7828              	.LBB6430:
 7829              	.LBB6424:
 7830              	.LBB6422:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 319


 7831              	.LBB6413:
 7832              	.LBB6412:
 7833              	.LBB6410:
 7834              	.LBI6410:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7835              		.loc 14 239 10 is_stmt 1 view .LVU1802
 7836              	.LBB6411:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7837              		.loc 14 246 49 is_stmt 0 view .LVU1803
 7838 03c8 06FA07F7 		lsl	r7, r6, r7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7839              		.loc 14 246 42 view .LVU1804
 7840 03cc 1E7D     		ldrb	r6, [r3, #20]	@ zero_extendqisi2
 7841 03ce 26EA0706 		bic	r6, r6, r7
 7842 03d2 1E75     		strb	r6, [r3, #20]
 7843 03d4 7FE7     		b	.L451
 7844              	.LVL553:
 7845              	.L442:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7846              		.loc 14 246 42 view .LVU1805
 7847              	.LBE6411:
 7848              	.LBE6410:
 7849              	.LBE6412:
 7850              	.LBE6413:
 7851              	.LBE6422:
 7852              	.LBE6424:
 7853              	.LBE6430:
 7854              	.LBB6431:
 7855              	.LBB6404:
 7856              	.LBB6402:
 7857              	.LBB6392:
 7858              	.LBB6390:
 7859              	.LBB6387:
 7860              	.LBI6387:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7861              		.loc 14 239 10 is_stmt 1 view .LVU1806
 7862              	.LBB6388:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7863              		.loc 14 246 49 is_stmt 0 view .LVU1807
 7864 03d6 0127     		movs	r7, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7865              		.loc 14 246 55 view .LVU1808
 7866 03d8 04F0070C 		and	ip, r4, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7867              		.loc 14 246 49 view .LVU1809
 7868 03dc 07FA0CFC 		lsl	ip, r7, ip
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7869              		.loc 14 246 42 view .LVU1810
 7870 03e0 377D     		ldrb	r7, [r6, #20]	@ zero_extendqisi2
 7871 03e2 27EA0C07 		bic	r7, r7, ip
 7872 03e6 3775     		strb	r7, [r6, #20]
 7873 03e8 2DE7     		b	.L441
 7874              	.LVL554:
 7875              	.L420:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7876              		.loc 14 246 42 view .LVU1811
 7877              	.LBE6388:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 320


 7878              	.LBE6387:
 7879              	.LBE6390:
 7880              	.LBE6392:
 7881              	.LBE6402:
 7882              	.LBE6404:
 7883              	.LBE6431:
 7884              	.LBB6432:
 7885              	.LBB6344:
 7886              	.LBB6341:
 7887              	.LBB6329:
 7888              	.LBB6325:
 7889              	.LBB6320:
 7890              	.LBI6320:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7891              		.loc 14 239 10 is_stmt 1 view .LVU1812
 7892              	.LBB6321:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7893              		.loc 14 246 49 is_stmt 0 view .LVU1813
 7894 03ea 07FA0CFC 		lsl	ip, r7, ip
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7895              		.loc 14 246 42 view .LVU1814
 7896 03ee 377D     		ldrb	r7, [r6, #20]	@ zero_extendqisi2
 7897 03f0 0295     		str	r5, [sp, #8]
 7898 03f2 27EA0C07 		bic	r7, r7, ip
 7899 03f6 0095     		str	r5, [sp]
 7900 03f8 3775     		strb	r7, [r6, #20]
 7901 03fa 6CE6     		b	.L419
 7902              	.LVL555:
 7903              	.L464:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7904              		.loc 14 246 42 view .LVU1815
 7905              	.LBE6321:
 7906              	.LBE6320:
 7907              	.LBE6325:
 7908              	.LBE6329:
 7909              	.LBE6341:
 7910              	.LBE6344:
 7911              	.LBE6432:
 7912              	.LBB6433:
 7913              	.LBB6380:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7914              		.loc 5 230 42 view .LVU1816
 7915 03fc 4FF0FF36 		mov	r6, #-1
 7916 0400 0096     		str	r6, [sp]
 7917 0402 C5E6     		b	.L430
 7918              	.LVL556:
 7919              	.L468:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7920              		.loc 5 230 42 view .LVU1817
 7921 0404 0126     		movs	r6, #1
 7922 0406 0096     		str	r6, [sp]
 7923 0408 C5E6     		b	.L433
 7924              	.LVL557:
 7925              	.L501:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7926              		.loc 5 230 42 view .LVU1818
 7927              	.LBE6380:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 321


 7928              	.LBE6433:
 7929              	.LBB6434:
 7930              	.LBB6345:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7931              		.loc 5 239 19 view .LVU1819
 7932 040a 0126     		movs	r6, #1
 7933 040c 0496     		str	r6, [sp, #16]
 7934 040e 90E6     		b	.L421
 7935              	.LVL558:
 7936              	.L502:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7937              		.loc 5 239 19 view .LVU1820
 7938              	.LBE6345:
 7939              	.LBE6434:
 7940              	.LBB6435:
 7941              	.LBB6381:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7942              		.loc 5 239 33 view .LVU1821
 7943 0410 0126     		movs	r6, #1
 7944 0412 0196     		str	r6, [sp, #4]
 7945 0414 EDE6     		b	.L432
 7946              	.LBE6381:
 7947              	.LBE6435:
 7948              	.LBE6459:
 7949              		.cfi_endproc
 7950              	.LFE6194:
 7952 0416 00BF     		.section	.text._ZNSt14_Function_baseD2Ev,"axG",%progbits,_ZNSt14_Function_baseD5Ev,comdat
 7953              		.align	1
 7954              		.p2align 2,,3
 7955              		.weak	_ZNSt14_Function_baseD2Ev
 7956              		.syntax unified
 7957              		.thumb
 7958              		.thumb_func
 7959              		.fpu fpv5-d16
 7961              	_ZNSt14_Function_baseD2Ev:
 7962              	.LVL559:
 7963              	.LFB5034:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 7964              		.loc 15 242 5 is_stmt 1 view -0
 7965              		.cfi_startproc
 7966              		@ args = 0, pretend = 0, frame = 0
 7967              		@ frame_needed = 0, uses_anonymous_args = 0
 7968              	.LBB6461:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 7969              		.loc 15 244 7 view .LVU1823
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 7970              		.loc 15 244 11 is_stmt 0 view .LVU1824
 7971 0000 8368     		ldr	r3, [r0, #8]
 7972              	.LBE6461:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 7973              		.loc 15 242 5 view .LVU1825
 7974 0002 10B5     		push	{r4, lr}
 7975              		.cfi_def_cfa_offset 8
 7976              		.cfi_offset 4, -8
 7977              		.cfi_offset 14, -4
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 7978              		.loc 15 242 5 view .LVU1826
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 322


 7979 0004 0446     		mov	r4, r0
 7980              	.LBB6462:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 7981              		.loc 15 244 7 view .LVU1827
 7982 0006 13B1     		cbz	r3, .L505
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 7983              		.loc 15 245 2 is_stmt 1 view .LVU1828
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 7984              		.loc 15 245 12 is_stmt 0 view .LVU1829
 7985 0008 0322     		movs	r2, #3
 7986 000a 0146     		mov	r1, r0
 7987 000c 9847     		blx	r3
 7988              	.LVL560:
 7989              	.L505:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 7990              		.loc 15 245 12 view .LVU1830
 7991              	.LBE6462:
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 7992              		.loc 15 246 5 view .LVU1831
 7993 000e 2046     		mov	r0, r4
 7994 0010 10BD     		pop	{r4, pc}
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 7995              		.loc 15 246 5 view .LVU1832
 7996              		.cfi_endproc
 7997              	.LFE5034:
 7999              		.weak	_ZNSt14_Function_baseD1Ev
 8000              		.thumb_set _ZNSt14_Function_baseD1Ev,_ZNSt14_Function_baseD2Ev
 8001 0012 00BF     		.section	.text._ZN10jellybeans8MenuItemaSEOS0_.isra.0,"ax",%progbits
 8002              		.align	1
 8003              		.p2align 2,,3
 8004              		.syntax unified
 8005              		.thumb
 8006              		.thumb_func
 8007              		.fpu fpv5-d16
 8009              	_ZN10jellybeans8MenuItemaSEOS0_.isra.0:
 8010              	.LVL561:
 8011              	.LFB6205:
 8012              		.loc 28 21 11 is_stmt 1 view -0
 8013              		.cfi_startproc
 8014              		@ args = 0, pretend = 0, frame = 24
 8015              		@ frame_needed = 0, uses_anonymous_args = 0
 8016              		.loc 28 21 11 is_stmt 0 view .LVU1834
 8017 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8018              		.cfi_def_cfa_offset 20
 8019              		.cfi_offset 4, -20
 8020              		.cfi_offset 5, -16
 8021              		.cfi_offset 6, -12
 8022              		.cfi_offset 7, -8
 8023              		.cfi_offset 14, -4
 8024 0002 0D46     		mov	r5, r1
 8025 0004 51F8043B 		ldr	r3, [r1], #4
 8026 0008 0446     		mov	r4, r0
 8027 000a 87B0     		sub	sp, sp, #28
 8028              		.cfi_def_cfa_offset 48
 8029              		.loc 28 21 11 view .LVU1835
 8030 000c 40F8043B 		str	r3, [r0], #4
 8031              	.LVL562:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 323


 8032              	.LBB6519:
 8033              	.LBB6520:
 8034              	.LBB6521:
 8035              	.LBB6522:
 8036              	.LBB6523:
 8037              	.LBB6524:
 8038              	.LBB6525:
 8039              	.LBB6526:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8040              		.loc 26 111 13 view .LVU1836
 8041 0010 0027     		movs	r7, #0
 8042              	.LBE6526:
 8043              	.LBE6525:
 8044              	.LBE6524:
 8045              	.LBE6523:
 8046              	.LBE6522:
 8047              	.LBE6521:
 8048              	.LBE6520:
 8049              	.LBE6519:
 8050              		.loc 28 21 11 view .LVU1837
 8051 0012 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0
 8052              	.LVL563:
 8053 0016 05F11C01 		add	r1, r5, #28
 8054 001a 04F11C00 		add	r0, r4, #28
 8055              	.LBB6581:
 8056              	.LBB6579:
 8057              	.LBB6577:
 8058              	.LBB6575:
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 324


 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 325


 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 326


 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 327


 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 328


 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 329


 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 330


1055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
1071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
1077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 331


1112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 332


1169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
1185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
1204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
1205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
1217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 333


1226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 334


1283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 335


1340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
1386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 336


1397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 337


1454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
1489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
1496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 338


1511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 339


1568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
1569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 340


1625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
1644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
1667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 341


1682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
1683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
1706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
1709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
1713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
1728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 342


1739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
1756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
1757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
1759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
1760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_type __len = size() + (std::max)(size(), __n);
1762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
1763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by constructors to check initial size.
1766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_check_init_len(size_type __n, const allocator_type& __a)
1768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n > _S_max_size(_Tp_alloc_type(__a)))
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
1771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
1772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n;
1773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
1777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
1779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
1780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// (even if std::allocator_traits::max_size says we can).
1781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __diffmax
1782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
1783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __allocmax = _Alloc_traits::max_size(__a);
1784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (std::min)(__diffmax, __allocmax);
1785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal erase functions follow.
1788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
1790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _M_assign_aux.
1791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
1793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (size_type __n = this->_M_impl._M_finish - __pos)
1795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 343


1796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::_Destroy(__pos, this->_M_impl._M_finish,
1797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  _M_get_Tp_allocator());
1798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish = __pos;
1799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_SHRINK(__n);
1800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase(iterator __position);
1805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase(iterator __first, iterator __last);
1808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
1811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Constant-time move assignment when source object's memory can be
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // moved, either because the source's allocator will move too
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // or because the allocators are equal.
1814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_move_assign(vector&& __x, true_type) noexcept
1816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector __tmp(get_allocator());
 8059              		.loc 26 1817 9 view .LVU1838
 8060 001e 02AE     		add	r6, sp, #8
 8061              	.LBE6575:
 8062              	.LBE6577:
 8063              	.LBE6579:
 8064              	.LBE6581:
 8065              		.loc 28 21 11 view .LVU1839
 8066 0020 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0
 8067              	.LVL564:
 8068              	.LBB6582:
 8069              	.LBI6519:
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8070              		.loc 26 709 7 is_stmt 1 view .LVU1840
 8071              	.LBB6580:
 8072              	.LBB6578:
 8073              	.LBI6521:
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8074              		.loc 26 1815 7 view .LVU1841
 8075              	.LBB6576:
 8076              	.LBB6542:
 8077              	.LBI6542:
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 8078              		.loc 26 284 7 view .LVU1842
 8079              	.LBB6543:
 8080              	.LBI6543:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8081              		.loc 19 147 7 view .LVU1843
 8082              	.LBB6544:
 8083              	.LBI6544:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8084              		.loc 20 82 7 view .LVU1844
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8085              		.loc 20 82 7 is_stmt 0 view .LVU1845
 8086              	.LBE6544:
 8087              	.LBE6543:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 344


 8088              	.LBE6542:
 8089              	.LBB6545:
 8090              	.LBI6545:
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 8091              		.loc 26 497 7 is_stmt 1 view .LVU1846
 8092              	.LBB6546:
 8093              	.LBI6546:
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 8094              		.loc 26 293 7 view .LVU1847
 8095              	.LBB6547:
 8096              	.LBI6547:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 8097              		.loc 26 136 2 view .LVU1848
 8098              	.LBB6548:
 8099              	.LBI6548:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8100              		.loc 19 147 7 view .LVU1849
 8101              	.LBB6549:
 8102              	.LBI6549:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8103              		.loc 20 82 7 view .LVU1850
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8104              		.loc 20 82 7 is_stmt 0 view .LVU1851
 8105              	.LBE6549:
 8106              	.LBE6548:
 8107              	.LBB6550:
 8108              	.LBI6550:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8109              		.loc 26 97 2 is_stmt 1 view .LVU1852
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8110              		.loc 26 97 2 is_stmt 0 view .LVU1853
 8111              	.LBE6550:
 8112              	.LBE6547:
 8113              	.LBE6546:
 8114              	.LBE6545:
 8115              	.LBB6551:
 8116              	.LBI6551:
 8117              		.loc 19 162 7 is_stmt 1 view .LVU1854
 8118              	.LBB6552:
 8119              	.LBI6552:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8120              		.loc 20 89 7 view .LVU1855
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8121              		.loc 20 89 7 is_stmt 0 view .LVU1856
 8122              	.LBE6552:
 8123              	.LBE6551:
 8124              	.LBB6553:
 8125              	.LBI6553:
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8126              		.loc 26 117 2 is_stmt 1 view .LVU1857
 8127              	.LBB6554:
 8128              	.LBB6555:
 8129              	.LBI6555:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8130              		.loc 26 97 2 view .LVU1858
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8131              		.loc 26 97 2 is_stmt 0 view .LVU1859
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 345


 8132              	.LBE6555:
 8133              	.LBB6556:
 8134              	.LBI6556:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8135              		.loc 26 109 2 is_stmt 1 view .LVU1860
 8136              	.LBB6557:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8137              		.loc 26 111 19 is_stmt 0 view .LVU1861
 8138 0024 636B     		ldr	r3, [r4, #52]
 8139              	.LVL565:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8140              		.loc 26 111 19 view .LVU1862
 8141              	.LBE6557:
 8142              	.LBE6556:
 8143              	.LBB6560:
 8144              	.LBB6561:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8145              		.loc 26 113 28 view .LVU1863
 8146 0026 EA6B     		ldr	r2, [r5, #60]
 8147              	.LBE6561:
 8148              	.LBE6560:
 8149              	.LBE6554:
 8150              	.LBE6553:
 8151              		.loc 26 1817 9 view .LVU1864
 8152 0028 3046     		mov	r0, r6
 8153              	.LBB6570:
 8154              	.LBB6539:
 8155              	.LBB6529:
 8156              	.LBB6530:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8157              		.loc 26 111 13 view .LVU1865
 8158 002a 0293     		str	r3, [sp, #8]
 8159              	.LBE6530:
 8160              	.LBE6529:
 8161              	.LBE6539:
 8162              	.LBE6570:
 8163              	.LBB6571:
 8164              	.LBB6568:
 8165              	.LBB6564:
 8166              	.LBB6558:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8167              		.loc 26 112 20 view .LVU1866
 8168 002c A36B     		ldr	r3, [r4, #56]
 8169              	.LVL566:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8170              		.loc 26 112 20 view .LVU1867
 8171              	.LBE6558:
 8172              	.LBE6564:
 8173              	.LBE6568:
 8174              	.LBE6571:
 8175              	.LBB6572:
 8176              	.LBB6540:
 8177              	.LBB6533:
 8178              	.LBB6531:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8179              		.loc 26 112 14 view .LVU1868
 8180 002e 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 346


 8181              	.LBE6531:
 8182              	.LBE6533:
 8183              	.LBE6540:
 8184              	.LBE6572:
 8185              	.LBB6573:
 8186              	.LBB6569:
 8187              	.LBB6565:
 8188              	.LBB6562:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8189              		.loc 26 111 19 view .LVU1869
 8190 0030 6B6B     		ldr	r3, [r5, #52]
 8191              	.LVL567:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8192              		.loc 26 111 13 view .LVU1870
 8193 0032 6363     		str	r3, [r4, #52]
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8194              		.loc 26 112 20 view .LVU1871
 8195 0034 AB6B     		ldr	r3, [r5, #56]
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8196              		.loc 26 112 14 view .LVU1872
 8197 0036 A363     		str	r3, [r4, #56]
 8198              	.LVL568:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8199              		.loc 26 112 14 view .LVU1873
 8200              	.LBE6562:
 8201              	.LBE6565:
 8202              	.LBB6566:
 8203              	.LBB6559:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8204              		.loc 26 113 28 view .LVU1874
 8205 0038 E36B     		ldr	r3, [r4, #60]
 8206              	.LVL569:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8207              		.loc 26 113 28 view .LVU1875
 8208              	.LBE6559:
 8209              	.LBE6566:
 8210              	.LBB6567:
 8211              	.LBI6560:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8212              		.loc 26 109 2 is_stmt 1 view .LVU1876
 8213              	.LBB6563:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8214              		.loc 26 113 22 is_stmt 0 view .LVU1877
 8215 003a E263     		str	r2, [r4, #60]
 8216              	.LVL570:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8217              		.loc 26 113 22 view .LVU1878
 8218              	.LBE6563:
 8219              	.LBE6567:
 8220              	.LBE6569:
 8221              	.LBE6573:
 8222              	.LBB6574:
 8223              	.LBI6523:
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8224              		.loc 26 117 2 is_stmt 1 view .LVU1879
 8225              	.LBB6541:
 8226              	.LBB6534:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 347


 8227              	.LBI6534:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8228              		.loc 26 97 2 view .LVU1880
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8229              		.loc 26 97 2 is_stmt 0 view .LVU1881
 8230              	.LBE6534:
 8231              	.LBB6535:
 8232              	.LBI6529:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8233              		.loc 26 109 2 is_stmt 1 view .LVU1882
 8234              	.LBE6535:
 8235              	.LBB6536:
 8236              	.LBB6527:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8237              		.loc 26 113 22 is_stmt 0 view .LVU1883
 8238 003c EF63     		str	r7, [r5, #60]
 8239              	.LBE6527:
 8240              	.LBE6536:
 8241              	.LBB6537:
 8242              	.LBB6532:
 8243 003e 0493     		str	r3, [sp, #16]
 8244              	.LVL571:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8245              		.loc 26 113 22 view .LVU1884
 8246              	.LBE6532:
 8247              	.LBE6537:
 8248              	.LBB6538:
 8249              	.LBI6525:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8250              		.loc 26 109 2 is_stmt 1 view .LVU1885
 8251              	.LBB6528:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8252              		.loc 26 112 14 is_stmt 0 view .LVU1886
 8253 0040 C5E90D77 		strd	r7, r7, [r5, #52]
 8254              	.LBE6528:
 8255              	.LBE6538:
 8256              	.LBE6541:
 8257              	.LBE6574:
 8258              		.loc 26 1817 9 view .LVU1887
 8259 0044 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 8260              	.LVL572:
 8261              		.loc 26 1817 9 view .LVU1888
 8262              	.LBE6576:
 8263              	.LBE6578:
 8264              	.LBE6580:
 8265              	.LBE6582:
 8266              	.LBB6583:
 8267              	.LBI6583:
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       private _Function_base
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Func,
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	       typename _Res2 = __invoke_result<_Func&, _ArgTypes...>>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	struct _Callable
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	: __is_invocable_impl<_Res2, _Res>::type
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ };
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 348


 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // Used so the return type convertibility checks aren't done when
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // performing overload resolution for copy construction/assignment.
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Tp>
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	struct _Callable<function, _Tp> : false_type { };
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Cond, typename _Tp>
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	using _Requires = typename enable_if<_Cond::value, _Tp>::type;
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     public:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       typedef _Res result_type;
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.1] construct/copy/destroy
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Default construct creates an empty function call wrapper.
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c !(bool)*this
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function() noexcept
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       : _Function_base() { }
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Creates an empty function call wrapper.
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c !(bool)*this
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(nullptr_t) noexcept
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       : _Function_base() { }
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function copy constructor.
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function object with identical call signature.
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c bool(*this) == bool(__x)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The newly-created %function contains a copy of the target of @a
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __x (if it has one).
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(const function& __x);
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function move constructor.
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function object rvalue with identical call signature.
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The newly-created %function contains the target of @a __x
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  (if it has one).
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(function&& __x) noexcept : _Function_base()
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	__x.swap(*this);
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Builds a %function that targets a copy of the incoming
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  function object.
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __f A %function object that is callable with parameters of
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  type @c T1, @c T2, ..., @c TN and returns a value convertible
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  to @c Res.
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The newly-created %function object will target a copy of
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 349


 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @a __f. If @a __f is @c reference_wrapper<F>, then this function
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object will contain a reference to the function object @c
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __f.get(). If @a __f is a NULL function pointer or NULL
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  pointer-to-member, the newly-created object will be empty.
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __f is a non-NULL function pointer or an object of type @c
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  reference_wrapper<F>, this function will not throw.
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor,
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	       typename = _Requires<__not_<is_same<_Functor, function>>, void>,
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	       typename = _Requires<_Callable<_Functor>, void>>
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function(_Functor);
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function assignment operator.
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function with identical call signature.
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c (bool)*this == (bool)x
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns @c *this
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The target of @a __x is copied to @c *this. If @a __x has no
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  target, then @c *this will be empty.
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __x targets a function pointer or a reference to a function
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object, then this operation will not throw an %exception.
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function&
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       operator=(const function& __x)
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function(__x).swap(*this);
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return *this;
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function move-assignment operator.
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function rvalue with identical call signature.
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns @c *this
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The target of @a __x is moved to @c *this. If @a __x has no
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  target, then @c *this will be empty.
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __x targets a function pointer or a reference to a function
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object, then this operation will not throw an %exception.
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function&
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       operator=(function&& __x) noexcept
 8268              		.loc 15 414 7 is_stmt 1 view .LVU1889
 8269              	.LBB6584:
 8270              	.LBB6585:
 8271              	.LBI6585:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 8272              		.loc 15 357 7 view .LVU1890
 8273              	.LBB6586:
 8274              	.LBB6587:
 8275              	.LBI6587:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 8276              		.loc 15 240 5 view .LVU1891
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 350


 8277              		.loc 15 240 5 is_stmt 0 view .LVU1892
 8278              	.LBE6587:
 8279              	.LBB6588:
 8280              	.LBI6588:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function(std::move(__x)).swap(*this);
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return *this;
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function assignment to zero.
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c !(bool)*this
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns @c *this
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The target of @c *this is deallocated, leaving it empty.
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function&
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       operator=(nullptr_t) noexcept
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	if (_M_manager)
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_manager(_M_functor, _M_functor, __destroy_functor);
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_manager = nullptr;
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_invoker = nullptr;
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  }
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return *this;
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function assignment to a new target.
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __f A %function object that is callable with parameters of
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  type @c T1, @c T2, ..., @c TN and returns a value convertible
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  to @c Res.
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @return @c *this
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  This  %function object wrapper will target a copy of @a
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __f. If @a __f is @c reference_wrapper<F>, then this function
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object will contain a reference to the function object @c
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __f.get(). If @a __f is a NULL function pointer or NULL
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  pointer-to-member, @c this object will be empty.
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __f is a non-NULL function pointer or an object of type @c
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  reference_wrapper<F>, this function will not throw.
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor>
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_Requires<_Callable<typename decay<_Functor>::type>, function&>
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	operator=(_Functor&& __f)
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  function(std::forward<_Functor>(__f)).swap(*this);
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  return *this;
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /// @overload
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor>
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function&
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	operator=(reference_wrapper<_Functor> __f) noexcept
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 351


 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  function(__f).swap(*this);
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  return *this;
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.2] function modifiers
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Swap the targets of two %function objects.
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function with identical call signature.
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  Swap the targets of @c this function object and @a __f. This
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  function will not throw an %exception.
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       void swap(function& __x) noexcept
 8281              		.loc 15 481 12 is_stmt 1 view .LVU1893
 8282              	.LBB6589:
 8283              	.LBI6589:
 8284              		.file 34 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\mov
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** /** @file bits/move.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #ifndef _MOVE_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _MOVE_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <bits/c++config.h>
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # include <bits/concept_check.h>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 352


  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Same as C++11 std::addressof
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @ingroup utilities
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return __builtin_addressof(__r); }
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** } // namespace
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <type_traits> // Brings in std::declval too.
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an lvalue.
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an rvalue.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return static_cast<_Tp&&>(__t);
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Convert a value to an rvalue.
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __t  A thing of arbitrary type.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 353


  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move(_Tp&& __t) noexcept
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     struct __move_if_noexcept_cond
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     : public __and_<__not_<is_nothrow_move_constructible<_Tp>>,
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****                     is_copy_constructible<_Tp>>::type { };
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Conditionally convert a value to an rvalue.
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __x  A thing of arbitrary type.
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter, possibly cast to an rvalue-reference.
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  Same as std::move unless the type's move constructor could throw and the
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  type is copyable, in which case an lvalue-reference is returned instead.
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp&, _Tp&&>::type
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move_if_noexcept(_Tp& __x) noexcept
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return std::move(__x); }
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // declval, from type_traits.
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus > 201402L
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // 2296. std::addressof should be constexpr
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # define __cpp_lib_addressof_constexpr 201603
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Returns the actual address of the object or function
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *         referenced by r, even in the presence of an overloaded
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *         operator&.
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __r  Reference to an object or function.
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return   The actual address.
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX17_CONSTEXPR _Tp*
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     addressof(_Tp& __r) noexcept
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return std::__addressof(__r); }
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // 2598. addressof works on temporaries
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     const _Tp* addressof(const _Tp&&) = delete;
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // C++11 version of std::exchange for internal use.
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template <typename _Tp, typename _Up = _Tp>
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX20_CONSTEXPR
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _Tp
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __exchange(_Tp& __obj, _Up&& __new_val)
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 354


 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       _Tp __old_val = std::move(__obj);
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __obj = std::forward<_Up>(__new_val);
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return __old_val;
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /// @} group utilities
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_MOVE(__val) std::move(__val)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) std::forward<_Tp>(__val)
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #else
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_MOVE(__val) (__val)
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) (__val)
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Swaps two values.
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __a  A thing of arbitrary type.
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __b  Another thing of arbitrary type.
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return   Nothing.
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX20_CONSTEXPR
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     typename enable_if<__and_<__not_<__is_tuple_like<_Tp>>,
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 			      is_move_constructible<_Tp>,
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 			      is_move_assignable<_Tp>>::value>::type
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #else
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     void
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     swap(_Tp& __a, _Tp& __b)
 8285              		.loc 34 189 5 view .LVU1894
 8286              	.LBB6590:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 				is_nothrow_move_assignable<_Tp>>::value)
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       // concept requirements
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       _Tp __tmp = _GLIBCXX_MOVE(__a);
 8287              		.loc 34 197 11 is_stmt 0 view .LVU1895
 8288 0048 05F1400C 		add	ip, r5, #64
 8289              	.LVL573:
 8290              		.loc 34 197 11 view .LVU1896
 8291 004c 6B46     		mov	r3, sp
 8292              	.LBE6590:
 8293              	.LBE6589:
 8294              	.LBE6588:
 8295              	.LBE6586:
 8296              	.LBE6585:
 8297              	.LBB6603:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 355


 8298              	.LBB6604:
 8299              	.LBB6605:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8300              		.loc 34 198 7 view .LVU1897
 8301 004e 04F14002 		add	r2, r4, #64
 8302              	.LVL574:
 8303              		.loc 34 198 7 view .LVU1898
 8304              	.LBE6605:
 8305              	.LBE6604:
 8306              	.LBE6603:
 8307              	.LBB6614:
 8308              	.LBB6602:
 8309              	.LBB6601:
 8310              	.LBB6593:
 8311              	.LBB6591:
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8312              		.loc 34 197 11 view .LVU1899
 8313 0052 9CE80300 		ldm	ip, {r0, r1}
 8314 0056 83E80300 		stm	r3, {r0, r1}
 8315              		.loc 34 198 7 view .LVU1900
 8316 005a 96E80300 		ldm	r6, {r0, r1}
 8317 005e 8CE80300 		stm	ip, {r0, r1}
 8318              	.LBE6591:
 8319              	.LBE6593:
 8320              	.LBB6594:
 8321              	.LBB6595:
 8322              		.loc 34 198 11 view .LVU1901
 8323 0062 0599     		ldr	r1, [sp, #20]
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8324              		.loc 34 197 11 view .LVU1902
 8325 0064 D5F84CC0 		ldr	ip, [r5, #76]
 8326              	.LVL575:
 8327              		.loc 34 198 11 view .LVU1903
 8328 0068 E964     		str	r1, [r5, #76]
 8329              	.LBE6595:
 8330              	.LBE6594:
 8331              	.LBB6596:
 8332              	.LBB6597:
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8333              		.loc 34 197 11 view .LVU1904
 8334 006a D5F848E0 		ldr	lr, [r5, #72]
 8335              		.loc 34 198 11 view .LVU1905
 8336 006e AF64     		str	r7, [r5, #72]
 8337              	.LBE6597:
 8338              	.LBE6596:
 8339              	.LBB6598:
 8340              	.LBB6592:
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8341              		.loc 34 199 7 view .LVU1906
 8342 0070 93E80300 		ldm	r3, {r0, r1}
 8343 0074 86E80300 		stm	r6, {r0, r1}
 8344              	.LVL576:
 8345              		.loc 34 199 7 view .LVU1907
 8346              	.LBE6592:
 8347              	.LBE6598:
 8348              	.LBB6599:
 8349              	.LBI6596:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 356


 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8350              		.loc 34 189 5 is_stmt 1 view .LVU1908
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8351              		.loc 34 189 5 is_stmt 0 view .LVU1909
 8352              	.LBE6599:
 8353              	.LBB6600:
 8354              	.LBI6594:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8355              		.loc 34 189 5 is_stmt 1 view .LVU1910
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8356              		.loc 34 189 5 is_stmt 0 view .LVU1911
 8357              	.LBE6600:
 8358              	.LBE6601:
 8359              	.LBE6602:
 8360              	.LBE6614:
 8361              	.LBB6615:
 8362              	.LBI6603:
 8363              		.loc 15 481 12 is_stmt 1 view .LVU1912
 8364              	.LBB6607:
 8365              	.LBI6604:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8366              		.loc 34 189 5 view .LVU1913
 8367              	.LBB6606:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8368              		.loc 34 198 7 is_stmt 0 view .LVU1914
 8369 0078 92E80300 		ldm	r2, {r0, r1}
 8370 007c 86E80300 		stm	r6, {r0, r1}
 8371              		.loc 34 199 7 view .LVU1915
 8372 0080 93E80300 		ldm	r3, {r0, r1}
 8373 0084 82E80300 		stm	r2, {r0, r1}
 8374              	.LVL577:
 8375              		.loc 34 199 7 view .LVU1916
 8376              	.LBE6606:
 8377              	.LBE6607:
 8378              	.LBB6608:
 8379              	.LBI6608:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8380              		.loc 34 189 5 is_stmt 1 view .LVU1917
 8381              	.LBB6609:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8382              		.loc 34 198 11 is_stmt 0 view .LVU1918
 8383 0088 A36C     		ldr	r3, [r4, #72]
 8384              	.LBE6609:
 8385              	.LBE6608:
 8386              	.LBE6615:
 8387              	.LBB6616:
 8388              	.LBB6617:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8389              		.loc 15 303 11 view .LVU1919
 8390 008a 3046     		mov	r0, r6
 8391              	.LBE6617:
 8392              	.LBE6616:
 8393              	.LBB6619:
 8394              	.LBB6611:
 8395              	.LBB6610:
 8396              		.loc 34 199 11 view .LVU1920
 8397 008c C4F848E0 		str	lr, [r4, #72]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 357


 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8398              		.loc 34 198 11 view .LVU1921
 8399 0090 0493     		str	r3, [sp, #16]
 8400              	.LVL578:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8401              		.loc 34 198 11 view .LVU1922
 8402              	.LBE6610:
 8403              	.LBE6611:
 8404              	.LBB6612:
 8405              	.LBI6612:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8406              		.loc 34 189 5 is_stmt 1 view .LVU1923
 8407              	.LBB6613:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8408              		.loc 34 198 11 is_stmt 0 view .LVU1924
 8409 0092 E36C     		ldr	r3, [r4, #76]
 8410              		.loc 34 199 11 view .LVU1925
 8411 0094 C4F84CC0 		str	ip, [r4, #76]
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8412              		.loc 34 198 11 view .LVU1926
 8413 0098 0593     		str	r3, [sp, #20]
 8414              	.LVL579:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8415              		.loc 34 198 11 view .LVU1927
 8416              	.LBE6613:
 8417              	.LBE6612:
 8418              	.LBE6619:
 8419              	.LBB6620:
 8420              	.LBI6616:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8421              		.loc 15 303 11 is_stmt 1 view .LVU1928
 8422              	.LBB6618:
 8423 009a FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 8424              	.LVL580:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8425              		.loc 15 303 11 is_stmt 0 view .LVU1929
 8426              	.LBE6618:
 8427              	.LBE6620:
 8428              	.LBE6584:
 8429              	.LBE6583:
 8430              		.loc 28 21 11 view .LVU1930
 8431 009e 07B0     		add	sp, sp, #28
 8432              		.cfi_def_cfa_offset 20
 8433              		@ sp needed
 8434 00a0 F0BD     		pop	{r4, r5, r6, r7, pc}
 8435              		.loc 28 21 11 view .LVU1931
 8436              		.cfi_endproc
 8437              	.LFE6205:
 8439 00a2 00BF     		.section	.text._ZN10jellybeans8MenuItemD2Ev,"axG",%progbits,_ZN10jellybeans8MenuItemD5Ev,comdat
 8440              		.align	1
 8441              		.p2align 2,,3
 8442              		.weak	_ZN10jellybeans8MenuItemD2Ev
 8443              		.syntax unified
 8444              		.thumb
 8445              		.thumb_func
 8446              		.fpu fpv5-d16
 8448              	_ZN10jellybeans8MenuItemD2Ev:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 358


 8449              	.LVL581:
 8450              	.LFB5107:
 8451              		.loc 28 21 11 is_stmt 1 view -0
 8452              		.cfi_startproc
 8453              		@ args = 0, pretend = 0, frame = 0
 8454              		@ frame_needed = 0, uses_anonymous_args = 0
 8455              		.loc 28 21 11 is_stmt 0 view .LVU1933
 8456 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8457              		.cfi_def_cfa_offset 24
 8458              		.cfi_offset 3, -24
 8459              		.cfi_offset 4, -20
 8460              		.cfi_offset 5, -16
 8461              		.cfi_offset 6, -12
 8462              		.cfi_offset 7, -8
 8463              		.cfi_offset 14, -4
 8464              	.LBB6700:
 8465              	.LBB6701:
 8466              	.LBB6702:
 8467              	.LBB6703:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 8468              		.loc 15 244 11 view .LVU1934
 8469 0002 836C     		ldr	r3, [r0, #72]
 8470              	.LBE6703:
 8471              	.LBE6702:
 8472              	.LBE6701:
 8473              	.LBE6700:
 8474              		.loc 28 21 11 view .LVU1935
 8475 0004 0646     		mov	r6, r0
 8476              	.LVL582:
 8477              	.LBB6709:
 8478              	.LBI6700:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8479              		.loc 15 303 11 is_stmt 1 view .LVU1936
 8480              	.LBB6708:
 8481              	.LBB6706:
 8482              	.LBI6702:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 8483              		.loc 15 242 5 view .LVU1937
 8484              	.LBB6704:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 8485              		.loc 15 244 7 view .LVU1938
 8486 0006 23B1     		cbz	r3, .L513
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8487              		.loc 15 245 2 view .LVU1939
 8488              	.LBE6704:
 8489              	.LBE6706:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8490              		.loc 15 303 11 is_stmt 0 view .LVU1940
 8491 0008 00F14001 		add	r1, r0, #64
 8492              	.LVL583:
 8493              	.LBB6707:
 8494              	.LBB6705:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8495              		.loc 15 245 12 view .LVU1941
 8496 000c 0322     		movs	r2, #3
 8497 000e 0846     		mov	r0, r1
 8498              	.LVL584:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 359


 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8499              		.loc 15 245 12 view .LVU1942
 8500 0010 9847     		blx	r3
 8501              	.LVL585:
 8502              	.L513:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8503              		.loc 15 245 12 view .LVU1943
 8504              	.LBE6705:
 8505              	.LBE6707:
 8506              	.LBE6708:
 8507              	.LBE6709:
 8508              	.LBB6710:
 8509              	.LBI6710:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8510              		.loc 26 678 7 is_stmt 1 view .LVU1944
 8511              	.LBB6711:
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 8512              		.loc 26 680 15 is_stmt 0 view .LVU1945
 8513 0012 D6E90D57 		ldrd	r5, r7, [r6, #52]
 8514              	.LVL586:
 8515              	.LBB6712:
 8516              	.LBI6712:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8517              		.loc 26 276 7 is_stmt 1 view .LVU1946
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8518              		.loc 26 276 7 is_stmt 0 view .LVU1947
 8519              	.LBE6712:
 8520              	.LBB6713:
 8521              	.LBI6713:
 8522              		.loc 25 735 5 is_stmt 1 view .LVU1948
 8523              	.LBB6714:
 8524              	.LBB6715:
 8525              	.LBB6716:
 8526              	.LBB6717:
 8527              		.loc 27 151 19 view .LVU1949
 8528 0016 BD42     		cmp	r5, r7
 8529 0018 0FD0     		beq	.L514
 8530 001a 05F10804 		add	r4, r5, #8
 8531              	.LVL587:
 8532              	.L516:
 8533              	.LBB6718:
 8534              	.LBI6718:
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 8535              		.loc 27 135 5 view .LVU1950
 8536              	.LBB6719:
 8537              	.LBI6719:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8538              		.loc 18 657 7 view .LVU1951
 8539              	.LBB6720:
 8540              	.LBI6720:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8541              		.loc 18 229 7 view .LVU1952
 8542              	.LBB6721:
 8543              	.LBB6722:
 8544              	.LBI6722:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8545              		.loc 18 221 7 view .LVU1953
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 360


 8546              	.LBB6723:
 8547              	.LBI6723:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8548              		.loc 18 186 7 view .LVU1954
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8549              		.loc 18 186 7 is_stmt 0 view .LVU1955
 8550              	.LBE6723:
 8551              	.LBE6722:
 8552              	.LBB6726:
 8553              	.LBI6726:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8554              		.loc 18 236 7 is_stmt 1 view .LVU1956
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8555              		.loc 18 236 7 is_stmt 0 view .LVU1957
 8556              	.LBE6726:
 8557              	.LBB6734:
 8558              	.LBB6725:
 8559              	.LBB6724:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8560              		.loc 18 187 28 view .LVU1958
 8561 001e 54F8080C 		ldr	r0, [r4, #-8]
 8562              	.LVL588:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8563              		.loc 18 187 28 view .LVU1959
 8564              	.LBE6724:
 8565              	.LBE6725:
 8566              	.LBE6734:
 8567              	.LBB6735:
 8568              	.LBB6727:
 8569              	.LBB6728:
 8570              	.LBI6728:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8571              		.loc 25 491 7 is_stmt 1 view .LVU1960
 8572              	.LBB6729:
 8573              	.LBI6729:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8574              		.loc 20 120 7 view .LVU1961
 8575              	.LBE6729:
 8576              	.LBE6728:
 8577              	.LBE6727:
 8578              	.LBE6735:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8579              		.loc 18 231 2 is_stmt 0 view .LVU1962
 8580 0022 8442     		cmp	r4, r0
 8581              	.LBE6721:
 8582              	.LBE6720:
 8583              	.LBE6719:
 8584              	.LBE6718:
 8585              		.loc 27 151 19 view .LVU1963
 8586 0024 04F11804 		add	r4, r4, #24
 8587              	.LBB6743:
 8588              	.LBB6742:
 8589              	.LBB6738:
 8590              	.LBB6737:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8591              		.loc 18 231 2 view .LVU1964
 8592 0028 03D0     		beq	.L515
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 361


 8593              	.LBB6736:
 8594              	.LBB6733:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8595              		.loc 18 237 34 view .LVU1965
 8596 002a A968     		ldr	r1, [r5, #8]
 8597              	.LBB6732:
 8598              	.LBB6731:
 8599              	.LBB6730:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8600              		.loc 20 133 19 view .LVU1966
 8601 002c 0131     		adds	r1, r1, #1
 8602              	.LVL589:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8603              		.loc 20 133 19 view .LVU1967
 8604 002e FFF7FEFF 		bl	_ZdlPvj
 8605              	.LVL590:
 8606              	.L515:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8607              		.loc 20 133 19 view .LVU1968
 8608              	.LBE6730:
 8609              	.LBE6731:
 8610              	.LBE6732:
 8611              	.LBE6733:
 8612              	.LBE6736:
 8613              	.LBE6737:
 8614              	.LBE6738:
 8615              	.LBB6739:
 8616              	.LBI6739:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8617              		.loc 18 150 14 is_stmt 1 view .LVU1969
 8618              	.LBB6740:
 8619              	.LBI6740:
 8620              		.loc 19 162 7 view .LVU1970
 8621              	.LBB6741:
 8622              	.LBI6741:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8623              		.loc 20 89 7 view .LVU1971
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8624              		.loc 20 89 7 is_stmt 0 view .LVU1972
 8625              	.LBE6741:
 8626              	.LBE6740:
 8627              	.LBE6739:
 8628              	.LBE6742:
 8629              	.LBE6743:
 8630              		.loc 27 151 4 is_stmt 1 view .LVU1973
 8631 0032 1835     		adds	r5, r5, #24
 8632              	.LVL591:
 8633              		.loc 27 151 19 view .LVU1974
 8634 0034 AF42     		cmp	r7, r5
 8635 0036 F2D1     		bne	.L516
 8636              	.LBE6717:
 8637              	.LBE6716:
 8638              	.LBE6715:
 8639              	.LBE6714:
 8640              	.LBE6713:
 8641              	.LBB6744:
 8642              	.LBB6745:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 362


 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8643              		.loc 26 335 15 is_stmt 0 view .LVU1975
 8644 0038 776B     		ldr	r7, [r6, #52]
 8645              	.LVL592:
 8646              	.L514:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8647              		.loc 26 335 15 view .LVU1976
 8648              	.LBE6745:
 8649              	.LBI6744:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8650              		.loc 26 333 7 is_stmt 1 view .LVU1977
 8651              	.LBB6760:
 8652              	.LBB6746:
 8653              	.LBI6746:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8654              		.loc 26 350 7 view .LVU1978
 8655              	.LBB6747:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8656              		.loc 26 353 2 is_stmt 0 view .LVU1979
 8657 003a 27B1     		cbz	r7, .L517
 8658              	.LVL593:
 8659              	.LBB6748:
 8660              	.LBI6748:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8661              		.loc 25 491 7 is_stmt 1 view .LVU1980
 8662              	.LBB6749:
 8663              	.LBB6750:
 8664              	.LBI6750:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8665              		.loc 20 120 7 view .LVU1981
 8666              	.LBE6750:
 8667              	.LBE6749:
 8668              	.LBE6748:
 8669              	.LBE6747:
 8670              	.LBE6746:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8671              		.loc 26 336 35 is_stmt 0 view .LVU1982
 8672 003c F16B     		ldr	r1, [r6, #60]
 8673              	.LBB6756:
 8674              	.LBB6755:
 8675              	.LBB6754:
 8676              	.LBB6753:
 8677              	.LBB6752:
 8678              	.LBB6751:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8679              		.loc 20 133 19 view .LVU1983
 8680 003e 3846     		mov	r0, r7
 8681 0040 C91B     		subs	r1, r1, r7
 8682 0042 FFF7FEFF 		bl	_ZdlPvj
 8683              	.LVL594:
 8684              	.L517:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8685              		.loc 20 133 19 view .LVU1984
 8686              	.LBE6751:
 8687              	.LBE6752:
 8688              	.LBE6753:
 8689              	.LBE6754:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 363


 8690              	.LBE6755:
 8691              	.LBE6756:
 8692              	.LBB6757:
 8693              	.LBI6757:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 8694              		.loc 26 128 14 is_stmt 1 view .LVU1985
 8695              	.LBB6758:
 8696              	.LBI6758:
 8697              		.loc 19 162 7 view .LVU1986
 8698              	.LBB6759:
 8699              	.LBI6759:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8700              		.loc 20 89 7 view .LVU1987
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8701              		.loc 20 89 7 is_stmt 0 view .LVU1988
 8702              	.LBE6759:
 8703              	.LBE6758:
 8704              	.LBE6757:
 8705              	.LBE6760:
 8706              	.LBE6744:
 8707              	.LBE6711:
 8708              	.LBE6710:
 8709              	.LBB6761:
 8710              	.LBI6761:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8711              		.loc 18 657 7 is_stmt 1 view .LVU1989
 8712              	.LBB6762:
 8713              	.LBI6762:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8714              		.loc 18 229 7 view .LVU1990
 8715              	.LBB6763:
 8716              	.LBB6764:
 8717              	.LBI6764:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8718              		.loc 18 221 7 view .LVU1991
 8719              	.LBB6765:
 8720              	.LBI6765:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8721              		.loc 18 186 7 view .LVU1992
 8722              	.LBB6766:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8723              		.loc 18 187 28 is_stmt 0 view .LVU1993
 8724 0046 F069     		ldr	r0, [r6, #28]
 8725              	.LVL595:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8726              		.loc 18 187 28 view .LVU1994
 8727              	.LBE6766:
 8728              	.LBE6765:
 8729              	.LBB6767:
 8730              	.LBI6767:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8731              		.loc 18 200 7 is_stmt 1 view .LVU1995
 8732              	.LBB6768:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 8733              		.loc 18 203 57 is_stmt 0 view .LVU1996
 8734 0048 06F12403 		add	r3, r6, #36
 8735              	.LBE6768:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 364


 8736              	.LBE6767:
 8737              	.LBE6764:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8738              		.loc 18 231 2 view .LVU1997
 8739 004c 9842     		cmp	r0, r3
 8740 004e 03D0     		beq	.L518
 8741              	.LVL596:
 8742              	.LBB6769:
 8743              	.LBI6769:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8744              		.loc 18 236 7 is_stmt 1 view .LVU1998
 8745              	.LBB6770:
 8746              	.LBB6771:
 8747              	.LBI6771:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8748              		.loc 25 491 7 view .LVU1999
 8749              	.LBB6772:
 8750              	.LBI6772:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8751              		.loc 20 120 7 view .LVU2000
 8752              	.LBE6772:
 8753              	.LBE6771:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8754              		.loc 18 237 34 is_stmt 0 view .LVU2001
 8755 0050 716A     		ldr	r1, [r6, #36]
 8756              	.LBB6775:
 8757              	.LBB6774:
 8758              	.LBB6773:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8759              		.loc 20 133 19 view .LVU2002
 8760 0052 0131     		adds	r1, r1, #1
 8761              	.LVL597:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8762              		.loc 20 133 19 view .LVU2003
 8763 0054 FFF7FEFF 		bl	_ZdlPvj
 8764              	.LVL598:
 8765              	.L518:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8766              		.loc 20 133 19 view .LVU2004
 8767              	.LBE6773:
 8768              	.LBE6774:
 8769              	.LBE6775:
 8770              	.LBE6770:
 8771              	.LBE6769:
 8772              	.LBE6763:
 8773              	.LBE6762:
 8774              	.LBB6776:
 8775              	.LBI6776:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8776              		.loc 18 150 14 is_stmt 1 view .LVU2005
 8777              	.LBB6777:
 8778              	.LBI6777:
 8779              		.loc 19 162 7 view .LVU2006
 8780              	.LBB6778:
 8781              	.LBI6778:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8782              		.loc 20 89 7 view .LVU2007
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 365


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8783              		.loc 20 89 7 is_stmt 0 view .LVU2008
 8784              	.LBE6778:
 8785              	.LBE6777:
 8786              	.LBE6776:
 8787              	.LBE6761:
 8788              	.LBB6779:
 8789              	.LBI6779:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8790              		.loc 18 657 7 is_stmt 1 view .LVU2009
 8791              	.LBB6780:
 8792              	.LBI6780:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8793              		.loc 18 229 7 view .LVU2010
 8794              	.LBB6781:
 8795              	.LBB6782:
 8796              	.LBI6782:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8797              		.loc 18 221 7 view .LVU2011
 8798              	.LBB6783:
 8799              	.LBI6783:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8800              		.loc 18 186 7 view .LVU2012
 8801              	.LBB6784:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8802              		.loc 18 187 28 is_stmt 0 view .LVU2013
 8803 0058 7068     		ldr	r0, [r6, #4]
 8804              	.LVL599:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8805              		.loc 18 187 28 view .LVU2014
 8806              	.LBE6784:
 8807              	.LBE6783:
 8808              	.LBB6785:
 8809              	.LBI6785:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8810              		.loc 18 200 7 is_stmt 1 view .LVU2015
 8811              	.LBB6786:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 8812              		.loc 18 203 57 is_stmt 0 view .LVU2016
 8813 005a 06F10C03 		add	r3, r6, #12
 8814              	.LBE6786:
 8815              	.LBE6785:
 8816              	.LBE6782:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8817              		.loc 18 231 2 view .LVU2017
 8818 005e 9842     		cmp	r0, r3
 8819 0060 03D0     		beq	.L519
 8820              	.LVL600:
 8821              	.LBB6787:
 8822              	.LBI6787:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8823              		.loc 18 236 7 is_stmt 1 view .LVU2018
 8824              	.LBB6788:
 8825              	.LBB6789:
 8826              	.LBI6789:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8827              		.loc 25 491 7 view .LVU2019
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 366


 8828              	.LBB6790:
 8829              	.LBI6790:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8830              		.loc 20 120 7 view .LVU2020
 8831              	.LBE6790:
 8832              	.LBE6789:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8833              		.loc 18 237 34 is_stmt 0 view .LVU2021
 8834 0062 F168     		ldr	r1, [r6, #12]
 8835              	.LBB6793:
 8836              	.LBB6792:
 8837              	.LBB6791:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8838              		.loc 20 133 19 view .LVU2022
 8839 0064 0131     		adds	r1, r1, #1
 8840              	.LVL601:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8841              		.loc 20 133 19 view .LVU2023
 8842 0066 FFF7FEFF 		bl	_ZdlPvj
 8843              	.LVL602:
 8844              	.L519:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8845              		.loc 20 133 19 view .LVU2024
 8846              	.LBE6791:
 8847              	.LBE6792:
 8848              	.LBE6793:
 8849              	.LBE6788:
 8850              	.LBE6787:
 8851              	.LBE6781:
 8852              	.LBE6780:
 8853              	.LBB6794:
 8854              	.LBI6794:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8855              		.loc 18 150 14 is_stmt 1 view .LVU2025
 8856              	.LBB6795:
 8857              	.LBI6795:
 8858              		.loc 19 162 7 view .LVU2026
 8859              	.LBB6796:
 8860              	.LBI6796:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8861              		.loc 20 89 7 view .LVU2027
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8862              		.loc 20 89 7 is_stmt 0 view .LVU2028
 8863              	.LBE6796:
 8864              	.LBE6795:
 8865              	.LBE6794:
 8866              	.LBE6779:
 8867              		.loc 28 21 11 view .LVU2029
 8868 006a 3046     		mov	r0, r6
 8869 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8870              		.loc 28 21 11 view .LVU2030
 8871              		.cfi_endproc
 8872              	.LFE5107:
 8874              		.weak	_ZN10jellybeans8MenuItemD1Ev
 8875              		.thumb_set _ZN10jellybeans8MenuItemD1Ev,_ZN10jellybeans8MenuItemD2Ev
 8876 006e 00BF     		.section	.text._Z14updateControlsv,"ax",%progbits
 8877              		.align	1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 367


 8878              		.p2align 2,,3
 8879              		.global	_Z14updateControlsv
 8880              		.syntax unified
 8881              		.thumb
 8882              		.thumb_func
 8883              		.fpu fpv5-d16
 8885              	_Z14updateControlsv:
 8886              	.LFB5122:
 109:Jellybeans.cpp **** 
 110:Jellybeans.cpp **** 
 111:Jellybeans.cpp **** int main(void) {
 112:Jellybeans.cpp ****     // Initialize hardware
 113:Jellybeans.cpp ****     patch.Init();
 114:Jellybeans.cpp **** 
 115:Jellybeans.cpp ****     // Initialize arp
 116:Jellybeans.cpp ****     myArp = new Arp();
 117:Jellybeans.cpp **** 
 118:Jellybeans.cpp ****     // Initialize menu items
 119:Jellybeans.cpp ****     // Note that the positions of items 0-3 need to remain fixed
 120:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 121:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 122:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 123:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 124:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 125:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 126:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 127:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 128:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 129:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 130:Jellybeans.cpp **** 
 131:Jellybeans.cpp ****     // Initialize CV params
 132:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 133:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 134:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 135:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 136:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 137:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 138:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 139:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 140:Jellybeans.cpp **** 
 141:Jellybeans.cpp ****     // Initialize variables
 142:Jellybeans.cpp ****     arpNoteDacOutput1 = 0.f;
 143:Jellybeans.cpp ****     menuPos     = 0;
 144:Jellybeans.cpp ****     isEditing   = false;
 145:Jellybeans.cpp ****     debugString = "I'm a debug string";
 146:Jellybeans.cpp **** 
 147:Jellybeans.cpp ****     patch.StartAdc();
 148:Jellybeans.cpp **** 
 149:Jellybeans.cpp ****     // Main event loop
 150:Jellybeans.cpp ****     while(1){
 151:Jellybeans.cpp ****         updateControls();
 152:Jellybeans.cpp ****         updateOled();
 153:Jellybeans.cpp ****         updateOutputs();
 154:Jellybeans.cpp ****     }
 155:Jellybeans.cpp **** }
 156:Jellybeans.cpp **** 
 157:Jellybeans.cpp **** // Handle any input to Patches' controls
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 368


 158:Jellybeans.cpp **** void updateControls() {
 8887              		.loc 17 158 23 is_stmt 1 view -0
 8888              		.cfi_startproc
 8889              		@ args = 0, pretend = 0, frame = 0
 8890              		@ frame_needed = 0, uses_anonymous_args = 0
 159:Jellybeans.cpp ****     patch.ProcessAnalogControls();
 8891              		.loc 17 159 5 view .LVU2032
 158:Jellybeans.cpp ****     patch.ProcessAnalogControls();
 8892              		.loc 17 158 23 is_stmt 0 view .LVU2033
 8893 0000 38B5     		push	{r3, r4, r5, lr}
 8894              		.cfi_def_cfa_offset 16
 8895              		.cfi_offset 3, -16
 8896              		.cfi_offset 4, -12
 8897              		.cfi_offset 5, -8
 8898              		.cfi_offset 14, -4
 8899              		.loc 17 159 32 view .LVU2034
 8900 0002 4A48     		ldr	r0, .L545
 8901 0004 FFF7FEFF 		bl	_ZN5daisy10DaisyPatch21ProcessAnalogControlsEv
 8902              	.LVL603:
 160:Jellybeans.cpp ****     patch.ProcessDigitalControls();
 8903              		.loc 17 160 5 is_stmt 1 view .LVU2035
 8904              		.loc 17 160 33 is_stmt 0 view .LVU2036
 8905 0008 4848     		ldr	r0, .L545
 8906 000a FFF7FEFF 		bl	_ZN5daisy10DaisyPatch22ProcessDigitalControlsEv
 8907              	.LVL604:
 161:Jellybeans.cpp **** 
 162:Jellybeans.cpp ****     // Parse CV values
 163:Jellybeans.cpp ****     int curCvVal;
 8908              		.loc 17 163 5 is_stmt 1 view .LVU2037
 164:Jellybeans.cpp ****     // Pattern
 165:Jellybeans.cpp ****     curCvVal = static_cast<int>(patternParam.Process());
 8909              		.loc 17 165 5 view .LVU2038
 8910              		.loc 17 165 53 is_stmt 0 view .LVU2039
 8911 000e 4848     		ldr	r0, .L545+4
 8912 0010 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 8913              	.LVL605:
 8914              		.loc 17 165 14 view .LVU2040
 8915 0014 FDEEC07A 		vcvt.s32.f32	s15, s0
 166:Jellybeans.cpp ****     if(curCvVal != patternCurCvVal){
 8916              		.loc 17 166 17 view .LVU2041
 8917 0018 464D     		ldr	r5, .L545+8
 165:Jellybeans.cpp ****     if(curCvVal != patternCurCvVal){
 8918              		.loc 17 165 14 view .LVU2042
 8919 001a 17EE904A 		vmov	r4, s15	@ int
 8920              	.LVL606:
 8921              		.loc 17 166 5 is_stmt 1 view .LVU2043
 8922 001e 2B68     		ldr	r3, [r5]
 8923 0020 A342     		cmp	r3, r4
 8924 0022 05D0     		beq	.L529
 167:Jellybeans.cpp ****         menuItems[0].setIndex(curCvVal);
 8925              		.loc 17 167 9 view .LVU2044
 8926              	.LVL607:
 8927              	.LBB6797:
 8928              	.LBI6797:
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp 	    			      value_type;
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*			      pointer;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 369


  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*                       const_pointer;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type&                   	      reference;
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type&             	      const_reference;
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*          		      iterator;
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*			      const_iterator;
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::size_t                    	      size_type;
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::ptrdiff_t                   	      difference_type;
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Support for zero-sized arrays mandatory.
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typename _AT_Type::_Type                         _M_elems;
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // No explicit construct/copy/destroy for aggregate type.
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // DR 776.
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       fill(const value_type& __u)
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { std::fill_n(begin(), size(), __u); }
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       swap(array& __other)
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       noexcept(_AT_Type::_Is_nothrow_swappable::value)
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Iterators.
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       begin() noexcept
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data()); }
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       begin() const noexcept
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       end() noexcept
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data() + _Nm); }
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       end() const noexcept
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() noexcept
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(end()); }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() const noexcept
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rend() noexcept
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(begin()); }
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rend() const noexcept
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 370


 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       cbegin() const noexcept
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       cend() const noexcept
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       crbegin() const noexcept
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       crend() const noexcept
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Capacity.
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       size() const noexcept { return _Nm; }
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       max_size() const noexcept { return _Nm; }
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX_NODISCARD constexpr bool
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       empty() const noexcept { return size() == 0; }
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Element access.
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reference
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       operator[](size_type __n) noexcept
 8929              		.loc 24 185 7 view .LVU2045
 8930              	.LBB6798:
 8931              	.LBI6798:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8932              		.loc 24 55 7 view .LVU2046
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8933              		.loc 24 55 7 is_stmt 0 view .LVU2047
 8934              	.LBE6798:
 8935              	.LBE6797:
 8936              		.loc 17 167 30 view .LVU2048
 8937 0024 17EE901A 		vmov	r1, s15	@ int
 8938 0028 4348     		ldr	r0, .L545+12
 8939 002a FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8setIndexEi
 8940              	.LVL608:
 168:Jellybeans.cpp ****         patternCurCvVal = curCvVal;
 8941              		.loc 17 168 9 is_stmt 1 view .LVU2049
 8942              		.loc 17 168 25 is_stmt 0 view .LVU2050
 8943 002e 2C60     		str	r4, [r5]
 8944              	.L529:
 169:Jellybeans.cpp ****     }
 170:Jellybeans.cpp ****     // Division
 171:Jellybeans.cpp ****     curCvVal = static_cast<int>(divisionParam.Process());
 8945              		.loc 17 171 5 is_stmt 1 view .LVU2051
 8946              		.loc 17 171 54 is_stmt 0 view .LVU2052
 8947 0030 4248     		ldr	r0, .L545+16
 8948 0032 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 371


 8949              	.LVL609:
 8950              		.loc 17 171 14 view .LVU2053
 8951 0036 FDEEC07A 		vcvt.s32.f32	s15, s0
 172:Jellybeans.cpp ****     if(curCvVal != divisionCurCvVal){
 8952              		.loc 17 172 17 view .LVU2054
 8953 003a 414D     		ldr	r5, .L545+20
 171:Jellybeans.cpp ****     if(curCvVal != divisionCurCvVal){
 8954              		.loc 17 171 14 view .LVU2055
 8955 003c 17EE904A 		vmov	r4, s15	@ int
 8956              	.LVL610:
 8957              		.loc 17 172 5 is_stmt 1 view .LVU2056
 8958 0040 2B68     		ldr	r3, [r5]
 8959 0042 A342     		cmp	r3, r4
 8960 0044 05D0     		beq	.L530
 173:Jellybeans.cpp ****         menuItems[1].setIndex(curCvVal);
 8961              		.loc 17 173 9 view .LVU2057
 8962              	.LVL611:
 8963              	.LBB6799:
 8964              	.LBI6799:
 8965              		.loc 24 185 7 view .LVU2058
 8966              	.LBB6800:
 8967              	.LBI6800:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8968              		.loc 24 55 7 view .LVU2059
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8969              		.loc 24 55 7 is_stmt 0 view .LVU2060
 8970              	.LBE6800:
 8971              	.LBE6799:
 8972              		.loc 17 173 30 view .LVU2061
 8973 0046 17EE901A 		vmov	r1, s15	@ int
 8974 004a 3E48     		ldr	r0, .L545+24
 8975 004c FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8setIndexEi
 8976              	.LVL612:
 174:Jellybeans.cpp ****         divisionCurCvVal = curCvVal;
 8977              		.loc 17 174 9 is_stmt 1 view .LVU2062
 8978              		.loc 17 174 26 is_stmt 0 view .LVU2063
 8979 0050 2C60     		str	r4, [r5]
 8980              	.L530:
 175:Jellybeans.cpp ****     }
 176:Jellybeans.cpp ****     // Voicing
 177:Jellybeans.cpp ****     curCvVal = static_cast<int>(voicingParam.Process());
 8981              		.loc 17 177 5 is_stmt 1 view .LVU2064
 8982              		.loc 17 177 53 is_stmt 0 view .LVU2065
 8983 0052 3D48     		ldr	r0, .L545+28
 8984 0054 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 8985              	.LVL613:
 8986              		.loc 17 177 14 view .LVU2066
 8987 0058 FDEEC07A 		vcvt.s32.f32	s15, s0
 178:Jellybeans.cpp ****     if(curCvVal != voicingCurCvVal){
 8988              		.loc 17 178 17 view .LVU2067
 8989 005c 3B4D     		ldr	r5, .L545+32
 177:Jellybeans.cpp ****     if(curCvVal != voicingCurCvVal){
 8990              		.loc 17 177 14 view .LVU2068
 8991 005e 17EE904A 		vmov	r4, s15	@ int
 8992              	.LVL614:
 8993              		.loc 17 178 5 is_stmt 1 view .LVU2069
 8994 0062 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 372


 8995 0064 A342     		cmp	r3, r4
 8996 0066 05D0     		beq	.L531
 179:Jellybeans.cpp ****         menuItems[2].setIndex(curCvVal);
 8997              		.loc 17 179 9 view .LVU2070
 8998              	.LVL615:
 8999              	.LBB6801:
 9000              	.LBI6801:
 9001              		.loc 24 185 7 view .LVU2071
 9002              	.LBB6802:
 9003              	.LBI6802:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9004              		.loc 24 55 7 view .LVU2072
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9005              		.loc 24 55 7 is_stmt 0 view .LVU2073
 9006              	.LBE6802:
 9007              	.LBE6801:
 9008              		.loc 17 179 30 view .LVU2074
 9009 0068 17EE901A 		vmov	r1, s15	@ int
 9010 006c 3848     		ldr	r0, .L545+36
 9011 006e FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8setIndexEi
 9012              	.LVL616:
 180:Jellybeans.cpp ****         voicingCurCvVal = curCvVal;
 9013              		.loc 17 180 9 is_stmt 1 view .LVU2075
 9014              		.loc 17 180 25 is_stmt 0 view .LVU2076
 9015 0072 2C60     		str	r4, [r5]
 9016              	.L531:
 181:Jellybeans.cpp ****     }
 182:Jellybeans.cpp ****     // Inversion
 183:Jellybeans.cpp ****     curCvVal = static_cast<int>(inversionParam.Process());
 9017              		.loc 17 183 5 is_stmt 1 view .LVU2077
 9018              		.loc 17 183 55 is_stmt 0 view .LVU2078
 9019 0074 3748     		ldr	r0, .L545+40
 9020 0076 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 9021              	.LVL617:
 9022              		.loc 17 183 14 view .LVU2079
 9023 007a FDEEC07A 		vcvt.s32.f32	s15, s0
 184:Jellybeans.cpp ****     if(curCvVal != inversionCurCvVal){
 9024              		.loc 17 184 17 view .LVU2080
 9025 007e 364D     		ldr	r5, .L545+44
 183:Jellybeans.cpp ****     if(curCvVal != inversionCurCvVal){
 9026              		.loc 17 183 14 view .LVU2081
 9027 0080 17EE904A 		vmov	r4, s15	@ int
 9028              	.LVL618:
 9029              		.loc 17 184 5 is_stmt 1 view .LVU2082
 9030 0084 2B68     		ldr	r3, [r5]
 9031 0086 A342     		cmp	r3, r4
 9032 0088 05D0     		beq	.L532
 185:Jellybeans.cpp ****         menuItems[3].setIndex(curCvVal);
 9033              		.loc 17 185 9 view .LVU2083
 9034              	.LVL619:
 9035              	.LBB6803:
 9036              	.LBI6803:
 9037              		.loc 24 185 7 view .LVU2084
 9038              	.LBB6804:
 9039              	.LBI6804:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9040              		.loc 24 55 7 view .LVU2085
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 373


  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9041              		.loc 24 55 7 is_stmt 0 view .LVU2086
 9042              	.LBE6804:
 9043              	.LBE6803:
 9044              		.loc 17 185 30 view .LVU2087
 9045 008a 17EE901A 		vmov	r1, s15	@ int
 9046 008e 3348     		ldr	r0, .L545+48
 9047 0090 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8setIndexEi
 9048              	.LVL620:
 186:Jellybeans.cpp ****         inversionCurCvVal = curCvVal;
 9049              		.loc 17 186 9 is_stmt 1 view .LVU2088
 9050              		.loc 17 186 27 is_stmt 0 view .LVU2089
 9051 0094 2C60     		str	r4, [r5]
 9052              	.L532:
 187:Jellybeans.cpp ****     }
 188:Jellybeans.cpp **** 
 189:Jellybeans.cpp ****     if(!isEditing)
 9053              		.loc 17 189 5 is_stmt 1 view .LVU2090
 9054              	.LBB6805:
 9055              		.loc 17 189 8 is_stmt 0 view .LVU2091
 9056 0096 324C     		ldr	r4, .L545+52
 9057              	.LVL621:
 9058              		.loc 17 189 5 view .LVU2092
 9059 0098 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 9060 009a DBB9     		cbnz	r3, .L533
 190:Jellybeans.cpp ****     {
 191:Jellybeans.cpp ****         // Update menu position
 192:Jellybeans.cpp ****         menuPos += patch.encoder.Increment();
 9061              		.loc 17 192 9 is_stmt 1 view .LVU2093
 9062              	.LVL622:
 9063              	.LBB6806:
 9064              	.LBI6806:
  22:../../libdaisy/src/hid/encoder.h **** 
  23:../../libdaisy/src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../../libdaisy/src/hid/encoder.h ****      * Update rate is to be deprecated in a future release
  25:../../libdaisy/src/hid/encoder.h ****      */
  26:../../libdaisy/src/hid/encoder.h ****     void Init(dsy_gpio_pin a,
  27:../../libdaisy/src/hid/encoder.h ****               dsy_gpio_pin b,
  28:../../libdaisy/src/hid/encoder.h ****               dsy_gpio_pin click,
  29:../../libdaisy/src/hid/encoder.h ****               float        update_rate = 0.f);
  30:../../libdaisy/src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  31:../../libdaisy/src/hid/encoder.h ****      * In order for events not to be missed, its important that the Edge/Pressed checks be made at 
  32:../../libdaisy/src/hid/encoder.h ****      */
  33:../../libdaisy/src/hid/encoder.h ****     void Debounce();
  34:../../libdaisy/src/hid/encoder.h **** 
  35:../../libdaisy/src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
  36:../../libdaisy/src/hid/encoder.h ****     inline int32_t Increment() const { return inc_; }
 9065              		.loc 7 36 20 view .LVU2094
 9066              	.LBB6807:
 9067              		.loc 7 36 40 view .LVU2095
 9068              		.loc 7 36 40 is_stmt 0 view .LVU2096
 9069              	.LBE6807:
 9070              	.LBE6806:
 9071              		.loc 17 192 17 view .LVU2097
 9072 009c 3149     		ldr	r1, .L545+56
 9073              	.LBB6809:
 9074              	.LBB6808:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 374


 9075              		.loc 7 36 47 view .LVU2098
 9076 009e 234D     		ldr	r5, .L545
 9077              	.LBE6808:
 9078              	.LBE6809:
 9079              		.loc 17 192 17 view .LVU2099
 9080 00a0 0A68     		ldr	r2, [r1]
 9081 00a2 686D     		ldr	r0, [r5, #84]
 9082 00a4 0244     		add	r2, r2, r0
 193:Jellybeans.cpp ****     
 194:Jellybeans.cpp ****         if (menuPos > (int) menuItems.size() - 1) {
 9083              		.loc 17 194 9 is_stmt 1 view .LVU2100
 9084 00a6 092A     		cmp	r2, #9
 9085 00a8 23DC     		bgt	.L543
 195:Jellybeans.cpp ****             menuPos = (int) menuItems.size() - 1;
 196:Jellybeans.cpp ****         } else if (menuPos <= 0) {
 9086              		.loc 17 196 16 view .LVU2101
 192:Jellybeans.cpp ****     
 9087              		.loc 17 192 17 is_stmt 0 view .LVU2102
 9088 00aa 002A     		cmp	r2, #0
 9089 00ac C8BF     		it	gt
 9090 00ae 1346     		movgt	r3, r2
 9091 00b0 0B60     		str	r3, [r1]
 9092              	.L535:
 197:Jellybeans.cpp ****             menuPos = 0;
 198:Jellybeans.cpp ****         }
 199:Jellybeans.cpp **** 
 200:Jellybeans.cpp ****         isEditing = patch.encoder.RisingEdge();
 9093              		.loc 17 200 9 is_stmt 1 view .LVU2103
 9094              	.LVL623:
 9095              	.LBB6810:
 9096              	.LBI6810:
  37:../../libdaisy/src/hid/encoder.h **** 
  38:../../libdaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just pressed. */
  39:../../libdaisy/src/hid/encoder.h ****     inline bool RisingEdge() const { return sw_.RisingEdge(); }
 9097              		.loc 7 39 17 view .LVU2104
 9098              	.LBE6810:
 9099              	.LBE6805:
 9100              		.loc 7 39 38 view .LVU2105
 9101              	.LBB6840:
 9102              	.LBB6817:
 9103              	.LBB6811:
 9104              	.LBI6811:
  43:../../libdaisy/src/hid/switch.h **** 
  44:../../libdaisy/src/hid/switch.h ****     /** 
  45:../../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libdaisy/src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libdaisy/src/hid/switch.h ****     */
  52:../../libdaisy/src/hid/switch.h ****     void
  53:../../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libdaisy/src/hid/switch.h **** 
  55:../../libdaisy/src/hid/switch.h ****     /**
  56:../../libdaisy/src/hid/switch.h ****        Simplified Init.
  57:../../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 375


  58:../../libdaisy/src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libdaisy/src/hid/switch.h ****     */
  60:../../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libdaisy/src/hid/switch.h **** 
  62:../../libdaisy/src/hid/switch.h ****     /** 
  63:../../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libdaisy/src/hid/switch.h ****     */
  67:../../libdaisy/src/hid/switch.h ****     void Debounce();
  68:../../libdaisy/src/hid/switch.h **** 
  69:../../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 9105              		.loc 8 70 17 view .LVU2106
 9106              	.LBB6812:
 9107              		.loc 8 70 38 view .LVU2107
 9108              		.loc 8 70 38 is_stmt 0 view .LVU2108
 9109              	.LBE6812:
 9110              	.LBE6811:
 9111              	.LBE6817:
 9112              	.LBE6840:
 201:Jellybeans.cpp ****     }
 202:Jellybeans.cpp ****     else
 203:Jellybeans.cpp ****     {
 204:Jellybeans.cpp ****         // Update selected menu item's value
 205:Jellybeans.cpp ****         int inc = patch.encoder.Increment();
 206:Jellybeans.cpp ****         if (inc > 0){
 207:Jellybeans.cpp ****             menuItems[menuPos].increment();
 208:Jellybeans.cpp ****         } else if (inc < 0){
 209:Jellybeans.cpp ****             menuItems[menuPos].decrement();
 210:Jellybeans.cpp ****         }
 211:Jellybeans.cpp **** 
 212:Jellybeans.cpp ****         isEditing = !patch.encoder.RisingEdge();
 213:Jellybeans.cpp ****     }
 214:Jellybeans.cpp **** 
 215:Jellybeans.cpp ****     // Update step with respect to clock
 216:Jellybeans.cpp ****     // Accept input from either GATE IN
 217:Jellybeans.cpp ****     //
 218:Jellybeans.cpp ****     // Currently, we'll just do 1 step per clock pulse
 219:Jellybeans.cpp ****     if(patch.gate_input[0].Trig() || patch.gate_input[1].Trig())
 9113              		.loc 17 219 5 is_stmt 1 view .LVU2109
 9114              	.LBB6841:
 9115              	.LBB6818:
 9116              	.LBB6815:
 9117              	.LBB6813:
 9118              		.loc 8 70 55 is_stmt 0 view .LVU2110
 9119 00b2 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9120              	.LBE6813:
 9121              	.LBE6815:
 9122              	.LBE6818:
 9123              	.LBE6841:
 9124              		.loc 17 219 32 view .LVU2111
 9125 00b6 2C48     		ldr	r0, .L545+60
 9126              	.LBB6842:
 9127              	.LBB6819:
 9128              	.LBB6816:
 9129              	.LBB6814:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 376


 9130              		.loc 8 70 55 view .LVU2112
 9131 00b8 A3F17F03 		sub	r3, #127
 9132 00bc B3FA83F3 		clz	r3, r3
 9133 00c0 5B09     		lsrs	r3, r3, #5
 9134 00c2 2370     		strb	r3, [r4]
 9135              	.LBE6814:
 9136              	.LBE6816:
 9137              	.LBE6819:
 9138              	.LBE6842:
 9139              		.loc 17 219 32 view .LVU2113
 9140 00c4 FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 9141              	.LVL624:
 9142              		.loc 17 219 35 view .LVU2114
 9143 00c8 50BB     		cbnz	r0, .L541
 9144              	.L540:
 9145              		.loc 17 219 62 discriminator 2 view .LVU2115
 9146 00ca 2848     		ldr	r0, .L545+64
 9147 00cc FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 9148              	.LVL625:
 9149              		.loc 17 219 35 discriminator 2 view .LVU2116
 9150 00d0 30BB     		cbnz	r0, .L541
 220:Jellybeans.cpp ****     {
 221:Jellybeans.cpp ****         myArp->onClockPulse();
 222:Jellybeans.cpp ****     }
 223:Jellybeans.cpp **** }
 9151              		.loc 17 223 1 view .LVU2117
 9152 00d2 38BD     		pop	{r3, r4, r5, pc}
 9153              	.L533:
 9154              	.LBB6843:
 9155              	.LBB6820:
 205:Jellybeans.cpp ****         if (inc > 0){
 9156              		.loc 17 205 9 is_stmt 1 view .LVU2118
 9157              	.LVL626:
 9158              	.LBB6821:
 9159              	.LBI6821:
  36:../../libdaisy/src/hid/encoder.h **** 
 9160              		.loc 7 36 20 view .LVU2119
 9161              	.LBB6822:
  36:../../libdaisy/src/hid/encoder.h **** 
 9162              		.loc 7 36 40 view .LVU2120
  36:../../libdaisy/src/hid/encoder.h **** 
 9163              		.loc 7 36 47 is_stmt 0 view .LVU2121
 9164 00d4 154D     		ldr	r5, .L545
 9165 00d6 6B6D     		ldr	r3, [r5, #84]
 9166              	.LVL627:
  36:../../libdaisy/src/hid/encoder.h **** 
 9167              		.loc 7 36 47 view .LVU2122
 9168              	.LBE6822:
 9169              	.LBE6821:
 206:Jellybeans.cpp ****             menuItems[menuPos].increment();
 9170              		.loc 17 206 9 is_stmt 1 view .LVU2123
 9171 00d8 002B     		cmp	r3, #0
 9172 00da 0DDC     		bgt	.L544
 208:Jellybeans.cpp ****             menuItems[menuPos].decrement();
 9173              		.loc 17 208 16 view .LVU2124
 9174 00dc 15D0     		beq	.L539
 209:Jellybeans.cpp ****         }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 377


 9175              		.loc 17 209 13 view .LVU2125
 9176              	.LVL628:
 9177              	.LBB6823:
 9178              	.LBI6823:
 9179              		.loc 24 185 7 view .LVU2126
 9180              	.LBB6824:
 9181              	.LBI6824:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9182              		.loc 24 55 7 view .LVU2127
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9183              		.loc 24 55 7 is_stmt 0 view .LVU2128
 9184              	.LBE6824:
 9185              	.LBE6823:
 209:Jellybeans.cpp ****         }
 9186              		.loc 17 209 30 view .LVU2129
 9187 00de 214B     		ldr	r3, .L545+56
 9188              	.LVL629:
 9189              	.LBB6827:
 9190              	.LBB6826:
 9191              	.LBB6825:
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 9192              		.loc 24 56 41 view .LVU2130
 9193 00e0 1548     		ldr	r0, .L545+12
 9194 00e2 1B68     		ldr	r3, [r3]
 9195 00e4 03EB8303 		add	r3, r3, r3, lsl #2
 9196              	.LBE6825:
 9197              	.LBE6826:
 9198              	.LBE6827:
 209:Jellybeans.cpp ****         }
 9199              		.loc 17 209 41 view .LVU2131
 9200 00e8 00EB0310 		add	r0, r0, r3, lsl #4
 9201 00ec FFF7FEFF 		bl	_ZN10jellybeans8MenuItem9decrementEv
 9202              	.LVL630:
 209:Jellybeans.cpp ****         }
 9203              		.loc 17 209 41 view .LVU2132
 9204 00f0 0BE0     		b	.L539
 9205              	.L543:
 209:Jellybeans.cpp ****         }
 9206              		.loc 17 209 41 view .LVU2133
 9207              	.LBE6820:
 195:Jellybeans.cpp ****         } else if (menuPos <= 0) {
 9208              		.loc 17 195 13 is_stmt 1 view .LVU2134
 195:Jellybeans.cpp ****         } else if (menuPos <= 0) {
 9209              		.loc 17 195 21 is_stmt 0 view .LVU2135
 9210 00f2 0923     		movs	r3, #9
 9211 00f4 0B60     		str	r3, [r1]
 9212 00f6 DCE7     		b	.L535
 9213              	.LVL631:
 9214              	.L544:
 9215              	.LBB6837:
 207:Jellybeans.cpp ****         } else if (inc < 0){
 9216              		.loc 17 207 13 is_stmt 1 view .LVU2136
 9217              	.LBB6828:
 9218              	.LBI6828:
 9219              		.loc 24 185 7 view .LVU2137
 9220              	.LBB6829:
 9221              	.LBI6829:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 378


  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9222              		.loc 24 55 7 view .LVU2138
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9223              		.loc 24 55 7 is_stmt 0 view .LVU2139
 9224              	.LBE6829:
 9225              	.LBE6828:
 207:Jellybeans.cpp ****         } else if (inc < 0){
 9226              		.loc 17 207 30 view .LVU2140
 9227 00f8 1A4B     		ldr	r3, .L545+56
 9228              	.LVL632:
 9229              	.LBB6832:
 9230              	.LBB6831:
 9231              	.LBB6830:
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 9232              		.loc 24 56 41 view .LVU2141
 9233 00fa 0F48     		ldr	r0, .L545+12
 9234 00fc 1B68     		ldr	r3, [r3]
 9235 00fe 03EB8303 		add	r3, r3, r3, lsl #2
 9236              	.LBE6830:
 9237              	.LBE6831:
 9238              	.LBE6832:
 207:Jellybeans.cpp ****         } else if (inc < 0){
 9239              		.loc 17 207 41 view .LVU2142
 9240 0102 00EB0310 		add	r0, r0, r3, lsl #4
 9241 0106 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem9incrementEv
 9242              	.LVL633:
 9243              	.L539:
 212:Jellybeans.cpp ****     }
 9244              		.loc 17 212 9 is_stmt 1 view .LVU2143
 9245              	.LBB6833:
 9246              	.LBI6833:
 9247              		.loc 7 39 17 view .LVU2144
 9248              	.LBE6833:
 9249              	.LBE6837:
 9250              	.LBE6843:
 9251              		.loc 7 39 38 view .LVU2145
 9252              	.LBB6844:
 9253              	.LBB6838:
 9254              	.LBB6836:
 9255              	.LBB6834:
 9256              	.LBI6834:
 9257              		.loc 8 70 17 view .LVU2146
 9258              	.LBB6835:
 9259              		.loc 8 70 38 view .LVU2147
 9260              		.loc 8 70 38 is_stmt 0 view .LVU2148
 9261              	.LBE6835:
 9262              	.LBE6834:
 9263              	.LBE6836:
 212:Jellybeans.cpp ****     }
 9264              		.loc 17 212 21 view .LVU2149
 9265 010a 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9266              	.LBE6838:
 9267              	.LBE6844:
 219:Jellybeans.cpp ****     {
 9268              		.loc 17 219 32 view .LVU2150
 9269 010e 1648     		ldr	r0, .L545+60
 9270              	.LBB6845:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 379


 9271              	.LBB6839:
 212:Jellybeans.cpp ****     }
 9272              		.loc 17 212 21 view .LVU2151
 9273 0110 7F3B     		subs	r3, r3, #127
 9274 0112 18BF     		it	ne
 9275 0114 0123     		movne	r3, #1
 9276 0116 2370     		strb	r3, [r4]
 9277              	.LBE6839:
 9278              	.LBE6845:
 219:Jellybeans.cpp ****     {
 9279              		.loc 17 219 5 is_stmt 1 view .LVU2152
 219:Jellybeans.cpp ****     {
 9280              		.loc 17 219 32 is_stmt 0 view .LVU2153
 9281 0118 FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 9282              	.LVL634:
 219:Jellybeans.cpp ****     {
 9283              		.loc 17 219 35 view .LVU2154
 9284 011c 0028     		cmp	r0, #0
 9285 011e D4D0     		beq	.L540
 9286              	.L541:
 221:Jellybeans.cpp ****     }
 9287              		.loc 17 221 9 is_stmt 1 view .LVU2155
 221:Jellybeans.cpp ****     }
 9288              		.loc 17 221 28 is_stmt 0 view .LVU2156
 9289 0120 134B     		ldr	r3, .L545+68
 9290 0122 1868     		ldr	r0, [r3]
 9291              		.loc 17 223 1 view .LVU2157
 9292 0124 BDE83840 		pop	{r3, r4, r5, lr}
 9293              		.cfi_restore 14
 9294              		.cfi_restore 5
 9295              		.cfi_restore 4
 9296              		.cfi_restore 3
 9297              		.cfi_def_cfa_offset 0
 221:Jellybeans.cpp ****     }
 9298              		.loc 17 221 28 view .LVU2158
 9299 0128 FFF7FEBF 		b	_ZN10jellybeans3Arp12onClockPulseEv
 9300              	.LVL635:
 9301              	.L546:
 9302              		.align	2
 9303              	.L545:
 9304 012c 00000000 		.word	patch
 9305 0130 00000000 		.word	.LANCHOR3
 9306 0134 00000000 		.word	.LANCHOR4
 9307 0138 00000000 		.word	.LANCHOR5
 9308 013c 00000000 		.word	.LANCHOR6
 9309 0140 00000000 		.word	.LANCHOR7
 9310 0144 50000000 		.word	.LANCHOR5+80
 9311 0148 00000000 		.word	.LANCHOR8
 9312 014c 00000000 		.word	.LANCHOR9
 9313 0150 A0000000 		.word	.LANCHOR5+160
 9314 0154 00000000 		.word	.LANCHOR10
 9315 0158 00000000 		.word	.LANCHOR11
 9316 015c F0000000 		.word	.LANCHOR5+240
 9317 0160 00000000 		.word	.LANCHOR12
 9318 0164 00000000 		.word	.LANCHOR13
 9319 0168 D8000000 		.word	patch+216
 9320 016c DE000000 		.word	patch+222
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 380


 9321 0170 00000000 		.word	.LANCHOR0
 9322              		.cfi_endproc
 9323              	.LFE5122:
 9325              		.section	.text._Z13updateOutputsv,"ax",%progbits
 9326              		.align	1
 9327              		.p2align 2,,3
 9328              		.global	_Z13updateOutputsv
 9329              		.syntax unified
 9330              		.thumb
 9331              		.thumb_func
 9332              		.fpu fpv5-d16
 9334              	_Z13updateOutputsv:
 9335              	.LFB5125:
 224:Jellybeans.cpp **** 
 225:Jellybeans.cpp **** // Update Patches' screen
 226:Jellybeans.cpp **** //
 227:Jellybeans.cpp **** // Display on Daisy Patch is 128x64p
 228:Jellybeans.cpp **** // With 7x10 font, this means it's limited to:
 229:Jellybeans.cpp **** //  - 18 chars horizontally (w/2p to spare)
 230:Jellybeans.cpp **** //  - 6 chars vertically (w/4p to spare)
 231:Jellybeans.cpp **** void updateOled() {
 232:Jellybeans.cpp ****     // Clear display
 233:Jellybeans.cpp ****     patch.display.Fill(false);  
 234:Jellybeans.cpp **** 
 235:Jellybeans.cpp ****     // Draw the top bar
 236:Jellybeans.cpp ****     drawString(myArp->toString(), 0, 0);
 237:Jellybeans.cpp ****     patch.display.DrawLine(0, 11, 128, 11, true);
 238:Jellybeans.cpp **** 
 239:Jellybeans.cpp ****     // Draw the cursor indicator
 240:Jellybeans.cpp ****     drawString(">", 0, 11);
 241:Jellybeans.cpp **** 
 242:Jellybeans.cpp ****     int listSize = 5;
 243:Jellybeans.cpp **** 
 244:Jellybeans.cpp ****     if (debugMode){
 245:Jellybeans.cpp ****         // If in debug mode, reserve the bottom menu item's space for debug data
 246:Jellybeans.cpp ****         debugString = myArp->getChord()->toString();
 247:Jellybeans.cpp ****         listSize--;
 248:Jellybeans.cpp ****         patch.display.DrawLine(0, 53, 128, 53, true);
 249:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 250:Jellybeans.cpp ****     }
 251:Jellybeans.cpp **** 
 252:Jellybeans.cpp ****     // Draw each menu item
 253:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 254:Jellybeans.cpp ****         if (i < (int) menuItems.size()){
 255:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 256:Jellybeans.cpp ****         }    
 257:Jellybeans.cpp ****     }
 258:Jellybeans.cpp **** 
 259:Jellybeans.cpp ****     // Write display buffer to OLED
 260:Jellybeans.cpp ****     patch.display.Update();
 261:Jellybeans.cpp **** }
 262:Jellybeans.cpp **** 
 263:Jellybeans.cpp **** // Updates Patches' output values
 264:Jellybeans.cpp **** void updateOutputs()
 265:Jellybeans.cpp **** {
 9336              		.loc 17 265 1 is_stmt 1 view -0
 9337              		.cfi_startproc
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 381


 9338              		@ args = 0, pretend = 0, frame = 0
 9339              		@ frame_needed = 0, uses_anonymous_args = 0
 266:Jellybeans.cpp ****     patch.seed.dac.WriteValue(DacHandle::Channel::ONE, myArp->getDacValue());
 9340              		.loc 17 266 5 view .LVU2160
 265:Jellybeans.cpp ****     patch.seed.dac.WriteValue(DacHandle::Channel::ONE, myArp->getDacValue());
 9341              		.loc 17 265 1 is_stmt 0 view .LVU2161
 9342 0000 10B5     		push	{r4, lr}
 9343              		.cfi_def_cfa_offset 8
 9344              		.cfi_offset 4, -8
 9345              		.cfi_offset 14, -4
 9346              		.loc 17 266 74 view .LVU2162
 9347 0002 0B4C     		ldr	r4, .L549
 9348 0004 2068     		ldr	r0, [r4]
 9349 0006 FFF7FEFF 		bl	_ZN10jellybeans3Arp11getDacValueEv
 9350              	.LVL636:
 9351              		.loc 17 266 30 view .LVU2163
 9352 000a BCEEC00A 		vcvt.u32.f32	s0, s0
 9353 000e 0021     		movs	r1, #0
 9354 0010 0848     		ldr	r0, .L549+4
 9355 0012 10EE103A 		vmov	r3, s0	@ int
 9356 0016 9AB2     		uxth	r2, r3
 9357 0018 FFF7FEFF 		bl	_ZN5daisy9DacHandle10WriteValueENS0_7ChannelEt
 9358              	.LVL637:
 267:Jellybeans.cpp **** 
 268:Jellybeans.cpp ****     dsy_gpio_write(&patch.gate_output, myArp->getNewNote());
 9359              		.loc 17 268 5 is_stmt 1 view .LVU2164
 9360              		.loc 17 268 57 is_stmt 0 view .LVU2165
 9361 001c 2068     		ldr	r0, [r4]
 9362 001e FFF7FEFF 		bl	_ZN10jellybeans3Arp10getNewNoteEv
 9363              	.LVL638:
 9364 0022 0146     		mov	r1, r0
 9365              		.loc 17 268 19 view .LVU2166
 9366 0024 0448     		ldr	r0, .L549+8
 269:Jellybeans.cpp **** }
 9367              		.loc 17 269 1 view .LVU2167
 9368 0026 BDE81040 		pop	{r4, lr}
 9369              		.cfi_restore 14
 9370              		.cfi_restore 4
 9371              		.cfi_def_cfa_offset 0
 268:Jellybeans.cpp **** }
 9372              		.loc 17 268 19 view .LVU2168
 9373 002a FFF7FEBF 		b	dsy_gpio_write
 9374              	.LVL639:
 9375              	.L550:
 9376 002e 00BF     		.align	2
 9377              	.L549:
 9378 0030 00000000 		.word	.LANCHOR0
 9379 0034 20000000 		.word	patch+32
 9380 0038 B4950000 		.word	patch+38324
 9381              		.cfi_endproc
 9382              	.LFE5125:
 9384              		.section	.text._Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii,"ax",%progbits
 9385              		.align	1
 9386              		.p2align 2,,3
 9387              		.global	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 9388              		.syntax unified
 9389              		.thumb
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 382


 9390              		.thumb_func
 9391              		.fpu fpv5-d16
 9393              	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:
 9394              	.LVL640:
 9395              	.LFB5126:
 270:Jellybeans.cpp **** 
 271:Jellybeans.cpp **** /*
 272:Jellybeans.cpp ****  * Utility functions
 273:Jellybeans.cpp ****  */
 274:Jellybeans.cpp **** 
 275:Jellybeans.cpp **** // Utility to perform a silly little dance where we set the cursor, 
 276:Jellybeans.cpp **** // convert a std::string to char*, and pass it to WriteString()
 277:Jellybeans.cpp **** void drawString(std::string str, int x, int y){
 9396              		.loc 17 277 47 is_stmt 1 view -0
 9397              		.cfi_startproc
 9398              		@ args = 0, pretend = 0, frame = 16
 9399              		@ frame_needed = 0, uses_anonymous_args = 0
 278:Jellybeans.cpp ****     patch.display.SetCursor(x, y);
 9400              		.loc 17 278 5 view .LVU2170
 9401              	.LBB6887:
 9402              	.LBI6887:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 9403              		.loc 5 171 10 view .LVU2171
 9404              	.LBB6888:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9405              		.loc 5 173 9 view .LVU2172
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9406              		.loc 5 173 19 is_stmt 0 view .LVU2173
 9407 0000 89B2     		uxth	r1, r1
 9408              	.LVL641:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9409              		.loc 5 173 19 view .LVU2174
 9410 0002 4A4B     		ldr	r3, .L573
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9411              		.loc 5 174 19 view .LVU2175
 9412 0004 92B2     		uxth	r2, r2
 9413              	.LVL642:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9414              		.loc 5 173 19 view .LVU2176
 9415 0006 7F29     		cmp	r1, #127
 9416 0008 28BF     		it	cs
 9417 000a 7F21     		movcs	r1, #127
 9418              	.LVL643:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9419              		.loc 5 174 19 view .LVU2177
 9420 000c 3F2A     		cmp	r2, #63
 9421              	.LBE6888:
 9422              	.LBE6887:
 277:Jellybeans.cpp ****     patch.display.SetCursor(x, y);
 9423              		.loc 17 277 47 view .LVU2178
 9424 000e 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9425              		.cfi_def_cfa_offset 36
 9426              		.cfi_offset 4, -36
 9427              		.cfi_offset 5, -32
 9428              		.cfi_offset 6, -28
 9429              		.cfi_offset 7, -24
 9430              		.cfi_offset 8, -20
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 383


 9431              		.cfi_offset 9, -16
 9432              		.cfi_offset 10, -12
 9433              		.cfi_offset 11, -8
 9434              		.cfi_offset 14, -4
 9435              	.LBB6892:
 9436              	.LBB6889:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9437              		.loc 5 174 19 view .LVU2179
 9438 0012 28BF     		it	cs
 9439 0014 3F22     		movcs	r2, #63
 9440              	.LVL644:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9441              		.loc 5 174 19 view .LVU2180
 9442              	.LBE6889:
 9443              	.LBE6892:
 9444              	.LBB6893:
 9445              	.LBB6894:
 9446              	.LBB6895:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9447              		.loc 18 187 28 view .LVU2181
 9448 0016 D0F800A0 		ldr	r10, [r0]
 9449              	.LBE6895:
 9450              	.LBE6894:
 9451              	.LBE6893:
 9452              	.LBB6897:
 9453              	.LBB6890:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9454              		.loc 5 173 19 view .LVU2182
 9455 001a 4548     		ldr	r0, .L573+4
 9456              	.LVL645:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9457              		.loc 5 173 19 view .LVU2183
 9458              	.LBE6890:
 9459              	.LBE6897:
 277:Jellybeans.cpp ****     patch.display.SetCursor(x, y);
 9460              		.loc 17 277 47 view .LVU2184
 9461 001c 85B0     		sub	sp, sp, #20
 9462              		.cfi_def_cfa_offset 56
 9463 001e 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 9464              	.LBB6898:
 9465              	.LBB6891:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9466              		.loc 5 174 19 view .LVU2185
 9467 0020 A0F8A621 		strh	r2, [r0, #422]	@ movhi
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9468              		.loc 5 173 19 view .LVU2186
 9469 0024 A0F8A411 		strh	r1, [r0, #420]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9470              		.loc 5 174 9 is_stmt 1 view .LVU2187
 9471              	.LVL646:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9472              		.loc 5 174 9 is_stmt 0 view .LVU2188
 9473              	.LBE6891:
 9474              	.LBE6898:
 279:Jellybeans.cpp ****     char* cstr = &str[0];
 9475              		.loc 17 279 5 is_stmt 1 view .LVU2189
 9476              	.LBB6899:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 384


 9477              	.LBI6893:
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
1006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
 9478              		.loc 18 1034 7 view .LVU2190
 9479              	.LBB6896:
 9480              	.LBI6894:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9481              		.loc 18 186 7 view .LVU2191
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9482              		.loc 18 186 7 is_stmt 0 view .LVU2192
 9483              	.LBE6896:
 9484              	.LBE6899:
 280:Jellybeans.cpp ****     patch.display.WriteString(cstr, font, true);
 9485              		.loc 17 280 5 is_stmt 1 view .LVU2193
 9486              		.loc 17 280 5 is_stmt 0 view .LVU2194
 9487 0028 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 9488              	.LBB6900:
 9489              	.LBB6901:
 443:../../libdaisy/src/hid/disp/display.h ****         {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 385


 9490              		.loc 5 443 9 view .LVU2195
 9491 002a 9AF800B0 		ldrb	fp, [r10]	@ zero_extendqisi2
 9492 002e 5B68     		ldr	r3, [r3, #4]
 9493 0030 0292     		str	r2, [sp, #8]
 9494              	.LVL647:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9495              		.loc 5 443 9 view .LVU2196
 9496 0032 0393     		str	r3, [sp, #12]
 9497              	.LVL648:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9498              		.loc 5 443 9 view .LVU2197
 9499              	.LBE6901:
 9500              	.LBI6900:
 440:../../libdaisy/src/hid/disp/display.h ****     {
 9501              		.loc 5 440 10 is_stmt 1 view .LVU2198
 9502              	.LBB6941:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9503              		.loc 5 443 9 view .LVU2199
 9504 0034 BBF1000F 		cmp	fp, #0
 9505 0038 72D0     		beq	.L551
 9506              	.LVL649:
 9507              	.L552:
 9508              	.LBB6902:
 9509              	.LBI6902:
 396:../../libdaisy/src/hid/disp/display.h ****     {
 9510              		.loc 5 396 10 view .LVU2200
 9511              	.LBB6903:
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 9512              		.loc 5 401 20 is_stmt 0 view .LVU2201
 9513 003a ABF12003 		sub	r3, fp, #32
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 9514              		.loc 5 401 9 view .LVU2202
 9515 003e DAB2     		uxtb	r2, r3
 9516 0040 5E2A     		cmp	r2, #94
 9517 0042 70D8     		bhi	.L565
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 9518              		.loc 5 405 23 view .LVU2203
 9519 0044 3A49     		ldr	r1, .L573+4
 9520 0046 B1F8A4E1 		ldrh	lr, [r1, #420]
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 9521              		.loc 5 405 33 view .LVU2204
 9522 004a 0EEB0502 		add	r2, lr, r5
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9523              		.loc 5 406 12 view .LVU2205
 9524 004e 802A     		cmp	r2, #128
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 9525              		.loc 5 405 33 view .LVU2206
 9526 0050 0192     		str	r2, [sp, #4]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9527              		.loc 5 406 12 view .LVU2207
 9528 0052 68DC     		bgt	.L565
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9529              		.loc 5 406 27 view .LVU2208
 9530 0054 B1F8A621 		ldrh	r2, [r1, #422]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9531              		.loc 5 406 37 view .LVU2209
 9532 0058 0299     		ldr	r1, [sp, #8]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 386


 406:../../libdaisy/src/hid/disp/display.h ****         {
 9533              		.loc 5 406 27 view .LVU2210
 9534 005a 0092     		str	r2, [sp]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9535              		.loc 5 406 37 view .LVU2211
 9536 005c 0A44     		add	r2, r2, r1
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9537              		.loc 5 406 12 view .LVU2212
 9538 005e 402A     		cmp	r2, #64
 9539 0060 61DC     		bgt	.L565
 9540              	.LVL650:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 9541              		.loc 5 413 22 is_stmt 1 view .LVU2213
 9542 0062 0029     		cmp	r1, #0
 9543 0064 45D0     		beq	.L556
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 9544              		.loc 5 415 37 is_stmt 0 view .LVU2214
 9545 0066 029A     		ldr	r2, [sp, #8]
 9546 0068 6FF00047 		mvn	r7, #-2147483648
 9547 006c 0098     		ldr	r0, [sp]
 9548 006e 02FB03F3 		mul	r3, r2, r3
 9549 0072 1F44     		add	r7, r7, r3
 9550 0074 1344     		add	r3, r3, r2
 9551 0076 039A     		ldr	r2, [sp, #12]
 9552 0078 A2F10209 		sub	r9, r2, #2
 9553 007c 02EB4707 		add	r7, r2, r7, lsl #1
 9554 0080 09EB4309 		add	r9, r9, r3, lsl #1
 9555              	.LVL651:
 9556              	.L557:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 9557              		.loc 5 415 15 view .LVU2215
 9558 0084 37F802CF 		ldrh	ip, [r7, #2]!
 9559              	.LVL652:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9560              		.loc 5 416 26 is_stmt 1 view .LVU2216
 9561 0088 7DB3     		cbz	r5, .L560
 9562              	.LBB6904:
 9563              	.LBB6905:
 9564              	.LBB6906:
 9565              	.LBB6907:
 9566              	.LBB6908:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9567              		.loc 14 246 55 is_stmt 0 view .LVU2217
 9568 008a 00F00703 		and	r3, r0, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9569              		.loc 14 246 49 view .LVU2218
 9570 008e 0126     		movs	r6, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9571              		.loc 14 246 28 view .LVU2219
 9572 0090 C208     		lsrs	r2, r0, #3
 9573              	.LBE6908:
 9574              	.LBE6907:
 9575              	.LBE6906:
 9576              	.LBE6905:
 9577              	.LBE6904:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9578              		.loc 5 416 19 view .LVU2220
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 387


 9579 0092 0024     		movs	r4, #0
 9580              	.LBB6927:
 9581              	.LBB6922:
 9582              	.LBB6918:
 9583              	.LBB6913:
 9584              	.LBB6909:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9585              		.loc 14 246 49 view .LVU2221
 9586 0094 9E40     		lsls	r6, r6, r3
 9587 0096 49F2B413 		movw	r3, #37300
 9588 009a 7344     		add	r3, r3, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9589              		.loc 14 246 42 view .LVU2222
 9590 009c 76B2     		sxtb	r6, r6
 9591 009e 03EBC213 		add	r3, r3, r2, lsl #7
 9592 00a2 244A     		ldr	r2, .L573+8
 9593 00a4 6FEA0608 		mvn	r8, r6
 9594 00a8 1344     		add	r3, r3, r2
 9595 00aa 7246     		mov	r2, lr
 9596 00ac 0BE0     		b	.L561
 9597              	.LVL653:
 9598              	.L572:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9599              		.loc 14 246 42 view .LVU2223
 9600              	.LBE6909:
 9601              	.LBE6913:
 9602              	.LBE6918:
 9603              	.LBE6922:
 9604              	.LBE6927:
 9605              	.LBB6928:
 9606              	.LBB6929:
 9607              	.LBB6930:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 9608              		.loc 14 241 9 view .LVU2224
 9609 00ae 7F2A     		cmp	r2, #127
 9610 00b0 04D8     		bhi	.L559
 9611 00b2 3F28     		cmp	r0, #63
 9612 00b4 02D8     		bhi	.L559
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9613              		.loc 14 244 42 view .LVU2225
 9614 00b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9615 00b8 3143     		orrs	r1, r1, r6
 9616 00ba 1970     		strb	r1, [r3]
 9617              	.L559:
 9618              	.LVL654:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9619              		.loc 14 244 42 view .LVU2226
 9620              	.LBE6930:
 9621              	.LBE6929:
 9622              	.LBE6928:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9623              		.loc 5 416 13 is_stmt 1 view .LVU2227
 9624 00bc 0134     		adds	r4, r4, #1
 9625              	.LVL655:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9626              		.loc 5 416 26 view .LVU2228
 9627 00be 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 388


 9628 00c0 0132     		adds	r2, r2, #1
 9629 00c2 A542     		cmp	r5, r4
 9630 00c4 11D0     		beq	.L560
 9631              	.LVL656:
 9632              	.L561:
 9633              	.LBB6932:
 9634              	.LBI6928:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 9635              		.loc 4 41 10 view .LVU2229
 9636              	.LBB6931:
 9637              	.LBI6929:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9638              		.loc 14 239 10 view .LVU2230
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9639              		.loc 14 239 10 is_stmt 0 view .LVU2231
 9640              	.LBE6931:
 9641              	.LBE6932:
 9642              	.LBB6933:
 9643              	.LBI6904:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 9644              		.loc 4 41 10 is_stmt 1 view .LVU2232
 9645              	.LBB6923:
 9646              	.LBI6905:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9647              		.loc 14 239 10 view .LVU2233
 9648              	.LBE6923:
 9649              	.LBE6933:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 9650              		.loc 5 418 23 is_stmt 0 view .LVU2234
 9651 00c6 0CFA04F1 		lsl	r1, ip, r4
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 9652              		.loc 5 418 17 view .LVU2235
 9653 00ca 0904     		lsls	r1, r1, #16
 9654 00cc EFD4     		bmi	.L572
 9655              	.LVL657:
 9656              	.LBB6934:
 9657              	.LBB6924:
 9658              	.LBB6919:
 9659              	.LBB6914:
 9660              	.LBI6907:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9661              		.loc 14 239 10 is_stmt 1 view .LVU2236
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9662              		.loc 14 239 10 is_stmt 0 view .LVU2237
 9663              	.LBE6914:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 9664              		.loc 14 241 9 view .LVU2238
 9665 00ce 7F2A     		cmp	r2, #127
 9666 00d0 F4D8     		bhi	.L559
 9667 00d2 3F28     		cmp	r0, #63
 9668 00d4 F2D8     		bhi	.L559
 9669              	.LBB6915:
 9670              	.LBB6910:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9671              		.loc 14 246 42 view .LVU2239
 9672 00d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9673              	.LBE6910:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 389


 9674              	.LBE6915:
 9675              	.LBE6919:
 9676              	.LBE6924:
 9677              	.LBE6934:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9678              		.loc 5 416 13 view .LVU2240
 9679 00d8 0134     		adds	r4, r4, #1
 9680              	.LVL658:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9681              		.loc 5 416 26 view .LVU2241
 9682 00da 0133     		adds	r3, r3, #1
 9683 00dc 0132     		adds	r2, r2, #1
 9684              	.LBB6935:
 9685              	.LBB6925:
 9686              	.LBB6920:
 9687              	.LBB6916:
 9688              	.LBB6911:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9689              		.loc 14 246 42 view .LVU2242
 9690 00de 08EA0101 		and	r1, r8, r1
 9691              	.LBE6911:
 9692              	.LBE6916:
 9693              	.LBE6920:
 9694              	.LBE6925:
 9695              	.LBE6935:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9696              		.loc 5 416 26 view .LVU2243
 9697 00e2 A542     		cmp	r5, r4
 9698              	.LBB6936:
 9699              	.LBB6926:
 9700              	.LBB6921:
 9701              	.LBB6917:
 9702              	.LBB6912:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9703              		.loc 14 246 42 view .LVU2244
 9704 00e4 03F8011C 		strb	r1, [r3, #-1]
 9705              	.LVL659:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9706              		.loc 14 246 42 view .LVU2245
 9707              	.LBE6912:
 9708              	.LBE6917:
 9709              	.LBE6921:
 9710              	.LBE6926:
 9711              	.LBE6936:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9712              		.loc 5 416 13 is_stmt 1 view .LVU2246
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9713              		.loc 5 416 26 view .LVU2247
 9714 00e8 EDD1     		bne	.L561
 9715              	.LVL660:
 9716              	.L560:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 9717              		.loc 5 413 9 view .LVU2248
 413:../../libdaisy/src/hid/disp/display.h ****         {
 9718              		.loc 5 413 22 view .LVU2249
 9719 00ea B945     		cmp	r9, r7
 9720 00ec 00F10100 		add	r0, r0, #1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 390


 9721 00f0 C8D1     		bne	.L557
 9722              	.LVL661:
 9723              	.L556:
 9724              	.LBB6937:
 9725              	.LBI6937:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 9726              		.loc 5 171 10 view .LVU2250
 9727              	.LBB6938:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9728              		.loc 5 173 9 view .LVU2251
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9729              		.loc 5 174 19 is_stmt 0 view .LVU2252
 9730 00f2 009A     		ldr	r2, [sp]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9731              		.loc 5 173 19 view .LVU2253
 9732 00f4 BDF80430 		ldrh	r3, [sp, #4]
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9733              		.loc 5 174 19 view .LVU2254
 9734 00f8 3F2A     		cmp	r2, #63
 9735 00fa 0D49     		ldr	r1, .L573+4
 9736 00fc 28BF     		it	cs
 9737 00fe 3F22     		movcs	r2, #63
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9738              		.loc 5 173 19 view .LVU2255
 9739 0100 7F2B     		cmp	r3, #127
 9740 0102 28BF     		it	cs
 9741 0104 7F23     		movcs	r3, #127
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9742              		.loc 5 174 19 view .LVU2256
 9743 0106 A1F8A621 		strh	r2, [r1, #422]	@ movhi
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9744              		.loc 5 173 19 view .LVU2257
 9745 010a A1F8A431 		strh	r3, [r1, #420]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9746              		.loc 5 174 9 is_stmt 1 view .LVU2258
 9747              	.LVL662:
 9748              	.L553:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9749              		.loc 5 174 9 is_stmt 0 view .LVU2259
 9750              	.LBE6938:
 9751              	.LBE6937:
 9752              	.LBE6903:
 9753              	.LBE6902:
 445:../../libdaisy/src/hid/disp/display.h ****                != *str)
 9754              		.loc 5 445 13 view .LVU2260
 9755 010e 9AF80030 		ldrb	r3, [r10]	@ zero_extendqisi2
 9756 0112 5B45     		cmp	r3, fp
 9757 0114 04D1     		bne	.L551
 9758              	.LVL663:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9759              		.loc 5 443 9 is_stmt 1 view .LVU2261
 9760 0116 1AF801BF 		ldrb	fp, [r10, #1]!	@ zero_extendqisi2
 9761              	.LVL664:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9762              		.loc 5 443 9 is_stmt 0 view .LVU2262
 9763 011a BBF1000F 		cmp	fp, #0
 9764 011e 8CD1     		bne	.L552
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 391


 9765              	.L551:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9766              		.loc 5 443 9 view .LVU2263
 9767              	.LBE6941:
 9768              	.LBE6900:
 281:Jellybeans.cpp **** }...
 9769              		.loc 17 281 1 view .LVU2264
 9770 0120 05B0     		add	sp, sp, #20
 9771              		.cfi_remember_state
 9772              		.cfi_def_cfa_offset 36
 9773              		@ sp needed
 9774 0122 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9775              	.LVL665:
 9776              	.L565:
 9777              		.cfi_restore_state
 9778              	.LBB6943:
 9779              	.LBB6942:
 9780              	.LBB6940:
 9781              	.LBB6939:
 402:../../libdaisy/src/hid/disp/display.h **** 
 9782              		.loc 5 402 20 view .LVU2265
 9783 0126 4FF0000B 		mov	fp, #0
 9784              	.LVL666:
 402:../../libdaisy/src/hid/disp/display.h **** 
 9785              		.loc 5 402 20 view .LVU2266
 9786 012a F0E7     		b	.L553
 9787              	.L574:
 9788              		.align	2
 9789              	.L573:
 9790 012c 00000000 		.word	.LANCHOR14
 9791 0130 00900000 		.word	patch+36864
 9792 0134 00000000 		.word	patch
 9793              	.LBE6939:
 9794              	.LBE6940:
 9795              	.LBE6942:
 9796              	.LBE6943:
 9797              		.cfi_endproc
 9798              	.LFE5126:
 9800              		.section	.text._Z10updateOledv,"ax",%progbits
 9801              		.align	1
 9802              		.p2align 2,,3
 9803              		.global	_Z10updateOledv
 9804              		.syntax unified
 9805              		.thumb
 9806              		.thumb_func
 9807              		.fpu fpv5-d16
 9809              	_Z10updateOledv:
 9810              	.LFB5124:
 231:Jellybeans.cpp **** void updateOled() {
 9811              		.loc 17 231 19 is_stmt 1 view -0
 9812              		.cfi_startproc
 9813              		@ args = 0, pretend = 0, frame = 32
 9814              		@ frame_needed = 0, uses_anonymous_args = 0
 233:Jellybeans.cpp ****     patch.display.Fill(false);  
 9815              		.loc 17 233 5 view .LVU2268
 9816              	.LVL667:
 9817              	.LBB7243:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 392


 9818              	.LBI7243:
  33:../../libdaisy/src/hid/disp/oled_display.h **** 
 9819              		.loc 4 33 10 view .LVU2269
 9820              	.LBB7244:
 9821              	.LBI7244:
 249:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9822              		.loc 14 249 10 view .LVU2270
 9823              	.LBB7245:
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 9824              		.loc 14 251 29 view .LVU2271
 9825              	.LBE7245:
 9826              	.LBE7244:
 9827              	.LBE7243:
 231:Jellybeans.cpp **** void updateOled() {
 9828              		.loc 17 231 19 is_stmt 0 view .LVU2272
 9829 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9830              		.cfi_def_cfa_offset 20
 9831              		.cfi_offset 4, -20
 9832              		.cfi_offset 5, -16
 9833              		.cfi_offset 6, -12
 9834              		.cfi_offset 7, -8
 9835              		.cfi_offset 14, -4
 236:Jellybeans.cpp ****     drawString(myArp->toString(), 0, 0);
 9836              		.loc 17 236 32 view .LVU2273
 9837 0002 8B4C     		ldr	r4, .L622
 231:Jellybeans.cpp **** void updateOled() {
 9838              		.loc 17 231 19 view .LVU2274
 9839 0004 89B0     		sub	sp, sp, #36
 9840              		.cfi_def_cfa_offset 56
 9841              	.LBB7250:
 9842              	.LBB7248:
 9843              	.LBB7246:
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 9844              		.loc 14 253 24 view .LVU2275
 9845 0006 4FF48062 		mov	r2, #1024
 9846 000a 0021     		movs	r1, #0
 9847 000c 8948     		ldr	r0, .L622+4
 9848              	.LBE7246:
 9849              	.LBE7248:
 9850              	.LBE7250:
 9851              	.LBB7251:
 9852              	.LBB7252:
 9853              	.LBB7253:
 9854              	.LBB7254:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9855              		.loc 18 231 2 view .LVU2276
 9856 000e 04AD     		add	r5, sp, #16
 9857              	.LBE7254:
 9858              	.LBE7253:
 9859              	.LBE7252:
 9860              	.LBE7251:
 9861              	.LBB7272:
 9862              	.LBB7249:
 9863              	.LBB7247:
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 9864              		.loc 14 253 24 view .LVU2277
 9865 0010 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 393


 9866              	.LVL668:
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 9867              		.loc 14 253 24 view .LVU2278
 9868              	.LBE7247:
 9869              	.LBE7249:
 9870              	.LBE7272:
 236:Jellybeans.cpp ****     drawString(myArp->toString(), 0, 0);
 9871              		.loc 17 236 5 is_stmt 1 view .LVU2279
 236:Jellybeans.cpp ****     drawString(myArp->toString(), 0, 0);
 9872              		.loc 17 236 32 is_stmt 0 view .LVU2280
 9873 0014 2168     		ldr	r1, [r4]
 9874 0016 02A8     		add	r0, sp, #8
 9875 0018 FFF7FEFF 		bl	_ZN10jellybeans3Arp8toStringB5cxx11Ev
 9876              	.LVL669:
 236:Jellybeans.cpp ****     drawString(myArp->toString(), 0, 0);
 9877              		.loc 17 236 15 view .LVU2281
 9878 001c 0022     		movs	r2, #0
 9879 001e 02A8     		add	r0, sp, #8
 9880 0020 1146     		mov	r1, r2
 9881 0022 FFF7FEFF 		bl	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 9882              	.LVL670:
 9883              	.LBB7273:
 9884              	.LBI7251:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 9885              		.loc 18 657 7 is_stmt 1 view .LVU2282
 9886              	.LBB7271:
 9887              	.LBB7267:
 9888              	.LBI7253:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9889              		.loc 18 229 7 view .LVU2283
 9890              	.LBB7266:
 9891              	.LBB7255:
 9892              	.LBI7255:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 9893              		.loc 18 221 7 view .LVU2284
 9894              	.LBB7256:
 9895              	.LBI7256:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9896              		.loc 18 186 7 view .LVU2285
 9897              	.LBB7257:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9898              		.loc 18 187 28 is_stmt 0 view .LVU2286
 9899 0026 0298     		ldr	r0, [sp, #8]
 9900              	.LVL671:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9901              		.loc 18 187 28 view .LVU2287
 9902              	.LBE7257:
 9903              	.LBE7256:
 9904              	.LBB7258:
 9905              	.LBI7258:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9906              		.loc 18 200 7 is_stmt 1 view .LVU2288
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9907              		.loc 18 200 7 is_stmt 0 view .LVU2289
 9908              	.LBE7258:
 9909              	.LBE7255:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 394


 9910              		.loc 18 231 2 view .LVU2290
 9911 0028 A842     		cmp	r0, r5
 9912 002a 03D0     		beq	.L576
 9913              	.LVL672:
 9914              	.LBB7259:
 9915              	.LBI7259:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9916              		.loc 18 236 7 is_stmt 1 view .LVU2291
 9917              	.LBB7260:
 9918              	.LBB7261:
 9919              	.LBI7261:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9920              		.loc 25 491 7 view .LVU2292
 9921              	.LBB7262:
 9922              	.LBI7262:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 9923              		.loc 20 120 7 view .LVU2293
 9924              	.LBE7262:
 9925              	.LBE7261:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9926              		.loc 18 237 34 is_stmt 0 view .LVU2294
 9927 002c 0499     		ldr	r1, [sp, #16]
 9928              	.LBB7265:
 9929              	.LBB7264:
 9930              	.LBB7263:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9931              		.loc 20 133 19 view .LVU2295
 9932 002e 0131     		adds	r1, r1, #1
 9933              	.LVL673:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9934              		.loc 20 133 19 view .LVU2296
 9935 0030 FFF7FEFF 		bl	_ZdlPvj
 9936              	.LVL674:
 9937              	.L576:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9938              		.loc 20 133 19 view .LVU2297
 9939              	.LBE7263:
 9940              	.LBE7264:
 9941              	.LBE7265:
 9942              	.LBE7260:
 9943              	.LBE7259:
 9944              	.LBE7266:
 9945              	.LBE7267:
 9946              	.LBB7268:
 9947              	.LBI7268:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9948              		.loc 18 150 14 is_stmt 1 view .LVU2298
 9949              	.LBB7269:
 9950              	.LBI7269:
 9951              		.loc 19 162 7 view .LVU2299
 9952              	.LBB7270:
 9953              	.LBI7270:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9954              		.loc 20 89 7 view .LVU2300
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9955              		.loc 20 89 7 is_stmt 0 view .LVU2301
 9956              	.LBE7270:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 395


 9957              	.LBE7269:
 9958              	.LBE7268:
 9959              	.LBE7271:
 9960              	.LBE7273:
 237:Jellybeans.cpp ****     patch.display.DrawLine(0, 11, 128, 11, true);
 9961              		.loc 17 237 5 is_stmt 1 view .LVU2302
 9962              	.LBB7274:
 9963              	.LBI7274:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 9964              		.loc 5 221 10 view .LVU2303
 9965              	.LBB7275:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 9966              		.loc 5 239 26 view .LVU2304
 9967 0034 804B     		ldr	r3, .L622+8
 9968 0036 03F18001 		add	r1, r3, #128
 9969              	.LVL675:
 9970              	.L577:
 9971              	.LBB7276:
 9972              	.LBI7276:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 9973              		.loc 4 41 10 view .LVU2305
 9974              	.LBB7277:
 9975              	.LBI7277:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9976              		.loc 14 239 10 view .LVU2306
 9977              	.LBB7278:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9978              		.loc 14 244 42 is_stmt 0 view .LVU2307
 9979 003a 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
 9980              	.LVL676:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9981              		.loc 14 244 42 view .LVU2308
 9982 003e 42F00802 		orr	r2, r2, #8
 9983              	.LBE7278:
 9984              	.LBE7277:
 9985              	.LBE7276:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 9986              		.loc 5 239 26 view .LVU2309
 9987 0042 9942     		cmp	r1, r3
 9988              	.LBB7281:
 9989              	.LBB7280:
 9990              	.LBB7279:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9991              		.loc 14 244 42 view .LVU2310
 9992 0044 1A70     		strb	r2, [r3]
 9993              	.LVL677:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9994              		.loc 14 244 42 view .LVU2311
 9995              	.LBE7279:
 9996              	.LBE7280:
 9997              	.LBE7281:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 9998              		.loc 5 239 26 is_stmt 1 view .LVU2312
 9999 0046 F8D1     		bne	.L577
 10000              	.LVL678:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 10001              		.loc 5 239 26 is_stmt 0 view .LVU2313
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 396


 10002              	.LBE7275:
 10003              	.LBE7274:
 240:Jellybeans.cpp ****     drawString(">", 0, 11);
 10004              		.loc 17 240 5 is_stmt 1 view .LVU2314
 10005              	.LBB7282:
 10006              	.LBI7282:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 10007              		.loc 19 144 7 view .LVU2315
 10008              	.LBB7283:
 10009              	.LBI7283:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10010              		.loc 20 79 7 view .LVU2316
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10011              		.loc 20 79 7 is_stmt 0 view .LVU2317
 10012              	.LBE7283:
 10013              	.LBE7282:
 10014              	.LBB7284:
 10015              	.LBI7284:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 10016              		.loc 18 525 7 is_stmt 1 view .LVU2318
 10017              	.LBB7285:
 10018              	.LBB7286:
 10019              	.LBI7286:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10020              		.loc 18 190 7 view .LVU2319
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10021              		.loc 18 190 7 is_stmt 0 view .LVU2320
 10022              	.LBE7286:
 10023              	.LBB7287:
 10024              	.LBI7287:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 10025              		.loc 18 156 2 is_stmt 1 view .LVU2321
 10026              	.LBB7288:
 10027              	.LBB7289:
 10028              	.LBB7290:
 10029              	.LBI7290:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10030              		.loc 19 147 7 view .LVU2322
 10031              	.LBB7291:
 10032              	.LBI7291:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10033              		.loc 20 82 7 view .LVU2323
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10034              		.loc 20 82 7 is_stmt 0 view .LVU2324
 10035              	.LBE7291:
 10036              	.LBE7290:
 10037              	.LBE7289:
 10038              	.LBE7288:
 10039              	.LBE7287:
 10040              	.LBB7292:
 10041              	.LBB7293:
 10042              	.LBB7294:
 10043              	.LBB7295:
 10044              	.LBB7296:
 10045              	.LBB7297:
 10046              	.LBB7298:
 10047              	.LBB7299:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 397


 10048              	.LBB7300:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10049              		.loc 18 183 26 view .LVU2325
 10050 0048 0122     		movs	r2, #1
 10051              	.LBE7300:
 10052              	.LBE7299:
 10053              	.LBE7298:
 10054              	.LBB7303:
 10055              	.LBB7304:
 10056              	.LBB7305:
 10057              	.LBB7306:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10058              		.loc 21 322 14 view .LVU2326
 10059 004a 3E23     		movs	r3, #62
 10060              	.LBE7306:
 10061              	.LBE7305:
 10062              	.LBE7304:
 10063              	.LBE7303:
 10064              	.LBE7297:
 10065              	.LBE7296:
 10066              	.LBE7295:
 10067              	.LBE7294:
 10068              	.LBE7293:
 10069              	.LBE7292:
 10070              	.LBE7285:
 10071              	.LBE7284:
 240:Jellybeans.cpp ****     drawString(">", 0, 11);
 10072              		.loc 17 240 15 view .LVU2327
 10073 004c 02A8     		add	r0, sp, #8
 10074              	.LVL679:
 240:Jellybeans.cpp ****     drawString(">", 0, 11);
 10075              		.loc 17 240 15 view .LVU2328
 10076 004e 0021     		movs	r1, #0
 10077              	.LBB7319:
 10078              	.LBB7318:
 10079              	.LBB7317:
 10080              	.LBB7316:
 10081              	.LBB7315:
 10082              	.LBB7314:
 10083              	.LBB7313:
 10084              	.LBB7312:
 10085              	.LBB7310:
 10086              	.LBB7309:
 10087              	.LBB7308:
 10088              	.LBB7307:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10089              		.loc 21 322 14 view .LVU2329
 10090 0050 ADF81030 		strh	r3, [sp, #16]	@ movhi
 10091              	.LVL680:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10092              		.loc 21 322 14 view .LVU2330
 10093              	.LBE7307:
 10094              	.LBE7308:
 10095              	.LBE7309:
 10096              	.LBE7310:
 10097              	.LBB7311:
 10098              	.LBB7302:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 398


 10099              	.LBB7301:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10100              		.loc 18 183 26 view .LVU2331
 10101 0054 CDE90252 		strd	r5, r2, [sp, #8]
 10102              	.LBE7301:
 10103              	.LBE7302:
 10104              	.LBE7311:
 10105              	.LBE7312:
 10106              	.LBE7313:
 10107              	.LBE7314:
 10108              	.LBE7315:
 10109              	.LBE7316:
 10110              	.LBE7317:
 10111              	.LBE7318:
 10112              	.LBE7319:
 240:Jellybeans.cpp ****     drawString(">", 0, 11);
 10113              		.loc 17 240 15 view .LVU2332
 10114 0058 0B22     		movs	r2, #11
 10115 005a FFF7FEFF 		bl	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 10116              	.LVL681:
 10117              	.LBB7320:
 10118              	.LBI7320:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10119              		.loc 18 657 7 is_stmt 1 view .LVU2333
 10120              	.LBB7321:
 10121              	.LBB7322:
 10122              	.LBI7322:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10123              		.loc 18 229 7 view .LVU2334
 10124              	.LBB7323:
 10125              	.LBB7324:
 10126              	.LBI7324:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10127              		.loc 18 221 7 view .LVU2335
 10128              	.LBB7325:
 10129              	.LBI7325:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10130              		.loc 18 186 7 view .LVU2336
 10131              	.LBB7326:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10132              		.loc 18 187 28 is_stmt 0 view .LVU2337
 10133 005e 0298     		ldr	r0, [sp, #8]
 10134              	.LVL682:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10135              		.loc 18 187 28 view .LVU2338
 10136              	.LBE7326:
 10137              	.LBE7325:
 10138              	.LBB7327:
 10139              	.LBI7327:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10140              		.loc 18 200 7 is_stmt 1 view .LVU2339
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10141              		.loc 18 200 7 is_stmt 0 view .LVU2340
 10142              	.LBE7327:
 10143              	.LBE7324:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10144              		.loc 18 231 2 view .LVU2341
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 399


 10145 0060 A842     		cmp	r0, r5
 10146 0062 03D0     		beq	.L578
 10147              	.LVL683:
 10148              	.LBB7328:
 10149              	.LBI7328:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10150              		.loc 18 236 7 is_stmt 1 view .LVU2342
 10151              	.LBB7329:
 10152              	.LBB7330:
 10153              	.LBI7330:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10154              		.loc 25 491 7 view .LVU2343
 10155              	.LBB7331:
 10156              	.LBI7331:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10157              		.loc 20 120 7 view .LVU2344
 10158              	.LBE7331:
 10159              	.LBE7330:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10160              		.loc 18 237 34 is_stmt 0 view .LVU2345
 10161 0064 0499     		ldr	r1, [sp, #16]
 10162              	.LBB7334:
 10163              	.LBB7333:
 10164              	.LBB7332:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10165              		.loc 20 133 19 view .LVU2346
 10166 0066 0131     		adds	r1, r1, #1
 10167              	.LVL684:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10168              		.loc 20 133 19 view .LVU2347
 10169 0068 FFF7FEFF 		bl	_ZdlPvj
 10170              	.LVL685:
 10171              	.L578:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10172              		.loc 20 133 19 view .LVU2348
 10173              	.LBE7332:
 10174              	.LBE7333:
 10175              	.LBE7334:
 10176              	.LBE7329:
 10177              	.LBE7328:
 10178              	.LBE7323:
 10179              	.LBE7322:
 10180              	.LBB7335:
 10181              	.LBI7335:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10182              		.loc 18 150 14 is_stmt 1 view .LVU2349
 10183              	.LBB7336:
 10184              	.LBI7336:
 10185              		.loc 19 162 7 view .LVU2350
 10186              	.LBB7337:
 10187              	.LBI7337:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10188              		.loc 20 89 7 view .LVU2351
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10189              		.loc 20 89 7 is_stmt 0 view .LVU2352
 10190              	.LBE7337:
 10191              	.LBE7336:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 400


 10192              	.LBE7335:
 10193              	.LBE7321:
 10194              	.LBE7320:
 10195              	.LBB7338:
 10196              	.LBI7338:
 10197              		.loc 19 162 7 is_stmt 1 view .LVU2353
 10198              	.LBB7339:
 10199              	.LBI7339:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10200              		.loc 20 89 7 view .LVU2354
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10201              		.loc 20 89 7 is_stmt 0 view .LVU2355
 10202              	.LBE7339:
 10203              	.LBE7338:
 242:Jellybeans.cpp ****     int listSize = 5;
 10204              		.loc 17 242 5 is_stmt 1 view .LVU2356
 244:Jellybeans.cpp ****     if (debugMode){
 10205              		.loc 17 244 5 view .LVU2357
 246:Jellybeans.cpp ****         debugString = myArp->getChord()->toString();
 10206              		.loc 17 246 9 view .LVU2358
 246:Jellybeans.cpp ****         debugString = myArp->getChord()->toString();
 10207              		.loc 17 246 51 is_stmt 0 view .LVU2359
 10208 006c 2068     		ldr	r0, [r4]
 10209 006e FFF7FEFF 		bl	_ZN10jellybeans3Arp8getChordEv
 10210              	.LVL686:
 10211 0072 0146     		mov	r1, r0
 10212 0074 02A8     		add	r0, sp, #8
 10213              	.LVL687:
 10214              	.LBB7340:
 10215              	.LBB7341:
 10216              	.LBB7342:
 10217              	.LBB7343:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10218              		.loc 18 187 28 view .LVU2360
 10219 0076 714C     		ldr	r4, .L622+12
 10220              	.LBE7343:
 10221              	.LBE7342:
 10222              	.LBE7341:
 10223              	.LBE7340:
 246:Jellybeans.cpp ****         debugString = myArp->getChord()->toString();
 10224              		.loc 17 246 51 view .LVU2361
 10225 0078 FFF7FEFF 		bl	_ZN10jellybeans13DiatonicChord8toStringB5cxx11Ev
 10226              	.LVL688:
 10227              	.LBB7437:
 10228              	.LBI7340:
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 10229              		.loc 18 703 7 is_stmt 1 view .LVU2362
 10230              	.LBB7348:
 10231              	.LBI7341:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10232              		.loc 18 221 7 view .LVU2363
 10233              	.LBB7345:
 10234              	.LBI7342:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10235              		.loc 18 186 7 view .LVU2364
 10236              	.LBE7345:
 10237              	.LBE7348:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 401


 10238              	.LBB7349:
 10239              	.LBB7350:
 10240              	.LBB7351:
 10241              	.LBB7352:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10242              		.loc 18 187 28 is_stmt 0 view .LVU2365
 10243 007c 029B     		ldr	r3, [sp, #8]
 10244              	.LBE7352:
 10245              	.LBE7351:
 10246              	.LBE7350:
 10247              	.LBE7349:
 10248              	.LBB7421:
 10249              	.LBB7346:
 10250              	.LBB7344:
 10251 007e 2068     		ldr	r0, [r4]
 10252              	.LVL689:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10253              		.loc 18 187 28 view .LVU2366
 10254              	.LBE7344:
 10255              	.LBE7346:
 10256              	.LBB7347:
 10257              	.LBI7347:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10258              		.loc 18 200 7 is_stmt 1 view .LVU2367
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10259              		.loc 18 200 7 is_stmt 0 view .LVU2368
 10260              	.LBE7347:
 10261              	.LBE7421:
 10262              	.LBB7422:
 10263              	.LBB7355:
 10264              	.LBI7350:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10265              		.loc 18 221 7 is_stmt 1 view .LVU2369
 10266              	.LBB7353:
 10267              	.LBI7351:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10268              		.loc 18 186 7 view .LVU2370
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10269              		.loc 18 186 7 is_stmt 0 view .LVU2371
 10270              	.LBE7353:
 10271              	.LBB7354:
 10272              	.LBI7354:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10273              		.loc 18 200 7 is_stmt 1 view .LVU2372
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10274              		.loc 18 200 7 is_stmt 0 view .LVU2373
 10275              	.LBE7354:
 10276              	.LBE7355:
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 10277              		.loc 18 718 2 view .LVU2374
 10278 0080 AB42     		cmp	r3, r5
 10279 0082 00F0BC80 		beq	.L615
 10280              	.LVL690:
 10281              	.LBB7356:
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 10282              		.loc 18 732 6 view .LVU2375
 10283 0086 04F10802 		add	r2, r4, #8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 402


 10284 008a 9042     		cmp	r0, r2
 10285 008c 63D0     		beq	.L616
 10286              	.LVL691:
 10287              	.LBB7357:
 10288              	.LBB7358:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10289              		.loc 18 211 31 view .LVU2376
 10290 008e 049A     		ldr	r2, [sp, #16]
 10291              	.LBE7358:
 10292              	.LBE7357:
 10293              	.LBB7361:
 10294              	.LBB7362:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10295              		.loc 18 179 26 view .LVU2377
 10296 0090 2360     		str	r3, [r4]
 10297              	.LBE7362:
 10298              	.LBE7361:
 10299              	.LBB7363:
 10300              	.LBB7364:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10301              		.loc 18 183 26 view .LVU2378
 10302 0092 039B     		ldr	r3, [sp, #12]
 10303 0094 6360     		str	r3, [r4, #4]
 10304              	.LBE7364:
 10305              	.LBE7363:
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 10306              		.loc 18 738 18 view .LVU2379
 10307 0096 A368     		ldr	r3, [r4, #8]
 10308              	.LVL692:
 10309              	.LBB7366:
 10310              	.LBI7361:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 10311              		.loc 18 178 7 is_stmt 1 view .LVU2380
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 10312              		.loc 18 178 7 is_stmt 0 view .LVU2381
 10313              	.LBE7366:
 10314              	.LBB7367:
 10315              	.LBI7367:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 10316              		.loc 18 907 7 is_stmt 1 view .LVU2382
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 10317              		.loc 18 907 7 is_stmt 0 view .LVU2383
 10318              	.LBE7367:
 10319              	.LBB7368:
 10320              	.LBI7363:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 10321              		.loc 18 182 7 is_stmt 1 view .LVU2384
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 10322              		.loc 18 182 7 is_stmt 0 view .LVU2385
 10323              	.LBE7368:
 10324              	.LBB7369:
 10325              	.LBI7357:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 10326              		.loc 18 210 7 is_stmt 1 view .LVU2386
 10327              	.LBB7359:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10328              		.loc 18 211 31 is_stmt 0 view .LVU2387
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 403


 10329 0098 A260     		str	r2, [r4, #8]
 10330              	.LVL693:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10331              		.loc 18 211 31 view .LVU2388
 10332              	.LBE7359:
 10333              	.LBE7369:
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 10334              		.loc 18 747 6 view .LVU2389
 10335 009a 0028     		cmp	r0, #0
 10336 009c 60D0     		beq	.L584
 10337              	.LVL694:
 10338              	.LBB7370:
 10339              	.LBI7370:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 10340              		.loc 18 178 7 is_stmt 1 view .LVU2390
 10341              	.LBB7371:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10342              		.loc 18 179 26 is_stmt 0 view .LVU2391
 10343 009e 0290     		str	r0, [sp, #8]
 10344              	.LVL695:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10345              		.loc 18 179 26 view .LVU2392
 10346              	.LBE7371:
 10347              	.LBE7370:
 10348              	.LBB7372:
 10349              	.LBI7372:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 10350              		.loc 18 210 7 is_stmt 1 view .LVU2393
 10351              	.LBB7373:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10352              		.loc 18 211 31 is_stmt 0 view .LVU2394
 10353 00a0 0493     		str	r3, [sp, #16]
 10354              	.LVL696:
 10355              	.L582:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10356              		.loc 18 211 31 view .LVU2395
 10357              	.LBE7373:
 10358              	.LBE7372:
 10359              	.LBE7356:
 10360              	.LBE7422:
 10361              	.LBB7423:
 10362              	.LBI7423:
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 10363              		.loc 18 994 7 is_stmt 1 view .LVU2396
 10364              	.LBB7424:
 10365              	.LBI7424:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10366              		.loc 18 214 7 view .LVU2397
 10367              	.LBB7425:
 10368              	.LBI7425:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 10369              		.loc 18 182 7 view .LVU2398
 10370              	.LBB7426:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10371              		.loc 18 183 26 is_stmt 0 view .LVU2399
 10372 00a2 0023     		movs	r3, #0
 10373 00a4 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 404


 10374              	.LVL697:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10375              		.loc 18 183 26 view .LVU2400
 10376              	.LBE7426:
 10377              	.LBE7425:
 10378              	.LBB7427:
 10379              	.LBI7427:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10380              		.loc 18 186 7 is_stmt 1 view .LVU2401
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10381              		.loc 18 186 7 is_stmt 0 view .LVU2402
 10382              	.LBE7427:
 10383              	.LBB7429:
 10384              	.LBI7429:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 10385              		.loc 21 321 7 is_stmt 1 view .LVU2403
 10386              	.LBB7430:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10387              		.loc 21 322 9 view .LVU2404
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10388              		.loc 21 322 14 is_stmt 0 view .LVU2405
 10389 00a6 0370     		strb	r3, [r0]
 10390              	.LVL698:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10391              		.loc 21 322 14 view .LVU2406
 10392              	.LBE7430:
 10393              	.LBE7429:
 10394              	.LBE7424:
 10395              	.LBE7423:
 10396              	.LBE7437:
 10397              	.LBB7438:
 10398              	.LBI7438:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10399              		.loc 18 657 7 is_stmt 1 view .LVU2407
 10400              	.LBB7439:
 10401              	.LBB7440:
 10402              	.LBI7440:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10403              		.loc 18 229 7 view .LVU2408
 10404              	.LBB7441:
 10405              	.LBB7442:
 10406              	.LBI7442:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10407              		.loc 18 221 7 view .LVU2409
 10408              	.LBB7443:
 10409              	.LBI7443:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10410              		.loc 18 186 7 view .LVU2410
 10411              	.LBB7444:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10412              		.loc 18 187 28 is_stmt 0 view .LVU2411
 10413 00a8 0298     		ldr	r0, [sp, #8]
 10414              	.LVL699:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10415              		.loc 18 187 28 view .LVU2412
 10416              	.LBE7444:
 10417              	.LBE7443:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 405


 10418              	.LBB7445:
 10419              	.LBI7445:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10420              		.loc 18 200 7 is_stmt 1 view .LVU2413
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10421              		.loc 18 200 7 is_stmt 0 view .LVU2414
 10422              	.LBE7445:
 10423              	.LBE7442:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10424              		.loc 18 231 2 view .LVU2415
 10425 00aa A842     		cmp	r0, r5
 10426 00ac 03D0     		beq	.L585
 10427              	.LVL700:
 10428              	.LBB7446:
 10429              	.LBI7446:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10430              		.loc 18 236 7 is_stmt 1 view .LVU2416
 10431              	.LBB7447:
 10432              	.LBB7448:
 10433              	.LBI7448:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10434              		.loc 25 491 7 view .LVU2417
 10435              	.LBB7449:
 10436              	.LBI7449:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10437              		.loc 20 120 7 view .LVU2418
 10438              	.LBE7449:
 10439              	.LBE7448:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10440              		.loc 18 237 34 is_stmt 0 view .LVU2419
 10441 00ae 0499     		ldr	r1, [sp, #16]
 10442              	.LBB7452:
 10443              	.LBB7451:
 10444              	.LBB7450:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10445              		.loc 20 133 19 view .LVU2420
 10446 00b0 0131     		adds	r1, r1, #1
 10447              	.LVL701:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10448              		.loc 20 133 19 view .LVU2421
 10449 00b2 FFF7FEFF 		bl	_ZdlPvj
 10450              	.LVL702:
 10451              	.L585:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10452              		.loc 20 133 19 view .LVU2422
 10453              	.LBE7450:
 10454              	.LBE7451:
 10455              	.LBE7452:
 10456              	.LBE7447:
 10457              	.LBE7446:
 10458              	.LBE7441:
 10459              	.LBE7440:
 10460              	.LBB7453:
 10461              	.LBI7453:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10462              		.loc 18 150 14 is_stmt 1 view .LVU2423
 10463              	.LBB7454:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 406


 10464              	.LBI7454:
 10465              		.loc 19 162 7 view .LVU2424
 10466              	.LBB7455:
 10467              	.LBI7455:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10468              		.loc 20 89 7 view .LVU2425
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10469              		.loc 20 89 7 is_stmt 0 view .LVU2426
 10470              	.LBE7455:
 10471              	.LBE7454:
 10472              	.LBE7453:
 10473              	.LBE7439:
 10474              	.LBE7438:
 247:Jellybeans.cpp ****         listSize--;
 10475              		.loc 17 247 9 is_stmt 1 view .LVU2427
 248:Jellybeans.cpp ****         patch.display.DrawLine(0, 53, 128, 53, true);
 10476              		.loc 17 248 9 view .LVU2428
 10477              	.LBB7456:
 10478              	.LBI7456:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 10479              		.loc 5 221 10 view .LVU2429
 10480              	.LBB7457:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 10481              		.loc 5 239 26 view .LVU2430
 10482 00b6 624B     		ldr	r3, .L622+16
 10483 00b8 03F18001 		add	r1, r3, #128
 10484              	.LVL703:
 10485              	.L586:
 10486              	.LBB7458:
 10487              	.LBI7458:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 10488              		.loc 4 41 10 view .LVU2431
 10489              	.LBB7459:
 10490              	.LBI7459:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10491              		.loc 14 239 10 view .LVU2432
 10492              	.LBB7460:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10493              		.loc 14 244 42 is_stmt 0 view .LVU2433
 10494 00bc 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
 10495              	.LVL704:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10496              		.loc 14 244 42 view .LVU2434
 10497 00c0 42F02002 		orr	r2, r2, #32
 10498              	.LBE7460:
 10499              	.LBE7459:
 10500              	.LBE7458:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 10501              		.loc 5 239 26 view .LVU2435
 10502 00c4 9942     		cmp	r1, r3
 10503              	.LBB7463:
 10504              	.LBB7462:
 10505              	.LBB7461:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10506              		.loc 14 244 42 view .LVU2436
 10507 00c6 1A70     		strb	r2, [r3]
 10508              	.LVL705:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 407


 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10509              		.loc 14 244 42 view .LVU2437
 10510              	.LBE7461:
 10511              	.LBE7462:
 10512              	.LBE7463:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 10513              		.loc 5 239 26 is_stmt 1 view .LVU2438
 10514 00c8 F8D1     		bne	.L586
 10515              	.LVL706:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 10516              		.loc 5 239 26 is_stmt 0 view .LVU2439
 10517              	.LBE7457:
 10518              	.LBE7456:
 249:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 10519              		.loc 17 249 9 is_stmt 1 view .LVU2440
 10520              	.LBB7464:
 10521              	.LBI7464:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 10522              		.loc 18 448 7 view .LVU2441
 10523              	.LBB7465:
 10524              	.LBB7466:
 10525              	.LBB7467:
 10526              	.LBI7467:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10527              		.loc 18 190 7 view .LVU2442
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10528              		.loc 18 190 7 is_stmt 0 view .LVU2443
 10529              	.LBE7467:
 10530              	.LBB7468:
 10531              	.LBI7468:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 10532              		.loc 18 290 7 is_stmt 1 view .LVU2444
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 10533              		.loc 18 290 7 is_stmt 0 view .LVU2445
 10534              	.LBE7468:
 10535              	.LBB7469:
 10536              	.LBI7469:
 10537              		.file 35 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\allo
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 408


  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /** @file ext/alloc_traits.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #pragma GCC system_header
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/alloc_traits.h>
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** {
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /**
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @ingroup allocators
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** */
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   struct __alloc_traits
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   : std::allocator_traits<_Alloc>
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   {
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef _Alloc allocator_type;
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef value_type&                             reference;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef const value_type&                       const_reference;
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::allocate;
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::deallocate;
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::construct;
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::destroy;
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::max_size;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   private:
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       using __is_custom_pointer
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   public:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 409


  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload construct for non-standard pointer types
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       {
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       }
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload destroy for non-standard pointer types
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
 10538              		.loc 35 97 29 is_stmt 1 view .LVU2446
 10539              	.LBB7470:
 10540              	.LBI7470:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 10541              		.loc 25 558 7 view .LVU2447
 10542              	.LBB7471:
 10543              	.LBI7471:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10544              		.loc 19 147 7 view .LVU2448
 10545              	.LBB7472:
 10546              	.LBI7472:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10547              		.loc 20 82 7 view .LVU2449
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10548              		.loc 20 82 7 is_stmt 0 view .LVU2450
 10549              	.LBE7472:
 10550              	.LBE7471:
 10551              	.LBE7470:
 10552              	.LBE7469:
 10553              	.LBB7473:
 10554              	.LBI7473:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 10555              		.loc 18 159 2 is_stmt 1 view .LVU2451
 10556              	.LBB7474:
 10557              	.LBB7475:
 10558              	.LBB7476:
 10559              	.LBI7476:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 10560              		.loc 34 101 5 view .LVU2452
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 10561              		.loc 34 101 5 is_stmt 0 view .LVU2453
 10562              	.LBE7476:
 10563              	.LBB7477:
 10564              	.LBI7477:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10565              		.loc 19 147 7 is_stmt 1 view .LVU2454
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 410


 10566              	.LBB7478:
 10567              	.LBI7478:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10568              		.loc 20 82 7 view .LVU2455
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10569              		.loc 20 82 7 is_stmt 0 view .LVU2456
 10570              	.LBE7478:
 10571              	.LBE7477:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 10572              		.loc 18 160 46 view .LVU2457
 10573 00ca 0295     		str	r5, [sp, #8]
 10574              	.LVL707:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 10575              		.loc 18 160 46 view .LVU2458
 10576              	.LBE7475:
 10577              	.LBE7474:
 10578              	.LBE7473:
 10579              	.LBB7479:
 10580              	.LBI7479:
 10581              		.loc 19 162 7 is_stmt 1 view .LVU2459
 10582              	.LBB7480:
 10583              	.LBI7480:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10584              		.loc 20 89 7 view .LVU2460
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10585              		.loc 20 89 7 is_stmt 0 view .LVU2461
 10586              	.LBE7480:
 10587              	.LBE7479:
 10588              	.LBB7481:
 10589              	.LBI7481:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10590              		.loc 18 186 7 is_stmt 1 view .LVU2462
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10591              		.loc 18 186 7 is_stmt 0 view .LVU2463
 10592              	.LBE7481:
 10593              	.LBB7482:
 10594              	.LBI7482:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10595              		.loc 18 186 7 is_stmt 1 view .LVU2464
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10596              		.loc 18 186 7 is_stmt 0 view .LVU2465
 10597              	.LBE7482:
 10598              	.LBB7483:
 10599              	.LBI7483:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 10600              		.loc 18 907 7 is_stmt 1 view .LVU2466
 10601              	.LBB7484:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10602              		.loc 18 908 16 is_stmt 0 view .LVU2467
 10603 00cc D4E90064 		ldrd	r6, r4, [r4]
 10604              	.LVL708:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10605              		.loc 18 908 16 view .LVU2468
 10606              	.LBE7484:
 10607              	.LBE7483:
 10608              	.LBB7485:
 10609              	.LBI7485:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 411


 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 10610              		.loc 18 263 9 is_stmt 1 view .LVU2469
 10611              	.LBB7486:
 10612              	.LBB7487:
 10613              	.LBI7487:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 10614              		.loc 18 243 9 view .LVU2470
 10615              	.LBB7488:
 10616              	.LBB7489:
 10617              	.LBI7489:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 10618              		.loc 22 206 7 view .LVU2471
 10619              	.LBB7490:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 10620              		.loc 22 211 42 is_stmt 0 view .LVU2472
 10621 00d0 E642     		cmn	r6, r4
 10622 00d2 02D0     		beq	.L587
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 10623              		.loc 22 211 42 view .LVU2473
 10624 00d4 002E     		cmp	r6, #0
 10625 00d6 00F0A880 		beq	.L617
 10626              	.L587:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 10627              		.loc 22 217 2 view .LVU2474
 10628 00da 0F2C     		cmp	r4, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 10629              		.loc 22 215 12 view .LVU2475
 10630 00dc 0194     		str	r4, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 10631              		.loc 22 217 2 view .LVU2476
 10632 00de 7FD8     		bhi	.L618
 10633              	.LVL709:
 10634              	.LBB7491:
 10635              	.LBI7491:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10636              		.loc 18 186 7 is_stmt 1 view .LVU2477
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10637              		.loc 18 186 7 is_stmt 0 view .LVU2478
 10638              	.LBE7491:
 10639              	.LBB7493:
 10640              	.LBI7493:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 10641              		.loc 18 392 7 is_stmt 1 view .LVU2479
 10642              	.LBB7494:
 10643              	.LBI7494:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10644              		.loc 18 346 7 view .LVU2480
 10645              	.LBB7495:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 10646              		.loc 18 348 2 is_stmt 0 view .LVU2481
 10647 00e0 012C     		cmp	r4, #1
 10648 00e2 7AD1     		bne	.L590
 10649              	.LVL710:
 10650              	.LBB7496:
 10651              	.LBI7496:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 10652              		.loc 21 321 7 is_stmt 1 view .LVU2482
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 412


 10653              	.LBB7497:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10654              		.loc 21 322 9 view .LVU2483
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10655              		.loc 21 322 16 is_stmt 0 view .LVU2484
 10656 00e4 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10657              		.loc 21 322 22 view .LVU2485
 10658 00e6 2A46     		mov	r2, r5
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10659              		.loc 21 322 14 view .LVU2486
 10660 00e8 8DF81030 		strb	r3, [sp, #16]
 10661              	.LVL711:
 10662              	.L591:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10663              		.loc 21 322 14 view .LVU2487
 10664              	.LBE7497:
 10665              	.LBE7496:
 10666              	.LBE7495:
 10667              	.LBE7494:
 10668              	.LBE7493:
 10669              	.LBB7513:
 10670              	.LBI7513:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10671              		.loc 18 214 7 is_stmt 1 view .LVU2488
 10672              	.LBB7514:
 10673              	.LBB7515:
 10674              	.LBI7515:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 10675              		.loc 18 182 7 view .LVU2489
 10676              	.LBE7515:
 10677              	.LBB7517:
 10678              	.LBB7518:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10679              		.loc 21 322 14 is_stmt 0 view .LVU2490
 10680 00ec 0023     		movs	r3, #0
 10681              	.LBE7518:
 10682              	.LBE7517:
 10683              	.LBE7514:
 10684              	.LBE7513:
 10685              	.LBE7490:
 10686              	.LBE7489:
 10687              	.LBE7488:
 10688              	.LBE7487:
 10689              	.LBE7486:
 10690              	.LBE7485:
 10691              	.LBE7466:
 10692              	.LBE7465:
 10693              	.LBE7464:
 249:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 10694              		.loc 17 249 19 view .LVU2491
 10695 00ee 02A8     		add	r0, sp, #8
 10696              	.LVL712:
 10697              	.LBB7577:
 10698              	.LBB7573:
 10699              	.LBB7569:
 10700              	.LBB7565:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 413


 10701              	.LBB7561:
 10702              	.LBB7557:
 10703              	.LBB7553:
 10704              	.LBB7549:
 10705              	.LBB7545:
 10706              	.LBB7530:
 10707              	.LBB7527:
 10708              	.LBB7521:
 10709              	.LBB7516:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10710              		.loc 18 183 26 view .LVU2492
 10711 00f0 0394     		str	r4, [sp, #12]
 10712              	.LVL713:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10713              		.loc 18 183 26 view .LVU2493
 10714              	.LBE7516:
 10715              	.LBE7521:
 10716              	.LBB7522:
 10717              	.LBI7522:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10718              		.loc 18 186 7 is_stmt 1 view .LVU2494
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10719              		.loc 18 186 7 is_stmt 0 view .LVU2495
 10720              	.LBE7522:
 10721              	.LBB7524:
 10722              	.LBI7517:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 10723              		.loc 21 321 7 is_stmt 1 view .LVU2496
 10724              	.LBB7519:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10725              		.loc 21 322 9 view .LVU2497
 10726              	.LBE7519:
 10727              	.LBE7524:
 10728              	.LBE7527:
 10729              	.LBE7530:
 10730              	.LBE7545:
 10731              	.LBE7549:
 10732              	.LBE7553:
 10733              	.LBE7557:
 10734              	.LBE7561:
 10735              	.LBE7565:
 10736              	.LBE7569:
 10737              	.LBE7573:
 10738              	.LBE7577:
 249:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 10739              		.loc 17 249 19 is_stmt 0 view .LVU2498
 10740 00f2 0221     		movs	r1, #2
 10741              	.LBB7578:
 10742              	.LBB7574:
 10743              	.LBB7570:
 10744              	.LBB7566:
 10745              	.LBB7562:
 10746              	.LBB7558:
 10747              	.LBB7554:
 10748              	.LBB7550:
 10749              	.LBB7546:
 10750              	.LBB7531:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 414


 10751              	.LBB7528:
 10752              	.LBB7525:
 10753              	.LBB7520:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10754              		.loc 21 322 14 view .LVU2499
 10755 00f4 1355     		strb	r3, [r2, r4]
 10756              	.LVL714:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10757              		.loc 21 322 14 view .LVU2500
 10758              	.LBE7520:
 10759              	.LBE7525:
 10760              	.LBE7528:
 10761              	.LBE7531:
 10762              	.LBE7546:
 10763              	.LBE7550:
 10764              	.LBE7554:
 10765              	.LBE7558:
 10766              	.LBE7562:
 10767              	.LBE7566:
 10768              	.LBE7570:
 10769              	.LBE7574:
 10770              	.LBE7578:
 249:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 10771              		.loc 17 249 19 view .LVU2501
 10772 00f6 3622     		movs	r2, #54
 10773 00f8 FFF7FEFF 		bl	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 10774              	.LVL715:
 10775              	.LBB7579:
 10776              	.LBI7579:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10777              		.loc 18 657 7 is_stmt 1 view .LVU2502
 10778              	.LBB7580:
 10779              	.LBB7581:
 10780              	.LBI7581:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10781              		.loc 18 229 7 view .LVU2503
 10782              	.LBB7582:
 10783              	.LBB7583:
 10784              	.LBI7583:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10785              		.loc 18 221 7 view .LVU2504
 10786              	.LBB7584:
 10787              	.LBI7584:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10788              		.loc 18 186 7 view .LVU2505
 10789              	.LBB7585:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10790              		.loc 18 187 28 is_stmt 0 view .LVU2506
 10791 00fc 0298     		ldr	r0, [sp, #8]
 10792              	.LVL716:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10793              		.loc 18 187 28 view .LVU2507
 10794              	.LBE7585:
 10795              	.LBE7584:
 10796              	.LBB7586:
 10797              	.LBI7586:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 415


 10798              		.loc 18 200 7 is_stmt 1 view .LVU2508
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10799              		.loc 18 200 7 is_stmt 0 view .LVU2509
 10800              	.LBE7586:
 10801              	.LBE7583:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10802              		.loc 18 231 2 view .LVU2510
 10803 00fe A842     		cmp	r0, r5
 10804 0100 03D0     		beq	.L592
 10805              	.LVL717:
 10806              	.LBB7587:
 10807              	.LBI7587:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10808              		.loc 18 236 7 is_stmt 1 view .LVU2511
 10809              	.LBB7588:
 10810              	.LBB7589:
 10811              	.LBI7589:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10812              		.loc 25 491 7 view .LVU2512
 10813              	.LBB7590:
 10814              	.LBI7590:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10815              		.loc 20 120 7 view .LVU2513
 10816              	.LBE7590:
 10817              	.LBE7589:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10818              		.loc 18 237 34 is_stmt 0 view .LVU2514
 10819 0102 0499     		ldr	r1, [sp, #16]
 10820              	.LBB7593:
 10821              	.LBB7592:
 10822              	.LBB7591:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10823              		.loc 20 133 19 view .LVU2515
 10824 0104 0131     		adds	r1, r1, #1
 10825              	.LVL718:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10826              		.loc 20 133 19 view .LVU2516
 10827 0106 FFF7FEFF 		bl	_ZdlPvj
 10828              	.LVL719:
 10829              	.L592:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10830              		.loc 20 133 19 view .LVU2517
 10831              	.LBE7591:
 10832              	.LBE7592:
 10833              	.LBE7593:
 10834              	.LBE7588:
 10835              	.LBE7587:
 10836              	.LBE7582:
 10837              	.LBE7581:
 10838              	.LBB7594:
 10839              	.LBI7594:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10840              		.loc 18 150 14 is_stmt 1 view .LVU2518
 10841              	.LBB7595:
 10842              	.LBI7595:
 10843              		.loc 19 162 7 view .LVU2519
 10844              	.LBB7596:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 416


 10845              	.LBI7596:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10846              		.loc 20 89 7 view .LVU2520
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10847              		.loc 20 89 7 is_stmt 0 view .LVU2521
 10848              	.LBE7596:
 10849              	.LBE7595:
 10850              	.LBE7594:
 10851              	.LBE7580:
 10852              	.LBE7579:
 253:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10853              		.loc 17 253 5 is_stmt 1 view .LVU2522
 10854              	.LBB7597:
 253:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10855              		.loc 17 253 13 is_stmt 0 view .LVU2523
 10856 010a 4E4F     		ldr	r7, .L622+20
 10857 010c 4E4E     		ldr	r6, .L622+24
 10858 010e 3C68     		ldr	r4, [r7]
 10859              	.LVL720:
 253:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10860              		.loc 17 253 28 is_stmt 1 view .LVU2524
 10861 0110 04EB8403 		add	r3, r4, r4, lsl #2
 10862 0114 06EB0316 		add	r6, r6, r3, lsl #4
 10863 0118 05E0     		b	.L595
 10864              	.L593:
 253:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10865              		.loc 17 253 5 discriminator 2 view .LVU2525
 253:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10866              		.loc 17 253 38 is_stmt 0 discriminator 2 view .LVU2526
 10867 011a 3B68     		ldr	r3, [r7]
 253:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10868              		.loc 17 253 5 discriminator 2 view .LVU2527
 10869 011c 0134     		adds	r4, r4, #1
 10870              	.LVL721:
 253:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10871              		.loc 17 253 28 is_stmt 1 discriminator 2 view .LVU2528
 10872 011e 5036     		adds	r6, r6, #80
 253:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10873              		.loc 17 253 38 is_stmt 0 discriminator 2 view .LVU2529
 10874 0120 0433     		adds	r3, r3, #4
 253:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10875              		.loc 17 253 28 discriminator 2 view .LVU2530
 10876 0122 A342     		cmp	r3, r4
 10877 0124 20DD     		ble	.L619
 10878              	.L595:
 254:Jellybeans.cpp ****         if (i < (int) menuItems.size()){
 10879              		.loc 17 254 9 is_stmt 1 view .LVU2531
 10880 0126 092C     		cmp	r4, #9
 10881 0128 F7DC     		bgt	.L593
 255:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10882              		.loc 17 255 13 view .LVU2532
 10883              	.LVL722:
 10884              	.LBB7598:
 10885              	.LBI7598:
 10886              		.loc 24 185 7 view .LVU2533
 10887              	.LBB7599:
 10888              	.LBI7599:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 417


  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 10889              		.loc 24 55 7 view .LVU2534
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 10890              		.loc 24 55 7 is_stmt 0 view .LVU2535
 10891              	.LBE7599:
 10892              	.LBE7598:
 255:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10893              		.loc 17 255 50 view .LVU2536
 10894 012a 3146     		mov	r1, r6
 10895 012c 02A8     		add	r0, sp, #8
 10896              	.LVL723:
 255:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10897              		.loc 17 255 50 view .LVU2537
 10898 012e FFF7FEFF 		bl	_ZN10jellybeans8MenuItem12displayValueB5cxx11Ev
 10899              	.LVL724:
 255:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10900              		.loc 17 255 67 view .LVU2538
 10901 0132 3B68     		ldr	r3, [r7]
 255:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10902              		.loc 17 255 23 view .LVU2539
 10903 0134 02A8     		add	r0, sp, #8
 10904              	.LVL725:
 255:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10905              		.loc 17 255 23 view .LVU2540
 10906 0136 0721     		movs	r1, #7
 255:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10907              		.loc 17 255 67 view .LVU2541
 10908 0138 E31A     		subs	r3, r4, r3
 255:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10909              		.loc 17 255 78 view .LVU2542
 10910 013a 03EB8303 		add	r3, r3, r3, lsl #2
 10911 013e 5A00     		lsls	r2, r3, #1
 255:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10912              		.loc 17 255 23 view .LVU2543
 10913 0140 0C32     		adds	r2, r2, #12
 10914 0142 FFF7FEFF 		bl	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 10915              	.LVL726:
 10916              	.LBB7600:
 10917              	.LBI7600:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10918              		.loc 18 657 7 is_stmt 1 view .LVU2544
 10919              	.LBB7601:
 10920              	.LBB7602:
 10921              	.LBI7602:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10922              		.loc 18 229 7 view .LVU2545
 10923              	.LBB7603:
 10924              	.LBB7604:
 10925              	.LBI7604:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10926              		.loc 18 221 7 view .LVU2546
 10927              	.LBB7605:
 10928              	.LBI7605:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10929              		.loc 18 186 7 view .LVU2547
 10930              	.LBB7606:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 418


 10931              		.loc 18 187 28 is_stmt 0 view .LVU2548
 10932 0146 0298     		ldr	r0, [sp, #8]
 10933              	.LVL727:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10934              		.loc 18 187 28 view .LVU2549
 10935              	.LBE7606:
 10936              	.LBE7605:
 10937              	.LBB7607:
 10938              	.LBI7607:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10939              		.loc 18 200 7 is_stmt 1 view .LVU2550
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10940              		.loc 18 200 7 is_stmt 0 view .LVU2551
 10941              	.LBE7607:
 10942              	.LBE7604:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10943              		.loc 18 231 2 view .LVU2552
 10944 0148 A842     		cmp	r0, r5
 10945 014a E6D0     		beq	.L593
 10946              	.LVL728:
 10947              	.LBB7608:
 10948              	.LBI7608:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10949              		.loc 18 236 7 is_stmt 1 view .LVU2553
 10950              	.LBB7609:
 10951              	.LBB7610:
 10952              	.LBI7610:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10953              		.loc 25 491 7 view .LVU2554
 10954              	.LBB7611:
 10955              	.LBI7611:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10956              		.loc 20 120 7 view .LVU2555
 10957              	.LBE7611:
 10958              	.LBE7610:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10959              		.loc 18 237 34 is_stmt 0 view .LVU2556
 10960 014c 0499     		ldr	r1, [sp, #16]
 10961              	.LBB7614:
 10962              	.LBB7613:
 10963              	.LBB7612:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10964              		.loc 20 133 19 view .LVU2557
 10965 014e 0131     		adds	r1, r1, #1
 10966              	.LVL729:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10967              		.loc 20 133 19 view .LVU2558
 10968 0150 FFF7FEFF 		bl	_ZdlPvj
 10969              	.LVL730:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10970              		.loc 20 133 19 view .LVU2559
 10971              	.LBE7612:
 10972              	.LBE7613:
 10973              	.LBE7614:
 10974              	.LBE7609:
 10975              	.LBE7608:
 10976              	.LBE7603:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 419


 10977              	.LBE7602:
 10978              	.LBB7618:
 10979              	.LBI7618:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10980              		.loc 18 150 14 is_stmt 1 view .LVU2560
 10981              	.LBB7619:
 10982              	.LBI7619:
 10983              		.loc 19 162 7 view .LVU2561
 10984              	.LBB7620:
 10985              	.LBI7620:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10986              		.loc 20 89 7 view .LVU2562
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10987              		.loc 20 89 7 is_stmt 0 view .LVU2563
 10988              	.LBE7620:
 10989              	.LBE7619:
 10990              	.LBE7618:
 10991              	.LBB7621:
 10992              	.LBB7617:
 10993              	.LBB7616:
 10994              	.LBB7615:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10995              		.loc 18 237 79 view .LVU2564
 10996 0154 E1E7     		b	.L593
 10997              	.LVL731:
 10998              	.L616:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10999              		.loc 18 237 79 view .LVU2565
 11000              	.LBE7615:
 11001              	.LBE7616:
 11002              	.LBE7617:
 11003              	.LBE7621:
 11004              	.LBE7601:
 11005              	.LBE7600:
 11006              	.LBE7597:
 11007              	.LBB7622:
 11008              	.LBB7433:
 11009              	.LBB7379:
 11010              	.LBB7374:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 11011              		.loc 18 178 7 is_stmt 1 view .LVU2566
 11012              	.LBE7374:
 11013              	.LBB7375:
 11014              	.LBB7365:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11015              		.loc 18 183 26 is_stmt 0 view .LVU2567
 11016 0156 039A     		ldr	r2, [sp, #12]
 11017 0158 C4E90032 		strd	r3, r2, [r4]
 11018              	.LVL732:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11019              		.loc 18 183 26 view .LVU2568
 11020              	.LBE7365:
 11021              	.LBE7375:
 11022              	.LBB7376:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 11023              		.loc 18 210 7 is_stmt 1 view .LVU2569
 11024              	.LBB7360:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 420


 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11025              		.loc 18 211 31 is_stmt 0 view .LVU2570
 11026 015c 049B     		ldr	r3, [sp, #16]
 11027              	.LVL733:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11028              		.loc 18 211 31 view .LVU2571
 11029 015e A360     		str	r3, [r4, #8]
 11030              	.LVL734:
 11031              	.L584:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11032              		.loc 18 211 31 view .LVU2572
 11033              	.LBE7360:
 11034              	.LBE7376:
 11035              	.LBB7377:
 11036              	.LBI7377:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 11037              		.loc 18 178 7 is_stmt 1 view .LVU2573
 11038              	.LBB7378:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11039              		.loc 18 179 26 is_stmt 0 view .LVU2574
 11040 0160 0295     		str	r5, [sp, #8]
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11041              		.loc 18 179 33 view .LVU2575
 11042 0162 04AD     		add	r5, sp, #16
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11043              		.loc 18 179 33 view .LVU2576
 11044 0164 2846     		mov	r0, r5
 11045 0166 9CE7     		b	.L582
 11046              	.LVL735:
 11047              	.L619:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11048              		.loc 18 179 33 view .LVU2577
 11049 0168 324E     		ldr	r6, .L622+4
 11050              	.LBE7378:
 11051              	.LBE7377:
 11052              	.LBE7379:
 11053              	.LBE7433:
 11054              	.LBE7622:
 11055              	.LBB7623:
 253:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 11056              		.loc 17 253 28 view .LVU2578
 11057 016a B024     		movs	r4, #176
 11058              	.LVL736:
 11059              	.L596:
 253:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 11060              		.loc 17 253 28 view .LVU2579
 11061 016c 0025     		movs	r5, #0
 11062              	.LBE7623:
 11063              	.LBB7624:
 11064              	.LBB7625:
 11065              	.LBB7626:
 11066              	.LBB7627:
 11067              	.LBB7628:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11068              		.loc 14 111 23 view .LVU2580
 11069 016e 3748     		ldr	r0, .L622+28
 11070 0170 8DF80840 		strb	r4, [sp, #8]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 421


 11071              	.LVL737:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11072              		.loc 14 111 23 view .LVU2581
 11073              	.LBE7628:
 11074              	.LBI7627:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 11075              		.loc 14 109 10 is_stmt 1 view .LVU2582
 11076              	.LBB7629:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11077              		.loc 14 111 9 view .LVU2583
 11078              	.LBE7629:
 11079              	.LBE7627:
 11080              		.loc 14 270 22 is_stmt 0 view .LVU2584
 11081 0174 0134     		adds	r4, r4, #1
 11082              	.LVL738:
 11083              	.LBB7632:
 11084              	.LBB7630:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11085              		.loc 14 111 23 view .LVU2585
 11086 0176 2946     		mov	r1, r5
 11087 0178 FFF7FEFF 		bl	dsy_gpio_write
 11088              	.LVL739:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11089              		.loc 14 112 9 is_stmt 1 view .LVU2586
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11090              		.loc 14 112 30 is_stmt 0 view .LVU2587
 11091 017c 6423     		movs	r3, #100
 11092 017e 0122     		movs	r2, #1
 11093 0180 02A9     		add	r1, sp, #8
 11094              	.LVL740:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11095              		.loc 14 112 30 view .LVU2588
 11096 0182 3348     		ldr	r0, .L622+32
 11097              	.LVL741:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11098              		.loc 14 112 30 view .LVU2589
 11099              	.LBE7630:
 11100              	.LBE7632:
 11101              		.loc 14 270 22 view .LVU2590
 11102 0184 E4B2     		uxtb	r4, r4
 11103              	.LBB7633:
 11104              	.LBB7631:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11105              		.loc 14 112 30 view .LVU2591
 11106 0186 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 11107              	.LVL742:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11108              		.loc 14 112 30 view .LVU2592
 11109              	.LBE7631:
 11110              	.LBE7633:
 11111              	.LBB7634:
 11112              	.LBB7635:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11113              		.loc 14 111 23 view .LVU2593
 11114 018a 2946     		mov	r1, r5
 11115 018c 2F48     		ldr	r0, .L622+28
 11116 018e 8DF80850 		strb	r5, [sp, #8]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 422


 11117              	.LVL743:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11118              		.loc 14 111 23 view .LVU2594
 11119              	.LBE7635:
 11120              	.LBI7634:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 11121              		.loc 14 109 10 is_stmt 1 view .LVU2595
 11122              	.LBB7636:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11123              		.loc 14 111 9 view .LVU2596
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11124              		.loc 14 111 23 is_stmt 0 view .LVU2597
 11125 0192 FFF7FEFF 		bl	dsy_gpio_write
 11126              	.LVL744:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11127              		.loc 14 112 9 is_stmt 1 view .LVU2598
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11128              		.loc 14 112 30 is_stmt 0 view .LVU2599
 11129 0196 0122     		movs	r2, #1
 11130 0198 6423     		movs	r3, #100
 11131 019a 02A9     		add	r1, sp, #8
 11132              	.LVL745:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11133              		.loc 14 112 30 view .LVU2600
 11134 019c 2C48     		ldr	r0, .L622+32
 11135              	.LVL746:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11136              		.loc 14 112 30 view .LVU2601
 11137 019e FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 11138              	.LVL747:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11139              		.loc 14 112 30 view .LVU2602
 11140 01a2 1023     		movs	r3, #16
 11141              	.LBE7636:
 11142              	.LBE7634:
 11143              	.LBB7637:
 11144              	.LBB7638:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11145              		.loc 14 111 23 view .LVU2603
 11146 01a4 2946     		mov	r1, r5
 11147 01a6 2948     		ldr	r0, .L622+28
 11148 01a8 8DF80830 		strb	r3, [sp, #8]
 11149              	.LVL748:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11150              		.loc 14 111 23 view .LVU2604
 11151              	.LBE7638:
 11152              	.LBI7637:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 11153              		.loc 14 109 10 is_stmt 1 view .LVU2605
 11154              	.LBB7639:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11155              		.loc 14 111 9 view .LVU2606
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11156              		.loc 14 111 23 is_stmt 0 view .LVU2607
 11157 01ac FFF7FEFF 		bl	dsy_gpio_write
 11158              	.LVL749:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 423


 11159              		.loc 14 112 9 is_stmt 1 view .LVU2608
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11160              		.loc 14 112 30 is_stmt 0 view .LVU2609
 11161 01b0 6423     		movs	r3, #100
 11162 01b2 0122     		movs	r2, #1
 11163 01b4 02A9     		add	r1, sp, #8
 11164              	.LVL750:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11165              		.loc 14 112 30 view .LVU2610
 11166 01b6 2648     		ldr	r0, .L622+32
 11167              	.LVL751:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11168              		.loc 14 112 30 view .LVU2611
 11169 01b8 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 11170              	.LVL752:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11171              		.loc 14 112 30 view .LVU2612
 11172              	.LBE7639:
 11173              	.LBE7637:
 11174              	.LBB7640:
 11175              	.LBI7640:
 115:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 11176              		.loc 14 115 10 is_stmt 1 view .LVU2613
 11177              	.LBB7641:
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 11178              		.loc 14 117 9 view .LVU2614
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 11179              		.loc 14 117 23 is_stmt 0 view .LVU2615
 11180 01bc 0121     		movs	r1, #1
 11181 01be 2348     		ldr	r0, .L622+28
 11182 01c0 FFF7FEFF 		bl	dsy_gpio_write
 11183              	.LVL753:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11184              		.loc 14 118 9 is_stmt 1 view .LVU2616
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11185              		.loc 14 118 30 is_stmt 0 view .LVU2617
 11186 01c4 8022     		movs	r2, #128
 11187 01c6 3146     		mov	r1, r6
 11188 01c8 6423     		movs	r3, #100
 11189 01ca 2148     		ldr	r0, .L622+32
 11190              	.LVL754:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11191              		.loc 14 118 30 view .LVU2618
 11192              	.LBE7641:
 11193              	.LBE7640:
 11194              		.loc 14 270 22 view .LVU2619
 11195 01cc 1644     		add	r6, r6, r2
 11196              	.LVL755:
 11197              	.LBB7643:
 11198              	.LBB7642:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11199              		.loc 14 118 30 view .LVU2620
 11200 01ce FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 11201              	.LVL756:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11202              		.loc 14 118 30 view .LVU2621
 11203              	.LBE7642:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 424


 11204              	.LBE7643:
 11205              		.loc 14 270 9 is_stmt 1 view .LVU2622
 11206              		.loc 14 270 22 view .LVU2623
 11207 01d2 B82C     		cmp	r4, #184
 11208 01d4 CAD1     		bne	.L596
 11209              	.LBE7626:
 11210              	.LBE7625:
 11211              	.LBE7624:
 261:Jellybeans.cpp **** }
 11212              		.loc 17 261 1 is_stmt 0 view .LVU2624
 11213 01d6 09B0     		add	sp, sp, #36
 11214              		.cfi_remember_state
 11215              		.cfi_def_cfa_offset 20
 11216              		@ sp needed
 11217 01d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 11218              	.LVL757:
 11219              	.L590:
 11220              		.cfi_restore_state
 11221              	.LBB7644:
 11222              	.LBB7575:
 11223              	.LBB7571:
 11224              	.LBB7567:
 11225              	.LBB7563:
 11226              	.LBB7559:
 11227              	.LBB7555:
 11228              	.LBB7551:
 11229              	.LBB7547:
 11230              	.LBB7532:
 11231              	.LBB7510:
 11232              	.LBB7507:
 11233              	.LBB7498:
 11234              	.LBI7498:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11235              		.loc 18 346 7 is_stmt 1 view .LVU2625
 11236              	.LBB7499:
 11237              	.LBI7499:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11238              		.loc 21 387 7 view .LVU2626
 11239              	.LBB7500:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11240              		.loc 21 389 2 view .LVU2627
 11241 01da 24BB     		cbnz	r4, .L620
 11242 01dc 2A46     		mov	r2, r5
 11243 01de 85E7     		b	.L591
 11244              	.LVL758:
 11245              	.L618:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11246              		.loc 21 389 2 is_stmt 0 view .LVU2628
 11247              	.LBE7500:
 11248              	.LBE7499:
 11249              	.LBE7498:
 11250              	.LBE7507:
 11251              	.LBE7510:
 11252              	.LBE7532:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 11253              		.loc 22 219 13 view .LVU2629
 11254 01e0 0022     		movs	r2, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 425


 11255 01e2 01A9     		add	r1, sp, #4
 11256 01e4 02A8     		add	r0, sp, #8
 11257              	.LVL759:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 11258              		.loc 22 219 13 view .LVU2630
 11259 01e6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 11260              	.LVL760:
 11261              	.LBB7533:
 11262              	.LBI7533:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 11263              		.loc 18 178 7 is_stmt 1 view .LVU2631
 11264              	.LBE7533:
 11265              	.LBB7535:
 11266              	.LBB7536:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11267              		.loc 18 211 31 is_stmt 0 view .LVU2632
 11268 01ea 019B     		ldr	r3, [sp, #4]
 11269              	.LBE7536:
 11270              	.LBE7535:
 11271              	.LBB7538:
 11272              	.LBB7534:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11273              		.loc 18 179 26 view .LVU2633
 11274 01ec 0290     		str	r0, [sp, #8]
 11275              	.LVL761:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11276              		.loc 18 179 26 view .LVU2634
 11277              	.LBE7534:
 11278              	.LBE7538:
 11279              	.LBB7539:
 11280              	.LBI7535:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 11281              		.loc 18 210 7 is_stmt 1 view .LVU2635
 11282              	.LBB7537:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11283              		.loc 18 211 31 is_stmt 0 view .LVU2636
 11284 01ee 0493     		str	r3, [sp, #16]
 11285              	.LVL762:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11286              		.loc 18 211 31 view .LVU2637
 11287              	.LBE7537:
 11288              	.LBE7539:
 11289              	.LBB7540:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11290              		.loc 18 186 7 is_stmt 1 view .LVU2638
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11291              		.loc 18 186 7 is_stmt 0 view .LVU2639
 11292              	.LBE7540:
 11293              	.LBB7541:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 11294              		.loc 18 392 7 is_stmt 1 view .LVU2640
 11295              	.LBB7511:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11296              		.loc 18 346 7 view .LVU2641
 11297              	.LBB7508:
 11298              	.LBB7505:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 426


 11299              		.loc 18 346 7 view .LVU2642
 11300              	.LBB7503:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11301              		.loc 21 387 7 view .LVU2643
 11302              	.LBB7501:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11303              		.loc 21 389 2 view .LVU2644
 11304              	.L589:
 11305              		.loc 21 395 2 view .LVU2645
 11306              		.loc 21 395 49 is_stmt 0 view .LVU2646
 11307 01f0 2246     		mov	r2, r4
 11308 01f2 3146     		mov	r1, r6
 11309 01f4 FFF7FEFF 		bl	memcpy
 11310              	.LVL763:
 11311              		.loc 21 395 49 view .LVU2647
 11312              	.LBE7501:
 11313              	.LBE7503:
 11314              	.LBE7505:
 11315              	.LBE7508:
 11316              	.LBE7511:
 11317              	.LBE7541:
 11318              	.LBB7542:
 11319              	.LBB7529:
 11320              	.LBB7526:
 11321              	.LBB7523:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11322              		.loc 18 187 28 view .LVU2648
 11323 01f8 DDE90142 		ldrd	r4, r2, [sp, #4]
 11324              	.LVL764:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11325              		.loc 18 187 28 view .LVU2649
 11326              	.LBE7523:
 11327              	.LBE7526:
 11328              	.LBE7529:
 11329              	.LBE7542:
 11330              	.LBB7543:
 11331              	.LBB7512:
 11332              	.LBB7509:
 11333              	.LBB7506:
 11334              	.LBB7504:
 11335              	.LBB7502:
 11336              		.loc 21 395 66 view .LVU2650
 11337 01fc 76E7     		b	.L591
 11338              	.LVL765:
 11339              	.L615:
 11340              		.loc 21 395 66 view .LVU2651
 11341              	.LBE7502:
 11342              	.LBE7504:
 11343              	.LBE7506:
 11344              	.LBE7509:
 11345              	.LBE7512:
 11346              	.LBE7543:
 11347              	.LBE7547:
 11348              	.LBE7551:
 11349              	.LBE7555:
 11350              	.LBE7559:
 11351              	.LBE7563:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 427


 11352              	.LBE7567:
 11353              	.LBE7571:
 11354              	.LBE7575:
 11355              	.LBE7644:
 11356              	.LBB7645:
 11357              	.LBB7434:
 11358              	.LBB7380:
 11359              	.LBI7380:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11360              		.loc 18 901 7 is_stmt 1 view .LVU2652
 11361              	.LBB7381:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11362              		.loc 18 902 16 is_stmt 0 view .LVU2653
 11363 01fe 039A     		ldr	r2, [sp, #12]
 11364              	.LVL766:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11365              		.loc 18 902 16 view .LVU2654
 11366              	.LBE7381:
 11367              	.LBE7380:
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 11368              		.loc 18 721 6 view .LVU2655
 11369 0200 32B1     		cbz	r2, .L580
 11370              	.LVL767:
 11371              	.LBB7382:
 11372              	.LBI7382:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11373              		.loc 18 346 7 is_stmt 1 view .LVU2656
 11374              	.LBB7383:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 11375              		.loc 18 348 2 is_stmt 0 view .LVU2657
 11376 0202 012A     		cmp	r2, #1
 11377 0204 09D0     		beq	.L621
 11378              	.LVL768:
 11379              	.LBB7384:
 11380              	.LBI7384:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11381              		.loc 18 346 7 is_stmt 1 view .LVU2658
 11382              	.LBB7385:
 11383              	.LBB7386:
 11384              	.LBI7386:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11385              		.loc 21 387 7 view .LVU2659
 11386              	.LBB7387:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11387              		.loc 21 389 2 view .LVU2660
 11388              		.loc 21 395 2 view .LVU2661
 11389              		.loc 21 395 49 is_stmt 0 view .LVU2662
 11390 0206 2946     		mov	r1, r5
 11391 0208 FFF7FEFF 		bl	memcpy
 11392              	.LVL769:
 11393              		.loc 21 395 49 view .LVU2663
 11394              	.LBE7387:
 11395              	.LBE7386:
 11396              	.LBE7385:
 11397              	.LBE7384:
 11398              	.LBE7383:
 11399              	.LBE7382:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 428


 11400              	.LBB7394:
 11401              	.LBB7395:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11402              		.loc 18 902 16 view .LVU2664
 11403 020c 039A     		ldr	r2, [sp, #12]
 11404              	.LBE7395:
 11405              	.LBE7394:
 11406              	.LBB7397:
 11407              	.LBB7398:
 11408              	.LBB7399:
 11409              	.LBB7400:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11410              		.loc 18 187 28 view .LVU2665
 11411 020e 2068     		ldr	r0, [r4]
 11412              	.LVL770:
 11413              	.L580:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11414              		.loc 18 187 28 view .LVU2666
 11415              	.LBE7400:
 11416              	.LBE7399:
 11417              	.LBE7398:
 11418              	.LBE7397:
 11419              	.LBB7414:
 11420              	.LBI7394:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11421              		.loc 18 901 7 is_stmt 1 view .LVU2667
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11422              		.loc 18 901 7 is_stmt 0 view .LVU2668
 11423              	.LBE7414:
 11424              	.LBB7415:
 11425              	.LBI7397:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11426              		.loc 18 214 7 is_stmt 1 view .LVU2669
 11427              	.LBB7411:
 11428              	.LBB7402:
 11429              	.LBI7402:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 11430              		.loc 18 182 7 view .LVU2670
 11431              	.LBE7402:
 11432              	.LBB7404:
 11433              	.LBB7405:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11434              		.loc 21 322 14 is_stmt 0 view .LVU2671
 11435 0210 0023     		movs	r3, #0
 11436              	.LBE7405:
 11437              	.LBE7404:
 11438              	.LBB7407:
 11439              	.LBB7403:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11440              		.loc 18 183 26 view .LVU2672
 11441 0212 6260     		str	r2, [r4, #4]
 11442              	.LVL771:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11443              		.loc 18 183 26 view .LVU2673
 11444              	.LBE7403:
 11445              	.LBE7407:
 11446              	.LBB7408:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 429


 11447              	.LBI7399:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11448              		.loc 18 186 7 is_stmt 1 view .LVU2674
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11449              		.loc 18 186 7 is_stmt 0 view .LVU2675
 11450              	.LBE7408:
 11451              	.LBB7409:
 11452              	.LBI7404:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 11453              		.loc 21 321 7 is_stmt 1 view .LVU2676
 11454              	.LBB7406:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11455              		.loc 21 322 9 view .LVU2677
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11456              		.loc 21 322 14 is_stmt 0 view .LVU2678
 11457 0214 8354     		strb	r3, [r0, r2]
 11458              	.LVL772:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11459              		.loc 21 322 14 view .LVU2679
 11460              	.LBE7406:
 11461              	.LBE7409:
 11462              	.LBE7411:
 11463              	.LBE7415:
 11464              	.LBE7434:
 11465              	.LBB7435:
 11466              	.LBB7432:
 11467              	.LBB7431:
 11468              	.LBB7428:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11469              		.loc 18 187 28 view .LVU2680
 11470 0216 0298     		ldr	r0, [sp, #8]
 11471              	.LBE7428:
 11472              	.LBE7431:
 11473              	.LBE7432:
 11474              	.LBE7435:
 11475              	.LBB7436:
 11476              	.LBB7416:
 11477              	.LBB7412:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11478              		.loc 18 218 7 view .LVU2681
 11479 0218 43E7     		b	.L582
 11480              	.LVL773:
 11481              	.L621:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11482              		.loc 18 218 7 view .LVU2682
 11483              	.LBE7412:
 11484              	.LBE7416:
 11485              	.LBB7417:
 11486              	.LBB7392:
 11487              	.LBB7388:
 11488              	.LBI7388:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 11489              		.loc 21 321 7 is_stmt 1 view .LVU2683
 11490              	.LBB7389:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11491              		.loc 21 322 9 view .LVU2684
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 430


 11492              		.loc 21 322 16 is_stmt 0 view .LVU2685
 11493 021a 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11494              		.loc 21 322 14 view .LVU2686
 11495 021e 0370     		strb	r3, [r0]
 11496              	.LBE7389:
 11497              	.LBE7388:
 11498              	.LBE7392:
 11499              	.LBE7417:
 11500              	.LBB7418:
 11501              	.LBB7396:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11502              		.loc 18 902 16 view .LVU2687
 11503 0220 039A     		ldr	r2, [sp, #12]
 11504              	.LVL774:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11505              		.loc 18 902 16 view .LVU2688
 11506              	.LBE7396:
 11507              	.LBE7418:
 11508              	.LBB7419:
 11509              	.LBB7413:
 11510              	.LBB7410:
 11511              	.LBB7401:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11512              		.loc 18 187 28 view .LVU2689
 11513 0222 2068     		ldr	r0, [r4]
 11514              	.LVL775:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11515              		.loc 18 187 28 view .LVU2690
 11516              	.LBE7401:
 11517              	.LBE7410:
 11518              	.LBE7413:
 11519              	.LBE7419:
 11520              	.LBB7420:
 11521              	.LBB7393:
 11522              	.LBB7391:
 11523              	.LBB7390:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11524              		.loc 21 322 22 view .LVU2691
 11525 0224 F4E7     		b	.L580
 11526              	.LVL776:
 11527              	.L620:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11528              		.loc 21 322 22 view .LVU2692
 11529              	.LBE7390:
 11530              	.LBE7391:
 11531              	.LBE7393:
 11532              	.LBE7420:
 11533              	.LBE7436:
 11534              	.LBE7645:
 11535              	.LBB7646:
 11536              	.LBB7576:
 11537              	.LBB7572:
 11538              	.LBB7568:
 11539              	.LBB7564:
 11540              	.LBB7560:
 11541              	.LBB7556:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 431


 11542              	.LBB7552:
 11543              	.LBB7548:
 11544              	.LBB7544:
 11545              	.LBB7492:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11546              		.loc 18 187 28 view .LVU2693
 11547 0226 2846     		mov	r0, r5
 11548 0228 E2E7     		b	.L589
 11549              	.LVL777:
 11550              	.L617:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11551              		.loc 18 187 28 view .LVU2694
 11552              	.LBE7492:
 11553              	.LBE7544:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 11554              		.loc 22 212 28 view .LVU2695
 11555 022a 0A48     		ldr	r0, .L622+36
 11556 022c FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 11557              	.LVL778:
 11558              	.L623:
 11559              		.align	2
 11560              	.L622:
 11561 0230 00000000 		.word	.LANCHOR0
 11562 0234 B4910000 		.word	patch+37300
 11563 0238 33920000 		.word	patch+37427
 11564 023c 00000000 		.word	.LANCHOR15
 11565 0240 B3940000 		.word	patch+38067
 11566 0244 00000000 		.word	.LANCHOR13
 11567 0248 00000000 		.word	.LANCHOR5
 11568 024c B0910000 		.word	patch+37296
 11569 0250 A8910000 		.word	patch+37288
 11570 0254 00000000 		.word	.LC9
 11571              	.LBE7548:
 11572              	.LBE7552:
 11573              	.LBE7556:
 11574              	.LBE7560:
 11575              	.LBE7564:
 11576              	.LBE7568:
 11577              	.LBE7572:
 11578              	.LBE7576:
 11579              	.LBE7646:
 11580              		.cfi_endproc
 11581              	.LFE5124:
 11583              		.section	.rodata._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16i
 11584              		.align	2
 11585              	.LC10:
 11586 0000 63616E6E 		.ascii	"cannot create std::vector larger than max_size()\000"
 11586      6F742063 
 11586      72656174 
 11586      65207374 
 11586      643A3A76 
 11587              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16ini
 11588              		.align	1
 11589              		.p2align 2,,3
 11590              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_
 11591              		.syntax unified
 11592              		.thumb
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 432


 11593              		.thumb_func
 11594              		.fpu fpv5-d16
 11596              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5
 11597              	.LVL779:
 11598              	.LFB5463:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 11599              		.loc 26 625 7 is_stmt 1 view -0
 11600              		.cfi_startproc
 11601              		@ args = 0, pretend = 0, frame = 16
 11602              		@ frame_needed = 0, uses_anonymous_args = 0
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 11603              		.loc 26 625 7 is_stmt 0 view .LVU2697
 11604 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 11605              		.cfi_def_cfa_offset 32
 11606              		.cfi_offset 4, -32
 11607              		.cfi_offset 5, -28
 11608              		.cfi_offset 6, -24
 11609              		.cfi_offset 7, -20
 11610              		.cfi_offset 8, -16
 11611              		.cfi_offset 9, -12
 11612              		.cfi_offset 10, -8
 11613              		.cfi_offset 14, -4
 11614 0004 84B0     		sub	sp, sp, #16
 11615              		.cfi_def_cfa_offset 48
 11616              	.LBB7744:
 11617              	.LBB7745:
 11618              	.LBB7746:
 11619              	.LBB7747:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 11620              		.loc 26 98 47 view .LVU2698
 11621 0006 0024     		movs	r4, #0
 11622              	.LBE7747:
 11623              	.LBE7746:
 11624              	.LBE7745:
 11625              	.LBE7744:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 11626              		.loc 26 625 7 view .LVU2699
 11627 0008 6B46     		mov	r3, sp
 11628              	.LVL780:
 11629              	.LBB7758:
 11630              	.LBB7755:
 11631              	.LBB7750:
 11632              	.LBB7748:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 11633              		.loc 26 98 47 view .LVU2700
 11634 000a 8460     		str	r4, [r0, #8]
 11635              	.LBE7748:
 11636              	.LBE7750:
 11637              	.LBE7755:
 11638              	.LBE7758:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 11639              		.loc 26 625 7 view .LVU2701
 11640 000c 83E80600 		stm	r3, {r1, r2}
 11641              	.LVL781:
 11642              	.LBB7759:
 11643              	.LBI7744:
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 433


 11644              		.loc 26 293 7 is_stmt 1 view .LVU2702
 11645              	.LBB7756:
 11646              	.LBI7745:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 11647              		.loc 26 136 2 view .LVU2703
 11648              	.LBB7751:
 11649              	.LBI7751:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11650              		.loc 19 147 7 view .LVU2704
 11651              	.LBB7752:
 11652              	.LBI7752:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11653              		.loc 20 82 7 view .LVU2705
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11654              		.loc 20 82 7 is_stmt 0 view .LVU2706
 11655              	.LBE7752:
 11656              	.LBE7751:
 11657              	.LBB7753:
 11658              	.LBI7746:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 11659              		.loc 26 97 2 is_stmt 1 view .LVU2707
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 11660              		.loc 26 97 2 is_stmt 0 view .LVU2708
 11661              	.LBE7753:
 11662              	.LBE7756:
 11663              	.LBE7759:
 11664              	.LBB7760:
 11665              	.LBI7760:
 11666              		.file 36 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\initializ
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // std::initializer_list support -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Copyright (C) 2008-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // This file is part of GCC.
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is free software; you can redistribute it and/or modify
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // it under the terms of the GNU General Public License as published by
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // the Free Software Foundation; either version 3, or (at your option)
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // any later version.
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is distributed in the hope that it will be useful,
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GNU General Public License for more details.
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Under Section 7 of GPL version 3, you are granted additional
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // permissions described in the GCC Runtime Library Exception, version
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // 3.1, as published by the Free Software Foundation.
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // You should have received a copy of the GNU General Public License and
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // a copy of the GCC Runtime Library Exception along with this program;
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // <http://www.gnu.org/licenses/>.
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** /** @file initializer_list
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****  *  This is a Standard C++ Library header.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****  */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 434


  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #ifndef _INITIALIZER_LIST
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #define _INITIALIZER_LIST
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC system_header
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** # include <bits/c++0x_warning.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #else // C++0x
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC visibility push(default)
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #include <bits/c++config.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** namespace std
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** {
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****   /// initializer_list
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****   template<class _E>
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     class initializer_list
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef _E 		value_type;
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	reference;
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	const_reference;
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef size_t 		size_type;
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	iterator;
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	const_iterator;
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     private:
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       iterator			_M_array;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size_type			_M_len;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // The compiler can call a private constructor.
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list(const_iterator __a, size_type __l)
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(__a), _M_len(__l) { }
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list() noexcept
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(0), _M_len(0) { }
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // Number of elements.
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr size_type
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size() const noexcept { return _M_len; }
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // First element.
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       begin() const noexcept { return _M_array; }
 11667              		.loc 36 75 7 is_stmt 1 view .LVU2709
 11668              		.loc 36 75 7 is_stmt 0 view .LVU2710
 11669              	.LBE7760:
 11670              	.LBB7761:
 11671              	.LBI7761:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // One past the last element.
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       end() const noexcept { return begin() + size(); }
 11672              		.loc 36 79 7 is_stmt 1 view .LVU2711
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 435


 11673              	.LBB7762:
 11674              	.LBB7763:
 11675              	.LBI7763:
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 11676              		.loc 36 71 7 view .LVU2712
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 11677              		.loc 36 71 7 is_stmt 0 view .LVU2713
 11678              	.LBE7763:
 11679              		.loc 36 79 45 view .LVU2714
 11680 0010 02EB4203 		add	r3, r2, r2, lsl #1
 11681              	.LVL782:
 11682              		.loc 36 79 45 view .LVU2715
 11683              	.LBE7762:
 11684              	.LBE7761:
 11685              	.LBB7765:
 11686              	.LBB7766:
 11687              	.LBB7767:
 11688              	.LBB7768:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 11689              		.loc 26 1769 2 view .LVU2716
 11690 0014 2F4A     		ldr	r2, .L650
 11691 0016 B2EBC30F 		cmp	r2, r3, lsl #3
 11692              	.LBE7768:
 11693              	.LBE7767:
 11694              	.LBE7766:
 11695              	.LBE7765:
 11696              	.LBB7947:
 11697              	.LBB7764:
 11698              		.loc 36 79 52 view .LVU2717
 11699 001a 01EBC309 		add	r9, r1, r3, lsl #3
 11700              	.LVL783:
 11701              		.loc 36 79 52 view .LVU2718
 11702              	.LBE7764:
 11703              	.LBE7947:
 11704              	.LBB7948:
 11705              	.LBI7765:
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 11706              		.loc 26 1577 2 is_stmt 1 view .LVU2719
 11707              	.LBB7942:
 11708              	.LBB7776:
 11709              	.LBI7767:
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 11710              		.loc 26 1767 7 view .LVU2720
 11711              	.LBB7773:
 11712              	.LBB7769:
 11713              	.LBI7769:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11714              		.loc 19 147 7 view .LVU2721
 11715              	.LBB7770:
 11716              	.LBI7770:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11717              		.loc 20 82 7 view .LVU2722
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11718              		.loc 20 82 7 is_stmt 0 view .LVU2723
 11719              	.LBE7770:
 11720              	.LBE7769:
 11721              	.LBB7771:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 436


 11722              	.LBI7771:
 11723              		.loc 19 162 7 is_stmt 1 view .LVU2724
 11724              	.LBB7772:
 11725              	.LBI7772:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11726              		.loc 20 89 7 view .LVU2725
 11727              	.LBE7772:
 11728              	.LBE7771:
 11729              	.LBE7773:
 11730              	.LBE7776:
 11731              	.LBE7942:
 11732              	.LBE7948:
 11733              	.LBB7949:
 11734              	.LBB7757:
 11735              	.LBB7754:
 11736              	.LBB7749:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 11737              		.loc 26 98 47 is_stmt 0 view .LVU2726
 11738 001e C0E90044 		strd	r4, r4, [r0]
 11739              	.LBE7749:
 11740              	.LBE7754:
 11741              	.LBE7757:
 11742              	.LBE7949:
 11743              	.LBB7950:
 11744              	.LBB7943:
 11745              	.LBB7777:
 11746              	.LBB7774:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 11747              		.loc 26 1769 2 view .LVU2727
 11748 0022 53D3     		bcc	.L646
 11749              	.LVL784:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 11750              		.loc 26 1769 2 view .LVU2728
 11751              	.LBE7774:
 11752              	.LBE7777:
 11753              	.LBB7778:
 11754              	.LBI7778:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 11755              		.loc 26 343 7 is_stmt 1 view .LVU2729
 11756 0024 DC00     		lsls	r4, r3, #3
 11757              	.LVL785:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 11758              		.loc 26 343 7 is_stmt 0 view .LVU2730
 11759 0026 8046     		mov	r8, r0
 11760              	.LBB7779:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 11761              		.loc 26 346 18 view .LVU2731
 11762 0028 002C     		cmp	r4, #0
 11763 002a 43D0     		beq	.L626
 11764 002c 0E46     		mov	r6, r1
 11765              	.LVL786:
 11766              	.LBB7780:
 11767              	.LBI7780:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 11768              		.loc 25 459 7 is_stmt 1 view .LVU2732
 11769              	.LBB7781:
 11770              	.LBI7781:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 437


 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 11771              		.loc 20 103 7 view .LVU2733
 11772              	.LBB7782:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11773              		.loc 20 115 41 is_stmt 0 view .LVU2734
 11774 002e 2046     		mov	r0, r4
 11775              	.LVL787:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11776              		.loc 20 115 41 view .LVU2735
 11777 0030 FFF7FEFF 		bl	_Znwj
 11778              	.LVL788:
 11779              	.LBE7782:
 11780              	.LBE7781:
 11781              	.LBE7780:
 11782              	.LBE7779:
 11783              	.LBE7778:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 11784              		.loc 26 1583 61 view .LVU2736
 11785 0034 0444     		add	r4, r4, r0
 11786              	.LVL789:
 11787              	.LBB7788:
 11788              	.LBB7789:
 11789              	.LBB7790:
 11790              	.LBB7791:
 11791              	.LBB7792:
 11792              		.file 37 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 438


  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 439


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
 11793              		.loc 37 90 23 view .LVU2737
 11794 0036 B145     		cmp	r9, r6
 11795              	.LBE7792:
 11796              	.LBE7791:
 11797              	.LBE7790:
 11798              	.LBE7789:
 11799              	.LBE7788:
 11800              	.LBB7934:
 11801              	.LBB7786:
 11802              	.LBB7785:
 11803              	.LBB7784:
 11804              	.LBB7783:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11805              		.loc 20 115 41 view .LVU2738
 11806 0038 0746     		mov	r7, r0
 11807              	.LVL790:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11808              		.loc 20 115 41 view .LVU2739
 11809              	.LBE7783:
 11810              	.LBE7784:
 11811              	.LBE7785:
 11812              	.LBE7786:
 11813              	.LBE7934:
 11814              	.LBB7935:
 11815              	.LBI7788:
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 440


 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 441


 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 442


 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 443


 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 11816              		.loc 37 323 5 is_stmt 1 view .LVU2740
 11817              	.LBB7929:
 11818              	.LBB7924:
 11819              	.LBB7919:
 11820              	.LBB7914:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11821              		.loc 37 90 23 view .LVU2741
 11822              	.LBE7914:
 11823              	.LBE7919:
 11824              	.LBE7924:
 11825              	.LBE7929:
 11826              	.LBE7935:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 11827              		.loc 26 1583 36 is_stmt 0 view .LVU2742
 11828 003a C8F80840 		str	r4, [r8, #8]
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 11829              		.loc 26 1582 6 view .LVU2743
 11830 003e C8F80000 		str	r0, [r8]
 11831              	.LBB7936:
 11832              	.LBB7930:
 11833              	.LBB7925:
 11834              	.LBB7920:
 11835              	.LBB7915:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11836              		.loc 37 90 23 view .LVU2744
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 444


 11837 0042 3AD0     		beq	.L627
 11838 0044 00F11804 		add	r4, r0, #24
 11839 0048 0BE0     		b	.L633
 11840              	.LVL791:
 11841              	.L649:
 11842              	.LBB7793:
 11843              	.LBB7794:
 11844              	.LBB7795:
 11845              	.LBB7796:
 11846              	.LBB7797:
 11847              	.LBB7798:
 11848              	.LBB7799:
 11849              	.LBB7800:
 11850              	.LBB7801:
 11851              	.LBB7802:
 11852              	.LBB7803:
 11853              	.LBB7804:
 11854              	.LBB7805:
 11855              	.LBI7805:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 11856              		.loc 21 321 7 is_stmt 1 view .LVU2745
 11857              	.LBB7806:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11858              		.loc 21 322 9 view .LVU2746
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11859              		.loc 21 322 16 is_stmt 0 view .LVU2747
 11860 004a 9AF80030 		ldrb	r3, [r10]	@ zero_extendqisi2
 11861              	.LVL792:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11862              		.loc 21 322 14 view .LVU2748
 11863 004e 04F8103C 		strb	r3, [r4, #-16]
 11864              	.LVL793:
 11865              	.L632:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11866              		.loc 21 322 14 view .LVU2749
 11867              	.LBE7806:
 11868              	.LBE7805:
 11869              	.LBE7804:
 11870              	.LBE7803:
 11871              	.LBE7802:
 11872              	.LBB7827:
 11873              	.LBI7827:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11874              		.loc 18 214 7 is_stmt 1 view .LVU2750
 11875              	.LBB7828:
 11876              	.LBB7829:
 11877              	.LBI7829:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 11878              		.loc 18 182 7 view .LVU2751
 11879              	.LBE7829:
 11880              	.LBE7828:
 11881              	.LBE7827:
 11882              	.LBE7801:
 11883              	.LBE7800:
 11884              	.LBE7799:
 11885              	.LBE7798:
 11886              	.LBE7797:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 445


 11887              	.LBE7796:
 11888              	.LBE7795:
 11889              	.LBE7794:
 11890              	.LBE7793:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11891              		.loc 37 90 8 is_stmt 0 view .LVU2752
 11892 0052 1836     		adds	r6, r6, #24
 11893              	.LBB7909:
 11894              	.LBB7905:
 11895              	.LBB7901:
 11896              	.LBB7880:
 11897              	.LBB7876:
 11898              	.LBB7872:
 11899              	.LBB7868:
 11900              	.LBB7864:
 11901              	.LBB7860:
 11902              	.LBB7844:
 11903              	.LBB7841:
 11904              	.LBB7831:
 11905              	.LBB7832:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11906              		.loc 21 322 14 view .LVU2753
 11907 0054 0023     		movs	r3, #0
 11908              	.LBE7832:
 11909              	.LBE7831:
 11910              	.LBB7835:
 11911              	.LBB7830:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11912              		.loc 18 183 26 view .LVU2754
 11913 0056 44F8145C 		str	r5, [r4, #-20]
 11914              	.LVL794:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11915              		.loc 18 183 26 view .LVU2755
 11916              	.LBE7830:
 11917              	.LBE7835:
 11918              	.LBB7836:
 11919              	.LBI7836:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11920              		.loc 18 186 7 is_stmt 1 view .LVU2756
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11921              		.loc 18 186 7 is_stmt 0 view .LVU2757
 11922              	.LBE7836:
 11923              	.LBB7838:
 11924              	.LBI7831:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 11925              		.loc 21 321 7 is_stmt 1 view .LVU2758
 11926              	.LBB7833:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11927              		.loc 21 322 9 view .LVU2759
 11928              	.LBE7833:
 11929              	.LBE7838:
 11930              	.LBE7841:
 11931              	.LBE7844:
 11932              	.LBE7860:
 11933              	.LBE7864:
 11934              	.LBE7868:
 11935              	.LBE7872:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 446


 11936              	.LBE7876:
 11937              	.LBE7880:
 11938              	.LBE7901:
 11939              	.LBE7905:
 11940              	.LBE7909:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11941              		.loc 37 90 23 is_stmt 0 view .LVU2760
 11942 005a 1834     		adds	r4, r4, #24
 11943              	.LVL795:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11944              		.loc 37 90 23 view .LVU2761
 11945 005c B145     		cmp	r9, r6
 11946              	.LBB7910:
 11947              	.LBB7906:
 11948              	.LBB7902:
 11949              	.LBB7881:
 11950              	.LBB7877:
 11951              	.LBB7873:
 11952              	.LBB7869:
 11953              	.LBB7865:
 11954              	.LBB7861:
 11955              	.LBB7845:
 11956              	.LBB7842:
 11957              	.LBB7839:
 11958              	.LBB7834:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11959              		.loc 21 322 14 view .LVU2762
 11960 005e 4355     		strb	r3, [r0, r5]
 11961              	.LVL796:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11962              		.loc 21 322 14 view .LVU2763
 11963              	.LBE7834:
 11964              	.LBE7839:
 11965              	.LBE7842:
 11966              	.LBE7845:
 11967              	.LBE7861:
 11968              	.LBE7865:
 11969              	.LBE7869:
 11970              	.LBE7873:
 11971              	.LBE7877:
 11972              	.LBE7881:
 11973              	.LBE7902:
 11974              	.LBE7906:
 11975              	.LBE7910:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11976              		.loc 37 90 8 is_stmt 1 view .LVU2764
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11977              		.loc 37 90 23 view .LVU2765
 11978 0060 2BD0     		beq	.L627
 11979              	.L633:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11980              		.loc 37 90 23 is_stmt 0 view .LVU2766
 11981 0062 A4F11000 		sub	r0, r4, #16
 11982 0066 A4F11803 		sub	r3, r4, #24
 11983              	.LVL797:
 11984              	.LBB7911:
 11985              	.LBI7793:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 447


 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 11986              		.loc 27 108 5 is_stmt 1 view .LVU2767
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 11987              		.loc 27 108 5 is_stmt 0 view .LVU2768
 11988              	.LBE7911:
 11989              	.LBE7915:
 11990              	.LBE7920:
 11991              	.LBE7925:
 11992              	.LBE7930:
 11993              	.LBE7936:
 11994              	.LBE7943:
 11995              	.LBE7950:
 11996              		.loc 23 175 3 is_stmt 1 view .LVU2769
 11997              	.LBB7951:
 11998              	.LBB7944:
 11999              	.LBB7937:
 12000              	.LBB7931:
 12001              	.LBB7926:
 12002              	.LBB7921:
 12003              	.LBB7916:
 12004              	.LBB7912:
 12005              	.LBB7907:
 12006              	.LBI7794:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 12007              		.loc 18 448 7 view .LVU2770
 12008              	.LBB7903:
 12009              	.LBB7882:
 12010              	.LBI7882:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12011              		.loc 18 190 7 view .LVU2771
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12012              		.loc 18 190 7 is_stmt 0 view .LVU2772
 12013              	.LBE7882:
 12014              	.LBB7883:
 12015              	.LBI7883:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 12016              		.loc 18 290 7 is_stmt 1 view .LVU2773
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 12017              		.loc 18 290 7 is_stmt 0 view .LVU2774
 12018              	.LBE7883:
 12019              	.LBB7884:
 12020              	.LBI7884:
 12021              		.loc 35 97 29 is_stmt 1 view .LVU2775
 12022              	.LBB7885:
 12023              	.LBI7885:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 12024              		.loc 25 558 7 view .LVU2776
 12025              	.LBB7886:
 12026              	.LBI7886:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12027              		.loc 19 147 7 view .LVU2777
 12028              	.LBB7887:
 12029              	.LBI7887:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12030              		.loc 20 82 7 view .LVU2778
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12031              		.loc 20 82 7 is_stmt 0 view .LVU2779
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 448


 12032              	.LBE7887:
 12033              	.LBE7886:
 12034              	.LBE7885:
 12035              	.LBE7884:
 12036              	.LBB7888:
 12037              	.LBI7888:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12038              		.loc 18 159 2 is_stmt 1 view .LVU2780
 12039              	.LBB7889:
 12040              	.LBB7890:
 12041              	.LBI7890:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12042              		.loc 34 101 5 view .LVU2781
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12043              		.loc 34 101 5 is_stmt 0 view .LVU2782
 12044              	.LBE7890:
 12045              	.LBB7891:
 12046              	.LBI7891:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12047              		.loc 19 147 7 is_stmt 1 view .LVU2783
 12048              	.LBB7892:
 12049              	.LBI7892:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12050              		.loc 20 82 7 view .LVU2784
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12051              		.loc 20 82 7 is_stmt 0 view .LVU2785
 12052 006a 2746     		mov	r7, r4
 12053              	.LBE7892:
 12054              	.LBE7891:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12055              		.loc 18 160 46 view .LVU2786
 12056 006c 44F8180C 		str	r0, [r4, #-24]
 12057              	.LVL798:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12058              		.loc 18 160 46 view .LVU2787
 12059              	.LBE7889:
 12060              	.LBE7888:
 12061              	.LBB7893:
 12062              	.LBI7893:
 12063              		.loc 19 162 7 is_stmt 1 view .LVU2788
 12064              	.LBB7894:
 12065              	.LBI7894:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12066              		.loc 20 89 7 view .LVU2789
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12067              		.loc 20 89 7 is_stmt 0 view .LVU2790
 12068              	.LBE7894:
 12069              	.LBE7893:
 12070              	.LBB7895:
 12071              	.LBI7895:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12072              		.loc 18 186 7 is_stmt 1 view .LVU2791
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12073              		.loc 18 186 7 is_stmt 0 view .LVU2792
 12074              	.LBE7895:
 12075              	.LBB7896:
 12076              	.LBI7896:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 449


 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12077              		.loc 18 186 7 is_stmt 1 view .LVU2793
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12078              		.loc 18 186 7 is_stmt 0 view .LVU2794
 12079              	.LBE7896:
 12080              	.LBB7897:
 12081              	.LBI7897:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12082              		.loc 18 907 7 is_stmt 1 view .LVU2795
 12083              	.LBB7898:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12084              		.loc 18 908 16 is_stmt 0 view .LVU2796
 12085 0070 D6E900A5 		ldrd	r10, r5, [r6]
 12086              	.LVL799:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12087              		.loc 18 908 16 view .LVU2797
 12088              	.LBE7898:
 12089              	.LBE7897:
 12090              	.LBB7899:
 12091              	.LBI7796:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 12092              		.loc 18 263 9 is_stmt 1 view .LVU2798
 12093              	.LBB7878:
 12094              	.LBB7874:
 12095              	.LBI7798:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 12096              		.loc 18 243 9 view .LVU2799
 12097              	.LBB7870:
 12098              	.LBB7866:
 12099              	.LBI7800:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 12100              		.loc 22 206 7 view .LVU2800
 12101              	.LBB7862:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 12102              		.loc 22 211 42 is_stmt 0 view .LVU2801
 12103 0074 1AEB050F 		cmn	r10, r5
 12104 0078 02D0     		beq	.L628
 12105 007a BAF1000F 		cmp	r10, #0
 12106 007e 22D0     		beq	.L647
 12107              	.L628:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12108              		.loc 22 217 2 view .LVU2802
 12109 0080 0F2D     		cmp	r5, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 12110              		.loc 22 215 12 view .LVU2803
 12111 0082 0395     		str	r5, [sp, #12]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12112              		.loc 22 217 2 view .LVU2804
 12113 0084 04D8     		bhi	.L648
 12114              	.LVL800:
 12115              	.LBB7846:
 12116              	.LBI7846:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12117              		.loc 18 186 7 is_stmt 1 view .LVU2805
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12118              		.loc 18 186 7 is_stmt 0 view .LVU2806
 12119              	.LBE7846:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 450


 12120              	.LBB7847:
 12121              	.LBI7802:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 12122              		.loc 18 392 7 is_stmt 1 view .LVU2807
 12123              	.LBB7823:
 12124              	.LBI7803:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12125              		.loc 18 346 7 view .LVU2808
 12126              	.LBB7819:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 12127              		.loc 18 348 2 is_stmt 0 view .LVU2809
 12128 0086 012D     		cmp	r5, #1
 12129 0088 DFD0     		beq	.L649
 12130              	.LVL801:
 12131              	.LBB7807:
 12132              	.LBI7807:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12133              		.loc 18 346 7 is_stmt 1 view .LVU2810
 12134              	.LBB7808:
 12135              	.LBI7808:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12136              		.loc 21 387 7 view .LVU2811
 12137              	.LBB7809:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12138              		.loc 21 389 2 view .LVU2812
 12139 008a 002D     		cmp	r5, #0
 12140 008c E1D0     		beq	.L632
 12141 008e 09E0     		b	.L630
 12142              	.LVL802:
 12143              	.L648:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12144              		.loc 21 389 2 is_stmt 0 view .LVU2813
 12145              	.LBE7809:
 12146              	.LBE7808:
 12147              	.LBE7807:
 12148              	.LBE7819:
 12149              	.LBE7823:
 12150              	.LBE7847:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 12151              		.loc 22 219 13 view .LVU2814
 12152 0090 1846     		mov	r0, r3
 12153 0092 0022     		movs	r2, #0
 12154 0094 03A9     		add	r1, sp, #12
 12155 0096 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 12156              	.LVL803:
 12157              	.LBB7848:
 12158              	.LBB7849:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12159              		.loc 18 211 31 view .LVU2815
 12160 009a 039B     		ldr	r3, [sp, #12]
 12161              	.LVL804:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12162              		.loc 18 211 31 view .LVU2816
 12163              	.LBE7849:
 12164              	.LBE7848:
 12165              	.LBB7851:
 12166              	.LBI7851:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 451


 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 12167              		.loc 18 178 7 is_stmt 1 view .LVU2817
 12168              	.LBB7852:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12169              		.loc 18 179 26 is_stmt 0 view .LVU2818
 12170 009c 44F8180C 		str	r0, [r4, #-24]
 12171              	.LVL805:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12172              		.loc 18 179 26 view .LVU2819
 12173              	.LBE7852:
 12174              	.LBE7851:
 12175              	.LBB7853:
 12176              	.LBI7848:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 12177              		.loc 18 210 7 is_stmt 1 view .LVU2820
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 12178              		.loc 18 210 7 is_stmt 0 view .LVU2821
 12179              	.LBE7853:
 12180              	.LBB7854:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12181              		.loc 18 186 7 is_stmt 1 view .LVU2822
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12182              		.loc 18 186 7 is_stmt 0 view .LVU2823
 12183              	.LBE7854:
 12184              	.LBB7855:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 12185              		.loc 18 392 7 is_stmt 1 view .LVU2824
 12186              	.LBB7824:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12187              		.loc 18 346 7 view .LVU2825
 12188              	.LBB7820:
 12189              	.LBB7816:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12190              		.loc 18 346 7 view .LVU2826
 12191              	.LBB7813:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12192              		.loc 21 387 7 view .LVU2827
 12193              	.LBB7810:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12194              		.loc 21 389 2 view .LVU2828
 12195              	.LBE7810:
 12196              	.LBE7813:
 12197              	.LBE7816:
 12198              	.LBE7820:
 12199              	.LBE7824:
 12200              	.LBE7855:
 12201              	.LBB7856:
 12202              	.LBB7850:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12203              		.loc 18 211 31 is_stmt 0 view .LVU2829
 12204 00a0 44F8103C 		str	r3, [r4, #-16]
 12205              	.L630:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12206              		.loc 18 211 31 view .LVU2830
 12207              	.LBE7850:
 12208              	.LBE7856:
 12209              	.LBB7857:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 452


 12210              	.LBB7825:
 12211              	.LBB7821:
 12212              	.LBB7817:
 12213              	.LBB7814:
 12214              	.LBB7811:
 12215              		.loc 21 395 2 is_stmt 1 view .LVU2831
 12216              		.loc 21 395 49 is_stmt 0 view .LVU2832
 12217 00a4 2A46     		mov	r2, r5
 12218 00a6 5146     		mov	r1, r10
 12219 00a8 FFF7FEFF 		bl	memcpy
 12220              	.LVL806:
 12221              		.loc 21 395 49 view .LVU2833
 12222              	.LBE7811:
 12223              	.LBE7814:
 12224              	.LBE7817:
 12225              	.LBE7821:
 12226              	.LBE7825:
 12227              	.LBE7857:
 12228              		.loc 22 232 15 view .LVU2834
 12229 00ac 039D     		ldr	r5, [sp, #12]
 12230              	.LVL807:
 12231              	.LBB7858:
 12232              	.LBB7843:
 12233              	.LBB7840:
 12234              	.LBB7837:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12235              		.loc 18 187 28 view .LVU2835
 12236 00ae 54F8180C 		ldr	r0, [r4, #-24]
 12237              	.LBE7837:
 12238              	.LBE7840:
 12239              	.LBE7843:
 12240              	.LBE7858:
 12241              	.LBB7859:
 12242              	.LBB7826:
 12243              	.LBB7822:
 12244              	.LBB7818:
 12245              	.LBB7815:
 12246              	.LBB7812:
 12247              		.loc 21 395 66 view .LVU2836
 12248 00b2 CEE7     		b	.L632
 12249              	.LVL808:
 12250              	.L626:
 12251              		.loc 21 395 66 view .LVU2837
 12252              	.LBE7812:
 12253              	.LBE7815:
 12254              	.LBE7818:
 12255              	.LBE7822:
 12256              	.LBE7826:
 12257              	.LBE7859:
 12258              	.LBE7862:
 12259              	.LBE7866:
 12260              	.LBE7870:
 12261              	.LBE7874:
 12262              	.LBE7878:
 12263              	.LBE7899:
 12264              	.LBE7903:
 12265              	.LBE7907:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 453


 12266              	.LBE7912:
 12267              	.LBE7916:
 12268              	.LBE7921:
 12269              	.LBE7926:
 12270              	.LBE7931:
 12271              	.LBE7937:
 12272              	.LBB7938:
 12273              	.LBB7787:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 12274              		.loc 26 346 18 view .LVU2838
 12275 00b4 2746     		mov	r7, r4
 12276              	.LBE7787:
 12277              	.LBE7938:
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 12278              		.loc 26 1582 6 view .LVU2839
 12279 00b6 0460     		str	r4, [r0]
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 12280              		.loc 26 1583 36 view .LVU2840
 12281 00b8 8460     		str	r4, [r0, #8]
 12282              	.LVL809:
 12283              	.LBB7939:
 12284              		.loc 37 323 5 is_stmt 1 view .LVU2841
 12285              	.LBB7932:
 12286              	.LBB7927:
 12287              	.LBB7922:
 12288              	.LBB7917:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12289              		.loc 37 90 23 view .LVU2842
 12290              	.L627:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12291              		.loc 37 90 23 is_stmt 0 view .LVU2843
 12292              	.LBE7917:
 12293              	.LBE7922:
 12294              	.LBE7927:
 12295              	.LBE7932:
 12296              	.LBE7939:
 12297              	.LBE7944:
 12298              	.LBE7951:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12299              		.loc 26 631 7 view .LVU2844
 12300 00ba 4046     		mov	r0, r8
 12301              	.LBB7952:
 12302              	.LBB7945:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12303              		.loc 26 1584 28 view .LVU2845
 12304 00bc C8F80470 		str	r7, [r8, #4]
 12305              	.LVL810:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12306              		.loc 26 1584 28 view .LVU2846
 12307              	.LBE7945:
 12308              	.LBE7952:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12309              		.loc 26 631 7 view .LVU2847
 12310 00c0 04B0     		add	sp, sp, #16
 12311              		.cfi_remember_state
 12312              		.cfi_def_cfa_offset 32
 12313              		@ sp needed
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 454


 12314 00c2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 12315              	.LVL811:
 12316              	.L647:
 12317              		.cfi_restore_state
 12318              	.LBB7953:
 12319              	.LBB7946:
 12320              	.LBB7940:
 12321              	.LBB7933:
 12322              	.LBB7928:
 12323              	.LBB7923:
 12324              	.LBB7918:
 12325              	.LBB7913:
 12326              	.LBB7908:
 12327              	.LBB7904:
 12328              	.LBB7900:
 12329              	.LBB7879:
 12330              	.LBB7875:
 12331              	.LBB7871:
 12332              	.LBB7867:
 12333              	.LBB7863:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 12334              		.loc 22 212 28 view .LVU2848
 12335 00c6 0448     		ldr	r0, .L650+4
 12336 00c8 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 12337              	.LVL812:
 12338              	.L646:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 12339              		.loc 22 212 28 view .LVU2849
 12340              	.LBE7863:
 12341              	.LBE7867:
 12342              	.LBE7871:
 12343              	.LBE7875:
 12344              	.LBE7879:
 12345              	.LBE7900:
 12346              	.LBE7904:
 12347              	.LBE7908:
 12348              	.LBE7913:
 12349              	.LBE7918:
 12350              	.LBE7923:
 12351              	.LBE7928:
 12352              	.LBE7933:
 12353              	.LBE7940:
 12354              	.LBB7941:
 12355              	.LBB7775:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 12356              		.loc 26 1770 24 view .LVU2850
 12357 00cc 0348     		ldr	r0, .L650+8
 12358              	.LVL813:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 12359              		.loc 26 1770 24 view .LVU2851
 12360 00ce FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 12361              	.LVL814:
 12362              	.L651:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 12363              		.loc 26 1770 24 view .LVU2852
 12364 00d2 00BF     		.align	2
 12365              	.L650:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 455


 12366 00d4 F8FFFF7F 		.word	2147483640
 12367 00d8 00000000 		.word	.LC9
 12368 00dc 00000000 		.word	.LC10
 12369              	.LBE7775:
 12370              	.LBE7941:
 12371              	.LBE7946:
 12372              	.LBE7953:
 12373              		.cfi_endproc
 12374              	.LFE5463:
 12376              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_
 12377              		.thumb_set _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initial
 12378              		.section	.text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_,"axG",%progbits,_ZNSt6vectorIiS
 12379              		.align	1
 12380              		.p2align 2,,3
 12381              		.weak	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_
 12382              		.syntax unified
 12383              		.thumb
 12384              		.thumb_func
 12385              		.fpu fpv5-d16
 12387              	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:
 12388              	.LVL815:
 12389              	.LFB5475:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 12390              		.loc 26 625 7 is_stmt 1 view -0
 12391              		.cfi_startproc
 12392              		@ args = 0, pretend = 0, frame = 8
 12393              		@ frame_needed = 0, uses_anonymous_args = 0
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 12394              		.loc 26 625 7 is_stmt 0 view .LVU2854
 12395 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 12396              		.cfi_def_cfa_offset 20
 12397              		.cfi_offset 4, -20
 12398              		.cfi_offset 5, -16
 12399              		.cfi_offset 6, -12
 12400              		.cfi_offset 7, -8
 12401              		.cfi_offset 14, -4
 12402 0002 83B0     		sub	sp, sp, #12
 12403              		.cfi_def_cfa_offset 32
 12404              	.LBB7997:
 12405              	.LBB7998:
 12406              	.LBB7999:
 12407              	.LBB8000:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12408              		.loc 26 98 47 view .LVU2855
 12409 0004 0023     		movs	r3, #0
 12410              	.LVL816:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12411              		.loc 26 98 47 view .LVU2856
 12412              	.LBE8000:
 12413              	.LBE7999:
 12414              	.LBE7998:
 12415              	.LBE7997:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 12416              		.loc 26 625 7 view .LVU2857
 12417 0006 02AC     		add	r4, sp, #8
 12418 0008 04E90600 		stmdb	r4, {r1, r2}
 12419 000c 0446     		mov	r4, r0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 456


 12420              	.LBB8011:
 12421              	.LBB8012:
 12422              	.LBB8013:
 12423              	.LBB8014:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 12424              		.loc 26 1769 2 view .LVU2858
 12425 000e 1148     		ldr	r0, .L659
 12426              	.LVL817:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 12427              		.loc 26 1769 2 view .LVU2859
 12428              	.LBE8014:
 12429              	.LBE8013:
 12430              	.LBE8012:
 12431              	.LBE8011:
 12432              	.LBB8073:
 12433              	.LBI7997:
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 12434              		.loc 26 293 7 is_stmt 1 view .LVU2860
 12435              	.LBB8008:
 12436              	.LBI7998:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 12437              		.loc 26 136 2 view .LVU2861
 12438              	.LBB8003:
 12439              	.LBI8003:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12440              		.loc 19 147 7 view .LVU2862
 12441              	.LBB8004:
 12442              	.LBI8004:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12443              		.loc 20 82 7 view .LVU2863
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12444              		.loc 20 82 7 is_stmt 0 view .LVU2864
 12445              	.LBE8004:
 12446              	.LBE8003:
 12447              	.LBB8005:
 12448              	.LBI7999:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 12449              		.loc 26 97 2 is_stmt 1 view .LVU2865
 12450              	.LBE8005:
 12451              	.LBE8008:
 12452              	.LBE8073:
 12453              	.LBB8074:
 12454              	.LBB8066:
 12455              	.LBB8023:
 12456              	.LBB8019:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 12457              		.loc 26 1769 2 is_stmt 0 view .LVU2866
 12458 0010 B0EB820F 		cmp	r0, r2, lsl #2
 12459              	.LBE8019:
 12460              	.LBE8023:
 12461              	.LBE8066:
 12462              	.LBE8074:
 12463              	.LBB8075:
 12464              	.LBB8009:
 12465              	.LBB8006:
 12466              	.LBB8001:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 457


 12467              		.loc 26 98 47 view .LVU2867
 12468 0014 A360     		str	r3, [r4, #8]
 12469              	.LVL818:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12470              		.loc 26 98 47 view .LVU2868
 12471              	.LBE8001:
 12472              	.LBE8006:
 12473              	.LBE8009:
 12474              	.LBE8075:
 12475              	.LBB8076:
 12476              	.LBI8076:
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 12477              		.loc 36 75 7 is_stmt 1 view .LVU2869
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 12478              		.loc 36 75 7 is_stmt 0 view .LVU2870
 12479              	.LBE8076:
 12480              	.LBB8077:
 12481              	.LBI8077:
 12482              		.loc 36 79 7 is_stmt 1 view .LVU2871
 12483              	.LBB8078:
 12484              	.LBB8079:
 12485              	.LBI8079:
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 12486              		.loc 36 71 7 view .LVU2872
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 12487              		.loc 36 71 7 is_stmt 0 view .LVU2873
 12488              	.LBE8079:
 12489              	.LBE8078:
 12490              	.LBE8077:
 12491              	.LBB8080:
 12492              	.LBI8011:
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 12493              		.loc 26 1577 2 is_stmt 1 view .LVU2874
 12494              	.LBB8067:
 12495              	.LBB8024:
 12496              	.LBI8013:
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 12497              		.loc 26 1767 7 view .LVU2875
 12498              	.LBB8020:
 12499              	.LBB8015:
 12500              	.LBI8015:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12501              		.loc 19 147 7 view .LVU2876
 12502              	.LBB8016:
 12503              	.LBI8016:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12504              		.loc 20 82 7 view .LVU2877
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12505              		.loc 20 82 7 is_stmt 0 view .LVU2878
 12506              	.LBE8016:
 12507              	.LBE8015:
 12508              	.LBB8017:
 12509              	.LBI8017:
 12510              		.loc 19 162 7 is_stmt 1 view .LVU2879
 12511              	.LBB8018:
 12512              	.LBI8018:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 458


 12513              		.loc 20 89 7 view .LVU2880
 12514              	.LBE8018:
 12515              	.LBE8017:
 12516              	.LBE8020:
 12517              	.LBE8024:
 12518              	.LBE8067:
 12519              	.LBE8080:
 12520              	.LBB8081:
 12521              	.LBB8010:
 12522              	.LBB8007:
 12523              	.LBB8002:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12524              		.loc 26 98 47 is_stmt 0 view .LVU2881
 12525 0016 C4E90033 		strd	r3, r3, [r4]
 12526              	.LBE8002:
 12527              	.LBE8007:
 12528              	.LBE8010:
 12529              	.LBE8081:
 12530              	.LBB8082:
 12531              	.LBB8068:
 12532              	.LBB8025:
 12533              	.LBB8021:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 12534              		.loc 26 1769 2 view .LVU2882
 12535 001a 18D3     		bcc	.L658
 12536              	.LVL819:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 12537              		.loc 26 1769 2 view .LVU2883
 12538              	.LBE8021:
 12539              	.LBE8025:
 12540              	.LBB8026:
 12541              	.LBI8026:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 12542              		.loc 26 343 7 is_stmt 1 view .LVU2884
 12543 001c 9600     		lsls	r6, r2, #2
 12544              	.LVL820:
 12545              	.LBB8027:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 12546              		.loc 26 346 18 is_stmt 0 view .LVU2885
 12547 001e 7EB1     		cbz	r6, .L654
 12548              	.LBB8028:
 12549              	.LBB8029:
 12550              	.LBB8030:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12551              		.loc 20 115 41 view .LVU2886
 12552 0020 3046     		mov	r0, r6
 12553 0022 0F46     		mov	r7, r1
 12554              	.LVL821:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12555              		.loc 20 115 41 view .LVU2887
 12556              	.LBE8030:
 12557              	.LBE8029:
 12558              	.LBI8028:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 12559              		.loc 25 459 7 is_stmt 1 view .LVU2888
 12560              	.LBB8032:
 12561              	.LBI8029:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 459


 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12562              		.loc 20 103 7 view .LVU2889
 12563              	.LBB8031:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12564              		.loc 20 115 41 is_stmt 0 view .LVU2890
 12565 0024 FFF7FEFF 		bl	_Znwj
 12566              	.LVL822:
 12567 0028 0546     		mov	r5, r0
 12568              	.LVL823:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12569              		.loc 20 115 41 view .LVU2891
 12570              	.LBE8031:
 12571              	.LBE8032:
 12572              	.LBE8028:
 12573              	.LBE8027:
 12574              	.LBE8026:
 12575              	.LBB8033:
 12576              	.LBB8034:
 12577              	.LBB8035:
 12578              	.LBB8036:
 12579              	.LBB8037:
 12580              	.LBB8038:
 12581              	.LBB8039:
 12582              	.LBB8040:
 12583              	.LBB8041:
 12584              	.LBB8042:
 12585              	.LBB8043:
 12586              		.file 38 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 460


  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 461


  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 462


 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 463


 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 464


 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__a < __b)
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__b, __a))
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__a, __b))
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 465


 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __it; }
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _From, typename _To>
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _From
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // a for loop with an explicit count.
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = *__first;
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 466


 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = *__first;
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 12587              		.loc 38 426 23 view .LVU2892
 12588 002a 3946     		mov	r1, r7
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 467


 12589 002c 3246     		mov	r2, r6
 12590              	.LBE8043:
 12591              	.LBE8042:
 12592              	.LBE8041:
 12593              	.LBE8040:
 12594              	.LBE8039:
 12595              	.LBE8038:
 12596              	.LBE8037:
 12597              	.LBE8036:
 12598              	.LBE8035:
 12599              	.LBE8034:
 12600              	.LBE8033:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 12601              		.loc 26 1583 61 view .LVU2893
 12602 002e 3544     		add	r5, r5, r6
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 12603              		.loc 26 1582 6 view .LVU2894
 12604 0030 2060     		str	r0, [r4]
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 12605              		.loc 26 1583 36 view .LVU2895
 12606 0032 A560     		str	r5, [r4, #8]
 12607              	.LVL824:
 12608              	.LBB8063:
 12609              	.LBI8033:
 12610              		.loc 37 323 5 is_stmt 1 view .LVU2896
 12611              	.LBB8061:
 12612              	.LBI8034:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 12613              		.loc 37 125 5 view .LVU2897
 12614              	.LBB8059:
 12615              	.LBB8057:
 12616              	.LBI8036:
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 12617              		.loc 37 107 9 view .LVU2898
 12618              	.LBB8055:
 12619              	.LBI8037:
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT>
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct char_traits;
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class istreambuf_iterator;
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class ostreambuf_iterator;
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 468


 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				    _CharT*>::__type
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct _Deque_iterator;
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _OI);
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 469


 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  _OI);
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II, _II,
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 12620              		.loc 38 560 5 view .LVU2899
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 470


 12621              	.LBB8053:
 12622              	.LBI8038:
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 12623              		.loc 38 511 5 view .LVU2900
 12624              	.LBB8051:
 12625              	.LBI8039:
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 12626              		.loc 38 505 5 view .LVU2901
 12627              	.LBB8049:
 12628              	.LBI8040:
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 12629              		.loc 38 463 5 view .LVU2902
 12630              	.LBB8047:
 12631              	.LBB8045:
 12632              	.LBI8042:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 12633              		.loc 38 415 2 view .LVU2903
 12634              	.LBB8044:
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 12635              		.loc 38 426 23 is_stmt 0 view .LVU2904
 12636 0034 FFF7FEFF 		bl	memcpy
 12637              	.LVL825:
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 12638              		.loc 38 426 23 view .LVU2905
 12639              	.LBE8044:
 12640              	.LBE8045:
 12641              	.LBE8047:
 12642              	.LBE8049:
 12643              	.LBE8051:
 12644              	.LBE8053:
 12645              	.LBE8055:
 12646              	.LBE8057:
 12647              	.LBE8059:
 12648              	.LBE8061:
 12649              	.LBE8063:
 12650              	.LBE8068:
 12651              	.LBE8082:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12652              		.loc 26 631 7 view .LVU2906
 12653 0038 2046     		mov	r0, r4
 12654              	.LBB8083:
 12655              	.LBB8069:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12656              		.loc 26 1584 28 view .LVU2907
 12657 003a 6560     		str	r5, [r4, #4]
 12658              	.LVL826:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12659              		.loc 26 1584 28 view .LVU2908
 12660              	.LBE8069:
 12661              	.LBE8083:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12662              		.loc 26 631 7 view .LVU2909
 12663 003c 03B0     		add	sp, sp, #12
 12664              		.cfi_remember_state
 12665              		.cfi_def_cfa_offset 20
 12666              		@ sp needed
 12667 003e F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 471


 12668              	.LVL827:
 12669              	.L654:
 12670              		.cfi_restore_state
 12671              	.LBB8084:
 12672              	.LBB8070:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 12673              		.loc 26 1583 61 view .LVU2910
 12674 0040 3546     		mov	r5, r6
 12675              	.LBE8070:
 12676              	.LBE8084:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12677              		.loc 26 631 7 view .LVU2911
 12678 0042 2046     		mov	r0, r4
 12679              	.LBB8085:
 12680              	.LBB8071:
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 12681              		.loc 26 1582 6 view .LVU2912
 12682 0044 2660     		str	r6, [r4]
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 12683              		.loc 26 1583 36 view .LVU2913
 12684 0046 A660     		str	r6, [r4, #8]
 12685              	.LVL828:
 12686              	.LBB8064:
 12687              		.loc 37 323 5 is_stmt 1 view .LVU2914
 12688              	.LBB8062:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 12689              		.loc 37 125 5 view .LVU2915
 12690              	.LBB8060:
 12691              	.LBB8058:
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 12692              		.loc 37 107 9 view .LVU2916
 12693              	.LBB8056:
 12694              		.loc 38 560 5 view .LVU2917
 12695              	.LBB8054:
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 12696              		.loc 38 511 5 view .LVU2918
 12697              	.LBB8052:
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 12698              		.loc 38 505 5 view .LVU2919
 12699              	.LBB8050:
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 12700              		.loc 38 463 5 view .LVU2920
 12701              	.LBB8048:
 12702              	.LBB8046:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 12703              		.loc 38 415 2 view .LVU2921
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 12704              		.loc 38 415 2 is_stmt 0 view .LVU2922
 12705              	.LBE8046:
 12706              	.LBE8048:
 12707              	.LBE8050:
 12708              	.LBE8052:
 12709              	.LBE8054:
 12710              	.LBE8056:
 12711              	.LBE8058:
 12712              	.LBE8060:
 12713              	.LBE8062:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 472


 12714              	.LBE8064:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12715              		.loc 26 1584 28 view .LVU2923
 12716 0048 6560     		str	r5, [r4, #4]
 12717              	.LVL829:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12718              		.loc 26 1584 28 view .LVU2924
 12719              	.LBE8071:
 12720              	.LBE8085:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12721              		.loc 26 631 7 view .LVU2925
 12722 004a 03B0     		add	sp, sp, #12
 12723              		.cfi_remember_state
 12724              		.cfi_def_cfa_offset 20
 12725              		@ sp needed
 12726 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 12727              	.LVL830:
 12728              	.L658:
 12729              		.cfi_restore_state
 12730              	.LBB8086:
 12731              	.LBB8072:
 12732              	.LBB8065:
 12733              	.LBB8022:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 12734              		.loc 26 1770 24 view .LVU2926
 12735 004e 0248     		ldr	r0, .L659+4
 12736 0050 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 12737              	.LVL831:
 12738              	.L660:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 12739              		.loc 26 1770 24 view .LVU2927
 12740              		.align	2
 12741              	.L659:
 12742 0054 FCFFFF7F 		.word	2147483644
 12743 0058 00000000 		.word	.LC10
 12744              	.LBE8022:
 12745              	.LBE8065:
 12746              	.LBE8072:
 12747              	.LBE8086:
 12748              		.cfi_endproc
 12749              	.LFE5475:
 12751              		.weak	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 12752              		.thumb_set _ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_,_ZNSt6vectorIiSaIiEEC2ESt16initiali
 12753              		.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC
 12754              		.align	1
 12755              		.p2align 2,,3
 12756              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS
 12757              		.syntax unified
 12758              		.thumb
 12759              		.thumb_func
 12760              		.fpu fpv5-d16
 12762              	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EE
 12763              	.LVL832:
 12764              	.LFB5492:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T1 first_type;    ///< The type of the `first` member
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 473


 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T2 second_type;   ///< The type of the `second` member
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T1 first;                 ///< The first member
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T2 second;                ///< The second member
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        *  respective default constructors.  */
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U1>,
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U2>>
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = true>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U1>,
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U2>,
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        __not_<
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          __and_<__is_implicitly_default_constructible<_U1>,
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                 __is_implicitly_default_constructible<_U2>>>>
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = false>
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair()
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Two objects may be passed to a @c pair constructor to be copied.
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       pair(const _T1& __a, const _T2& __b)
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that don't take pairs.
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       using _PCCP = _PCC<true, _T1, _T2>;
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, allowing implicit conversions.
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1 = _T1, typename _U2=_T2, typename
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCP::template
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const _T1& __a, const _T2& __b)
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, disallowing implicit conversions.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        template<typename _U1 = _T1, typename _U2=_T2, typename
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		enable_if<_PCCP::template
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 474


 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ConstructiblePair<_U1, _U2>()
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                  && !_PCCP::template
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ImplicitlyConvertiblePair<_U1, _U2>(),
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair(const _T1& __a, const _T2& __b)
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// There is also a templated constructor to convert from other pairs.
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2>
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	pair(const pair<_U1, _U2>& __p)
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that take pairs.
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         using _PCCFP = _PCC<!is_same<_T1, _U1>::value
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    || !is_same<_T2, _U2>::value,
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _T1, _T2>;
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCFP<_U1, _U2>::template
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  bool>::type=true>
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         constexpr pair(const pair<_U1, _U2>& __p)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         : first(__p.first), second(__p.second) { }
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			 && !_PCCFP<_U1, _U2>::template
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	explicit constexpr pair(const pair<_U1, _U2>& __p)
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const pair&) = default;	///< Copy constructor
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // DR 811.
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<true, _U1, _T2>(),
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(_U1&& __x, const _T2& __y)
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<false, _U1, _T2>(),
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 475


 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit constexpr pair(_U1&& __x, const _T2& __y)
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<true, _T1, _U2>(),
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(const _T1& __x, _U2&& __y)
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<false, _T1, _U2>(),
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit pair(const _T1& __x, _U2&& __y)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && _PCCP::template
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	constexpr pair(_U1&& __x, _U2&& __y)
 12765              		.loc 30 352 12 is_stmt 1 view -0
 12766              		.cfi_startproc
 12767              		@ args = 0, pretend = 0, frame = 8
 12768              		@ frame_needed = 0, uses_anonymous_args = 0
 12769              		.loc 30 352 12 is_stmt 0 view .LVU2929
 12770 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 12771              		.cfi_def_cfa_offset 24
 12772              		.cfi_offset 4, -24
 12773              		.cfi_offset 5, -20
 12774              		.cfi_offset 6, -16
 12775              		.cfi_offset 7, -12
 12776              		.cfi_offset 8, -8
 12777              		.cfi_offset 14, -4
 12778 0004 0446     		mov	r4, r0
 12779              	.LBB8151:
 12780              	.LBB8152:
 12781              	.LBB8153:
 12782              	.LBB8154:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 12783              		.loc 18 193 51 view .LVU2930
 12784 0006 00F10807 		add	r7, r0, #8
 12785              	.LBE8154:
 12786              	.LBE8153:
 12787              	.LBE8152:
 12788              	.LBE8151:
 12789              		.loc 30 352 12 view .LVU2931
 12790 000a 82B0     		sub	sp, sp, #8
 12791              		.cfi_def_cfa_offset 32
 12792              	.LBB8263:
 12793              	.LBB8243:
 12794              	.LBB8155:
 12795              	.LBB8156:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 476


 12796              		.loc 21 357 25 view .LVU2932
 12797 000c 0846     		mov	r0, r1
 12798              	.LVL833:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12799              		.loc 21 357 25 view .LVU2933
 12800              	.LBE8156:
 12801              	.LBE8155:
 12802              	.LBB8160:
 12803              	.LBB8161:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12804              		.loc 18 157 35 view .LVU2934
 12805 000e 2760     		str	r7, [r4]
 12806              	.LBE8161:
 12807              	.LBE8160:
 12808              	.LBE8243:
 12809              	.LBE8263:
 12810              		.loc 30 352 12 view .LVU2935
 12811 0010 8846     		mov	r8, r1
 12812              	.LVL834:
 12813              	.LBB8264:
 12814              	.LBB8244:
 12815              	.LBI8244:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 12816              		.loc 34 76 5 is_stmt 1 view .LVU2936
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 12817              		.loc 34 76 5 is_stmt 0 view .LVU2937
 12818              	.LBE8244:
 12819              	.LBB8245:
 12820              	.LBI8245:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 12821              		.loc 19 144 7 is_stmt 1 view .LVU2938
 12822              	.LBB8246:
 12823              	.LBI8246:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12824              		.loc 20 79 7 view .LVU2939
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12825              		.loc 20 79 7 is_stmt 0 view .LVU2940
 12826              	.LBE8246:
 12827              	.LBE8245:
 12828              	.LBB8247:
 12829              	.LBI8152:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 12830              		.loc 18 525 7 is_stmt 1 view .LVU2941
 12831              	.LBB8165:
 12832              	.LBI8153:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12833              		.loc 18 190 7 view .LVU2942
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12834              		.loc 18 190 7 is_stmt 0 view .LVU2943
 12835              	.LBE8165:
 12836              	.LBB8166:
 12837              	.LBI8160:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 12838              		.loc 18 156 2 is_stmt 1 view .LVU2944
 12839              	.LBB8164:
 12840              	.LBB8162:
 12841              	.LBI8162:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 477


 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12842              		.loc 19 147 7 view .LVU2945
 12843              	.LBB8163:
 12844              	.LBI8163:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12845              		.loc 20 82 7 view .LVU2946
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12846              		.loc 20 82 7 is_stmt 0 view .LVU2947
 12847              	.LBE8163:
 12848              	.LBE8162:
 12849              	.LBE8164:
 12850              	.LBE8166:
 12851              	.LBB8167:
 12852              	.LBI8155:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12853              		.loc 21 351 7 is_stmt 1 view .LVU2948
 12854              	.LBB8157:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12855              		.loc 21 357 2 view .LVU2949
 12856              	.LBE8157:
 12857              	.LBE8167:
 12858              	.LBE8247:
 12859              	.LBE8264:
 12860              		.loc 30 352 12 is_stmt 0 view .LVU2950
 12861 0012 1546     		mov	r5, r2
 12862              	.LBB8265:
 12863              	.LBB8248:
 12864              	.LBB8168:
 12865              	.LBB8158:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12866              		.loc 21 357 25 view .LVU2951
 12867 0014 FFF7FEFF 		bl	strlen
 12868              	.LVL835:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12869              		.loc 21 357 25 view .LVU2952
 12870              	.LBE8158:
 12871              	.LBE8168:
 12872              	.LBB8169:
 12873              	.LBB8170:
 12874              	.LBB8171:
 12875              	.LBB8172:
 12876              	.LBB8173:
 12877              	.LBB8174:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12878              		.loc 22 217 2 view .LVU2953
 12879 0018 0F28     		cmp	r0, #15
 12880              	.LBE8174:
 12881              	.LBE8173:
 12882              	.LBE8172:
 12883              	.LBE8171:
 12884              	.LBE8170:
 12885              	.LBE8169:
 12886              	.LBB8239:
 12887              	.LBB8159:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12888              		.loc 21 357 25 view .LVU2954
 12889 001a 0646     		mov	r6, r0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 478


 12890              	.LVL836:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12891              		.loc 21 357 25 view .LVU2955
 12892              	.LBE8159:
 12893              	.LBE8239:
 12894              	.LBB8240:
 12895              	.LBI8169:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 12896              		.loc 18 263 9 is_stmt 1 view .LVU2956
 12897              	.LBB8236:
 12898              	.LBB8233:
 12899              	.LBI8171:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 12900              		.loc 18 243 9 view .LVU2957
 12901              	.LBB8230:
 12902              	.LBB8227:
 12903              	.LBI8173:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 12904              		.loc 22 206 7 view .LVU2958
 12905              	.LBB8224:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 12906              		.loc 22 215 12 is_stmt 0 view .LVU2959
 12907 001c 0190     		str	r0, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12908              		.loc 22 217 2 view .LVU2960
 12909 001e 17D8     		bhi	.L670
 12910              	.LVL837:
 12911              	.LBB8175:
 12912              	.LBI8175:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12913              		.loc 18 186 7 is_stmt 1 view .LVU2961
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12914              		.loc 18 186 7 is_stmt 0 view .LVU2962
 12915              	.LBE8175:
 12916              	.LBB8176:
 12917              	.LBI8176:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 12918              		.loc 18 396 7 is_stmt 1 view .LVU2963
 12919              	.LBB8177:
 12920              	.LBI8177:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12921              		.loc 18 346 7 view .LVU2964
 12922              	.LBB8178:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 12923              		.loc 18 348 2 is_stmt 0 view .LVU2965
 12924 0020 0128     		cmp	r0, #1
 12925 0022 12D1     		bne	.L664
 12926              	.LVL838:
 12927              	.LBB8179:
 12928              	.LBI8179:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12929              		.loc 21 321 7 is_stmt 1 view .LVU2966
 12930              	.LBB8180:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12931              		.loc 21 322 9 view .LVU2967
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12932              		.loc 21 322 14 is_stmt 0 view .LVU2968
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 479


 12933 0024 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 12934 0028 2372     		strb	r3, [r4, #8]
 12935              	.LVL839:
 12936              	.L665:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12937              		.loc 21 322 14 view .LVU2969
 12938              	.LBE8180:
 12939              	.LBE8179:
 12940              	.LBE8178:
 12941              	.LBE8177:
 12942              	.LBE8176:
 12943              	.LBB8196:
 12944              	.LBI8196:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12945              		.loc 18 214 7 is_stmt 1 view .LVU2970
 12946              	.LBB8197:
 12947              	.LBB8198:
 12948              	.LBI8198:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 12949              		.loc 18 182 7 view .LVU2971
 12950              	.LBE8198:
 12951              	.LBB8200:
 12952              	.LBB8201:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12953              		.loc 21 322 14 is_stmt 0 view .LVU2972
 12954 002a 0023     		movs	r3, #0
 12955              	.LBE8201:
 12956              	.LBE8200:
 12957              	.LBB8204:
 12958              	.LBB8199:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12959              		.loc 18 183 26 view .LVU2973
 12960 002c 6660     		str	r6, [r4, #4]
 12961              	.LVL840:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12962              		.loc 18 183 26 view .LVU2974
 12963              	.LBE8199:
 12964              	.LBE8204:
 12965              	.LBB8205:
 12966              	.LBI8205:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12967              		.loc 18 186 7 is_stmt 1 view .LVU2975
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12968              		.loc 18 186 7 is_stmt 0 view .LVU2976
 12969              	.LBE8205:
 12970              	.LBB8207:
 12971              	.LBI8200:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12972              		.loc 21 321 7 is_stmt 1 view .LVU2977
 12973              	.LBB8202:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12974              		.loc 21 322 9 view .LVU2978
 12975              	.LBE8202:
 12976              	.LBE8207:
 12977              	.LBE8197:
 12978              	.LBE8196:
 12979              	.LBE8224:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 480


 12980              	.LBE8227:
 12981              	.LBE8230:
 12982              	.LBE8233:
 12983              	.LBE8236:
 12984              	.LBE8240:
 12985              	.LBE8248:
 12986              	.LBE8265:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 12987              		.loc 30 353 68 is_stmt 0 view .LVU2979
 12988 002e 2046     		mov	r0, r4
 12989              	.LBB8266:
 12990              	.LBB8249:
 12991              	.LBB8241:
 12992              	.LBB8237:
 12993              	.LBB8234:
 12994              	.LBB8231:
 12995              	.LBB8228:
 12996              	.LBB8225:
 12997              	.LBB8212:
 12998              	.LBB8210:
 12999              	.LBB8208:
 13000              	.LBB8203:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13001              		.loc 21 322 14 view .LVU2980
 13002 0030 BB55     		strb	r3, [r7, r6]
 13003              	.LVL841:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13004              		.loc 21 322 14 view .LVU2981
 13005              	.LBE8203:
 13006              	.LBE8208:
 13007              	.LBE8210:
 13008              	.LBE8212:
 13009              	.LBE8225:
 13010              	.LBE8228:
 13011              	.LBE8231:
 13012              	.LBE8234:
 13013              	.LBE8237:
 13014              	.LBE8241:
 13015              	.LBE8249:
 13016              	.LBB8250:
 13017              	.LBI8250:
 13018              		.loc 19 162 7 is_stmt 1 view .LVU2982
 13019              	.LBB8251:
 13020              	.LBI8251:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13021              		.loc 20 89 7 view .LVU2983
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13022              		.loc 20 89 7 is_stmt 0 view .LVU2984
 13023              	.LBE8251:
 13024              	.LBE8250:
 13025              	.LBB8252:
 13026              	.LBI8252:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13027              		.loc 34 76 5 is_stmt 1 view .LVU2985
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13028              		.loc 34 76 5 is_stmt 0 view .LVU2986
 13029              	.LBE8252:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 481


 13030              	.LBB8253:
 13031              	.LBI8253:
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13032              		.loc 26 572 7 is_stmt 1 view .LVU2987
 13033              	.LBB8254:
 13034              	.LBI8254:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13035              		.loc 26 308 7 view .LVU2988
 13036              	.LBB8255:
 13037              	.LBI8255:
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 13038              		.loc 26 143 2 view .LVU2989
 13039              	.LBB8256:
 13040              	.LBI8256:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13041              		.loc 34 101 5 view .LVU2990
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13042              		.loc 34 101 5 is_stmt 0 view .LVU2991
 13043              	.LBE8256:
 13044              	.LBB8257:
 13045              	.LBI8257:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13046              		.loc 19 147 7 is_stmt 1 view .LVU2992
 13047              	.LBB8258:
 13048              	.LBI8258:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13049              		.loc 20 82 7 view .LVU2993
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13050              		.loc 20 82 7 is_stmt 0 view .LVU2994
 13051              	.LBE8258:
 13052              	.LBE8257:
 13053              	.LBB8259:
 13054              	.LBI8259:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13055              		.loc 34 101 5 is_stmt 1 view .LVU2995
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13056              		.loc 34 101 5 is_stmt 0 view .LVU2996
 13057              	.LBE8259:
 13058              	.LBB8260:
 13059              	.LBI8260:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 13060              		.loc 26 102 2 is_stmt 1 view .LVU2997
 13061              	.LBB8261:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13062              		.loc 26 104 43 is_stmt 0 view .LVU2998
 13063 0032 D5E90012 		ldrd	r1, r2, [r5]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13064              		.loc 26 105 17 view .LVU2999
 13065 0036 2B60     		str	r3, [r5]
 13066              	.LVL842:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13067              		.loc 26 104 43 view .LVU3000
 13068 0038 E261     		str	r2, [r4, #28]
 13069 003a AA68     		ldr	r2, [r5, #8]
 13070 003c A161     		str	r1, [r4, #24]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13071              		.loc 26 105 33 view .LVU3001
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 482


 13072 003e 6B60     		str	r3, [r5, #4]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13073              		.loc 26 105 57 view .LVU3002
 13074 0040 AB60     		str	r3, [r5, #8]
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13075              		.loc 26 104 43 view .LVU3003
 13076 0042 2262     		str	r2, [r4, #32]
 13077              	.LBE8261:
 13078              	.LBE8260:
 13079              	.LBE8255:
 13080              	.LBE8254:
 13081              	.LBE8253:
 13082              	.LBE8266:
 13083              		.loc 30 353 68 view .LVU3004
 13084 0044 02B0     		add	sp, sp, #8
 13085              		.cfi_remember_state
 13086              		.cfi_def_cfa_offset 24
 13087              		@ sp needed
 13088 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 13089              	.LVL843:
 13090              	.L664:
 13091              		.cfi_restore_state
 13092              	.LBB8267:
 13093              	.LBB8262:
 13094              	.LBB8242:
 13095              	.LBB8238:
 13096              	.LBB8235:
 13097              	.LBB8232:
 13098              	.LBB8229:
 13099              	.LBB8226:
 13100              	.LBB8213:
 13101              	.LBB8193:
 13102              	.LBB8190:
 13103              	.LBB8181:
 13104              	.LBI8181:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13105              		.loc 18 346 7 is_stmt 1 view .LVU3005
 13106              	.LBB8182:
 13107              	.LBI8182:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13108              		.loc 21 387 7 view .LVU3006
 13109              	.LBB8183:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13110              		.loc 21 389 2 view .LVU3007
 13111 004a 0028     		cmp	r0, #0
 13112 004c EDD0     		beq	.L665
 13113 004e 08E0     		b	.L663
 13114              	.LVL844:
 13115              	.L670:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13116              		.loc 21 389 2 is_stmt 0 view .LVU3008
 13117              	.LBE8183:
 13118              	.LBE8182:
 13119              	.LBE8181:
 13120              	.LBE8190:
 13121              	.LBE8193:
 13122              	.LBE8213:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 483


 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13123              		.loc 22 219 13 view .LVU3009
 13124 0050 0022     		movs	r2, #0
 13125 0052 01A9     		add	r1, sp, #4
 13126 0054 2046     		mov	r0, r4
 13127              	.LVL845:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13128              		.loc 22 219 13 view .LVU3010
 13129 0056 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 13130              	.LVL846:
 13131              	.LBB8214:
 13132              	.LBB8215:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13133              		.loc 18 211 31 view .LVU3011
 13134 005a 019B     		ldr	r3, [sp, #4]
 13135              	.LBE8215:
 13136              	.LBE8214:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13137              		.loc 22 219 13 view .LVU3012
 13138 005c 0746     		mov	r7, r0
 13139              	.LVL847:
 13140              	.LBB8217:
 13141              	.LBI8217:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 13142              		.loc 18 178 7 is_stmt 1 view .LVU3013
 13143              	.LBB8218:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13144              		.loc 18 179 26 is_stmt 0 view .LVU3014
 13145 005e 2060     		str	r0, [r4]
 13146              	.LVL848:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13147              		.loc 18 179 26 view .LVU3015
 13148              	.LBE8218:
 13149              	.LBE8217:
 13150              	.LBB8219:
 13151              	.LBI8214:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 13152              		.loc 18 210 7 is_stmt 1 view .LVU3016
 13153              	.LBB8216:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13154              		.loc 18 211 31 is_stmt 0 view .LVU3017
 13155 0060 A360     		str	r3, [r4, #8]
 13156              	.LVL849:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13157              		.loc 18 211 31 view .LVU3018
 13158              	.LBE8216:
 13159              	.LBE8219:
 13160              	.LBB8220:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13161              		.loc 18 186 7 is_stmt 1 view .LVU3019
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13162              		.loc 18 186 7 is_stmt 0 view .LVU3020
 13163              	.LBE8220:
 13164              	.LBB8221:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 13165              		.loc 18 396 7 is_stmt 1 view .LVU3021
 13166              	.LBB8194:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 484


 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13167              		.loc 18 346 7 view .LVU3022
 13168              	.LBB8191:
 13169              	.LBB8188:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13170              		.loc 18 346 7 view .LVU3023
 13171              	.LBB8186:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13172              		.loc 21 387 7 view .LVU3024
 13173              	.LBB8184:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13174              		.loc 21 389 2 view .LVU3025
 13175              	.L663:
 13176              		.loc 21 395 2 view .LVU3026
 13177              		.loc 21 395 49 is_stmt 0 view .LVU3027
 13178 0062 3246     		mov	r2, r6
 13179 0064 3846     		mov	r0, r7
 13180 0066 4146     		mov	r1, r8
 13181 0068 FFF7FEFF 		bl	memcpy
 13182              	.LVL850:
 13183              	.LBE8184:
 13184              	.LBE8186:
 13185              	.LBE8188:
 13186              	.LBE8191:
 13187              	.LBE8194:
 13188              	.LBE8221:
 13189              		.loc 22 232 15 view .LVU3028
 13190 006c 019E     		ldr	r6, [sp, #4]
 13191              	.LVL851:
 13192              	.LBB8222:
 13193              	.LBB8211:
 13194              	.LBB8209:
 13195              	.LBB8206:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13196              		.loc 18 187 28 view .LVU3029
 13197 006e 2768     		ldr	r7, [r4]
 13198              	.LVL852:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13199              		.loc 18 187 28 view .LVU3030
 13200              	.LBE8206:
 13201              	.LBE8209:
 13202              	.LBE8211:
 13203              	.LBE8222:
 13204              	.LBB8223:
 13205              	.LBB8195:
 13206              	.LBB8192:
 13207              	.LBB8189:
 13208              	.LBB8187:
 13209              	.LBB8185:
 13210              		.loc 21 395 66 view .LVU3031
 13211 0070 DBE7     		b	.L665
 13212              	.LBE8185:
 13213              	.LBE8187:
 13214              	.LBE8189:
 13215              	.LBE8192:
 13216              	.LBE8195:
 13217              	.LBE8223:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 485


 13218              	.LBE8226:
 13219              	.LBE8229:
 13220              	.LBE8232:
 13221              	.LBE8235:
 13222              	.LBE8238:
 13223              	.LBE8242:
 13224              	.LBE8262:
 13225              	.LBE8267:
 13226              		.cfi_endproc
 13227              	.LFE5492:
 13229              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS
 13230              		.thumb_set _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA
 13231 0072 00BF     		.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC
 13232              		.align	1
 13233              		.p2align 2,,3
 13234              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS
 13235              		.syntax unified
 13236              		.thumb
 13237              		.thumb_func
 13238              		.fpu fpv5-d16
 13240              	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EE
 13241              	.LVL853:
 13242              	.LFB5496:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13243              		.loc 30 352 12 is_stmt 1 view -0
 13244              		.cfi_startproc
 13245              		@ args = 0, pretend = 0, frame = 8
 13246              		@ frame_needed = 0, uses_anonymous_args = 0
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13247              		.loc 30 352 12 is_stmt 0 view .LVU3033
 13248 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 13249              		.cfi_def_cfa_offset 24
 13250              		.cfi_offset 4, -24
 13251              		.cfi_offset 5, -20
 13252              		.cfi_offset 6, -16
 13253              		.cfi_offset 7, -12
 13254              		.cfi_offset 8, -8
 13255              		.cfi_offset 14, -4
 13256 0004 0446     		mov	r4, r0
 13257              	.LBB8332:
 13258              	.LBB8333:
 13259              	.LBB8334:
 13260              	.LBB8335:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 13261              		.loc 18 193 51 view .LVU3034
 13262 0006 00F10807 		add	r7, r0, #8
 13263              	.LBE8335:
 13264              	.LBE8334:
 13265              	.LBE8333:
 13266              	.LBE8332:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13267              		.loc 30 352 12 view .LVU3035
 13268 000a 82B0     		sub	sp, sp, #8
 13269              		.cfi_def_cfa_offset 32
 13270              	.LBB8444:
 13271              	.LBB8424:
 13272              	.LBB8336:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 486


 13273              	.LBB8337:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13274              		.loc 21 357 25 view .LVU3036
 13275 000c 0846     		mov	r0, r1
 13276              	.LVL854:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13277              		.loc 21 357 25 view .LVU3037
 13278              	.LBE8337:
 13279              	.LBE8336:
 13280              	.LBB8341:
 13281              	.LBB8342:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13282              		.loc 18 157 35 view .LVU3038
 13283 000e 2760     		str	r7, [r4]
 13284              	.LBE8342:
 13285              	.LBE8341:
 13286              	.LBE8424:
 13287              	.LBE8444:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13288              		.loc 30 352 12 view .LVU3039
 13289 0010 8846     		mov	r8, r1
 13290              	.LVL855:
 13291              	.LBB8445:
 13292              	.LBB8425:
 13293              	.LBI8425:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13294              		.loc 34 76 5 is_stmt 1 view .LVU3040
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13295              		.loc 34 76 5 is_stmt 0 view .LVU3041
 13296              	.LBE8425:
 13297              	.LBB8426:
 13298              	.LBI8426:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 13299              		.loc 19 144 7 is_stmt 1 view .LVU3042
 13300              	.LBB8427:
 13301              	.LBI8427:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13302              		.loc 20 79 7 view .LVU3043
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13303              		.loc 20 79 7 is_stmt 0 view .LVU3044
 13304              	.LBE8427:
 13305              	.LBE8426:
 13306              	.LBB8428:
 13307              	.LBI8333:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 13308              		.loc 18 525 7 is_stmt 1 view .LVU3045
 13309              	.LBB8346:
 13310              	.LBI8334:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13311              		.loc 18 190 7 view .LVU3046
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13312              		.loc 18 190 7 is_stmt 0 view .LVU3047
 13313              	.LBE8346:
 13314              	.LBB8347:
 13315              	.LBI8341:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 13316              		.loc 18 156 2 is_stmt 1 view .LVU3048
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 487


 13317              	.LBB8345:
 13318              	.LBB8343:
 13319              	.LBI8343:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13320              		.loc 19 147 7 view .LVU3049
 13321              	.LBB8344:
 13322              	.LBI8344:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13323              		.loc 20 82 7 view .LVU3050
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13324              		.loc 20 82 7 is_stmt 0 view .LVU3051
 13325              	.LBE8344:
 13326              	.LBE8343:
 13327              	.LBE8345:
 13328              	.LBE8347:
 13329              	.LBB8348:
 13330              	.LBI8336:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13331              		.loc 21 351 7 is_stmt 1 view .LVU3052
 13332              	.LBB8338:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13333              		.loc 21 357 2 view .LVU3053
 13334              	.LBE8338:
 13335              	.LBE8348:
 13336              	.LBE8428:
 13337              	.LBE8445:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13338              		.loc 30 352 12 is_stmt 0 view .LVU3054
 13339 0012 1546     		mov	r5, r2
 13340              	.LBB8446:
 13341              	.LBB8429:
 13342              	.LBB8349:
 13343              	.LBB8339:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13344              		.loc 21 357 25 view .LVU3055
 13345 0014 FFF7FEFF 		bl	strlen
 13346              	.LVL856:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13347              		.loc 21 357 25 view .LVU3056
 13348              	.LBE8339:
 13349              	.LBE8349:
 13350              	.LBB8350:
 13351              	.LBB8351:
 13352              	.LBB8352:
 13353              	.LBB8353:
 13354              	.LBB8354:
 13355              	.LBB8355:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 13356              		.loc 22 217 2 view .LVU3057
 13357 0018 0F28     		cmp	r0, #15
 13358              	.LBE8355:
 13359              	.LBE8354:
 13360              	.LBE8353:
 13361              	.LBE8352:
 13362              	.LBE8351:
 13363              	.LBE8350:
 13364              	.LBB8420:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 488


 13365              	.LBB8340:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13366              		.loc 21 357 25 view .LVU3058
 13367 001a 0646     		mov	r6, r0
 13368              	.LVL857:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13369              		.loc 21 357 25 view .LVU3059
 13370              	.LBE8340:
 13371              	.LBE8420:
 13372              	.LBB8421:
 13373              	.LBI8350:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 13374              		.loc 18 263 9 is_stmt 1 view .LVU3060
 13375              	.LBB8417:
 13376              	.LBB8414:
 13377              	.LBI8352:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 13378              		.loc 18 243 9 view .LVU3061
 13379              	.LBB8411:
 13380              	.LBB8408:
 13381              	.LBI8354:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 13382              		.loc 22 206 7 view .LVU3062
 13383              	.LBB8405:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 13384              		.loc 22 215 12 is_stmt 0 view .LVU3063
 13385 001c 0190     		str	r0, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 13386              		.loc 22 217 2 view .LVU3064
 13387 001e 17D8     		bhi	.L680
 13388              	.LVL858:
 13389              	.LBB8356:
 13390              	.LBI8356:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13391              		.loc 18 186 7 is_stmt 1 view .LVU3065
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13392              		.loc 18 186 7 is_stmt 0 view .LVU3066
 13393              	.LBE8356:
 13394              	.LBB8357:
 13395              	.LBI8357:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 13396              		.loc 18 396 7 is_stmt 1 view .LVU3067
 13397              	.LBB8358:
 13398              	.LBI8358:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13399              		.loc 18 346 7 view .LVU3068
 13400              	.LBB8359:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 13401              		.loc 18 348 2 is_stmt 0 view .LVU3069
 13402 0020 0128     		cmp	r0, #1
 13403 0022 12D1     		bne	.L674
 13404              	.LVL859:
 13405              	.LBB8360:
 13406              	.LBI8360:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 13407              		.loc 21 321 7 is_stmt 1 view .LVU3070
 13408              	.LBB8361:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 489


 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13409              		.loc 21 322 9 view .LVU3071
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13410              		.loc 21 322 14 is_stmt 0 view .LVU3072
 13411 0024 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 13412 0028 2372     		strb	r3, [r4, #8]
 13413              	.LVL860:
 13414              	.L675:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13415              		.loc 21 322 14 view .LVU3073
 13416              	.LBE8361:
 13417              	.LBE8360:
 13418              	.LBE8359:
 13419              	.LBE8358:
 13420              	.LBE8357:
 13421              	.LBB8377:
 13422              	.LBI8377:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13423              		.loc 18 214 7 is_stmt 1 view .LVU3074
 13424              	.LBB8378:
 13425              	.LBB8379:
 13426              	.LBI8379:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 13427              		.loc 18 182 7 view .LVU3075
 13428              	.LBE8379:
 13429              	.LBB8381:
 13430              	.LBB8382:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13431              		.loc 21 322 14 is_stmt 0 view .LVU3076
 13432 002a 0023     		movs	r3, #0
 13433              	.LBE8382:
 13434              	.LBE8381:
 13435              	.LBB8385:
 13436              	.LBB8380:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13437              		.loc 18 183 26 view .LVU3077
 13438 002c 6660     		str	r6, [r4, #4]
 13439              	.LVL861:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13440              		.loc 18 183 26 view .LVU3078
 13441              	.LBE8380:
 13442              	.LBE8385:
 13443              	.LBB8386:
 13444              	.LBI8386:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13445              		.loc 18 186 7 is_stmt 1 view .LVU3079
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13446              		.loc 18 186 7 is_stmt 0 view .LVU3080
 13447              	.LBE8386:
 13448              	.LBB8388:
 13449              	.LBI8381:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 13450              		.loc 21 321 7 is_stmt 1 view .LVU3081
 13451              	.LBB8383:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13452              		.loc 21 322 9 view .LVU3082
 13453              	.LBE8383:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 490


 13454              	.LBE8388:
 13455              	.LBE8378:
 13456              	.LBE8377:
 13457              	.LBE8405:
 13458              	.LBE8408:
 13459              	.LBE8411:
 13460              	.LBE8414:
 13461              	.LBE8417:
 13462              	.LBE8421:
 13463              	.LBE8429:
 13464              	.LBE8446:
 13465              		.loc 30 353 68 is_stmt 0 view .LVU3083
 13466 002e 2046     		mov	r0, r4
 13467              	.LBB8447:
 13468              	.LBB8430:
 13469              	.LBB8422:
 13470              	.LBB8418:
 13471              	.LBB8415:
 13472              	.LBB8412:
 13473              	.LBB8409:
 13474              	.LBB8406:
 13475              	.LBB8393:
 13476              	.LBB8391:
 13477              	.LBB8389:
 13478              	.LBB8384:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13479              		.loc 21 322 14 view .LVU3084
 13480 0030 BB55     		strb	r3, [r7, r6]
 13481              	.LVL862:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13482              		.loc 21 322 14 view .LVU3085
 13483              	.LBE8384:
 13484              	.LBE8389:
 13485              	.LBE8391:
 13486              	.LBE8393:
 13487              	.LBE8406:
 13488              	.LBE8409:
 13489              	.LBE8412:
 13490              	.LBE8415:
 13491              	.LBE8418:
 13492              	.LBE8422:
 13493              	.LBE8430:
 13494              	.LBB8431:
 13495              	.LBI8431:
 13496              		.loc 19 162 7 is_stmt 1 view .LVU3086
 13497              	.LBB8432:
 13498              	.LBI8432:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13499              		.loc 20 89 7 view .LVU3087
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13500              		.loc 20 89 7 is_stmt 0 view .LVU3088
 13501              	.LBE8432:
 13502              	.LBE8431:
 13503              	.LBB8433:
 13504              	.LBI8433:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13505              		.loc 34 76 5 is_stmt 1 view .LVU3089
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 491


  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13506              		.loc 34 76 5 is_stmt 0 view .LVU3090
 13507              	.LBE8433:
 13508              	.LBB8434:
 13509              	.LBI8434:
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13510              		.loc 26 572 7 is_stmt 1 view .LVU3091
 13511              	.LBB8435:
 13512              	.LBI8435:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13513              		.loc 26 308 7 view .LVU3092
 13514              	.LBB8436:
 13515              	.LBI8436:
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 13516              		.loc 26 143 2 view .LVU3093
 13517              	.LBB8437:
 13518              	.LBI8437:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13519              		.loc 34 101 5 view .LVU3094
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13520              		.loc 34 101 5 is_stmt 0 view .LVU3095
 13521              	.LBE8437:
 13522              	.LBB8438:
 13523              	.LBI8438:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13524              		.loc 19 147 7 is_stmt 1 view .LVU3096
 13525              	.LBB8439:
 13526              	.LBI8439:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13527              		.loc 20 82 7 view .LVU3097
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13528              		.loc 20 82 7 is_stmt 0 view .LVU3098
 13529              	.LBE8439:
 13530              	.LBE8438:
 13531              	.LBB8440:
 13532              	.LBI8440:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13533              		.loc 34 101 5 is_stmt 1 view .LVU3099
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13534              		.loc 34 101 5 is_stmt 0 view .LVU3100
 13535              	.LBE8440:
 13536              	.LBB8441:
 13537              	.LBI8441:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 13538              		.loc 26 102 2 is_stmt 1 view .LVU3101
 13539              	.LBB8442:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13540              		.loc 26 104 43 is_stmt 0 view .LVU3102
 13541 0032 D5E90012 		ldrd	r1, r2, [r5]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13542              		.loc 26 105 17 view .LVU3103
 13543 0036 2B60     		str	r3, [r5]
 13544              	.LVL863:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13545              		.loc 26 104 43 view .LVU3104
 13546 0038 E261     		str	r2, [r4, #28]
 13547 003a AA68     		ldr	r2, [r5, #8]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 492


 13548 003c A161     		str	r1, [r4, #24]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13549              		.loc 26 105 33 view .LVU3105
 13550 003e 6B60     		str	r3, [r5, #4]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13551              		.loc 26 105 57 view .LVU3106
 13552 0040 AB60     		str	r3, [r5, #8]
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13553              		.loc 26 104 43 view .LVU3107
 13554 0042 2262     		str	r2, [r4, #32]
 13555              	.LBE8442:
 13556              	.LBE8441:
 13557              	.LBE8436:
 13558              	.LBE8435:
 13559              	.LBE8434:
 13560              	.LBE8447:
 13561              		.loc 30 353 68 view .LVU3108
 13562 0044 02B0     		add	sp, sp, #8
 13563              		.cfi_remember_state
 13564              		.cfi_def_cfa_offset 24
 13565              		@ sp needed
 13566 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 13567              	.LVL864:
 13568              	.L674:
 13569              		.cfi_restore_state
 13570              	.LBB8448:
 13571              	.LBB8443:
 13572              	.LBB8423:
 13573              	.LBB8419:
 13574              	.LBB8416:
 13575              	.LBB8413:
 13576              	.LBB8410:
 13577              	.LBB8407:
 13578              	.LBB8394:
 13579              	.LBB8374:
 13580              	.LBB8371:
 13581              	.LBB8362:
 13582              	.LBI8362:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13583              		.loc 18 346 7 is_stmt 1 view .LVU3109
 13584              	.LBB8363:
 13585              	.LBI8363:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13586              		.loc 21 387 7 view .LVU3110
 13587              	.LBB8364:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13588              		.loc 21 389 2 view .LVU3111
 13589 004a 0028     		cmp	r0, #0
 13590 004c EDD0     		beq	.L675
 13591 004e 08E0     		b	.L673
 13592              	.LVL865:
 13593              	.L680:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13594              		.loc 21 389 2 is_stmt 0 view .LVU3112
 13595              	.LBE8364:
 13596              	.LBE8363:
 13597              	.LBE8362:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 493


 13598              	.LBE8371:
 13599              	.LBE8374:
 13600              	.LBE8394:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13601              		.loc 22 219 13 view .LVU3113
 13602 0050 0022     		movs	r2, #0
 13603 0052 01A9     		add	r1, sp, #4
 13604 0054 2046     		mov	r0, r4
 13605              	.LVL866:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13606              		.loc 22 219 13 view .LVU3114
 13607 0056 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 13608              	.LVL867:
 13609              	.LBB8395:
 13610              	.LBB8396:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13611              		.loc 18 211 31 view .LVU3115
 13612 005a 019B     		ldr	r3, [sp, #4]
 13613              	.LBE8396:
 13614              	.LBE8395:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13615              		.loc 22 219 13 view .LVU3116
 13616 005c 0746     		mov	r7, r0
 13617              	.LVL868:
 13618              	.LBB8398:
 13619              	.LBI8398:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 13620              		.loc 18 178 7 is_stmt 1 view .LVU3117
 13621              	.LBB8399:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13622              		.loc 18 179 26 is_stmt 0 view .LVU3118
 13623 005e 2060     		str	r0, [r4]
 13624              	.LVL869:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13625              		.loc 18 179 26 view .LVU3119
 13626              	.LBE8399:
 13627              	.LBE8398:
 13628              	.LBB8400:
 13629              	.LBI8395:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 13630              		.loc 18 210 7 is_stmt 1 view .LVU3120
 13631              	.LBB8397:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13632              		.loc 18 211 31 is_stmt 0 view .LVU3121
 13633 0060 A360     		str	r3, [r4, #8]
 13634              	.LVL870:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13635              		.loc 18 211 31 view .LVU3122
 13636              	.LBE8397:
 13637              	.LBE8400:
 13638              	.LBB8401:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13639              		.loc 18 186 7 is_stmt 1 view .LVU3123
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13640              		.loc 18 186 7 is_stmt 0 view .LVU3124
 13641              	.LBE8401:
 13642              	.LBB8402:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 494


 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 13643              		.loc 18 396 7 is_stmt 1 view .LVU3125
 13644              	.LBB8375:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13645              		.loc 18 346 7 view .LVU3126
 13646              	.LBB8372:
 13647              	.LBB8369:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13648              		.loc 18 346 7 view .LVU3127
 13649              	.LBB8367:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13650              		.loc 21 387 7 view .LVU3128
 13651              	.LBB8365:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13652              		.loc 21 389 2 view .LVU3129
 13653              	.L673:
 13654              		.loc 21 395 2 view .LVU3130
 13655              		.loc 21 395 49 is_stmt 0 view .LVU3131
 13656 0062 3246     		mov	r2, r6
 13657 0064 3846     		mov	r0, r7
 13658 0066 4146     		mov	r1, r8
 13659 0068 FFF7FEFF 		bl	memcpy
 13660              	.LVL871:
 13661              	.LBE8365:
 13662              	.LBE8367:
 13663              	.LBE8369:
 13664              	.LBE8372:
 13665              	.LBE8375:
 13666              	.LBE8402:
 13667              		.loc 22 232 15 view .LVU3132
 13668 006c 019E     		ldr	r6, [sp, #4]
 13669              	.LVL872:
 13670              	.LBB8403:
 13671              	.LBB8392:
 13672              	.LBB8390:
 13673              	.LBB8387:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13674              		.loc 18 187 28 view .LVU3133
 13675 006e 2768     		ldr	r7, [r4]
 13676              	.LVL873:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13677              		.loc 18 187 28 view .LVU3134
 13678              	.LBE8387:
 13679              	.LBE8390:
 13680              	.LBE8392:
 13681              	.LBE8403:
 13682              	.LBB8404:
 13683              	.LBB8376:
 13684              	.LBB8373:
 13685              	.LBB8370:
 13686              	.LBB8368:
 13687              	.LBB8366:
 13688              		.loc 21 395 66 view .LVU3135
 13689 0070 DBE7     		b	.L675
 13690              	.LBE8366:
 13691              	.LBE8368:
 13692              	.LBE8370:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 495


 13693              	.LBE8373:
 13694              	.LBE8376:
 13695              	.LBE8404:
 13696              	.LBE8407:
 13697              	.LBE8410:
 13698              	.LBE8413:
 13699              	.LBE8416:
 13700              	.LBE8419:
 13701              	.LBE8423:
 13702              	.LBE8443:
 13703              	.LBE8448:
 13704              		.cfi_endproc
 13705              	.LFE5496:
 13707              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS
 13708              		.thumb_set _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA
 13709 0072 00BF     		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"
 13710              		.align	1
 13711              		.p2align 2,,3
 13712              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
 13713              		.syntax unified
 13714              		.thumb
 13715              		.thumb_func
 13716              		.fpu fpv5-d16
 13718              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:
 13719              	.LVL874:
 13720              	.LFB5522:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 13721              		.loc 26 553 7 is_stmt 1 view -0
 13722              		.cfi_startproc
 13723              		@ args = 0, pretend = 0, frame = 8
 13724              		@ frame_needed = 0, uses_anonymous_args = 0
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 13725              		.loc 26 553 7 is_stmt 0 view .LVU3137
 13726 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 13727              		.cfi_def_cfa_offset 32
 13728              		.cfi_offset 4, -32
 13729              		.cfi_offset 5, -28
 13730              		.cfi_offset 6, -24
 13731              		.cfi_offset 7, -20
 13732              		.cfi_offset 8, -16
 13733              		.cfi_offset 9, -12
 13734              		.cfi_offset 10, -8
 13735              		.cfi_offset 14, -4
 13736              	.LBB8549:
 13737              	.LBB8550:
 13738              	.LBB8551:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13739              		.loc 26 919 50 view .LVU3138
 13740 0004 D1E90024 		ldrd	r2, r4, [r1]
 13741              	.LBE8551:
 13742              	.LBE8550:
 13743              	.LBB8552:
 13744              	.LBB8553:
 13745              	.LBB8554:
 13746              	.LBB8555:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 13747              		.loc 26 98 47 view .LVU3139
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 496


 13748 0008 0023     		movs	r3, #0
 13749              	.LBE8555:
 13750              	.LBE8554:
 13751              	.LBE8553:
 13752              	.LBE8552:
 13753              	.LBE8549:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 13754              		.loc 26 553 7 view .LVU3140
 13755 000a 82B0     		sub	sp, sp, #8
 13756              		.cfi_def_cfa_offset 40
 13757              	.LBB8750:
 13758              	.LBB8589:
 13759              	.LBB8562:
 13760              	.LBB8563:
 13761              	.LBB8564:
 13762              	.LBB8565:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13763              		.loc 26 346 18 view .LVU3141
 13764 000c A41A     		subs	r4, r4, r2
 13765              	.LBE8565:
 13766              	.LBE8564:
 13767              	.LBE8563:
 13768              	.LBE8562:
 13769              	.LBE8589:
 13770              	.LBE8750:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 13771              		.loc 26 553 7 view .LVU3142
 13772 000e 0D46     		mov	r5, r1
 13773 0010 8046     		mov	r8, r0
 13774              	.LVL875:
 13775              	.LBB8751:
 13776              	.LBB8590:
 13777              	.LBI8550:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 13778              		.loc 26 918 7 is_stmt 1 view .LVU3143
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 13779              		.loc 26 918 7 is_stmt 0 view .LVU3144
 13780              	.LBE8590:
 13781              	.LBB8591:
 13782              	.LBI8591:
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13783              		.loc 26 280 7 is_stmt 1 view .LVU3145
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13784              		.loc 26 280 7 is_stmt 0 view .LVU3146
 13785              	.LBE8591:
 13786              	.LBB8592:
 13787              	.LBI8592:
 13788              		.loc 35 97 29 is_stmt 1 view .LVU3147
 13789              	.LBB8593:
 13790              	.LBI8593:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 13791              		.loc 25 558 7 view .LVU3148
 13792              	.LBB8594:
 13793              	.LBI8594:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13794              		.loc 19 147 7 view .LVU3149
 13795              	.LBB8595:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 497


 13796              	.LBI8595:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13797              		.loc 20 82 7 view .LVU3150
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13798              		.loc 20 82 7 is_stmt 0 view .LVU3151
 13799              	.LBE8595:
 13800              	.LBE8594:
 13801              	.LBE8593:
 13802              	.LBE8592:
 13803              	.LBB8596:
 13804              	.LBI8552:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 13805              		.loc 26 303 7 is_stmt 1 view .LVU3152
 13806              	.LBB8583:
 13807              	.LBI8553:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 13808              		.loc 26 136 2 view .LVU3153
 13809              	.LBB8558:
 13810              	.LBI8558:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13811              		.loc 19 147 7 view .LVU3154
 13812              	.LBB8559:
 13813              	.LBI8559:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13814              		.loc 20 82 7 view .LVU3155
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13815              		.loc 20 82 7 is_stmt 0 view .LVU3156
 13816              	.LBE8559:
 13817              	.LBE8558:
 13818              	.LBB8560:
 13819              	.LBI8554:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 13820              		.loc 26 97 2 is_stmt 1 view .LVU3157
 13821              	.LBB8556:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 13822              		.loc 26 98 47 is_stmt 0 view .LVU3158
 13823 0012 8360     		str	r3, [r0, #8]
 13824              	.LVL876:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 13825              		.loc 26 98 47 view .LVU3159
 13826              	.LBE8556:
 13827              	.LBE8560:
 13828              	.LBE8583:
 13829              	.LBB8584:
 13830              	.LBI8562:
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 13831              		.loc 26 359 7 is_stmt 1 view .LVU3160
 13832              	.LBB8579:
 13833              	.LBB8575:
 13834              	.LBI8564:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 13835              		.loc 26 343 7 view .LVU3161
 13836              	.LBE8575:
 13837              	.LBE8579:
 13838              	.LBE8584:
 13839              	.LBB8585:
 13840              	.LBB8561:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 498


 13841              	.LBB8557:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 13842              		.loc 26 98 47 is_stmt 0 view .LVU3162
 13843 0014 C0E90033 		strd	r3, r3, [r0]
 13844              	.LBE8557:
 13845              	.LBE8561:
 13846              	.LBE8585:
 13847              	.LBB8586:
 13848              	.LBB8580:
 13849              	.LBB8576:
 13850              	.LBB8572:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13851              		.loc 26 346 18 view .LVU3163
 13852 0018 49D0     		beq	.L691
 13853              	.LVL877:
 13854              	.LBB8566:
 13855              	.LBI8566:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 13856              		.loc 25 459 7 is_stmt 1 view .LVU3164
 13857              	.LBB8567:
 13858              	.LBI8567:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 13859              		.loc 20 103 7 view .LVU3165
 13860              	.LBB8568:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 13861              		.loc 20 105 2 is_stmt 0 view .LVU3166
 13862 001a 284B     		ldr	r3, .L707
 13863 001c 9C42     		cmp	r4, r3
 13864 001e 4BD8     		bhi	.L703
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 13865              		.loc 20 115 41 view .LVU3167
 13866 0020 2046     		mov	r0, r4
 13867              	.LVL878:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 13868              		.loc 20 115 41 view .LVU3168
 13869 0022 FFF7FEFF 		bl	_Znwj
 13870              	.LVL879:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 13871              		.loc 20 115 41 view .LVU3169
 13872 0026 8246     		mov	r10, r0
 13873              	.LVL880:
 13874              	.L682:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 13875              		.loc 20 115 41 view .LVU3170
 13876              	.LBE8568:
 13877              	.LBE8567:
 13878              	.LBE8566:
 13879              	.LBE8572:
 13880              	.LBE8576:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13881              		.loc 26 363 59 view .LVU3171
 13882 0028 5444     		add	r4, r4, r10
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 13883              		.loc 26 362 26 view .LVU3172
 13884 002a C8E900AA 		strd	r10, r10, [r8]
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13885              		.loc 26 363 34 view .LVU3173
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 499


 13886 002e C8F80840 		str	r4, [r8, #8]
 13887              	.LVL881:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13888              		.loc 26 363 34 view .LVU3174
 13889              	.LBE8580:
 13890              	.LBE8586:
 13891              	.LBE8596:
 13892              	.LBB8597:
 13893              	.LBI8597:
 13894              		.loc 19 162 7 is_stmt 1 view .LVU3175
 13895              	.LBB8598:
 13896              	.LBI8598:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13897              		.loc 20 89 7 view .LVU3176
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13898              		.loc 20 89 7 is_stmt 0 view .LVU3177
 13899              	.LBE8598:
 13900              	.LBE8597:
 13901              	.LBB8599:
 13902              	.LBI8599:
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 13903              		.loc 26 820 7 is_stmt 1 view .LVU3178
 13904              	.LBB8600:
 13905              	.LBI8600:
 13906              		.file 39 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Iterators -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 500


  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1996-1998
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /** @file bits/stl_iterator.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <ext/type_traits.h>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/move.h>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/ptr_traits.h>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <type_traits>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201811L
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_constexpr_iterator 201811L
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #elif __cplusplus == 201703L
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201803L
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <compare>
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <new>
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <bits/iterator_concepts.h>
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 501


  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @addtogroup iterators
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @{
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // Weaken iterator_category _Cat to _Limit if it is derived from that,
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // otherwise use _Otherwise.
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _Cat, typename _Limit, typename _Otherwise = _Cat>
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __clamp_iter_cat
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<derived_from<_Cat, _Limit>, _Limit, _Otherwise>;
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   }
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.1 Reverse iterators
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @code
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @endcode
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  the requirement that the iterators must be safe.
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class reverse_iterator
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator current;
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<random_access_iterator<_Iterator>,
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			random_access_iterator_tag,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 502


 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			bidirectional_iterator_tag>;
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= __detail::__clamp_iter_cat<typename __traits_type::iterator_category,
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 				     random_access_iterator_tag>;
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator() : current() { }
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The copy constructor is normal.
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : current(__x.current) { }
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: current(__x.base()) { }
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return current; }
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reference to the value at @c --current
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 503


 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *--__tmp;
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_concepts >= 201907L
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires is_pointer_v<_Iterator>
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	|| requires(const _Iterator __i) { __i.operator->(); }
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--__tmp;
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _S_to_pointer(__tmp);
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The original value of @c *this
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 504


 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--()
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int)
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current - __n); }
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n)
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current -= __n;
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current + __n); }
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 505


 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n)
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current += __n;
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *(*this + __n); }
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_Iterator>
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const reverse_iterator& __i)
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_Iterator>
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && noexcept(ranges::iter_move(--std::declval<_Iterator&>())))
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = __i.base();
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return ranges::iter_move(--__tmp);
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_Iterator> _Iter2>
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const reverse_iterator& __x,
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const reverse_iterator<_Iter2>& __y)
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_copy_constructible_v<_Iterator>
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && is_nothrow_copy_constructible_v<_Iter2>
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && noexcept(ranges::iter_swap(--std::declval<_Iterator&>(),
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					       --std::declval<_Iter2&>())))
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __xtmp = __x.base();
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __ytmp = __y.base();
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  ranges::iter_swap(--__xtmp, --__ytmp);
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __p; }
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp __t)
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __t.operator->(); }
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@{
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 506


 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  A simple bool.
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators forward comparisons to their underlying base()
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus <= 201703L || ! defined __cpp_lib_concepts
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 507


 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else // C++20
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() == __y.base() } -> convertible_to<bool>; }
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() != __y.base() } -> convertible_to<bool>; }
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() != __y.base(); }
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() > __y.base() } -> convertible_to<bool>; }
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() > __y.base(); }
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 508


 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() >= __y.base() } -> convertible_to<bool>; }
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() >= __y.base(); }
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() <= __y.base() } -> convertible_to<bool>; }
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() <= __y.base(); }
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL,
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	   three_way_comparable_with<_IteratorL> _IteratorR>
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr compare_three_way_result_t<_IteratorL, _IteratorR>
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const reverse_iterator<_IteratorL>& __x,
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const reverse_iterator<_IteratorR>& __y)
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() <=> __x.base(); }
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@}
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # if __cplusplus >= 201402L
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 509


 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 2285. make_reverse_iterator
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// Generator function for reverse_iterator.
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  if __cplusplus > 201703L && defined __cpp_lib_concepts
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator1, typename _Iterator2>
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires (!sized_sentinel_for<_Iterator1, _Iterator2>)
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline constexpr bool
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     disable_sized_sentinel_for<reverse_iterator<_Iterator1>,
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			       reverse_iterator<_Iterator2>> = true;
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  endif // C++20
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # endif // C++14
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : __is_move_iterator<_Iterator>
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { };
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++11
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_back.
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class back_insert_iterator
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 510


 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr back_insert_iterator() noexcept : container(nullptr) { }
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator(_Container& __x)
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always append the value to the end of the container.
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(std::move(__value));
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 511


 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline back_insert_iterator<_Container>
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     back_inserter(_Container& __x)
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_front.
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class front_insert_iterator
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr front_insert_iterator() noexcept : container(nullptr) { }
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator(_Container& __x)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 512


 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always prepend the value to the front of the container.
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(std::move(__value));
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 513


 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline front_insert_iterator<_Container>
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     front_inserter(_Container& __x)
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  position.
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position.)
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class insert_iterator
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using _Iter = std::__detail::__range_iter_t<_Container>;
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container = nullptr;
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter = _Iter();
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename _Container::iterator		_Iter;
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter;
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator() = default;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 514


 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator(_Container& __x, _Iter __i)
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  value into the container at the place before the %iterator.
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  insert values immediately after one another.  For example,
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @code
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A and Z
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 1;
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 2;
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 3;
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @endcode
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 515


 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __i  An iterator into the container.
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr insert_iterator<_Container>
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, std::__detail::__range_iter_t<_Container> __i)
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return insert_iterator<_Container>(__x, __i); }
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container, typename _Iterator>
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline insert_iterator<_Container>
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return insert_iterator<_Container>(__x,
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					 typename _Container::iterator(__i));
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // @} group iterators
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** } // namespace
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 516


 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // using this template can instantiate different types, even if the
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _Iterator parameter is the same.
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class __normal_iterator
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator _M_current;
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef std::iterator_traits<_Iterator>		__traits_type;
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = std::__detail::__iter_concept<_Iterator>;
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(_Iterator()) { }
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 13907              		.loc 39 978 7 view .LVU3179
 13908              	.LBE8600:
 13909              	.LBE8599:
 13910              	.LBB8601:
 13911              	.LBB8602:
 13912              	.LBB8603:
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 13913              		.loc 39 979 23 is_stmt 0 view .LVU3180
 13914 0032 D5E90069 		ldrd	r6, r9, [r5]
 13915              	.LVL882:
 13916              		.loc 39 979 23 view .LVU3181
 13917              	.LBE8603:
 13918              	.LBE8602:
 13919              	.LBE8601:
 13920              	.LBB8604:
 13921              	.LBI8604:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13922              		.loc 26 276 7 is_stmt 1 view .LVU3182
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13923              		.loc 26 276 7 is_stmt 0 view .LVU3183
 13924              	.LBE8604:
 13925              	.LBB8605:
 13926              	.LBI8605:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 517


 13927              		.loc 37 323 5 is_stmt 1 view .LVU3184
 13928              	.LBB8606:
 13929              	.LBI8606:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 13930              		.loc 37 125 5 view .LVU3185
 13931              	.LBB8607:
 13932              	.LBB8608:
 13933              	.LBI8608:
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 13934              		.loc 37 84 9 view .LVU3186
 13935              	.LBB8609:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13936              		.loc 37 90 23 view .LVU3187
 13937 0036 B145     		cmp	r9, r6
 13938 0038 33D0     		beq	.L684
 13939 003a 0AF11804 		add	r4, r10, #24
 13940 003e 0AE0     		b	.L690
 13941              	.LVL883:
 13942              	.L706:
 13943              	.LBB8610:
 13944              	.LBB8611:
 13945              	.LBB8612:
 13946              	.LBB8613:
 13947              	.LBB8614:
 13948              	.LBB8615:
 13949              	.LBB8616:
 13950              	.LBB8617:
 13951              	.LBB8618:
 13952              	.LBB8619:
 13953              	.LBB8620:
 13954              	.LBB8621:
 13955              	.LBB8622:
 13956              	.LBI8622:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 13957              		.loc 21 321 7 view .LVU3188
 13958              	.LBB8623:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13959              		.loc 21 322 9 view .LVU3189
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13960              		.loc 21 322 16 is_stmt 0 view .LVU3190
 13961 0040 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 13962              	.LVL884:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13963              		.loc 21 322 14 view .LVU3191
 13964 0042 04F8103C 		strb	r3, [r4, #-16]
 13965              	.LVL885:
 13966              	.L689:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13967              		.loc 21 322 14 view .LVU3192
 13968              	.LBE8623:
 13969              	.LBE8622:
 13970              	.LBE8621:
 13971              	.LBE8620:
 13972              	.LBE8619:
 13973              	.LBB8644:
 13974              	.LBI8644:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 518


 13975              		.loc 18 214 7 is_stmt 1 view .LVU3193
 13976              	.LBB8645:
 13977              	.LBB8646:
 13978              	.LBI8646:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 13979              		.loc 18 182 7 view .LVU3194
 13980              	.LBE8646:
 13981              	.LBE8645:
 13982              	.LBE8644:
 13983              	.LBE8618:
 13984              	.LBE8617:
 13985              	.LBE8616:
 13986              	.LBE8615:
 13987              	.LBE8614:
 13988              	.LBE8613:
 13989              	.LBE8612:
 13990              	.LBE8611:
 13991              	.LBE8610:
 13992              	.LBB8730:
 13993              	.LBB8731:
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Allow iterator to const_iterator conversion
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         _GLIBCXX20_CONSTEXPR
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			  typename __enable_if<
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         : _M_current(__i.base()) { }
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Forward iterator requirements
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       pointer
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
 13994              		.loc 39 1005 2 is_stmt 0 view .LVU3195
 13995 0046 1836     		adds	r6, r6, #24
 13996              	.LVL886:
 13997              		.loc 39 1005 2 view .LVU3196
 13998              	.LBE8731:
 13999              	.LBE8730:
 14000              	.LBB8732:
 14001              	.LBB8725:
 14002              	.LBB8720:
 14003              	.LBB8697:
 14004              	.LBB8693:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 519


 14005              	.LBB8689:
 14006              	.LBB8685:
 14007              	.LBB8681:
 14008              	.LBB8677:
 14009              	.LBB8661:
 14010              	.LBB8658:
 14011              	.LBB8648:
 14012              	.LBB8649:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14013              		.loc 21 322 14 view .LVU3197
 14014 0048 0023     		movs	r3, #0
 14015              	.LBE8649:
 14016              	.LBE8648:
 14017              	.LBB8652:
 14018              	.LBB8647:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14019              		.loc 18 183 26 view .LVU3198
 14020 004a 44F8145C 		str	r5, [r4, #-20]
 14021              	.LVL887:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14022              		.loc 18 183 26 view .LVU3199
 14023              	.LBE8647:
 14024              	.LBE8652:
 14025              	.LBB8653:
 14026              	.LBI8653:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14027              		.loc 18 186 7 is_stmt 1 view .LVU3200
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14028              		.loc 18 186 7 is_stmt 0 view .LVU3201
 14029              	.LBE8653:
 14030              	.LBB8655:
 14031              	.LBI8648:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 14032              		.loc 21 321 7 is_stmt 1 view .LVU3202
 14033              	.LBB8650:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14034              		.loc 21 322 9 view .LVU3203
 14035              	.LBE8650:
 14036              	.LBE8655:
 14037              	.LBE8658:
 14038              	.LBE8661:
 14039              	.LBE8677:
 14040              	.LBE8681:
 14041              	.LBE8685:
 14042              	.LBE8689:
 14043              	.LBE8693:
 14044              	.LBE8697:
 14045              	.LBE8720:
 14046              	.LBE8725:
 14047              	.LBE8732:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 14048              		.loc 37 90 23 is_stmt 0 view .LVU3204
 14049 004e 1834     		adds	r4, r4, #24
 14050              	.LVL888:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 14051              		.loc 37 90 23 view .LVU3205
 14052 0050 4E45     		cmp	r6, r9
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 520


 14053              	.LBB8733:
 14054              	.LBB8726:
 14055              	.LBB8721:
 14056              	.LBB8698:
 14057              	.LBB8694:
 14058              	.LBB8690:
 14059              	.LBB8686:
 14060              	.LBB8682:
 14061              	.LBB8678:
 14062              	.LBB8662:
 14063              	.LBB8659:
 14064              	.LBB8656:
 14065              	.LBB8651:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14066              		.loc 21 322 14 view .LVU3206
 14067 0052 4355     		strb	r3, [r0, r5]
 14068              	.LVL889:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14069              		.loc 21 322 14 view .LVU3207
 14070              	.LBE8651:
 14071              	.LBE8656:
 14072              	.LBE8659:
 14073              	.LBE8662:
 14074              	.LBE8678:
 14075              	.LBE8682:
 14076              	.LBE8686:
 14077              	.LBE8690:
 14078              	.LBE8694:
 14079              	.LBE8698:
 14080              	.LBE8721:
 14081              	.LBE8726:
 14082              	.LBE8733:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 14083              		.loc 37 90 8 is_stmt 1 view .LVU3208
 14084              	.LBB8734:
 14085              	.LBI8730:
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 14086              		.loc 39 1003 7 view .LVU3209
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 14087              		.loc 39 1003 7 is_stmt 0 view .LVU3210
 14088              	.LBE8734:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 14089              		.loc 37 90 23 is_stmt 1 view .LVU3211
 14090 0054 25D0     		beq	.L684
 14091              	.L690:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 14092              		.loc 37 90 23 is_stmt 0 view .LVU3212
 14093 0056 A4F11000 		sub	r0, r4, #16
 14094              	.LBB8735:
 14095              	.LBB8727:
 14096              	.LBB8722:
 14097              	.LBB8699:
 14098              	.LBB8700:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14099              		.loc 18 908 16 view .LVU3213
 14100 005a 7568     		ldr	r5, [r6, #4]
 14101 005c A4F11803 		sub	r3, r4, #24
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 521


 14102              	.LVL890:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14103              		.loc 18 908 16 view .LVU3214
 14104              	.LBE8700:
 14105              	.LBE8699:
 14106              	.LBE8722:
 14107              	.LBE8727:
 14108              	.LBI8610:
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 14109              		.loc 27 108 5 is_stmt 1 view .LVU3215
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 14110              		.loc 27 108 5 is_stmt 0 view .LVU3216
 14111              	.LBE8735:
 14112              	.LBE8609:
 14113              	.LBE8608:
 14114              	.LBE8607:
 14115              	.LBE8606:
 14116              	.LBE8605:
 14117              	.LBE8751:
 14118              		.loc 23 175 3 is_stmt 1 view .LVU3217
 14119              	.LBB8752:
 14120              	.LBB8746:
 14121              	.LBB8744:
 14122              	.LBB8742:
 14123              	.LBB8740:
 14124              	.LBB8738:
 14125              	.LBB8736:
 14126              	.LBB8728:
 14127              	.LBI8611:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 14128              		.loc 18 448 7 view .LVU3218
 14129              	.LBB8723:
 14130              	.LBB8701:
 14131              	.LBI8701:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14132              		.loc 18 190 7 view .LVU3219
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14133              		.loc 18 190 7 is_stmt 0 view .LVU3220
 14134              	.LBE8701:
 14135              	.LBB8702:
 14136              	.LBI8702:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 14137              		.loc 18 290 7 is_stmt 1 view .LVU3221
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 14138              		.loc 18 290 7 is_stmt 0 view .LVU3222
 14139              	.LBE8702:
 14140              	.LBB8703:
 14141              	.LBI8703:
 14142              		.loc 35 97 29 is_stmt 1 view .LVU3223
 14143              	.LBB8704:
 14144              	.LBI8704:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 14145              		.loc 25 558 7 view .LVU3224
 14146              	.LBB8705:
 14147              	.LBI8705:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14148              		.loc 19 147 7 view .LVU3225
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 522


 14149              	.LBB8706:
 14150              	.LBI8706:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14151              		.loc 20 82 7 view .LVU3226
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14152              		.loc 20 82 7 is_stmt 0 view .LVU3227
 14153              	.LBE8706:
 14154              	.LBE8705:
 14155              	.LBE8704:
 14156              	.LBE8703:
 14157              	.LBB8707:
 14158              	.LBI8707:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 14159              		.loc 18 159 2 is_stmt 1 view .LVU3228
 14160              	.LBB8708:
 14161              	.LBB8709:
 14162              	.LBI8709:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14163              		.loc 34 101 5 view .LVU3229
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14164              		.loc 34 101 5 is_stmt 0 view .LVU3230
 14165              	.LBE8709:
 14166              	.LBB8710:
 14167              	.LBI8710:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14168              		.loc 19 147 7 is_stmt 1 view .LVU3231
 14169              	.LBB8711:
 14170              	.LBI8711:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14171              		.loc 20 82 7 view .LVU3232
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14172              		.loc 20 82 7 is_stmt 0 view .LVU3233
 14173 0060 A246     		mov	r10, r4
 14174              	.LBE8711:
 14175              	.LBE8710:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 14176              		.loc 18 160 46 view .LVU3234
 14177 0062 44F8180C 		str	r0, [r4, #-24]
 14178              	.LVL891:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 14179              		.loc 18 160 46 view .LVU3235
 14180              	.LBE8708:
 14181              	.LBE8707:
 14182              	.LBB8712:
 14183              	.LBI8712:
 14184              		.loc 19 162 7 is_stmt 1 view .LVU3236
 14185              	.LBB8713:
 14186              	.LBI8713:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14187              		.loc 20 89 7 view .LVU3237
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14188              		.loc 20 89 7 is_stmt 0 view .LVU3238
 14189              	.LBE8713:
 14190              	.LBE8712:
 14191              	.LBB8714:
 14192              	.LBI8714:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 523


 14193              		.loc 18 186 7 is_stmt 1 view .LVU3239
 14194              	.LBB8715:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14195              		.loc 18 187 28 is_stmt 0 view .LVU3240
 14196 0066 3768     		ldr	r7, [r6]
 14197              	.LVL892:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14198              		.loc 18 187 28 view .LVU3241
 14199              	.LBE8715:
 14200              	.LBE8714:
 14201              	.LBB8716:
 14202              	.LBI8716:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14203              		.loc 18 186 7 is_stmt 1 view .LVU3242
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14204              		.loc 18 186 7 is_stmt 0 view .LVU3243
 14205              	.LBE8716:
 14206              	.LBB8717:
 14207              	.LBI8699:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 14208              		.loc 18 907 7 is_stmt 1 view .LVU3244
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 14209              		.loc 18 907 7 is_stmt 0 view .LVU3245
 14210              	.LBE8717:
 14211              	.LBB8718:
 14212              	.LBI8613:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 14213              		.loc 18 263 9 is_stmt 1 view .LVU3246
 14214              	.LBB8695:
 14215              	.LBB8691:
 14216              	.LBI8615:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 14217              		.loc 18 243 9 view .LVU3247
 14218              	.LBB8687:
 14219              	.LBB8683:
 14220              	.LBI8617:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 14221              		.loc 22 206 7 view .LVU3248
 14222              	.LBB8679:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 14223              		.loc 22 211 42 is_stmt 0 view .LVU3249
 14224 0068 EF42     		cmn	r7, r5
 14225 006a 00D0     		beq	.L685
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 14226              		.loc 22 211 42 view .LVU3250
 14227 006c 0FB3     		cbz	r7, .L704
 14228              	.L685:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 14229              		.loc 22 217 2 view .LVU3251
 14230 006e 0F2D     		cmp	r5, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 14231              		.loc 22 215 12 view .LVU3252
 14232 0070 0195     		str	r5, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 14233              		.loc 22 217 2 view .LVU3253
 14234 0072 04D8     		bhi	.L705
 14235              	.LVL893:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 524


 14236              	.LBB8663:
 14237              	.LBI8663:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14238              		.loc 18 186 7 is_stmt 1 view .LVU3254
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14239              		.loc 18 186 7 is_stmt 0 view .LVU3255
 14240              	.LBE8663:
 14241              	.LBB8664:
 14242              	.LBI8619:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 14243              		.loc 18 392 7 is_stmt 1 view .LVU3256
 14244              	.LBB8640:
 14245              	.LBI8620:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14246              		.loc 18 346 7 view .LVU3257
 14247              	.LBB8636:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 14248              		.loc 18 348 2 is_stmt 0 view .LVU3258
 14249 0074 012D     		cmp	r5, #1
 14250 0076 E3D0     		beq	.L706
 14251              	.LVL894:
 14252              	.LBB8624:
 14253              	.LBI8624:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14254              		.loc 18 346 7 is_stmt 1 view .LVU3259
 14255              	.LBB8625:
 14256              	.LBI8625:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 14257              		.loc 21 387 7 view .LVU3260
 14258              	.LBB8626:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14259              		.loc 21 389 2 view .LVU3261
 14260 0078 002D     		cmp	r5, #0
 14261 007a E4D0     		beq	.L689
 14262 007c 09E0     		b	.L687
 14263              	.LVL895:
 14264              	.L705:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14265              		.loc 21 389 2 is_stmt 0 view .LVU3262
 14266              	.LBE8626:
 14267              	.LBE8625:
 14268              	.LBE8624:
 14269              	.LBE8636:
 14270              	.LBE8640:
 14271              	.LBE8664:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 14272              		.loc 22 219 13 view .LVU3263
 14273 007e 1846     		mov	r0, r3
 14274 0080 0022     		movs	r2, #0
 14275 0082 01A9     		add	r1, sp, #4
 14276 0084 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 14277              	.LVL896:
 14278              	.LBB8665:
 14279              	.LBB8666:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14280              		.loc 18 211 31 view .LVU3264
 14281 0088 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 525


 14282              	.LVL897:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14283              		.loc 18 211 31 view .LVU3265
 14284              	.LBE8666:
 14285              	.LBE8665:
 14286              	.LBB8668:
 14287              	.LBI8668:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 14288              		.loc 18 178 7 is_stmt 1 view .LVU3266
 14289              	.LBB8669:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14290              		.loc 18 179 26 is_stmt 0 view .LVU3267
 14291 008a 44F8180C 		str	r0, [r4, #-24]
 14292              	.LVL898:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14293              		.loc 18 179 26 view .LVU3268
 14294              	.LBE8669:
 14295              	.LBE8668:
 14296              	.LBB8670:
 14297              	.LBI8665:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 14298              		.loc 18 210 7 is_stmt 1 view .LVU3269
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 14299              		.loc 18 210 7 is_stmt 0 view .LVU3270
 14300              	.LBE8670:
 14301              	.LBB8671:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14302              		.loc 18 186 7 is_stmt 1 view .LVU3271
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14303              		.loc 18 186 7 is_stmt 0 view .LVU3272
 14304              	.LBE8671:
 14305              	.LBB8672:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 14306              		.loc 18 392 7 is_stmt 1 view .LVU3273
 14307              	.LBB8641:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14308              		.loc 18 346 7 view .LVU3274
 14309              	.LBB8637:
 14310              	.LBB8633:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14311              		.loc 18 346 7 view .LVU3275
 14312              	.LBB8630:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 14313              		.loc 21 387 7 view .LVU3276
 14314              	.LBB8627:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14315              		.loc 21 389 2 view .LVU3277
 14316              	.LBE8627:
 14317              	.LBE8630:
 14318              	.LBE8633:
 14319              	.LBE8637:
 14320              	.LBE8641:
 14321              	.LBE8672:
 14322              	.LBB8673:
 14323              	.LBB8667:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14324              		.loc 18 211 31 is_stmt 0 view .LVU3278
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 526


 14325 008e 44F8103C 		str	r3, [r4, #-16]
 14326              	.L687:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14327              		.loc 18 211 31 view .LVU3279
 14328              	.LBE8667:
 14329              	.LBE8673:
 14330              	.LBB8674:
 14331              	.LBB8642:
 14332              	.LBB8638:
 14333              	.LBB8634:
 14334              	.LBB8631:
 14335              	.LBB8628:
 14336              		.loc 21 395 2 is_stmt 1 view .LVU3280
 14337              		.loc 21 395 49 is_stmt 0 view .LVU3281
 14338 0092 2A46     		mov	r2, r5
 14339 0094 3946     		mov	r1, r7
 14340 0096 FFF7FEFF 		bl	memcpy
 14341              	.LVL899:
 14342              		.loc 21 395 49 view .LVU3282
 14343              	.LBE8628:
 14344              	.LBE8631:
 14345              	.LBE8634:
 14346              	.LBE8638:
 14347              	.LBE8642:
 14348              	.LBE8674:
 14349              		.loc 22 232 15 view .LVU3283
 14350 009a 019D     		ldr	r5, [sp, #4]
 14351              	.LVL900:
 14352              	.LBB8675:
 14353              	.LBB8660:
 14354              	.LBB8657:
 14355              	.LBB8654:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14356              		.loc 18 187 28 view .LVU3284
 14357 009c 54F8180C 		ldr	r0, [r4, #-24]
 14358              	.LBE8654:
 14359              	.LBE8657:
 14360              	.LBE8660:
 14361              	.LBE8675:
 14362              	.LBB8676:
 14363              	.LBB8643:
 14364              	.LBB8639:
 14365              	.LBB8635:
 14366              	.LBB8632:
 14367              	.LBB8629:
 14368              		.loc 21 395 66 view .LVU3285
 14369 00a0 D1E7     		b	.L689
 14370              	.LVL901:
 14371              	.L684:
 14372              		.loc 21 395 66 view .LVU3286
 14373              	.LBE8629:
 14374              	.LBE8632:
 14375              	.LBE8635:
 14376              	.LBE8639:
 14377              	.LBE8643:
 14378              	.LBE8676:
 14379              	.LBE8679:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 527


 14380              	.LBE8683:
 14381              	.LBE8687:
 14382              	.LBE8691:
 14383              	.LBE8695:
 14384              	.LBE8718:
 14385              	.LBE8723:
 14386              	.LBE8728:
 14387              	.LBE8736:
 14388              	.LBE8738:
 14389              	.LBE8740:
 14390              	.LBE8742:
 14391              	.LBE8744:
 14392              	.LBE8746:
 14393              	.LBE8752:
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 14394              		.loc 26 561 7 view .LVU3287
 14395 00a2 4046     		mov	r0, r8
 14396              	.LBB8753:
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 14397              		.loc 26 557 26 view .LVU3288
 14398 00a4 C8F804A0 		str	r10, [r8, #4]
 14399              	.LBE8753:
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 14400              		.loc 26 561 7 view .LVU3289
 14401 00a8 02B0     		add	sp, sp, #8
 14402              		.cfi_remember_state
 14403              		.cfi_def_cfa_offset 32
 14404              		@ sp needed
 14405 00aa BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 14406              	.LVL902:
 14407              	.L691:
 14408              		.cfi_restore_state
 14409              	.LBB8754:
 14410              	.LBB8747:
 14411              	.LBB8587:
 14412              	.LBB8581:
 14413              	.LBB8577:
 14414              	.LBB8573:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 14415              		.loc 26 346 18 view .LVU3290
 14416 00ae A246     		mov	r10, r4
 14417 00b0 BAE7     		b	.L682
 14418              	.LVL903:
 14419              	.L704:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 14420              		.loc 26 346 18 view .LVU3291
 14421              	.LBE8573:
 14422              	.LBE8577:
 14423              	.LBE8581:
 14424              	.LBE8587:
 14425              	.LBE8747:
 14426              	.LBB8748:
 14427              	.LBB8745:
 14428              	.LBB8743:
 14429              	.LBB8741:
 14430              	.LBB8739:
 14431              	.LBB8737:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 528


 14432              	.LBB8729:
 14433              	.LBB8724:
 14434              	.LBB8719:
 14435              	.LBB8696:
 14436              	.LBB8692:
 14437              	.LBB8688:
 14438              	.LBB8684:
 14439              	.LBB8680:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 14440              		.loc 22 212 28 view .LVU3292
 14441 00b2 0348     		ldr	r0, .L707+4
 14442 00b4 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 14443              	.LVL904:
 14444              	.L703:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 14445              		.loc 22 212 28 view .LVU3293
 14446              	.LBE8680:
 14447              	.LBE8684:
 14448              	.LBE8688:
 14449              	.LBE8692:
 14450              	.LBE8696:
 14451              	.LBE8719:
 14452              	.LBE8724:
 14453              	.LBE8729:
 14454              	.LBE8737:
 14455              	.LBE8739:
 14456              	.LBE8741:
 14457              	.LBE8743:
 14458              	.LBE8745:
 14459              	.LBE8748:
 14460              	.LBB8749:
 14461              	.LBB8588:
 14462              	.LBB8582:
 14463              	.LBB8578:
 14464              	.LBB8574:
 14465              	.LBB8571:
 14466              	.LBB8570:
 14467              	.LBB8569:
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14468              		.loc 20 106 26 view .LVU3294
 14469 00b8 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 14470              	.LVL905:
 14471              	.L708:
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14472              		.loc 20 106 26 view .LVU3295
 14473              		.align	2
 14474              	.L707:
 14475 00bc F8FFFF7F 		.word	2147483640
 14476 00c0 00000000 		.word	.LC9
 14477              	.LBE8569:
 14478              	.LBE8570:
 14479              	.LBE8571:
 14480              	.LBE8574:
 14481              	.LBE8578:
 14482              	.LBE8582:
 14483              	.LBE8588:
 14484              	.LBE8749:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 529


 14485              	.LBE8754:
 14486              		.cfi_endproc
 14487              	.LFE5522:
 14489              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14490              		.thumb_set _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_,_ZNSt
 14491              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 14492              		.align	2
 14493              	.LC11:
 14494 0000 50617474 		.ascii	"Pattern  \000"
 14494      65726E20 
 14494      2000
 14495 000a 0000     		.align	2
 14496              	.LC12:
 14497 000c 4E2F4120 		.ascii	"N/A      \000"
 14497      20202020 
 14497      2000
 14498 0016 0000     		.align	2
 14499              	.LC13:
 14500 0018 566F6963 		.ascii	"Voicing  \000"
 14500      696E6720 
 14500      2000
 14501 0022 0000     		.align	2
 14502              	.LC14:
 14503 0024 546F6E69 		.ascii	"Tonic    \000"
 14503      63202020 
 14503      2000
 14504 002e 0000     		.align	2
 14505              	.LC15:
 14506 0030 5363616C 		.ascii	"Scale    \000"
 14506      65202020 
 14506      2000
 14507 003a 0000     		.align	2
 14508              	.LC16:
 14509 003c 4F637461 		.ascii	"Octave   \000"
 14509      76652020 
 14509      2000
 14510 0046 0000     		.align	2
 14511              	.LC17:
 14512 0048 436C6F63 		.ascii	"Clock In \000"
 14512      6B20496E 
 14512      2000
 14513 0052 0000     		.align	2
 14514              	.LC18:
 14515 0054 49276D20 		.ascii	"I'm a debug string\000"
 14515      61206465 
 14515      62756720 
 14515      73747269 
 14515      6E6700
 14516              		.section	.text.startup.main,"ax",%progbits
 14517              		.align	1
 14518              		.p2align 2,,3
 14519              		.global	main
 14520              		.syntax unified
 14521              		.thumb
 14522              		.thumb_func
 14523              		.fpu fpv5-d16
 14525              	main:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 530


 14526              	.LFB5114:
 111:Jellybeans.cpp **** int main(void) {
 14527              		.loc 17 111 16 is_stmt 1 view -0
 14528              		.cfi_startproc
 14529              		@ Volatile: function does not return.
 14530              		@ args = 0, pretend = 0, frame = 136
 14531              		@ frame_needed = 0, uses_anonymous_args = 0
 113:Jellybeans.cpp ****     patch.Init();
 14532              		.loc 17 113 5 view .LVU3297
 111:Jellybeans.cpp **** int main(void) {
 14533              		.loc 17 111 16 is_stmt 0 view .LVU3298
 14534 0000 2DE98048 		push	{r7, fp, lr}
 14535              		.cfi_def_cfa_offset 12
 14536              		.cfi_offset 7, -12
 14537              		.cfi_offset 11, -8
 14538              		.cfi_offset 14, -4
 113:Jellybeans.cpp ****     patch.Init();
 14539              		.loc 17 113 15 view .LVU3299
 14540 0004 0021     		movs	r1, #0
 111:Jellybeans.cpp **** int main(void) {
 14541              		.loc 17 111 16 view .LVU3300
 14542 0006 A5B0     		sub	sp, sp, #148
 14543              		.cfi_def_cfa_offset 160
 113:Jellybeans.cpp ****     patch.Init();
 14544              		.loc 17 113 15 view .LVU3301
 14545 0008 BA48     		ldr	r0, .L712
 14546 000a FFF7FEFF 		bl	_ZN5daisy10DaisyPatch4InitEb
 14547              	.LVL906:
 116:Jellybeans.cpp ****     myArp = new Arp();
 14548              		.loc 17 116 5 is_stmt 1 view .LVU3302
 116:Jellybeans.cpp ****     myArp = new Arp();
 14549              		.loc 17 116 21 is_stmt 0 view .LVU3303
 14550 000e 5820     		movs	r0, #88
 14551 0010 FFF7FEFF 		bl	_Znwj
 14552              	.LVL907:
 120:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14553              		.loc 17 120 70 view .LVU3304
 14554 0014 DFF850B3 		ldr	fp, .L712+116
 116:Jellybeans.cpp ****     myArp = new Arp();
 14555              		.loc 17 116 21 view .LVU3305
 14556 0018 0446     		mov	r4, r0
 116:Jellybeans.cpp ****     myArp = new Arp();
 14557              		.loc 17 116 11 view .LVU3306
 14558 001a FFF7FEFF 		bl	_ZN10jellybeans3ArpC1Ev
 14559              	.LVL908:
 14560 001e B64B     		ldr	r3, .L712+4
 120:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14561              		.loc 17 120 70 view .LVU3307
 14562 0020 0AA8     		add	r0, sp, #40
 14563 0022 B649     		ldr	r1, .L712+8
 116:Jellybeans.cpp ****     myArp = new Arp();
 14564              		.loc 17 116 11 view .LVU3308
 14565 0024 1C60     		str	r4, [r3]
 120:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14566              		.loc 17 120 5 is_stmt 1 view .LVU3309
 14567              	.LVL909:
 14568              	.LBB9009:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 531


 14569              	.LBI9009:
 14570              		.loc 24 185 7 view .LVU3310
 14571              	.LBB9010:
 14572              	.LBI9010:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14573              		.loc 24 55 7 view .LVU3311
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14574              		.loc 24 55 7 is_stmt 0 view .LVU3312
 14575              	.LBE9010:
 14576              	.LBE9009:
 14577              	.LBB9011:
 14578              	.LBI9011:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14579              		.loc 19 144 7 is_stmt 1 view .LVU3313
 14580              	.LBB9012:
 14581              	.LBI9012:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14582              		.loc 20 79 7 view .LVU3314
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14583              		.loc 20 79 7 is_stmt 0 view .LVU3315
 14584              	.LBE9012:
 14585              	.LBE9011:
 120:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14586              		.loc 17 120 70 view .LVU3316
 14587 0026 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 14588              	.LVL910:
 14589 002a 5946     		mov	r1, fp
 14590 002c 03A8     		add	r0, sp, #12
 14591 002e 06AC     		add	r4, sp, #24
 14592 0030 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14593              	.LVL911:
 14594              	.LBB9013:
 14595              	.LBI9013:
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	std::swap(_M_functor, __x._M_functor);
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	std::swap(_M_manager, __x._M_manager);
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	std::swap(_M_invoker, __x._M_invoker);
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.3] function capacity
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Determine if the %function wrapper has a target.
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @return @c true when this %function object contains a target,
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  or @c false when it is empty.
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  This function will not throw an %exception.
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       explicit operator bool() const noexcept
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return !_M_empty(); }
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.4] function invocation
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Invokes the function targeted by @c *this.
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns the result of the target.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 532


 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @throws bad_function_call when @c !(bool)*this
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The function call operator invokes the target function object
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  stored by @c this.
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res operator()(_ArgTypes... __args) const;
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.5] function target access
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Determine the type of the target of this function object
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  wrapper.
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns the type identifier of the target function object, or
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @c typeid(void) if @c !(bool)*this.
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  This function will not throw an %exception.
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       const type_info& target_type() const noexcept;
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Access the stored target function object.
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @return Returns a pointer to the stored target function object,
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  if @c typeid(_Functor).equals(target_type()); otherwise, a NULL
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  pointer.
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        * This function does not throw exceptions.
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        * @{
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor>       _Functor* target() noexcept;
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor> const _Functor* target() const noexcept;
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // @}
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     private:
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       using _Invoker_type = _Res (*)(const _Any_data&, _ArgTypes&&...);
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Invoker_type _M_invoker;
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_deduction_guides >= 201606
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename>
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { };
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) noexcept(_Nx)
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) & noexcept(_Nx)
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 533


 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) const noexcept(_Nx)
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) const & noexcept(_Nx)
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function(_Res(*)(_ArgTypes...)) -> function<_Res(_ArgTypes...)>;
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Functor, typename _Signature = typename
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	   __function_guide_helper<decltype(&_Functor::operator())>::type>
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function(_Functor) -> function<_Signature>;
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   // Out-of-line member definitions.
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function<_Res(_ArgTypes...)>::
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function(const function& __x)
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : _Function_base()
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       if (static_cast<bool>(__x))
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_invoker = __x._M_invoker;
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_manager = __x._M_manager;
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Functor, typename, typename>
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function<_Res(_ArgTypes...)>::
 14596              		.loc 15 601 7 is_stmt 1 view .LVU3317
 14597              	.LBB9014:
 14598              	.LBB9015:
 14599              	.LBI9015:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14600              		.loc 15 240 5 view .LVU3318
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14601              		.loc 15 240 5 is_stmt 0 view .LVU3319
 14602              	.LBE9015:
 14603              	.LBB9016:
 14604              	.LBB9017:
 14605              	.LBI9017:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14606              		.loc 15 217 4 is_stmt 1 view .LVU3320
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14607              		.loc 15 217 4 is_stmt 0 view .LVU3321
 14608              	.LBE9017:
 14609              	.LBB9018:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 534


 14610              	.LBI9018:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14611              		.loc 34 101 5 is_stmt 1 view .LVU3322
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14612              		.loc 34 101 5 is_stmt 0 view .LVU3323
 14613              	.LBE9018:
 14614              	.LBB9019:
 14615              	.LBI9019:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 14616              		.loc 15 207 2 is_stmt 1 view .LVU3324
 14617              	.LBB9020:
 14618              	.LBI9020:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14619              		.loc 15 232 2 view .LVU3325
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14620              		.loc 15 232 2 is_stmt 0 view .LVU3326
 14621              	.LBE9020:
 14622              	.LBE9019:
 14623              	.LBE9016:
 14624              	.LBE9014:
 14625              	.LBE9013:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 14626              		.loc 15 87 37 is_stmt 1 view .LVU3327
 14627              		.loc 23 175 3 view .LVU3328
 14628              	.LBB9037:
 14629              	.LBB9032:
 14630              	.LBB9027:
 14631              	.LBB9025:
 14632              	.LBB9023:
 14633              	.LBB9021:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14634              		.loc 15 233 4 is_stmt 0 view .LVU3329
 14635 0034 B24B     		ldr	r3, .L712+12
 14636              	.LBE9021:
 14637              	.LBE9023:
 14638              	.LBE9025:
 14639              	.LBE9027:
 14640              	.LBE9032:
 14641              	.LBE9037:
 120:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14642              		.loc 17 120 70 view .LVU3330
 14643 0036 03AA     		add	r2, sp, #12
 14644              	.LBB9038:
 14645              	.LBB9033:
 14646              	.LBB9028:
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       : _Function_base()
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	typedef _Function_handler<_Res(_ArgTypes...), _Functor> _My_handler;
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	if (_My_handler::_M_not_empty_function(__f))
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _My_handler::_M_init_functor(_M_functor, std::move(__f));
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_invoker = &_My_handler::_M_invoke;
 14647              		.loc 15 610 17 view .LVU3331
 14648 0038 B24E     		ldr	r6, .L712+16
 14649              	.LBE9028:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 535


 14650              	.LBE9033:
 14651              	.LBE9038:
 120:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14652              		.loc 17 120 70 view .LVU3332
 14653 003a 0AA9     		add	r1, sp, #40
 14654              	.LBB9039:
 14655              	.LBB9034:
 14656              	.LBB9029:
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_manager = &_My_handler::_M_manager;
 14657              		.loc 15 611 17 view .LVU3333
 14658 003c B24D     		ldr	r5, .L712+20
 14659              	.LBE9029:
 14660              	.LBE9034:
 14661              	.LBE9039:
 120:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14662              		.loc 17 120 70 view .LVU3334
 14663 003e 10A8     		add	r0, sp, #64
 14664              	.LBB9040:
 14665              	.LBB9035:
 14666              	.LBB9030:
 14667              	.LBB9026:
 14668              	.LBB9024:
 14669              	.LBB9022:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14670              		.loc 15 233 4 view .LVU3335
 14671 0040 0693     		str	r3, [sp, #24]
 14672              	.LVL912:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14673              		.loc 15 233 4 view .LVU3336
 14674              	.LBE9022:
 14675              	.LBE9024:
 14676              	.LBE9026:
 14677              	.LBE9030:
 14678              	.LBE9035:
 14679              	.LBE9040:
 120:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14680              		.loc 17 120 70 view .LVU3337
 14681 0042 0023     		movs	r3, #0
 14682 0044 0094     		str	r4, [sp]
 121:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 14683              		.loc 17 121 63 view .LVU3338
 14684 0046 DFF82493 		ldr	r9, .L712+120
 14685              	.LBB9041:
 14686              	.LBB9042:
 14687              	.LBB9043:
 14688              	.LBB9044:
 14689              	.LBB9045:
 14690              	.LBB9046:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14691              		.loc 15 233 4 view .LVU3339
 14692 004a DFF824A3 		ldr	r10, .L712+124
 14693              	.LBE9046:
 14694              	.LBE9045:
 14695              	.LBE9044:
 14696              	.LBE9043:
 14697              	.LBE9042:
 14698              	.LBE9041:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 536


 122:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 14699              		.loc 17 122 70 view .LVU3340
 14700 004e DFF82483 		ldr	r8, .L712+128
 123:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 14701              		.loc 17 123 63 view .LVU3341
 14702 0052 AE4F     		ldr	r7, .L712+24
 132:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 14703              		.loc 17 132 22 view .LVU3342
 14704 0054 9FEDAE8A 		vldr.32	s16, .L712+28
 14705              	.LBB9059:
 14706              	.LBB9036:
 14707              	.LBB9031:
 14708              		.loc 15 611 17 view .LVU3343
 14709 0058 CDE90856 		strd	r5, r6, [sp, #32]
 14710              	.LVL913:
 14711              		.loc 15 611 17 view .LVU3344
 14712              	.LBE9031:
 14713              	.LBE9036:
 14714              	.LBE9059:
 120:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14715              		.loc 17 120 70 view .LVU3345
 14716 005c FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 14717              	.LVL914:
 14718 0060 10A9     		add	r1, sp, #64
 14719 0062 AC48     		ldr	r0, .L712+32
 14720 0064 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 14721              	.LVL915:
 120:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14722              		.loc 17 120 20 view .LVU3346
 14723 0068 10A8     		add	r0, sp, #64
 14724 006a FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 14725              	.LVL916:
 14726              	.LBB9060:
 14727              	.LBI9060:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14728              		.loc 15 303 11 is_stmt 1 view .LVU3347
 14729              	.LBB9061:
 14730 006e 2046     		mov	r0, r4
 14731 0070 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 14732              	.LVL917:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14733              		.loc 15 303 11 is_stmt 0 view .LVU3348
 14734              	.LBE9061:
 14735              	.LBE9060:
 120:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14736              		.loc 17 120 70 view .LVU3349
 14737 0074 03A8     		add	r0, sp, #12
 14738 0076 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 14739              	.LVL918:
 14740              	.LBB9062:
 14741              	.LBI9062:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 14742              		.loc 18 657 7 is_stmt 1 view .LVU3350
 14743              	.LBB9063:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14744              		.loc 18 658 19 is_stmt 0 view .LVU3351
 14745 007a 0AA8     		add	r0, sp, #40
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 537


 14746              	.LVL919:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14747              		.loc 18 658 19 view .LVU3352
 14748 007c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 14749              	.LVL920:
 14750              	.LBB9064:
 14751              	.LBI9064:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14752              		.loc 18 150 14 is_stmt 1 view .LVU3353
 14753              	.LBB9065:
 14754              	.LBI9065:
 14755              		.loc 19 162 7 view .LVU3354
 14756              	.LBB9066:
 14757              	.LBI9066:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14758              		.loc 20 89 7 view .LVU3355
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14759              		.loc 20 89 7 is_stmt 0 view .LVU3356
 14760              	.LBE9066:
 14761              	.LBE9065:
 14762              	.LBE9064:
 14763              	.LBE9063:
 14764              	.LBE9062:
 14765              	.LBB9067:
 14766              	.LBI9067:
 14767              		.loc 19 162 7 is_stmt 1 view .LVU3357
 14768              	.LBB9068:
 14769              	.LBI9068:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14770              		.loc 20 89 7 view .LVU3358
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14771              		.loc 20 89 7 is_stmt 0 view .LVU3359
 14772              	.LBE9068:
 14773              	.LBE9067:
 121:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 14774              		.loc 17 121 5 is_stmt 1 view .LVU3360
 14775              	.LBB9069:
 14776              	.LBI9069:
 14777              		.loc 24 185 7 view .LVU3361
 14778              	.LBB9070:
 14779              	.LBI9070:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14780              		.loc 24 55 7 view .LVU3362
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14781              		.loc 24 55 7 is_stmt 0 view .LVU3363
 14782              	.LBE9070:
 14783              	.LBE9069:
 14784              	.LBB9071:
 14785              	.LBI9071:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14786              		.loc 19 144 7 is_stmt 1 view .LVU3364
 14787              	.LBB9072:
 14788              	.LBI9072:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14789              		.loc 20 79 7 view .LVU3365
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14790              		.loc 20 79 7 is_stmt 0 view .LVU3366
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 538


 14791              	.LBE9072:
 14792              	.LBE9071:
 121:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 14793              		.loc 17 121 63 view .LVU3367
 14794 0080 A549     		ldr	r1, .L712+36
 14795 0082 0AA8     		add	r0, sp, #40
 14796 0084 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 14797              	.LVL921:
 14798 0088 4946     		mov	r1, r9
 14799 008a 03A8     		add	r0, sp, #12
 14800 008c FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14801              	.LVL922:
 14802              	.LBB9073:
 14803              	.LBI9041:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 14804              		.loc 15 601 7 is_stmt 1 view .LVU3368
 14805              	.LBB9057:
 14806              	.LBB9054:
 14807              	.LBI9054:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14808              		.loc 15 240 5 view .LVU3369
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14809              		.loc 15 240 5 is_stmt 0 view .LVU3370
 14810              	.LBE9054:
 14811              	.LBB9055:
 14812              	.LBB9050:
 14813              	.LBI9050:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14814              		.loc 15 217 4 is_stmt 1 view .LVU3371
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14815              		.loc 15 217 4 is_stmt 0 view .LVU3372
 14816              	.LBE9050:
 14817              	.LBB9051:
 14818              	.LBI9051:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14819              		.loc 34 101 5 is_stmt 1 view .LVU3373
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14820              		.loc 34 101 5 is_stmt 0 view .LVU3374
 14821              	.LBE9051:
 14822              	.LBB9052:
 14823              	.LBI9044:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 14824              		.loc 15 207 2 is_stmt 1 view .LVU3375
 14825              	.LBB9048:
 14826              	.LBI9045:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14827              		.loc 15 232 2 view .LVU3376
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14828              		.loc 15 232 2 is_stmt 0 view .LVU3377
 14829              	.LBE9048:
 14830              	.LBE9052:
 14831              	.LBE9055:
 14832              	.LBE9057:
 14833              	.LBE9073:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 14834              		.loc 15 87 37 is_stmt 1 view .LVU3378
 14835              		.loc 23 175 3 view .LVU3379
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 539


 121:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 14836              		.loc 17 121 63 is_stmt 0 view .LVU3380
 14837 0090 0023     		movs	r3, #0
 14838 0092 03AA     		add	r2, sp, #12
 14839 0094 0AA9     		add	r1, sp, #40
 14840 0096 0094     		str	r4, [sp]
 14841 0098 10A8     		add	r0, sp, #64
 14842              	.LBB9074:
 14843              	.LBB9058:
 14844              	.LBB9056:
 14845              	.LBB9053:
 14846              	.LBB9049:
 14847              	.LBB9047:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14848              		.loc 15 233 4 view .LVU3381
 14849 009a CDF818A0 		str	r10, [sp, #24]
 14850              	.LVL923:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14851              		.loc 15 233 4 view .LVU3382
 14852              	.LBE9047:
 14853              	.LBE9049:
 14854              	.LBE9053:
 14855              		.loc 15 611 17 view .LVU3383
 14856 009e CDE90856 		strd	r5, r6, [sp, #32]
 14857              	.LVL924:
 14858              		.loc 15 611 17 view .LVU3384
 14859              	.LBE9056:
 14860              	.LBE9058:
 14861              	.LBE9074:
 121:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 14862              		.loc 17 121 63 view .LVU3385
 14863 00a2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 14864              	.LVL925:
 14865 00a6 10A9     		add	r1, sp, #64
 14866 00a8 9C48     		ldr	r0, .L712+40
 14867 00aa FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 14868              	.LVL926:
 121:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 14869              		.loc 17 121 20 view .LVU3386
 14870 00ae 10A8     		add	r0, sp, #64
 14871 00b0 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 14872              	.LVL927:
 14873              	.LBB9075:
 14874              	.LBI9075:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14875              		.loc 15 303 11 is_stmt 1 view .LVU3387
 14876              	.LBB9076:
 14877 00b4 2046     		mov	r0, r4
 14878 00b6 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 14879              	.LVL928:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14880              		.loc 15 303 11 is_stmt 0 view .LVU3388
 14881              	.LBE9076:
 14882              	.LBE9075:
 121:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 14883              		.loc 17 121 63 view .LVU3389
 14884 00ba 03A8     		add	r0, sp, #12
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 540


 14885 00bc FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 14886              	.LVL929:
 14887              	.LBB9077:
 14888              	.LBI9077:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 14889              		.loc 18 657 7 is_stmt 1 view .LVU3390
 14890              	.LBB9078:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14891              		.loc 18 658 19 is_stmt 0 view .LVU3391
 14892 00c0 0AA8     		add	r0, sp, #40
 14893              	.LVL930:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14894              		.loc 18 658 19 view .LVU3392
 14895 00c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 14896              	.LVL931:
 14897              	.LBB9079:
 14898              	.LBI9079:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14899              		.loc 18 150 14 is_stmt 1 view .LVU3393
 14900              	.LBB9080:
 14901              	.LBI9080:
 14902              		.loc 19 162 7 view .LVU3394
 14903              	.LBB9081:
 14904              	.LBI9081:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14905              		.loc 20 89 7 view .LVU3395
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14906              		.loc 20 89 7 is_stmt 0 view .LVU3396
 14907              	.LBE9081:
 14908              	.LBE9080:
 14909              	.LBE9079:
 14910              	.LBE9078:
 14911              	.LBE9077:
 14912              	.LBB9082:
 14913              	.LBI9082:
 14914              		.loc 19 162 7 is_stmt 1 view .LVU3397
 14915              	.LBB9083:
 14916              	.LBI9083:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14917              		.loc 20 89 7 view .LVU3398
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14918              		.loc 20 89 7 is_stmt 0 view .LVU3399
 14919              	.LBE9083:
 14920              	.LBE9082:
 122:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 14921              		.loc 17 122 5 is_stmt 1 view .LVU3400
 14922              	.LBB9084:
 14923              	.LBI9084:
 14924              		.loc 24 185 7 view .LVU3401
 14925              	.LBB9085:
 14926              	.LBI9085:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14927              		.loc 24 55 7 view .LVU3402
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14928              		.loc 24 55 7 is_stmt 0 view .LVU3403
 14929              	.LBE9085:
 14930              	.LBE9084:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 541


 14931              	.LBB9086:
 14932              	.LBI9086:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14933              		.loc 19 144 7 is_stmt 1 view .LVU3404
 14934              	.LBB9087:
 14935              	.LBI9087:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14936              		.loc 20 79 7 view .LVU3405
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14937              		.loc 20 79 7 is_stmt 0 view .LVU3406
 14938              	.LBE9087:
 14939              	.LBE9086:
 122:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 14940              		.loc 17 122 70 view .LVU3407
 14941 00c6 9649     		ldr	r1, .L712+44
 14942 00c8 0AA8     		add	r0, sp, #40
 14943 00ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 14944              	.LVL932:
 14945 00ce 4146     		mov	r1, r8
 14946 00d0 03A8     		add	r0, sp, #12
 14947 00d2 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14948              	.LVL933:
 14949              	.LBB9088:
 14950              	.LBI9088:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 14951              		.loc 15 601 7 is_stmt 1 view .LVU3408
 14952              	.LBB9089:
 14953              	.LBB9090:
 14954              	.LBI9090:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14955              		.loc 15 240 5 view .LVU3409
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14956              		.loc 15 240 5 is_stmt 0 view .LVU3410
 14957              	.LBE9090:
 14958              	.LBB9091:
 14959              	.LBB9092:
 14960              	.LBI9092:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14961              		.loc 15 217 4 is_stmt 1 view .LVU3411
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14962              		.loc 15 217 4 is_stmt 0 view .LVU3412
 14963              	.LBE9092:
 14964              	.LBB9093:
 14965              	.LBI9093:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14966              		.loc 34 101 5 is_stmt 1 view .LVU3413
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14967              		.loc 34 101 5 is_stmt 0 view .LVU3414
 14968              	.LBE9093:
 14969              	.LBB9094:
 14970              	.LBI9094:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 14971              		.loc 15 207 2 is_stmt 1 view .LVU3415
 14972              	.LBB9095:
 14973              	.LBI9095:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14974              		.loc 15 232 2 view .LVU3416
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 542


 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14975              		.loc 15 232 2 is_stmt 0 view .LVU3417
 14976              	.LBE9095:
 14977              	.LBE9094:
 14978              	.LBE9091:
 14979              	.LBE9089:
 14980              	.LBE9088:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 14981              		.loc 15 87 37 is_stmt 1 view .LVU3418
 14982              		.loc 23 175 3 view .LVU3419
 14983              	.LBB9108:
 14984              	.LBB9105:
 14985              	.LBB9102:
 14986              	.LBB9100:
 14987              	.LBB9098:
 14988              	.LBB9096:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14989              		.loc 15 233 4 is_stmt 0 view .LVU3420
 14990 00d6 934B     		ldr	r3, .L712+48
 14991              	.LBE9096:
 14992              	.LBE9098:
 14993              	.LBE9100:
 14994              	.LBE9102:
 14995              	.LBE9105:
 14996              	.LBE9108:
 122:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 14997              		.loc 17 122 70 view .LVU3421
 14998 00d8 03AA     		add	r2, sp, #12
 14999 00da 0AA9     		add	r1, sp, #40
 15000 00dc 0094     		str	r4, [sp]
 15001 00de 10A8     		add	r0, sp, #64
 15002              	.LBB9109:
 15003              	.LBB9106:
 15004              	.LBB9103:
 15005              	.LBB9101:
 15006              	.LBB9099:
 15007              	.LBB9097:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15008              		.loc 15 233 4 view .LVU3422
 15009 00e0 0693     		str	r3, [sp, #24]
 15010              	.LVL934:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15011              		.loc 15 233 4 view .LVU3423
 15012              	.LBE9097:
 15013              	.LBE9099:
 15014              	.LBE9101:
 15015              	.LBE9103:
 15016              	.LBE9106:
 15017              	.LBE9109:
 122:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 15018              		.loc 17 122 70 view .LVU3424
 15019 00e2 0023     		movs	r3, #0
 15020              	.LBB9110:
 15021              	.LBB9107:
 15022              	.LBB9104:
 15023              		.loc 15 611 17 view .LVU3425
 15024 00e4 CDE90856 		strd	r5, r6, [sp, #32]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 543


 15025              	.LBE9104:
 15026              	.LBE9107:
 15027              	.LBE9110:
 122:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 15028              		.loc 17 122 70 view .LVU3426
 15029 00e8 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15030              	.LVL935:
 15031 00ec 10A9     		add	r1, sp, #64
 15032 00ee 8E48     		ldr	r0, .L712+52
 15033 00f0 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15034              	.LVL936:
 122:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 15035              		.loc 17 122 20 view .LVU3427
 15036 00f4 10A8     		add	r0, sp, #64
 15037 00f6 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15038              	.LVL937:
 15039              	.LBB9111:
 15040              	.LBI9111:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15041              		.loc 15 303 11 is_stmt 1 view .LVU3428
 15042              	.LBB9112:
 15043 00fa 2046     		mov	r0, r4
 15044 00fc FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15045              	.LVL938:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15046              		.loc 15 303 11 is_stmt 0 view .LVU3429
 15047              	.LBE9112:
 15048              	.LBE9111:
 122:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 15049              		.loc 17 122 70 view .LVU3430
 15050 0100 03A8     		add	r0, sp, #12
 15051 0102 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15052              	.LVL939:
 15053              	.LBB9113:
 15054              	.LBI9113:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15055              		.loc 18 657 7 is_stmt 1 view .LVU3431
 15056              	.LBB9114:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15057              		.loc 18 658 19 is_stmt 0 view .LVU3432
 15058 0106 0AA8     		add	r0, sp, #40
 15059              	.LVL940:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15060              		.loc 18 658 19 view .LVU3433
 15061 0108 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15062              	.LVL941:
 15063              	.LBB9115:
 15064              	.LBI9115:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15065              		.loc 18 150 14 is_stmt 1 view .LVU3434
 15066              	.LBB9116:
 15067              	.LBI9116:
 15068              		.loc 19 162 7 view .LVU3435
 15069              	.LBB9117:
 15070              	.LBI9117:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15071              		.loc 20 89 7 view .LVU3436
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 544


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15072              		.loc 20 89 7 is_stmt 0 view .LVU3437
 15073              	.LBE9117:
 15074              	.LBE9116:
 15075              	.LBE9115:
 15076              	.LBE9114:
 15077              	.LBE9113:
 15078              	.LBB9118:
 15079              	.LBI9118:
 15080              		.loc 19 162 7 is_stmt 1 view .LVU3438
 15081              	.LBB9119:
 15082              	.LBI9119:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15083              		.loc 20 89 7 view .LVU3439
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15084              		.loc 20 89 7 is_stmt 0 view .LVU3440
 15085              	.LBE9119:
 15086              	.LBE9118:
 123:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 15087              		.loc 17 123 5 is_stmt 1 view .LVU3441
 15088              	.LBB9120:
 15089              	.LBI9120:
 15090              		.loc 24 185 7 view .LVU3442
 15091              	.LBB9121:
 15092              	.LBI9121:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15093              		.loc 24 55 7 view .LVU3443
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15094              		.loc 24 55 7 is_stmt 0 view .LVU3444
 15095              	.LBE9121:
 15096              	.LBE9120:
 15097              	.LBB9122:
 15098              	.LBI9122:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15099              		.loc 19 144 7 is_stmt 1 view .LVU3445
 15100              	.LBB9123:
 15101              	.LBI9123:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15102              		.loc 20 79 7 view .LVU3446
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15103              		.loc 20 79 7 is_stmt 0 view .LVU3447
 15104              	.LBE9123:
 15105              	.LBE9122:
 123:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 15106              		.loc 17 123 63 view .LVU3448
 15107 010c 8249     		ldr	r1, .L712+36
 15108 010e 0AA8     		add	r0, sp, #40
 15109 0110 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15110              	.LVL942:
 15111 0114 3946     		mov	r1, r7
 15112 0116 03A8     		add	r0, sp, #12
 15113 0118 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 15114              	.LVL943:
 15115              	.LBB9124:
 15116              	.LBI9124:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 15117              		.loc 15 601 7 is_stmt 1 view .LVU3449
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 545


 15118              	.LBB9125:
 15119              	.LBB9126:
 15120              	.LBI9126:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15121              		.loc 15 240 5 view .LVU3450
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15122              		.loc 15 240 5 is_stmt 0 view .LVU3451
 15123              	.LBE9126:
 15124              	.LBB9127:
 15125              	.LBB9128:
 15126              	.LBI9128:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15127              		.loc 15 217 4 is_stmt 1 view .LVU3452
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15128              		.loc 15 217 4 is_stmt 0 view .LVU3453
 15129              	.LBE9128:
 15130              	.LBB9129:
 15131              	.LBI9129:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15132              		.loc 34 101 5 is_stmt 1 view .LVU3454
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15133              		.loc 34 101 5 is_stmt 0 view .LVU3455
 15134              	.LBE9129:
 15135              	.LBB9130:
 15136              	.LBI9130:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 15137              		.loc 15 207 2 is_stmt 1 view .LVU3456
 15138              	.LBB9131:
 15139              	.LBI9131:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15140              		.loc 15 232 2 view .LVU3457
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15141              		.loc 15 232 2 is_stmt 0 view .LVU3458
 15142              	.LBE9131:
 15143              	.LBE9130:
 15144              	.LBE9127:
 15145              	.LBE9125:
 15146              	.LBE9124:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 15147              		.loc 15 87 37 is_stmt 1 view .LVU3459
 15148              		.loc 23 175 3 view .LVU3460
 123:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 15149              		.loc 17 123 63 is_stmt 0 view .LVU3461
 15150 011c 0023     		movs	r3, #0
 15151 011e 03AA     		add	r2, sp, #12
 15152 0120 0AA9     		add	r1, sp, #40
 15153 0122 0094     		str	r4, [sp]
 15154 0124 10A8     		add	r0, sp, #64
 15155              	.LBB9137:
 15156              	.LBB9136:
 15157              	.LBB9135:
 15158              	.LBB9134:
 15159              	.LBB9133:
 15160              	.LBB9132:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15161              		.loc 15 233 4 view .LVU3462
 15162 0126 CDF818A0 		str	r10, [sp, #24]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 546


 15163              	.LVL944:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15164              		.loc 15 233 4 view .LVU3463
 15165              	.LBE9132:
 15166              	.LBE9133:
 15167              	.LBE9134:
 15168              		.loc 15 611 17 view .LVU3464
 15169 012a CDE90856 		strd	r5, r6, [sp, #32]
 15170              	.LVL945:
 15171              		.loc 15 611 17 view .LVU3465
 15172              	.LBE9135:
 15173              	.LBE9136:
 15174              	.LBE9137:
 123:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 15175              		.loc 17 123 63 view .LVU3466
 15176 012e FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15177              	.LVL946:
 15178 0132 10A9     		add	r1, sp, #64
 15179 0134 7D48     		ldr	r0, .L712+56
 15180 0136 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15181              	.LVL947:
 123:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 15182              		.loc 17 123 20 view .LVU3467
 15183 013a 10A8     		add	r0, sp, #64
 15184 013c FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15185              	.LVL948:
 15186              	.LBB9138:
 15187              	.LBI9138:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15188              		.loc 15 303 11 is_stmt 1 view .LVU3468
 15189              	.LBB9139:
 15190 0140 2046     		mov	r0, r4
 15191 0142 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15192              	.LVL949:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15193              		.loc 15 303 11 is_stmt 0 view .LVU3469
 15194              	.LBE9139:
 15195              	.LBE9138:
 123:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 15196              		.loc 17 123 63 view .LVU3470
 15197 0146 03A8     		add	r0, sp, #12
 15198 0148 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15199              	.LVL950:
 15200              	.LBB9140:
 15201              	.LBI9140:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15202              		.loc 18 657 7 is_stmt 1 view .LVU3471
 15203              	.LBB9141:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15204              		.loc 18 658 19 is_stmt 0 view .LVU3472
 15205 014c 0AA8     		add	r0, sp, #40
 15206              	.LVL951:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15207              		.loc 18 658 19 view .LVU3473
 15208 014e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15209              	.LVL952:
 15210              	.LBB9142:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 547


 15211              	.LBI9142:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15212              		.loc 18 150 14 is_stmt 1 view .LVU3474
 15213              	.LBB9143:
 15214              	.LBI9143:
 15215              		.loc 19 162 7 view .LVU3475
 15216              	.LBB9144:
 15217              	.LBI9144:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15218              		.loc 20 89 7 view .LVU3476
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15219              		.loc 20 89 7 is_stmt 0 view .LVU3477
 15220              	.LBE9144:
 15221              	.LBE9143:
 15222              	.LBE9142:
 15223              	.LBE9141:
 15224              	.LBE9140:
 15225              	.LBB9145:
 15226              	.LBI9145:
 15227              		.loc 19 162 7 is_stmt 1 view .LVU3478
 15228              	.LBB9146:
 15229              	.LBI9146:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15230              		.loc 20 89 7 view .LVU3479
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15231              		.loc 20 89 7 is_stmt 0 view .LVU3480
 15232              	.LBE9146:
 15233              	.LBE9145:
 124:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 15234              		.loc 17 124 5 is_stmt 1 view .LVU3481
 15235              	.LBB9147:
 15236              	.LBI9147:
 15237              		.loc 24 185 7 view .LVU3482
 15238              	.LBB9148:
 15239              	.LBI9148:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15240              		.loc 24 55 7 view .LVU3483
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15241              		.loc 24 55 7 is_stmt 0 view .LVU3484
 15242              	.LBE9148:
 15243              	.LBE9147:
 15244              	.LBB9149:
 15245              	.LBI9149:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15246              		.loc 19 144 7 is_stmt 1 view .LVU3485
 15247              	.LBB9150:
 15248              	.LBI9150:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15249              		.loc 20 79 7 view .LVU3486
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15250              		.loc 20 79 7 is_stmt 0 view .LVU3487
 15251              	.LBE9150:
 15252              	.LBE9149:
 124:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 15253              		.loc 17 124 63 view .LVU3488
 15254 0152 7749     		ldr	r1, .L712+60
 15255 0154 0AA8     		add	r0, sp, #40
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 548


 15256 0156 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15257              	.LVL953:
 15258 015a 7649     		ldr	r1, .L712+64
 15259 015c 03A8     		add	r0, sp, #12
 15260 015e FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 15261              	.LVL954:
 15262              	.LBB9151:
 15263              	.LBI9151:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 15264              		.loc 15 601 7 is_stmt 1 view .LVU3489
 15265              	.LBB9152:
 15266              	.LBB9153:
 15267              	.LBI9153:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15268              		.loc 15 240 5 view .LVU3490
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15269              		.loc 15 240 5 is_stmt 0 view .LVU3491
 15270              	.LBE9153:
 15271              	.LBB9154:
 15272              	.LBB9155:
 15273              	.LBI9155:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15274              		.loc 15 217 4 is_stmt 1 view .LVU3492
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15275              		.loc 15 217 4 is_stmt 0 view .LVU3493
 15276              	.LBE9155:
 15277              	.LBB9156:
 15278              	.LBI9156:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15279              		.loc 34 101 5 is_stmt 1 view .LVU3494
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15280              		.loc 34 101 5 is_stmt 0 view .LVU3495
 15281              	.LBE9156:
 15282              	.LBB9157:
 15283              	.LBI9157:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 15284              		.loc 15 207 2 is_stmt 1 view .LVU3496
 15285              	.LBB9158:
 15286              	.LBI9158:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15287              		.loc 15 232 2 view .LVU3497
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15288              		.loc 15 232 2 is_stmt 0 view .LVU3498
 15289              	.LBE9158:
 15290              	.LBE9157:
 15291              	.LBE9154:
 15292              	.LBE9152:
 15293              	.LBE9151:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 15294              		.loc 15 87 37 is_stmt 1 view .LVU3499
 15295              		.loc 23 175 3 view .LVU3500
 124:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 15296              		.loc 17 124 63 is_stmt 0 view .LVU3501
 15297 0162 0023     		movs	r3, #0
 15298 0164 03AA     		add	r2, sp, #12
 15299 0166 0AA9     		add	r1, sp, #40
 15300 0168 0094     		str	r4, [sp]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 549


 15301 016a 10A8     		add	r0, sp, #64
 15302              	.LBB9164:
 15303              	.LBB9163:
 15304              	.LBB9162:
 15305              	.LBB9161:
 15306              	.LBB9160:
 15307              	.LBB9159:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15308              		.loc 15 233 4 view .LVU3502
 15309 016c CDF818A0 		str	r10, [sp, #24]
 15310              	.LVL955:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15311              		.loc 15 233 4 view .LVU3503
 15312              	.LBE9159:
 15313              	.LBE9160:
 15314              	.LBE9161:
 15315              		.loc 15 611 17 view .LVU3504
 15316 0170 CDE90856 		strd	r5, r6, [sp, #32]
 15317              	.LVL956:
 15318              		.loc 15 611 17 view .LVU3505
 15319              	.LBE9162:
 15320              	.LBE9163:
 15321              	.LBE9164:
 124:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 15322              		.loc 17 124 63 view .LVU3506
 15323 0174 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15324              	.LVL957:
 15325 0178 10A9     		add	r1, sp, #64
 15326 017a 6F48     		ldr	r0, .L712+68
 15327 017c FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15328              	.LVL958:
 124:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 15329              		.loc 17 124 20 view .LVU3507
 15330 0180 10A8     		add	r0, sp, #64
 15331 0182 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15332              	.LVL959:
 15333              	.LBB9165:
 15334              	.LBI9165:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15335              		.loc 15 303 11 is_stmt 1 view .LVU3508
 15336              	.LBB9166:
 15337 0186 2046     		mov	r0, r4
 15338 0188 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15339              	.LVL960:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15340              		.loc 15 303 11 is_stmt 0 view .LVU3509
 15341              	.LBE9166:
 15342              	.LBE9165:
 124:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 15343              		.loc 17 124 63 view .LVU3510
 15344 018c 03A8     		add	r0, sp, #12
 15345 018e FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15346              	.LVL961:
 15347              	.LBB9167:
 15348              	.LBI9167:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15349              		.loc 18 657 7 is_stmt 1 view .LVU3511
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 550


 15350              	.LBB9168:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15351              		.loc 18 658 19 is_stmt 0 view .LVU3512
 15352 0192 0AA8     		add	r0, sp, #40
 15353              	.LVL962:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15354              		.loc 18 658 19 view .LVU3513
 15355 0194 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15356              	.LVL963:
 15357              	.LBB9169:
 15358              	.LBI9169:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15359              		.loc 18 150 14 is_stmt 1 view .LVU3514
 15360              	.LBB9170:
 15361              	.LBI9170:
 15362              		.loc 19 162 7 view .LVU3515
 15363              	.LBB9171:
 15364              	.LBI9171:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15365              		.loc 20 89 7 view .LVU3516
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15366              		.loc 20 89 7 is_stmt 0 view .LVU3517
 15367              	.LBE9171:
 15368              	.LBE9170:
 15369              	.LBE9169:
 15370              	.LBE9168:
 15371              	.LBE9167:
 15372              	.LBB9172:
 15373              	.LBI9172:
 15374              		.loc 19 162 7 is_stmt 1 view .LVU3518
 15375              	.LBB9173:
 15376              	.LBI9173:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15377              		.loc 20 89 7 view .LVU3519
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15378              		.loc 20 89 7 is_stmt 0 view .LVU3520
 15379              	.LBE9173:
 15380              	.LBE9172:
 125:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 15381              		.loc 17 125 5 is_stmt 1 view .LVU3521
 15382              	.LBB9174:
 15383              	.LBI9174:
 15384              		.loc 24 185 7 view .LVU3522
 15385              	.LBB9175:
 15386              	.LBI9175:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15387              		.loc 24 55 7 view .LVU3523
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15388              		.loc 24 55 7 is_stmt 0 view .LVU3524
 15389              	.LBE9175:
 15390              	.LBE9174:
 15391              	.LBB9176:
 15392              	.LBI9176:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15393              		.loc 19 144 7 is_stmt 1 view .LVU3525
 15394              	.LBB9177:
 15395              	.LBI9177:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 551


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15396              		.loc 20 79 7 view .LVU3526
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15397              		.loc 20 79 7 is_stmt 0 view .LVU3527
 15398              	.LBE9177:
 15399              	.LBE9176:
 125:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 15400              		.loc 17 125 63 view .LVU3528
 15401 0198 6849     		ldr	r1, .L712+72
 15402 019a 0AA8     		add	r0, sp, #40
 15403 019c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15404              	.LVL964:
 15405 01a0 6749     		ldr	r1, .L712+76
 15406 01a2 03A8     		add	r0, sp, #12
 15407 01a4 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 15408              	.LVL965:
 15409              	.LBB9178:
 15410              	.LBI9178:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 15411              		.loc 15 601 7 is_stmt 1 view .LVU3529
 15412              	.LBB9179:
 15413              	.LBB9180:
 15414              	.LBI9180:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15415              		.loc 15 240 5 view .LVU3530
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15416              		.loc 15 240 5 is_stmt 0 view .LVU3531
 15417              	.LBE9180:
 15418              	.LBB9181:
 15419              	.LBB9182:
 15420              	.LBI9182:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15421              		.loc 15 217 4 is_stmt 1 view .LVU3532
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15422              		.loc 15 217 4 is_stmt 0 view .LVU3533
 15423              	.LBE9182:
 15424              	.LBB9183:
 15425              	.LBI9183:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15426              		.loc 34 101 5 is_stmt 1 view .LVU3534
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15427              		.loc 34 101 5 is_stmt 0 view .LVU3535
 15428              	.LBE9183:
 15429              	.LBB9184:
 15430              	.LBI9184:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 15431              		.loc 15 207 2 is_stmt 1 view .LVU3536
 15432              	.LBB9185:
 15433              	.LBI9185:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15434              		.loc 15 232 2 view .LVU3537
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15435              		.loc 15 232 2 is_stmt 0 view .LVU3538
 15436              	.LBE9185:
 15437              	.LBE9184:
 15438              	.LBE9181:
 15439              	.LBE9179:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 552


 15440              	.LBE9178:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 15441              		.loc 15 87 37 is_stmt 1 view .LVU3539
 15442              		.loc 23 175 3 view .LVU3540
 125:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 15443              		.loc 17 125 63 is_stmt 0 view .LVU3541
 15444 01a8 0023     		movs	r3, #0
 15445 01aa 03AA     		add	r2, sp, #12
 15446 01ac 0AA9     		add	r1, sp, #40
 15447 01ae 0094     		str	r4, [sp]
 15448 01b0 10A8     		add	r0, sp, #64
 15449              	.LBB9191:
 15450              	.LBB9190:
 15451              	.LBB9189:
 15452              	.LBB9188:
 15453              	.LBB9187:
 15454              	.LBB9186:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15455              		.loc 15 233 4 view .LVU3542
 15456 01b2 CDF818A0 		str	r10, [sp, #24]
 15457              	.LVL966:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15458              		.loc 15 233 4 view .LVU3543
 15459              	.LBE9186:
 15460              	.LBE9187:
 15461              	.LBE9188:
 15462              		.loc 15 611 17 view .LVU3544
 15463 01b6 CDE90856 		strd	r5, r6, [sp, #32]
 15464              	.LVL967:
 15465              		.loc 15 611 17 view .LVU3545
 15466              	.LBE9189:
 15467              	.LBE9190:
 15468              	.LBE9191:
 125:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 15469              		.loc 17 125 63 view .LVU3546
 15470 01ba FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15471              	.LVL968:
 15472 01be 10A9     		add	r1, sp, #64
 15473 01c0 6048     		ldr	r0, .L712+80
 15474 01c2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15475              	.LVL969:
 125:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 15476              		.loc 17 125 20 view .LVU3547
 15477 01c6 10A8     		add	r0, sp, #64
 15478 01c8 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15479              	.LVL970:
 15480              	.LBB9192:
 15481              	.LBI9192:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15482              		.loc 15 303 11 is_stmt 1 view .LVU3548
 15483              	.LBB9193:
 15484 01cc 2046     		mov	r0, r4
 15485 01ce FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15486              	.LVL971:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15487              		.loc 15 303 11 is_stmt 0 view .LVU3549
 15488              	.LBE9193:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 553


 15489              	.LBE9192:
 125:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 15490              		.loc 17 125 63 view .LVU3550
 15491 01d2 03A8     		add	r0, sp, #12
 15492 01d4 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15493              	.LVL972:
 15494              	.LBB9194:
 15495              	.LBI9194:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15496              		.loc 18 657 7 is_stmt 1 view .LVU3551
 15497              	.LBB9195:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15498              		.loc 18 658 19 is_stmt 0 view .LVU3552
 15499 01d8 0AA8     		add	r0, sp, #40
 15500              	.LVL973:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15501              		.loc 18 658 19 view .LVU3553
 15502 01da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15503              	.LVL974:
 15504              	.LBB9196:
 15505              	.LBI9196:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15506              		.loc 18 150 14 is_stmt 1 view .LVU3554
 15507              	.LBB9197:
 15508              	.LBI9197:
 15509              		.loc 19 162 7 view .LVU3555
 15510              	.LBB9198:
 15511              	.LBI9198:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15512              		.loc 20 89 7 view .LVU3556
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15513              		.loc 20 89 7 is_stmt 0 view .LVU3557
 15514              	.LBE9198:
 15515              	.LBE9197:
 15516              	.LBE9196:
 15517              	.LBE9195:
 15518              	.LBE9194:
 15519              	.LBB9199:
 15520              	.LBI9199:
 15521              		.loc 19 162 7 is_stmt 1 view .LVU3558
 15522              	.LBB9200:
 15523              	.LBI9200:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15524              		.loc 20 89 7 view .LVU3559
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15525              		.loc 20 89 7 is_stmt 0 view .LVU3560
 15526              	.LBE9200:
 15527              	.LBE9199:
 126:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 15528              		.loc 17 126 5 is_stmt 1 view .LVU3561
 15529              	.LBB9201:
 15530              	.LBI9201:
 15531              		.loc 24 185 7 view .LVU3562
 15532              	.LBB9202:
 15533              	.LBI9202:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15534              		.loc 24 55 7 view .LVU3563
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 554


  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15535              		.loc 24 55 7 is_stmt 0 view .LVU3564
 15536              	.LBE9202:
 15537              	.LBE9201:
 15538              	.LBB9203:
 15539              	.LBI9203:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15540              		.loc 19 144 7 is_stmt 1 view .LVU3565
 15541              	.LBB9204:
 15542              	.LBI9204:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15543              		.loc 20 79 7 view .LVU3566
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15544              		.loc 20 79 7 is_stmt 0 view .LVU3567
 15545              	.LBE9204:
 15546              	.LBE9203:
 126:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 15547              		.loc 17 126 63 view .LVU3568
 15548 01de 4E49     		ldr	r1, .L712+36
 15549 01e0 0AA8     		add	r0, sp, #40
 15550 01e2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15551              	.LVL975:
 15552 01e6 5849     		ldr	r1, .L712+84
 15553 01e8 03A8     		add	r0, sp, #12
 15554 01ea FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 15555              	.LVL976:
 15556              	.LBB9205:
 15557              	.LBI9205:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 15558              		.loc 15 601 7 is_stmt 1 view .LVU3569
 15559              	.LBB9206:
 15560              	.LBB9207:
 15561              	.LBI9207:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15562              		.loc 15 240 5 view .LVU3570
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15563              		.loc 15 240 5 is_stmt 0 view .LVU3571
 15564              	.LBE9207:
 15565              	.LBB9208:
 15566              	.LBB9209:
 15567              	.LBI9209:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15568              		.loc 15 217 4 is_stmt 1 view .LVU3572
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15569              		.loc 15 217 4 is_stmt 0 view .LVU3573
 15570              	.LBE9209:
 15571              	.LBB9210:
 15572              	.LBI9210:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15573              		.loc 34 101 5 is_stmt 1 view .LVU3574
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15574              		.loc 34 101 5 is_stmt 0 view .LVU3575
 15575              	.LBE9210:
 15576              	.LBB9211:
 15577              	.LBI9211:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 15578              		.loc 15 207 2 is_stmt 1 view .LVU3576
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 555


 15579              	.LBB9212:
 15580              	.LBI9212:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15581              		.loc 15 232 2 view .LVU3577
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15582              		.loc 15 232 2 is_stmt 0 view .LVU3578
 15583              	.LBE9212:
 15584              	.LBE9211:
 15585              	.LBE9208:
 15586              	.LBE9206:
 15587              	.LBE9205:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 15588              		.loc 15 87 37 is_stmt 1 view .LVU3579
 15589              		.loc 23 175 3 view .LVU3580
 126:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 15590              		.loc 17 126 63 is_stmt 0 view .LVU3581
 15591 01ee 0023     		movs	r3, #0
 15592 01f0 03AA     		add	r2, sp, #12
 15593 01f2 0AA9     		add	r1, sp, #40
 15594 01f4 0094     		str	r4, [sp]
 15595 01f6 10A8     		add	r0, sp, #64
 15596              	.LBB9218:
 15597              	.LBB9217:
 15598              	.LBB9216:
 15599              	.LBB9215:
 15600              	.LBB9214:
 15601              	.LBB9213:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15602              		.loc 15 233 4 view .LVU3582
 15603 01f8 CDF818A0 		str	r10, [sp, #24]
 15604              	.LVL977:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15605              		.loc 15 233 4 view .LVU3583
 15606              	.LBE9213:
 15607              	.LBE9214:
 15608              	.LBE9215:
 15609              		.loc 15 611 17 view .LVU3584
 15610 01fc CDE90856 		strd	r5, r6, [sp, #32]
 15611              	.LVL978:
 15612              		.loc 15 611 17 view .LVU3585
 15613              	.LBE9216:
 15614              	.LBE9217:
 15615              	.LBE9218:
 126:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 15616              		.loc 17 126 63 view .LVU3586
 15617 0200 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15618              	.LVL979:
 15619 0204 10A9     		add	r1, sp, #64
 15620 0206 5148     		ldr	r0, .L712+88
 15621 0208 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15622              	.LVL980:
 126:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 15623              		.loc 17 126 20 view .LVU3587
 15624 020c 10A8     		add	r0, sp, #64
 15625 020e FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15626              	.LVL981:
 15627              	.LBB9219:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 556


 15628              	.LBI9219:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15629              		.loc 15 303 11 is_stmt 1 view .LVU3588
 15630              	.LBB9220:
 15631 0212 2046     		mov	r0, r4
 15632 0214 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15633              	.LVL982:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15634              		.loc 15 303 11 is_stmt 0 view .LVU3589
 15635              	.LBE9220:
 15636              	.LBE9219:
 126:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 15637              		.loc 17 126 63 view .LVU3590
 15638 0218 03A8     		add	r0, sp, #12
 15639 021a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15640              	.LVL983:
 15641              	.LBB9221:
 15642              	.LBI9221:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15643              		.loc 18 657 7 is_stmt 1 view .LVU3591
 15644              	.LBB9222:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15645              		.loc 18 658 19 is_stmt 0 view .LVU3592
 15646 021e 0AA8     		add	r0, sp, #40
 15647              	.LVL984:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15648              		.loc 18 658 19 view .LVU3593
 15649 0220 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15650              	.LVL985:
 15651              	.LBB9223:
 15652              	.LBI9223:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15653              		.loc 18 150 14 is_stmt 1 view .LVU3594
 15654              	.LBB9224:
 15655              	.LBI9224:
 15656              		.loc 19 162 7 view .LVU3595
 15657              	.LBB9225:
 15658              	.LBI9225:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15659              		.loc 20 89 7 view .LVU3596
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15660              		.loc 20 89 7 is_stmt 0 view .LVU3597
 15661              	.LBE9225:
 15662              	.LBE9224:
 15663              	.LBE9223:
 15664              	.LBE9222:
 15665              	.LBE9221:
 15666              	.LBB9226:
 15667              	.LBI9226:
 15668              		.loc 19 162 7 is_stmt 1 view .LVU3598
 15669              	.LBB9227:
 15670              	.LBI9227:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15671              		.loc 20 89 7 view .LVU3599
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15672              		.loc 20 89 7 is_stmt 0 view .LVU3600
 15673              	.LBE9227:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 557


 15674              	.LBE9226:
 127:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 15675              		.loc 17 127 5 is_stmt 1 view .LVU3601
 15676              	.LBB9228:
 15677              	.LBI9228:
 15678              		.loc 24 185 7 view .LVU3602
 15679              	.LBB9229:
 15680              	.LBI9229:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15681              		.loc 24 55 7 view .LVU3603
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15682              		.loc 24 55 7 is_stmt 0 view .LVU3604
 15683              	.LBE9229:
 15684              	.LBE9228:
 15685              	.LBB9230:
 15686              	.LBI9230:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15687              		.loc 19 144 7 is_stmt 1 view .LVU3605
 15688              	.LBB9231:
 15689              	.LBI9231:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15690              		.loc 20 79 7 view .LVU3606
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15691              		.loc 20 79 7 is_stmt 0 view .LVU3607
 15692              	.LBE9231:
 15693              	.LBE9230:
 127:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 15694              		.loc 17 127 63 view .LVU3608
 15695 0224 3C49     		ldr	r1, .L712+36
 15696 0226 0AA8     		add	r0, sp, #40
 15697 0228 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15698              	.LVL986:
 15699 022c 4849     		ldr	r1, .L712+92
 15700 022e 03A8     		add	r0, sp, #12
 15701 0230 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 15702              	.LVL987:
 15703              	.LBB9232:
 15704              	.LBI9232:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 15705              		.loc 15 601 7 is_stmt 1 view .LVU3609
 15706              	.LBB9233:
 15707              	.LBB9234:
 15708              	.LBI9234:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15709              		.loc 15 240 5 view .LVU3610
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15710              		.loc 15 240 5 is_stmt 0 view .LVU3611
 15711              	.LBE9234:
 15712              	.LBB9235:
 15713              	.LBB9236:
 15714              	.LBI9236:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15715              		.loc 15 217 4 is_stmt 1 view .LVU3612
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15716              		.loc 15 217 4 is_stmt 0 view .LVU3613
 15717              	.LBE9236:
 15718              	.LBB9237:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 558


 15719              	.LBI9237:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15720              		.loc 34 101 5 is_stmt 1 view .LVU3614
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15721              		.loc 34 101 5 is_stmt 0 view .LVU3615
 15722              	.LBE9237:
 15723              	.LBB9238:
 15724              	.LBI9238:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 15725              		.loc 15 207 2 is_stmt 1 view .LVU3616
 15726              	.LBB9239:
 15727              	.LBI9239:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15728              		.loc 15 232 2 view .LVU3617
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15729              		.loc 15 232 2 is_stmt 0 view .LVU3618
 15730              	.LBE9239:
 15731              	.LBE9238:
 15732              	.LBE9235:
 15733              	.LBE9233:
 15734              	.LBE9232:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 15735              		.loc 15 87 37 is_stmt 1 view .LVU3619
 15736              		.loc 23 175 3 view .LVU3620
 127:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 15737              		.loc 17 127 63 is_stmt 0 view .LVU3621
 15738 0234 0023     		movs	r3, #0
 15739 0236 03AA     		add	r2, sp, #12
 15740 0238 0AA9     		add	r1, sp, #40
 15741 023a 0094     		str	r4, [sp]
 15742 023c 10A8     		add	r0, sp, #64
 15743              	.LBB9245:
 15744              	.LBB9244:
 15745              	.LBB9243:
 15746              	.LBB9242:
 15747              	.LBB9241:
 15748              	.LBB9240:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15749              		.loc 15 233 4 view .LVU3622
 15750 023e CDF818A0 		str	r10, [sp, #24]
 15751              	.LVL988:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15752              		.loc 15 233 4 view .LVU3623
 15753              	.LBE9240:
 15754              	.LBE9241:
 15755              	.LBE9242:
 15756              		.loc 15 611 17 view .LVU3624
 15757 0242 CDE90856 		strd	r5, r6, [sp, #32]
 15758              	.LVL989:
 15759              		.loc 15 611 17 view .LVU3625
 15760              	.LBE9243:
 15761              	.LBE9244:
 15762              	.LBE9245:
 127:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 15763              		.loc 17 127 63 view .LVU3626
 15764 0246 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15765              	.LVL990:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 559


 15766 024a 10A9     		add	r1, sp, #64
 15767 024c 4148     		ldr	r0, .L712+96
 15768 024e FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15769              	.LVL991:
 127:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 15770              		.loc 17 127 20 view .LVU3627
 15771 0252 10A8     		add	r0, sp, #64
 15772 0254 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15773              	.LVL992:
 15774              	.LBB9246:
 15775              	.LBI9246:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15776              		.loc 15 303 11 is_stmt 1 view .LVU3628
 15777              	.LBB9247:
 15778 0258 2046     		mov	r0, r4
 15779 025a FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15780              	.LVL993:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15781              		.loc 15 303 11 is_stmt 0 view .LVU3629
 15782              	.LBE9247:
 15783              	.LBE9246:
 127:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 15784              		.loc 17 127 63 view .LVU3630
 15785 025e 03A8     		add	r0, sp, #12
 15786 0260 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15787              	.LVL994:
 15788              	.LBB9248:
 15789              	.LBI9248:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15790              		.loc 18 657 7 is_stmt 1 view .LVU3631
 15791              	.LBB9249:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15792              		.loc 18 658 19 is_stmt 0 view .LVU3632
 15793 0264 0AA8     		add	r0, sp, #40
 15794              	.LVL995:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15795              		.loc 18 658 19 view .LVU3633
 15796 0266 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15797              	.LVL996:
 15798              	.LBB9250:
 15799              	.LBI9250:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15800              		.loc 18 150 14 is_stmt 1 view .LVU3634
 15801              	.LBB9251:
 15802              	.LBI9251:
 15803              		.loc 19 162 7 view .LVU3635
 15804              	.LBB9252:
 15805              	.LBI9252:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15806              		.loc 20 89 7 view .LVU3636
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15807              		.loc 20 89 7 is_stmt 0 view .LVU3637
 15808              	.LBE9252:
 15809              	.LBE9251:
 15810              	.LBE9250:
 15811              	.LBE9249:
 15812              	.LBE9248:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 560


 15813              	.LBB9253:
 15814              	.LBI9253:
 15815              		.loc 19 162 7 is_stmt 1 view .LVU3638
 15816              	.LBB9254:
 15817              	.LBI9254:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15818              		.loc 20 89 7 view .LVU3639
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15819              		.loc 20 89 7 is_stmt 0 view .LVU3640
 15820              	.LBE9254:
 15821              	.LBE9253:
 128:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 15822              		.loc 17 128 5 is_stmt 1 view .LVU3641
 15823              	.LBB9255:
 15824              	.LBI9255:
 15825              		.loc 24 185 7 view .LVU3642
 15826              	.LBB9256:
 15827              	.LBI9256:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15828              		.loc 24 55 7 view .LVU3643
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15829              		.loc 24 55 7 is_stmt 0 view .LVU3644
 15830              	.LBE9256:
 15831              	.LBE9255:
 15832              	.LBB9257:
 15833              	.LBI9257:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15834              		.loc 19 144 7 is_stmt 1 view .LVU3645
 15835              	.LBB9258:
 15836              	.LBI9258:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15837              		.loc 20 79 7 view .LVU3646
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15838              		.loc 20 79 7 is_stmt 0 view .LVU3647
 15839              	.LBE9258:
 15840              	.LBE9257:
 128:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 15841              		.loc 17 128 63 view .LVU3648
 15842 026a 3B49     		ldr	r1, .L712+100
 15843 026c 0AA8     		add	r0, sp, #40
 15844 026e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15845              	.LVL997:
 15846 0272 3749     		ldr	r1, .L712+92
 15847 0274 03A8     		add	r0, sp, #12
 15848 0276 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 15849              	.LVL998:
 15850              	.LBB9259:
 15851              	.LBI9259:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 15852              		.loc 15 601 7 is_stmt 1 view .LVU3649
 15853              	.LBB9260:
 15854              	.LBB9261:
 15855              	.LBI9261:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15856              		.loc 15 240 5 view .LVU3650
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15857              		.loc 15 240 5 is_stmt 0 view .LVU3651
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 561


 15858              	.LBE9261:
 15859              	.LBB9262:
 15860              	.LBB9263:
 15861              	.LBI9263:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15862              		.loc 15 217 4 is_stmt 1 view .LVU3652
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15863              		.loc 15 217 4 is_stmt 0 view .LVU3653
 15864              	.LBE9263:
 15865              	.LBB9264:
 15866              	.LBI9264:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15867              		.loc 34 101 5 is_stmt 1 view .LVU3654
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15868              		.loc 34 101 5 is_stmt 0 view .LVU3655
 15869              	.LBE9264:
 15870              	.LBB9265:
 15871              	.LBI9265:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 15872              		.loc 15 207 2 is_stmt 1 view .LVU3656
 15873              	.LBB9266:
 15874              	.LBI9266:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15875              		.loc 15 232 2 view .LVU3657
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15876              		.loc 15 232 2 is_stmt 0 view .LVU3658
 15877              	.LBE9266:
 15878              	.LBE9265:
 15879              	.LBE9262:
 15880              	.LBE9260:
 15881              	.LBE9259:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 15882              		.loc 15 87 37 is_stmt 1 view .LVU3659
 15883              		.loc 23 175 3 view .LVU3660
 128:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 15884              		.loc 17 128 63 is_stmt 0 view .LVU3661
 15885 027a 0023     		movs	r3, #0
 15886 027c 03AA     		add	r2, sp, #12
 15887 027e 0AA9     		add	r1, sp, #40
 15888 0280 0094     		str	r4, [sp]
 15889 0282 10A8     		add	r0, sp, #64
 15890              	.LBB9272:
 15891              	.LBB9271:
 15892              	.LBB9270:
 15893              	.LBB9269:
 15894              	.LBB9268:
 15895              	.LBB9267:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15896              		.loc 15 233 4 view .LVU3662
 15897 0284 CDF818A0 		str	r10, [sp, #24]
 15898              	.LVL999:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15899              		.loc 15 233 4 view .LVU3663
 15900              	.LBE9267:
 15901              	.LBE9268:
 15902              	.LBE9269:
 15903              		.loc 15 611 17 view .LVU3664
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 562


 15904 0288 CDE90856 		strd	r5, r6, [sp, #32]
 15905              	.LVL1000:
 15906              		.loc 15 611 17 view .LVU3665
 15907              	.LBE9270:
 15908              	.LBE9271:
 15909              	.LBE9272:
 128:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 15910              		.loc 17 128 63 view .LVU3666
 15911 028c FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15912              	.LVL1001:
 15913 0290 10A9     		add	r1, sp, #64
 15914 0292 3248     		ldr	r0, .L712+104
 15915 0294 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15916              	.LVL1002:
 128:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 15917              		.loc 17 128 20 view .LVU3667
 15918 0298 10A8     		add	r0, sp, #64
 15919 029a FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15920              	.LVL1003:
 15921              	.LBB9273:
 15922              	.LBI9273:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15923              		.loc 15 303 11 is_stmt 1 view .LVU3668
 15924              	.LBB9274:
 15925 029e 2046     		mov	r0, r4
 15926 02a0 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15927              	.LVL1004:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15928              		.loc 15 303 11 is_stmt 0 view .LVU3669
 15929              	.LBE9274:
 15930              	.LBE9273:
 128:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 15931              		.loc 17 128 63 view .LVU3670
 15932 02a4 03A8     		add	r0, sp, #12
 15933 02a6 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15934              	.LVL1005:
 15935              	.LBB9275:
 15936              	.LBI9275:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15937              		.loc 18 657 7 is_stmt 1 view .LVU3671
 15938              	.LBB9276:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15939              		.loc 18 658 19 is_stmt 0 view .LVU3672
 15940 02aa 0AA8     		add	r0, sp, #40
 15941              	.LVL1006:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15942              		.loc 18 658 19 view .LVU3673
 15943 02ac FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15944              	.LVL1007:
 15945              	.LBB9277:
 15946              	.LBI9277:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15947              		.loc 18 150 14 is_stmt 1 view .LVU3674
 15948              	.LBB9278:
 15949              	.LBI9278:
 15950              		.loc 19 162 7 view .LVU3675
 15951              	.LBB9279:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 563


 15952              	.LBI9279:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15953              		.loc 20 89 7 view .LVU3676
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15954              		.loc 20 89 7 is_stmt 0 view .LVU3677
 15955              	.LBE9279:
 15956              	.LBE9278:
 15957              	.LBE9277:
 15958              	.LBE9276:
 15959              	.LBE9275:
 15960              	.LBB9280:
 15961              	.LBI9280:
 15962              		.loc 19 162 7 is_stmt 1 view .LVU3678
 15963              	.LBB9281:
 15964              	.LBI9281:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15965              		.loc 20 89 7 view .LVU3679
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15966              		.loc 20 89 7 is_stmt 0 view .LVU3680
 15967              	.LBE9281:
 15968              	.LBE9280:
 129:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 15969              		.loc 17 129 5 is_stmt 1 view .LVU3681
 15970              	.LBB9282:
 15971              	.LBI9282:
 15972              		.loc 24 185 7 view .LVU3682
 15973              	.LBB9283:
 15974              	.LBI9283:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15975              		.loc 24 55 7 view .LVU3683
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15976              		.loc 24 55 7 is_stmt 0 view .LVU3684
 15977              	.LBE9283:
 15978              	.LBE9282:
 15979              	.LBB9284:
 15980              	.LBI9284:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15981              		.loc 19 144 7 is_stmt 1 view .LVU3685
 15982              	.LBB9285:
 15983              	.LBI9285:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15984              		.loc 20 79 7 view .LVU3686
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15985              		.loc 20 79 7 is_stmt 0 view .LVU3687
 15986              	.LBE9285:
 15987              	.LBE9284:
 129:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 15988              		.loc 17 129 63 view .LVU3688
 15989 02b0 2B49     		ldr	r1, .L712+108
 15990 02b2 0AA8     		add	r0, sp, #40
 15991 02b4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15992              	.LVL1008:
 15993 02b8 4946     		mov	r1, r9
 15994 02ba 03A8     		add	r0, sp, #12
 15995 02bc FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 15996              	.LVL1009:
 15997              	.LBB9286:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 564


 15998              	.LBI9286:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 15999              		.loc 15 601 7 is_stmt 1 view .LVU3689
 16000              	.LBB9287:
 16001              	.LBB9288:
 16002              	.LBI9288:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16003              		.loc 15 240 5 view .LVU3690
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16004              		.loc 15 240 5 is_stmt 0 view .LVU3691
 16005              	.LBE9288:
 16006              	.LBB9289:
 16007              	.LBB9290:
 16008              	.LBI9290:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 16009              		.loc 15 217 4 is_stmt 1 view .LVU3692
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 16010              		.loc 15 217 4 is_stmt 0 view .LVU3693
 16011              	.LBE9290:
 16012              	.LBB9291:
 16013              	.LBI9291:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 16014              		.loc 34 101 5 is_stmt 1 view .LVU3694
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 16015              		.loc 34 101 5 is_stmt 0 view .LVU3695
 16016              	.LBE9291:
 16017              	.LBB9292:
 16018              	.LBI9292:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 16019              		.loc 15 207 2 is_stmt 1 view .LVU3696
 16020              	.LBB9293:
 16021              	.LBI9293:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 16022              		.loc 15 232 2 view .LVU3697
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 16023              		.loc 15 232 2 is_stmt 0 view .LVU3698
 16024              	.LBE9293:
 16025              	.LBE9292:
 16026              	.LBE9289:
 16027              	.LBE9287:
 16028              	.LBE9286:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 16029              		.loc 15 87 37 is_stmt 1 view .LVU3699
 16030              		.loc 23 175 3 view .LVU3700
 129:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 16031              		.loc 17 129 63 is_stmt 0 view .LVU3701
 16032 02c0 0023     		movs	r3, #0
 16033 02c2 03AA     		add	r2, sp, #12
 16034 02c4 0AA9     		add	r1, sp, #40
 16035 02c6 0094     		str	r4, [sp]
 16036 02c8 10A8     		add	r0, sp, #64
 16037              	.LBB9299:
 16038              	.LBB9298:
 16039              	.LBB9297:
 16040              	.LBB9296:
 16041              	.LBB9295:
 16042              	.LBB9294:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 565


 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16043              		.loc 15 233 4 view .LVU3702
 16044 02ca CDF818A0 		str	r10, [sp, #24]
 16045              	.LVL1010:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16046              		.loc 15 233 4 view .LVU3703
 16047              	.LBE9294:
 16048              	.LBE9295:
 16049              	.LBE9296:
 16050              		.loc 15 611 17 view .LVU3704
 16051 02ce CDE90856 		strd	r5, r6, [sp, #32]
 16052              	.LVL1011:
 16053              		.loc 15 611 17 view .LVU3705
 16054              	.LBE9297:
 16055              	.LBE9298:
 16056              	.LBE9299:
 129:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 16057              		.loc 17 129 63 view .LVU3706
 16058 02d2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 16059              	.LVL1012:
 16060 02d6 10A9     		add	r1, sp, #64
 16061 02d8 2248     		ldr	r0, .L712+112
 16062 02da FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 16063              	.LVL1013:
 129:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 16064              		.loc 17 129 20 view .LVU3707
 16065 02de 10A8     		add	r0, sp, #64
 16066 02e0 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 16067              	.LVL1014:
 16068              	.LBB9300:
 16069              	.LBI9300:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 16070              		.loc 15 303 11 is_stmt 1 view .LVU3708
 16071              	.LBB9301:
 16072 02e4 2046     		mov	r0, r4
 16073 02e6 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 16074              	.LVL1015:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 16075              		.loc 15 303 11 is_stmt 0 view .LVU3709
 16076              	.LBE9301:
 16077              	.LBE9300:
 129:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 16078              		.loc 17 129 63 view .LVU3710
 16079 02ea 03A8     		add	r0, sp, #12
 16080 02ec FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 16081              	.LVL1016:
 16082 02f0 42E0     		b	.L713
 16083              	.L714:
 16084 02f2 00BF     		.align	2
 16085              	.L712:
 16086 02f4 00000000 		.word	patch
 16087 02f8 00000000 		.word	.LANCHOR0
 16088 02fc 00000000 		.word	.LC11
 16089 0300 00000000 		.word	_Z9cbPatternv
 16090 0304 00000000 		.word	_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
 16091 0308 00000000 		.word	_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
 16092 030c 00000000 		.word	.LANCHOR19
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 566


 16093 0310 00000000 		.word	0
 16094 0314 00000000 		.word	.LANCHOR5
 16095 0318 0C000000 		.word	.LC12
 16096 031c 50000000 		.word	.LANCHOR5+80
 16097 0320 18000000 		.word	.LC13
 16098 0324 00000000 		.word	_Z9cbVoicingv
 16099 0328 A0000000 		.word	.LANCHOR5+160
 16100 032c F0000000 		.word	.LANCHOR5+240
 16101 0330 24000000 		.word	.LC14
 16102 0334 00000000 		.word	.LANCHOR20
 16103 0338 40010000 		.word	.LANCHOR5+320
 16104 033c 30000000 		.word	.LC15
 16105 0340 00000000 		.word	.LANCHOR21
 16106 0344 90010000 		.word	.LANCHOR5+400
 16107 0348 00000000 		.word	.LANCHOR22
 16108 034c E0010000 		.word	.LANCHOR5+480
 16109 0350 00000000 		.word	.LANCHOR23
 16110 0354 30020000 		.word	.LANCHOR5+560
 16111 0358 3C000000 		.word	.LC16
 16112 035c 80020000 		.word	.LANCHOR5+640
 16113 0360 48000000 		.word	.LC17
 16114 0364 D0020000 		.word	.LANCHOR5+720
 16115 0368 00000000 		.word	.LANCHOR16
 16116 036c 00000000 		.word	.LANCHOR17
 16117 0370 00000000 		.word	_Z2cbv
 16118 0374 00000000 		.word	.LANCHOR18
 16119              	.L713:
 16120              	.LVL1017:
 16121              	.LBB9302:
 16122              	.LBI9302:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 16123              		.loc 18 657 7 is_stmt 1 view .LVU3711
 16124              	.LBB9303:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16125              		.loc 18 658 19 is_stmt 0 view .LVU3712
 16126 0378 0AA8     		add	r0, sp, #40
 16127              	.LVL1018:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16128              		.loc 18 658 19 view .LVU3713
 16129 037a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 16130              	.LVL1019:
 16131              	.LBB9304:
 16132              	.LBI9304:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16133              		.loc 18 150 14 is_stmt 1 view .LVU3714
 16134              	.LBB9305:
 16135              	.LBI9305:
 16136              		.loc 19 162 7 view .LVU3715
 16137              	.LBB9306:
 16138              	.LBI9306:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16139              		.loc 20 89 7 view .LVU3716
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16140              		.loc 20 89 7 is_stmt 0 view .LVU3717
 16141              	.LBE9306:
 16142              	.LBE9305:
 16143              	.LBE9304:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 567


 16144              	.LBE9303:
 16145              	.LBE9302:
 16146              	.LBB9307:
 16147              	.LBI9307:
 16148              		.loc 19 162 7 is_stmt 1 view .LVU3718
 16149              	.LBB9308:
 16150              	.LBI9308:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16151              		.loc 20 89 7 view .LVU3719
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16152              		.loc 20 89 7 is_stmt 0 view .LVU3720
 16153              	.LBE9308:
 16154              	.LBE9307:
 132:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16155              		.loc 17 132 5 is_stmt 1 view .LVU3721
 16156              	.LBB9309:
 16157              	.LBB9310:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16158              		.loc 26 919 50 is_stmt 0 view .LVU3722
 16159 037e 544E     		ldr	r6, .L715
 16160              	.LBE9310:
 16161              	.LBE9309:
 132:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16162              		.loc 17 132 39 view .LVU3723
 16163 0380 544D     		ldr	r5, .L715+4
 16164 0382 10AC     		add	r4, sp, #64
 132:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16165              		.loc 17 132 22 view .LVU3724
 16166 0384 B0EE480A 		vmov.f32	s0, s16
 16167              	.LBB9312:
 16168              	.LBB9311:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16169              		.loc 26 919 50 view .LVU3725
 16170 0388 DBE90023 		ldrd	r2, r3, [fp]
 16171 038c 9B1A     		subs	r3, r3, r2
 16172 038e DB10     		asrs	r3, r3, #3
 16173 0390 06FB03F3 		mul	r3, r6, r3
 16174 0394 00EE903A 		vmov	s1, r3	@ int
 16175              	.LBE9311:
 16176              	.LBE9312:
 132:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16177              		.loc 17 132 39 view .LVU3726
 16178 0398 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16179 039a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16180 039c 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 132:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16181              		.loc 17 132 22 view .LVU3727
 16182 03a0 F8EE600A 		vcvt.f32.u32	s1, s1
 132:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16183              		.loc 17 132 39 view .LVU3728
 16184 03a4 84E80F00 		stm	r4, {r0, r1, r2, r3}
 16185              	.LVL1020:
 16186              	.LBB9313:
 16187              	.LBI9309:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16188              		.loc 26 918 7 is_stmt 1 view .LVU3729
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 568


 16189              		.loc 26 918 7 is_stmt 0 view .LVU3730
 16190              	.LBE9313:
 132:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16191              		.loc 17 132 22 view .LVU3731
 16192 03a8 0022     		movs	r2, #0
 16193 03aa 10A9     		add	r1, sp, #64
 16194 03ac 4A48     		ldr	r0, .L715+8
 16195 03ae FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 16196              	.LVL1021:
 16197              	.LBB9314:
 16198              	.LBI9314:
 16199              		.loc 2 23 5 is_stmt 1 view .LVU3732
 16200              		.loc 2 23 5 is_stmt 0 view .LVU3733
 16201              	.LBE9314:
 133:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 16202              		.loc 17 133 5 is_stmt 1 view .LVU3734
 133:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 16203              		.loc 17 133 40 is_stmt 0 view .LVU3735
 16204 03b2 05F1100C 		add	ip, r5, #16
 16205 03b6 0DF1400E 		add	lr, sp, #64
 133:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 16206              		.loc 17 133 23 view .LVU3736
 16207 03ba B0EE480A 		vmov.f32	s0, s16
 16208              	.LBB9315:
 16209              	.LBB9316:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16210              		.loc 26 919 50 view .LVU3737
 16211 03be D9E90023 		ldrd	r2, r3, [r9]
 16212 03c2 9B1A     		subs	r3, r3, r2
 16213 03c4 DB10     		asrs	r3, r3, #3
 16214 03c6 06FB03F3 		mul	r3, r6, r3
 16215 03ca 00EE903A 		vmov	s1, r3	@ int
 16216              	.LBE9316:
 16217              	.LBE9315:
 133:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 16218              		.loc 17 133 40 view .LVU3738
 16219 03ce BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 16220 03d2 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 16221 03d6 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 133:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 16222              		.loc 17 133 23 view .LVU3739
 16223 03da F8EE600A 		vcvt.f32.u32	s1, s1
 133:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 16224              		.loc 17 133 40 view .LVU3740
 16225 03de 84E80F00 		stm	r4, {r0, r1, r2, r3}
 16226              	.LVL1022:
 16227              	.LBB9317:
 16228              	.LBI9315:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16229              		.loc 26 918 7 is_stmt 1 view .LVU3741
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16230              		.loc 26 918 7 is_stmt 0 view .LVU3742
 16231              	.LBE9317:
 133:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 16232              		.loc 17 133 23 view .LVU3743
 16233 03e2 0022     		movs	r2, #0
 16234 03e4 10A9     		add	r1, sp, #64
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 569


 16235 03e6 3D48     		ldr	r0, .L715+12
 16236 03e8 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 16237              	.LVL1023:
 16238              	.LBB9318:
 16239              	.LBI9318:
 16240              		.loc 2 23 5 is_stmt 1 view .LVU3744
 16241              		.loc 2 23 5 is_stmt 0 view .LVU3745
 16242              	.LBE9318:
 134:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16243              		.loc 17 134 5 is_stmt 1 view .LVU3746
 134:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16244              		.loc 17 134 39 is_stmt 0 view .LVU3747
 16245 03ec 05F1300C 		add	ip, r5, #48
 16246 03f0 0DF1400E 		add	lr, sp, #64
 134:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16247              		.loc 17 134 22 view .LVU3748
 16248 03f4 B0EE480A 		vmov.f32	s0, s16
 16249              	.LBB9319:
 16250              	.LBB9320:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16251              		.loc 26 919 50 view .LVU3749
 16252 03f8 D8E90023 		ldrd	r2, r3, [r8]
 16253 03fc 9B1A     		subs	r3, r3, r2
 16254 03fe DB10     		asrs	r3, r3, #3
 16255 0400 06FB03F3 		mul	r3, r6, r3
 16256 0404 00EE903A 		vmov	s1, r3	@ int
 16257              	.LBE9320:
 16258              	.LBE9319:
 134:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16259              		.loc 17 134 39 view .LVU3750
 16260 0408 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 16261 040c AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 16262 0410 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 134:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16263              		.loc 17 134 22 view .LVU3751
 16264 0414 F8EE600A 		vcvt.f32.u32	s1, s1
 134:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16265              		.loc 17 134 39 view .LVU3752
 16266 0418 84E80F00 		stm	r4, {r0, r1, r2, r3}
 16267              	.LVL1024:
 16268              	.LBB9321:
 16269              	.LBI9319:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16270              		.loc 26 918 7 is_stmt 1 view .LVU3753
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16271              		.loc 26 918 7 is_stmt 0 view .LVU3754
 16272              	.LBE9321:
 134:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16273              		.loc 17 134 22 view .LVU3755
 16274 041c 0022     		movs	r2, #0
 16275 041e 10A9     		add	r1, sp, #64
 16276 0420 2F48     		ldr	r0, .L715+16
 16277 0422 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 16278              	.LVL1025:
 16279              	.LBB9322:
 16280              	.LBI9322:
 16281              		.loc 2 23 5 is_stmt 1 view .LVU3756
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 570


 16282              		.loc 2 23 5 is_stmt 0 view .LVU3757
 16283              	.LBE9322:
 135:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16284              		.loc 17 135 5 is_stmt 1 view .LVU3758
 135:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16285              		.loc 17 135 41 is_stmt 0 view .LVU3759
 16286 0426 05F1500C 		add	ip, r5, #80
 135:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16287              		.loc 17 135 24 view .LVU3760
 16288 042a B0EE480A 		vmov.f32	s0, s16
 16289              	.LBB9323:
 16290              	.LBB9324:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16291              		.loc 26 919 50 view .LVU3761
 16292 042e D7E90023 		ldrd	r2, r3, [r7]
 16293 0432 9B1A     		subs	r3, r3, r2
 16294 0434 DB10     		asrs	r3, r3, #3
 16295 0436 06FB03F3 		mul	r3, r6, r3
 16296              	.LBE9324:
 16297              	.LBE9323:
 135:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16298              		.loc 17 135 41 view .LVU3762
 16299 043a 10AE     		add	r6, sp, #64
 16300              	.LBB9326:
 16301              	.LBB9325:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16302              		.loc 26 919 50 view .LVU3763
 16303 043c 00EE903A 		vmov	s1, r3	@ int
 16304              	.LBE9325:
 16305              	.LBE9326:
 135:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16306              		.loc 17 135 41 view .LVU3764
 16307 0440 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 16308 0444 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 16309 0446 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 135:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16310              		.loc 17 135 24 view .LVU3765
 16311 044a F8EE600A 		vcvt.f32.u32	s1, s1
 135:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16312              		.loc 17 135 41 view .LVU3766
 16313 044e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 16314              	.LVL1026:
 16315              	.LBB9327:
 16316              	.LBI9323:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16317              		.loc 26 918 7 is_stmt 1 view .LVU3767
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16318              		.loc 26 918 7 is_stmt 0 view .LVU3768
 16319              	.LBE9327:
 135:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16320              		.loc 17 135 24 view .LVU3769
 16321 0452 10A9     		add	r1, sp, #64
 16322 0454 0022     		movs	r2, #0
 16323 0456 2348     		ldr	r0, .L715+20
 16324 0458 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 16325              	.LVL1027:
 16326              	.LBB9328:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 571


 16327              	.LBI9328:
 16328              		.loc 2 23 5 is_stmt 1 view .LVU3770
 16329              		.loc 2 23 5 is_stmt 0 view .LVU3771
 16330              	.LBE9328:
 136:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 16331              		.loc 17 136 5 is_stmt 1 view .LVU3772
 136:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 16332              		.loc 17 136 62 is_stmt 0 view .LVU3773
 16333 045c 1E48     		ldr	r0, .L715+8
 16334 045e FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 16335              	.LVL1028:
 136:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 16336              		.loc 17 136 25 view .LVU3774
 16337 0462 BDEEC00A 		vcvt.s32.f32	s0, s0
 136:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 16338              		.loc 17 136 23 view .LVU3775
 16339 0466 204B     		ldr	r3, .L715+24
 137:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 16340              		.loc 17 137 63 view .LVU3776
 16341 0468 1C48     		ldr	r0, .L715+12
 136:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 16342              		.loc 17 136 25 view .LVU3777
 16343 046a 83ED000A 		vstr.32	s0, [r3]	@ int
 137:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 16344              		.loc 17 137 5 is_stmt 1 view .LVU3778
 137:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 16345              		.loc 17 137 63 is_stmt 0 view .LVU3779
 16346 046e FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 16347              	.LVL1029:
 137:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 16348              		.loc 17 137 25 view .LVU3780
 16349 0472 BDEEC00A 		vcvt.s32.f32	s0, s0
 137:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 16350              		.loc 17 137 23 view .LVU3781
 16351 0476 1D4B     		ldr	r3, .L715+28
 138:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 16352              		.loc 17 138 62 view .LVU3782
 16353 0478 1948     		ldr	r0, .L715+16
 137:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 16354              		.loc 17 137 25 view .LVU3783
 16355 047a 83ED000A 		vstr.32	s0, [r3]	@ int
 138:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 16356              		.loc 17 138 5 is_stmt 1 view .LVU3784
 138:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 16357              		.loc 17 138 62 is_stmt 0 view .LVU3785
 16358 047e FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 16359              	.LVL1030:
 138:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 16360              		.loc 17 138 25 view .LVU3786
 16361 0482 BDEEC00A 		vcvt.s32.f32	s0, s0
 138:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 16362              		.loc 17 138 23 view .LVU3787
 16363 0486 1A4B     		ldr	r3, .L715+32
 139:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 16364              		.loc 17 139 64 view .LVU3788
 16365 0488 1648     		ldr	r0, .L715+20
 138:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 572


 16366              		.loc 17 138 25 view .LVU3789
 16367 048a 83ED000A 		vstr.32	s0, [r3]	@ int
 139:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 16368              		.loc 17 139 5 is_stmt 1 view .LVU3790
 139:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 16369              		.loc 17 139 64 is_stmt 0 view .LVU3791
 16370 048e FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 16371              	.LVL1031:
 139:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 16372              		.loc 17 139 25 view .LVU3792
 16373 0492 BDEEC00A 		vcvt.s32.f32	s0, s0
 139:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 16374              		.loc 17 139 23 view .LVU3793
 16375 0496 174B     		ldr	r3, .L715+36
 143:Jellybeans.cpp ****     menuPos     = 0;
 16376              		.loc 17 143 17 view .LVU3794
 16377 0498 0021     		movs	r1, #0
 16378 049a 174A     		ldr	r2, .L715+40
 16379              	.LBB9329:
 16380              	.LBB9330:
 16381              	.LBB9331:
 16382              	.LBB9332:
 16383              	.LBB9333:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16384              		.loc 18 902 16 view .LVU3795
 16385 049c 1748     		ldr	r0, .L715+44
 16386              	.LBE9333:
 16387              	.LBE9332:
 16388              	.LBE9331:
 16389              	.LBE9330:
 16390              	.LBE9329:
 139:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 16391              		.loc 17 139 25 view .LVU3796
 16392 049e 83ED000A 		vstr.32	s0, [r3]	@ int
 142:Jellybeans.cpp ****     arpNoteDacOutput1 = 0.f;
 16393              		.loc 17 142 5 is_stmt 1 view .LVU3797
 142:Jellybeans.cpp ****     arpNoteDacOutput1 = 0.f;
 16394              		.loc 17 142 23 is_stmt 0 view .LVU3798
 16395 04a2 174B     		ldr	r3, .L715+48
 16396 04a4 83ED008A 		vstr.32	s16, [r3]
 143:Jellybeans.cpp ****     menuPos     = 0;
 16397              		.loc 17 143 5 is_stmt 1 view .LVU3799
 16398              	.LBB9343:
 16399              	.LBB9339:
 16400              	.LBB9335:
1035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 573


1047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
1048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
1056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
1058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
1077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
1079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
1089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() noexcept
1093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 574


1104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
1111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() noexcept
1115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
1123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
1126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
1133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
1140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
1141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
1149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
1150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
1153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
1154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
1158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
1160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 575


1161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
1183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
1184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str)
1193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
1197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
1204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
1206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
1207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data()
1211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
1216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 576


1218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n)
1222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
1235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __n = traits_type::length(__s);
1238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
1244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
1249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c)
1252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
1262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
1267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 577


1275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(const _Tp& __svt)
1292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           __sv_type __sv = __svt;
1294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->append(__sv.data(), __sv.size());
1295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
1296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
1301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_append(__sv.data()
1310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
1317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
1318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
1321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
1323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__size + 1 > this->capacity())
1324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_set_length(__size + 1);
1327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 578


1332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str)
1336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
1340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
1343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// deallocate it before replacing current allocator.
1345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(_M_local_data());
1349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(0);
1350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else
1352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    const auto __len = __str.size();
1354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // If this allocation throws there are no effects:
1356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(__ptr);
1359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_capacity(__len);
1360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(__len);
1361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
1363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
1365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_assign(__str);
1367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
1381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this = std::move(__str);
1386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 579


1389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
1392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
1400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
1410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
1433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
1436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
 16401              		.loc 18 1438 19 is_stmt 0 view .LVU3800
 16402 04a8 1223     		movs	r3, #18
 16403 04aa 0093     		str	r3, [sp]
 16404              	.LBE9335:
 16405              	.LBE9339:
 16406              	.LBE9343:
 143:Jellybeans.cpp ****     menuPos     = 0;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 580


 16407              		.loc 17 143 17 view .LVU3801
 16408 04ac 1160     		str	r1, [r2]
 144:Jellybeans.cpp ****     isEditing   = false;
 16409              		.loc 17 144 5 is_stmt 1 view .LVU3802
 144:Jellybeans.cpp ****     isEditing   = false;
 16410              		.loc 17 144 17 is_stmt 0 view .LVU3803
 16411 04ae 154A     		ldr	r2, .L715+52
 16412              	.LBB9344:
 16413              	.LBB9340:
 16414              	.LBB9336:
 16415              		.loc 18 1438 19 view .LVU3804
 16416 04b0 154B     		ldr	r3, .L715+56
 16417              	.LBE9336:
 16418              	.LBE9340:
 16419              	.LBE9344:
 144:Jellybeans.cpp ****     isEditing   = false;
 16420              		.loc 17 144 17 view .LVU3805
 16421 04b2 1170     		strb	r1, [r2]
 145:Jellybeans.cpp ****     debugString = "I'm a debug string";
 16422              		.loc 17 145 5 is_stmt 1 view .LVU3806
 16423              	.LVL1032:
 16424              	.LBB9345:
 16425              	.LBI9329:
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 16426              		.loc 18 675 7 view .LVU3807
 16427              	.LBB9341:
 16428              	.LBI9330:
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16429              		.loc 18 1435 7 view .LVU3808
 16430              	.LBB9337:
 16431              	.LBB9334:
 16432              	.LBI9332:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 16433              		.loc 18 901 7 view .LVU3809
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 16434              		.loc 18 901 7 is_stmt 0 view .LVU3810
 16435              	.LBE9334:
 16436              	.LBE9337:
 16437              	.LBE9341:
 16438              	.LBE9345:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16439              		.loc 21 357 2 is_stmt 1 view .LVU3811
 16440              	.LBB9346:
 16441              	.LBB9342:
 16442              	.LBB9338:
 16443              		.loc 18 1438 19 is_stmt 0 view .LVU3812
 16444 04b4 4268     		ldr	r2, [r0, #4]
 16445 04b6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 16446              	.LVL1033:
 16447              		.loc 18 1438 19 view .LVU3813
 16448              	.LBE9338:
 16449              	.LBE9342:
 16450              	.LBE9346:
 147:Jellybeans.cpp ****     patch.StartAdc();
 16451              		.loc 17 147 5 is_stmt 1 view .LVU3814
 147:Jellybeans.cpp ****     patch.StartAdc();
 16452              		.loc 17 147 19 is_stmt 0 view .LVU3815
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 581


 16453 04ba A5F16800 		sub	r0, r5, #104
 16454 04be FFF7FEFF 		bl	_ZN5daisy10DaisyPatch8StartAdcEv
 16455              	.LVL1034:
 16456              	.L710:
 150:Jellybeans.cpp ****     while(1){
 16457              		.loc 17 150 5 is_stmt 1 discriminator 1 view .LVU3816
 151:Jellybeans.cpp ****         updateControls();
 16458              		.loc 17 151 9 discriminator 1 view .LVU3817
 151:Jellybeans.cpp ****         updateControls();
 16459              		.loc 17 151 23 is_stmt 0 discriminator 1 view .LVU3818
 16460 04c2 FFF7FEFF 		bl	_Z14updateControlsv
 16461              	.LVL1035:
 152:Jellybeans.cpp ****         updateOled();
 16462              		.loc 17 152 9 is_stmt 1 discriminator 1 view .LVU3819
 152:Jellybeans.cpp ****         updateOled();
 16463              		.loc 17 152 19 is_stmt 0 discriminator 1 view .LVU3820
 16464 04c6 FFF7FEFF 		bl	_Z10updateOledv
 16465              	.LVL1036:
 153:Jellybeans.cpp ****         updateOutputs();
 16466              		.loc 17 153 9 is_stmt 1 discriminator 1 view .LVU3821
 153:Jellybeans.cpp ****         updateOutputs();
 16467              		.loc 17 153 22 is_stmt 0 discriminator 1 view .LVU3822
 16468 04ca FFF7FEFF 		bl	_Z13updateOutputsv
 16469              	.LVL1037:
 150:Jellybeans.cpp ****     while(1){
 16470              		.loc 17 150 5 is_stmt 1 discriminator 1 view .LVU3823
 16471 04ce F8E7     		b	.L710
 16472              	.L716:
 16473              		.align	2
 16474              	.L715:
 16475 04d0 ABAAAAAA 		.word	-1431655765
 16476 04d4 58000000 		.word	patch+88
 16477 04d8 00000000 		.word	.LANCHOR3
 16478 04dc 00000000 		.word	.LANCHOR6
 16479 04e0 00000000 		.word	.LANCHOR8
 16480 04e4 00000000 		.word	.LANCHOR10
 16481 04e8 00000000 		.word	.LANCHOR4
 16482 04ec 00000000 		.word	.LANCHOR7
 16483 04f0 00000000 		.word	.LANCHOR9
 16484 04f4 00000000 		.word	.LANCHOR11
 16485 04f8 00000000 		.word	.LANCHOR13
 16486 04fc 00000000 		.word	.LANCHOR15
 16487 0500 00000000 		.word	.LANCHOR24
 16488 0504 00000000 		.word	.LANCHOR12
 16489 0508 54000000 		.word	.LC18
 16490              		.cfi_endproc
 16491              	.LFE5114:
 16493              		.section	.text._ZNSt12_Vector_baseIiSaIiEED2Ev,"axG",%progbits,_ZNSt12_Vector_baseIiSaIiEED5Ev,com
 16494              		.align	1
 16495              		.p2align 2,,3
 16496              		.weak	_ZNSt12_Vector_baseIiSaIiEED2Ev
 16497              		.syntax unified
 16498              		.thumb
 16499              		.thumb_func
 16500              		.fpu fpv5-d16
 16502              	_ZNSt12_Vector_baseIiSaIiEED2Ev:
 16503              	.LVL1038:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 582


 16504              	.LFB5698:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 16505              		.loc 26 333 7 view -0
 16506              		.cfi_startproc
 16507              		@ args = 0, pretend = 0, frame = 0
 16508              		@ frame_needed = 0, uses_anonymous_args = 0
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 16509              		.loc 26 333 7 is_stmt 0 view .LVU3825
 16510 0000 10B5     		push	{r4, lr}
 16511              		.cfi_def_cfa_offset 8
 16512              		.cfi_offset 4, -8
 16513              		.cfi_offset 14, -4
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 16514              		.loc 26 333 7 view .LVU3826
 16515 0002 0446     		mov	r4, r0
 16516              	.LBB9347:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 16517              		.loc 26 335 15 view .LVU3827
 16518 0004 0068     		ldr	r0, [r0]
 16519              	.LVL1039:
 16520              	.LBB9348:
 16521              	.LBI9348:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 16522              		.loc 26 350 7 is_stmt 1 view .LVU3828
 16523              	.LBB9349:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 16524              		.loc 26 353 2 is_stmt 0 view .LVU3829
 16525 0006 18B1     		cbz	r0, .L718
 16526              	.LVL1040:
 16527              	.LBB9350:
 16528              	.LBI9350:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 16529              		.loc 25 491 7 is_stmt 1 view .LVU3830
 16530              	.LBB9351:
 16531              	.LBB9352:
 16532              	.LBI9352:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 16533              		.loc 20 120 7 view .LVU3831
 16534              	.LBE9352:
 16535              	.LBE9351:
 16536              	.LBE9350:
 16537              	.LBE9349:
 16538              	.LBE9348:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 16539              		.loc 26 336 35 is_stmt 0 view .LVU3832
 16540 0008 A168     		ldr	r1, [r4, #8]
 16541              	.LBB9358:
 16542              	.LBB9357:
 16543              	.LBB9356:
 16544              	.LBB9355:
 16545              	.LBB9354:
 16546              	.LBB9353:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 16547              		.loc 20 133 19 view .LVU3833
 16548 000a 091A     		subs	r1, r1, r0
 16549 000c FFF7FEFF 		bl	_ZdlPvj
 16550              	.LVL1041:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 583


 16551              	.L718:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 16552              		.loc 20 133 19 view .LVU3834
 16553              	.LBE9353:
 16554              	.LBE9354:
 16555              	.LBE9355:
 16556              	.LBE9356:
 16557              	.LBE9357:
 16558              	.LBE9358:
 16559              	.LBB9359:
 16560              	.LBI9359:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 16561              		.loc 26 128 14 is_stmt 1 view .LVU3835
 16562              	.LBB9360:
 16563              	.LBI9360:
 16564              		.loc 19 162 7 view .LVU3836
 16565              	.LBB9361:
 16566              	.LBI9361:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16567              		.loc 20 89 7 view .LVU3837
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16568              		.loc 20 89 7 is_stmt 0 view .LVU3838
 16569              	.LBE9361:
 16570              	.LBE9360:
 16571              	.LBE9359:
 16572              	.LBE9347:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16573              		.loc 26 337 7 view .LVU3839
 16574 0010 2046     		mov	r0, r4
 16575 0012 10BD     		pop	{r4, pc}
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16576              		.loc 26 337 7 view .LVU3840
 16577              		.cfi_endproc
 16578              	.LFE5698:
 16580              		.weak	_ZNSt12_Vector_baseIiSaIiEED1Ev
 16581              		.thumb_set _ZNSt12_Vector_baseIiSaIiEED1Ev,_ZNSt12_Vector_baseIiSaIiEED2Ev
 16582              		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 16583              		.align	1
 16584              		.p2align 2,,3
 16585              		.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSa
 16586              		.syntax unified
 16587              		.thumb
 16588              		.thumb_func
 16589              		.fpu fpv5-d16
 16591              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 16592              	.LVL1042:
 16593              	.LFB6061:
1925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::iterator
1930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_lower_bound(_Link_type __x, _Base_ptr __y,
1932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k)
1933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 584


1935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return iterator(__y);
1940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k) const
1949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return const_iterator(__y);
1956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::iterator
1962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_upper_bound(_Link_type __x, _Base_ptr __y,
1964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k)
1965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return iterator(__y);
1972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k) const
1981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return const_iterator(__y);
1988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 585


1992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::iterator,
1994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
1995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::iterator>
1996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     equal_range(const _Key& __k)
1998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
2000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
2001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
2002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
2004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __x = _S_right(__x);
2005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
2006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
2007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Link_type __xu(__x);
2010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Base_ptr __yu(__y);
2011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
2012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __xu = _S_right(__xu);
2013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return pair<iterator,
2014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			  iterator>(_M_lower_bound(__x, __y, __k),
2015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				    _M_upper_bound(__xu, __yu, __k));
2016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return pair<iterator, iterator>(iterator(__y),
2019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      iterator(__y));
2020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::const_iterator,
2026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::const_iterator>
2028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     equal_range(const _Key& __k) const
2030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Link_type __x = _M_begin();
2032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr __y = _M_end();
2033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
2034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
2036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __x = _S_right(__x);
2037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
2038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
2039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Const_Link_type __xu(__x);
2042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Const_Base_ptr __yu(__y);
2043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
2044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __xu = _S_right(__xu);
2045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return pair<const_iterator,
2046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			  const_iterator>(_M_lower_bound(__x, __y, __k),
2047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 					  _M_upper_bound(__xu, __yu, __k));
2048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 586


2049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return pair<const_iterator, const_iterator>(const_iterator(__y),
2051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 						  const_iterator(__y));
2052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
2057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     swap(_Rb_tree& __t)
2059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value)
2060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_root() == 0)
2062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__t._M_root() != 0)
2064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_impl._M_move_data(__t._M_impl);
2065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else if (__t._M_root() == 0)
2067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__t._M_impl._M_move_data(_M_impl);
2068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
2069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(_M_root(),__t._M_root());
2071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(_M_leftmost(),__t._M_leftmost());
2072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(_M_rightmost(),__t._M_rightmost());
2073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root()->_M_parent = _M_end();
2075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __t._M_root()->_M_parent = __t._M_end();
2076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(this->_M_impl._M_node_count, __t._M_impl._M_node_count);
2077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // No need to swap header's color as it does not change.
2079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       std::swap(this->_M_impl._M_key_compare, __t._M_impl._M_key_compare);
2080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Alloc_traits::_S_on_swap(_M_get_Node_allocator(),
2082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				__t._M_get_Node_allocator());
2083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 16594              		.loc 29 2091 5 is_stmt 1 view -0
 16595              		.cfi_startproc
 16596              		@ args = 0, pretend = 0, frame = 8
 16597              		@ frame_needed = 0, uses_anonymous_args = 0
 16598              		.loc 29 2091 5 is_stmt 0 view .LVU3842
 16599 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 16600              		.cfi_def_cfa_offset 36
 16601              		.cfi_offset 4, -36
 16602              		.cfi_offset 5, -32
 16603              		.cfi_offset 6, -28
 16604              		.cfi_offset 7, -24
 16605              		.cfi_offset 8, -20
 16606              		.cfi_offset 9, -16
 16607              		.cfi_offset 10, -12
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 587


 16608              		.cfi_offset 11, -8
 16609              		.cfi_offset 14, -4
 16610              	.LBB9437:
 16611              	.LBB9438:
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 16612              		.loc 29 749 73 view .LVU3843
 16613 0004 8C68     		ldr	r4, [r1, #8]
 16614              	.LBE9438:
 16615              	.LBE9437:
 16616              		.loc 29 2091 5 view .LVU3844
 16617 0006 83B0     		sub	sp, sp, #12
 16618              		.cfi_def_cfa_offset 48
 16619              		.loc 29 2091 5 view .LVU3845
 16620 0008 8B46     		mov	fp, r1
 16621 000a 8146     		mov	r9, r0
 16622              	.LVL1043:
 16623              	.LBB9439:
 16624              	.LBI9437:
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 16625              		.loc 29 748 7 is_stmt 1 view .LVU3846
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 16626              		.loc 29 748 7 is_stmt 0 view .LVU3847
 16627              	.LBE9439:
 16628              	.LBB9440:
 16629              	.LBI9440:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 16630              		.loc 29 759 7 is_stmt 1 view .LVU3848
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 16631              		.loc 29 759 7 is_stmt 0 view .LVU3849
 16632              	.LBE9440:
2092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
2093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
2096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
2097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       bool __comp = true;
2098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
 16633              		.loc 29 2098 18 is_stmt 1 view .LVU3850
2091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 16634              		.loc 29 2091 5 is_stmt 0 view .LVU3851
 16635 000c 0192     		str	r2, [sp, #4]
 16636              		.loc 29 2098 18 view .LVU3852
 16637 000e 002C     		cmp	r4, #0
 16638 0010 36D0     		beq	.L747
 16639 0012 019B     		ldr	r3, [sp, #4]
 16640 0014 D3F800A0 		ldr	r10, [r3]
 16641 0018 D3F80480 		ldr	r8, [r3, #4]
 16642 001c 00E0     		b	.L726
 16643              	.LVL1044:
 16644              	.L745:
 16645              		.loc 29 2098 18 view .LVU3853
 16646 001e 1446     		mov	r4, r2
 16647              	.LVL1045:
 16648              	.L726:
 16649              	.LBB9442:
 16650              	.LBI9442:
 16651              		.file 40 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 588


   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Functor implementations -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1996-1998
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /** @file bits/stl_function.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #ifndef _STL_FUNCTION_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define _STL_FUNCTION_H 1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 589


  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #include <bits/move.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** {
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.1 base classes
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup functors Function Objects
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup utilities
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Function objects, or @e functors, are objects with an @c operator()
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  defined and accessible.  They can be passed as arguments to algorithm
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  templates and used in place of a function pointer.  Not only is the
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  resulting expressiveness of the library increased, but the generated
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  code can be more efficient than what you might write by hand.  When we
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  refer to @a functors, then, generally we include function pointers in
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the description as well.
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Often, functors are only created as temporaries passed to algorithm
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  calls, rather than being created as named variables.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Two examples taken from the standard itself follow.  To perform a
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  by-element addition of two vectors @c a and @c b containing @c double,
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and put the result in @c a, use
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform (a.begin(), a.end(), b.begin(), a.begin(), plus<double>());
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  To negate every element in @c a, use
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform(a.begin(), a.end(), a.begin(), negate<double>());
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The addition and negation functions will be inlined directly.
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The standard functors are derived from structs named @c unary_function
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and @c binary_function.  These two classes contain nothing but typedefs,
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  to aid in generic (template) programming.  If you write your own
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  functors, you might consider doing the same.
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg, typename _Result>
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct unary_function
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c argument_type is the type of the argument
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg 	argument_type;   
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;  
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 590


 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct binary_function
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c first_argument_type is the type of the first argument
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg1 	first_argument_type; 
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c second_argument_type is the type of the second argument
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg2 	second_argument_type;
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.2 arithmetic
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup arithmetic_functors Arithmetic Classes
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Because basic math often needs to be done during an algorithm,
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the library provides functors for those operations.  See the
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  documentation for @link functors the base classes@endlink
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  for examples of their use.
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   struct __is_transparent;  // undefined
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus;
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus;
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies;
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides;
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus;
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus : public binary_function<_Tp, _Tp, _Tp>
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 591


 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x + __y; }
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus : public binary_function<_Tp, _Tp, _Tp>
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x - __y; }
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x * __y; }
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides : public binary_function<_Tp, _Tp, _Tp>
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x / __y; }
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus : public binary_function<_Tp, _Tp, _Tp>
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x % __y; }
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate : public unary_function<_Tp, _Tp>
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x) const
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return -__x; }
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define __cpp_lib_transparent_operators 201510
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 592


 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus<void>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) + std::forward<_Up>(__u)))
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) + std::forward<_Up>(__u))
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) + std::forward<_Up>(__u); }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus<void>
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) - std::forward<_Up>(__u)))
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) - std::forward<_Up>(__u))
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) - std::forward<_Up>(__u); }
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies<void>
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) * std::forward<_Up>(__u)))
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) * std::forward<_Up>(__u))
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) * std::forward<_Up>(__u); }
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides<void>
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) / std::forward<_Up>(__u)))
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) / std::forward<_Up>(__u))
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) / std::forward<_Up>(__u); }
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 593


 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus<void>
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) % std::forward<_Up>(__u)))
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) % std::forward<_Up>(__u))
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) % std::forward<_Up>(__u); }
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate<void>
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp>
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t) const
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(-std::forward<_Tp>(__t)))
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(-std::forward<_Tp>(__t))
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return -std::forward<_Tp>(__t); }
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.3 comparisons
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup comparison_functors Comparison Classes
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The library provides six wrapper functors for all the basic comparisons
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  in C++, like @c <.
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to;
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct not_equal_to;
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater;
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 594


 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater_equal;
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less_equal;
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to : public binary_function<_Tp, _Tp, bool>
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct not_equal_to : public binary_function<_Tp, _Tp, bool>
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x != __y; }
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater : public binary_function<_Tp, _Tp, bool>
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x > __y; }
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less : public binary_function<_Tp, _Tp, bool>
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 16652              		.loc 40 385 7 is_stmt 1 view .LVU3854
 16653              	.LBB9443:
 16654              	.LBI9443:
1439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
1440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
1444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
1445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 595


1450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
1453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
1457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
1487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
1493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
1503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 596


1507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
1512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 597


1564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	iterator
1578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __pos = __p - begin();
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
1600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // See PR libstdc++/83328
1617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 598


1621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
1628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1 Position in string to insert at.
1629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
1630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
1645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str   The string to insert.
1647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
1649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
1653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
1670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
1673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 599


1678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
1683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
1690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
1702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     traits_type::length(__s));
1709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
1731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
1734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 600


1735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
1773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
1775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
1785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 601


1792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == npos)
1810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__n != 0)
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
1820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
1822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
1823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __position)
1826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < end());
1829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - begin();
1830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
1836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __last <= end());
1848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         const size_type __pos = __first - begin();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 602


1849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__last == end())
1850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
1852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
1859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
1861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() noexcept
1864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_erase(size() - 1, 1);
1867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
1874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
1886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
1894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
1898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
1901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 603


1906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
1908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2)
1937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
1945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 604


1963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
1968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
1971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
1972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
1990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
1993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
2000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string& __str)
2004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
2008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
2012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 605


2020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __s, size_type __n)
2024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
2032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
2055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
2056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __c)
2067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
2075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 606


2077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
2089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
2090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					   std::__false_type());
2100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
2103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
2109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
2120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 607


2134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      iterator __k1, iterator __k2)
2146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
2166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
2182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
2184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
2189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
2190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 608


2191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
2205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
2208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
2217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
2218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
2225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
2226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
2227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
2228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
2241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
2242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 609


2248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __false_type);
2252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
2256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const size_type __len2);
2260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
2265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
2268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
2269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
2270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
2271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
2272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
2277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
2283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
2284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
2287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
2289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
2292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
2297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
2299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
2304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 610


2305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
2311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
2317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
2322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
2323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
2330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_get_allocator(); }
2332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
2335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
2351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
2358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 611


2362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
2367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
2383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
2389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
2413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 612


2419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
2429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
2445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
2461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
2464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
2467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
2468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 613


2476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
2491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
2508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
2525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 614


2533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
2541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
2565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
2566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
2572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 615


2590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
2609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
2625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 616


2647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
2656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
2659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
2666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
2692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 617


2704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
2708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
2726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
2733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
2740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
2746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 618


2761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
2777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
2789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
2795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
2808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 619


2818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
2822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
2823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
2825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
2828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
2833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
2835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
2839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
2847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
2853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
2855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
2856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
2860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
2861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
2862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
2873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 620


2875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
2877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
2878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
2882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
2883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
2884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
2890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
2907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
2911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
2921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
2927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
2929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 621


2932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
2933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
2938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
2939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
2940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
2943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
2949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
2950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
2957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
2965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
2966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
2976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
2983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
2987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 622


2989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
2993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
2995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
3001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
3006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
3007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
3008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
3012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
3013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
3017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
3018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
3019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
3020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
3021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
3024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
3030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
3032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
3038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
3039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
3040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
3042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
3044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 623


3046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
3050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
3062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
3068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     };
3072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // Reference-counted COW string implentation
3075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
3077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
3078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
3081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
3082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
3084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
3086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @doctodo
3095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Documentation?  What's that?
3098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  A string looks like this:
3101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @code
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 624


3103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        [_Rep]
3104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        _M_length
3105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_dataplus                          _M_refcount
3107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @endcode
3109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  pointer to the header.
3113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  This approach has the enormous advantage that a string object
3115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  object at the front.
3121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string length.)
3127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  destroy the empty-string _Rep object.
3133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  for a C++ string implementation.
3136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   */
3137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 21.3  Template class basic_string
3138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
3140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
3141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _CharT_alloc_type;
3143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_CharT_alloc_type> _CharT_alloc_traits;
3144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
3146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					    traits_type;
3148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Alloc					    allocator_type;
3150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
3153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef value_type&				    reference;
3157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const value_type&				    const_reference;
3158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::pointer	    pointer;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 625


3160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::const_pointer   const_pointer;
3161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                                             const_iterator;
3164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
3168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
3169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
3170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
3172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _Rep: string representation
3173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   Invariants:
3174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      must be kept null-terminated.
3176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   2. _M_capacity >= _M_length
3177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   3. _M_refcount has three states:
3179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //       0: one reference, non-const.
3181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      empty string representation needs no constructor.
3185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep_base
3187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_length;
3189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_capacity;
3190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Atomic_word		_M_refcount;
3191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep : _Rep_base
3194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Types:
3196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  rebind<char>::other _Raw_bytes_alloc;
3198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// (Public) Data members:
3200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The maximum number of individual char_type elements of an
3202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// look like this:
3208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Solving for m:
3210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// In addition, this implementation quarters this amount.
3212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const size_type	_S_max_size;
3213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const _CharT	_S_terminal;
3214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // (carefully) in an empty string with one reference.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 626


3217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static size_type _S_empty_rep_storage[];
3218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _Rep&
3220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { 
3222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // be reasonably safe in this case.
3225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // leaked or not), so a relaxed load is enough.
3237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount < 0;
3240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // but one reference concurrently with this check, so we need this
3250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_dispose.
3252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount > 0;
3255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = -1; }
3261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = 0; }
3265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_set_sharable();  // One reference.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 627


3274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_length = __n;
3275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // grrr. (per 21.3.4)
3277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refdata() throw()
3283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Create & Destroy
3293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static _Rep*
3294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - all but last decrements need to release to synchronize with
3307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the last decrement that will delete the object.
3308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   all the previous decrements.
3310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - last but one decrement needs to release to synchronize with
3311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the object is not shared anymore.
3313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							 -1) <= 0)
3315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		{
3316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(__a);
3318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		}
3319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refcopy() throw()
3327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 628


3331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_refdata();
3333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : _Alloc
3341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT* _M_p; // The actual data.
3346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (public):
3350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // size that the allocator can hold.
3352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
3353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
3356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (private):
3357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return  _M_dataplus._M_p; }
3362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Rep*
3368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // but they do not call _M_leak.
3373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
3376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
3380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_leak_hard();
3386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 629


3388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
3392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
3394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
3395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
3396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
3403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
3414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
3422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
3423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 630


3445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
3446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
3452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
3453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
3454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
3479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
3489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak_hard();
3496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _Rep&
3498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_empty_rep(); }
3500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 631


3502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
3503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
3506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
3507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
3511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
3513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
3514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
3516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
3519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
3520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
3521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
3522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
3525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
3530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
3531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
3534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
3540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
3545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
3547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 632


3559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a);
3560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str);
3567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n);
3587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a);
3596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
3600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
3605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
3611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
3612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
3615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 633


3616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
3617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
3618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
3620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
3621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                  __s + npos, __a), __a)
3622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
3626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
3627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
3628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
3635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
3639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str)
3641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
3655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__a == __str.get_allocator())
3668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 634


3673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
3675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
3682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
3683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
3684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
3687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc());
3689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
3694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
3697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
3701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
3705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
3706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
3710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
3713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
3716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
3726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str); }
3727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 635


3730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
3731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s) 
3734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
3735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
3738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
3739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
3741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
3742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c) 
3745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
3746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c); 
3747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
3757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
3760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// NB: DR 1204.
3763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
3764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
3770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
3773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
3775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
3785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
3786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator=(const _Tp& __svt)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 636


3787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->assign(__svt); }
3788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
3791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
3792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
3794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
3795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
3796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
3798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.  Unshares the string.
3801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data());
3807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
3816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
3819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Unshares the string.
3820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() // FIXME C++11: should be noexcept.
3823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + this->size());
3826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.  Unshares the string.
3840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 637


3844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.  Unshares the string.
3858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
3862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
3867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
3879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
3880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
3887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
3896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 638


3901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
3902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
3905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
3910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
3923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_max_size; }
3926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
3931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
3933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
3934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
3939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
3945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
3949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
3952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
3953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 639


3958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
3960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
3961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
3963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
3964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
3965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
3966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
3967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
3973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
3974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_capacity; }
3978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
3982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
3983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
3986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
3987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
3988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
3989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
3991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
3992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
3995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
3998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
4001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
4003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
4005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_M_rep()->_M_is_shared())
4007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
4008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
4009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
4010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
4011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
4012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 640


4015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // PR 56166: this should not throw.
4016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear()
4018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
4024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
4026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
4028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
4030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
4033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
4039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
4050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)  Unshares the string.
4056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
4059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
4062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
4066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 641


4072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
4073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
4078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
4081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
4083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
4085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
4093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  unsharing the string.
4100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
4103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
4105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
4107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
4110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
4116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front()
4120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
4123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 642


4129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
4131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
4134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
4138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back()
4142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
4150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
4153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
4160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
4167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
4168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
4176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
4177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
4180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
4181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
4185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 643


4186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
4187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
4210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
4211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str);
4220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
4223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
4230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
4232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
4233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
4239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 644


4243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n);
4245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
4253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
4260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
4265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c);
4268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
4277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
4282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 645


4300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt)
4302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *               from.
4311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
4312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return append(__sv.data()
4321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
4328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
4329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
4332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = 1 + this->size();
4334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->reserve(__len);
4336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
4342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str);
4347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
4351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
4356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 646


4357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
4359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
4362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
4368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
4369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
4370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
4375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
4377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
4378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str._M_data()
4382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
4387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
4392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n);
4397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
4400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
4406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
4409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 647


4414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
4416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
4417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
4422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
4425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
4429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
4448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
4454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The source object convertible to string_view.
4455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
4460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
4470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 648


4471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return assign(__sv.data()
4478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
4502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
4504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
4505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
4514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 649


4528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
4534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
4535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
4550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
4551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
4558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
4575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
4578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 650


4585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
4588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
4594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
4617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
4634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
4637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 651


4642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, _CharT __c)
4650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
4656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string_view to insert
4678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from.
4679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
4680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
4696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 652


4699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
4719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
4721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
4723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
4724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __position)
4727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < _M_iend());
4730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
4734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
4738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __first, iterator __last);
4747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  
4748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
4751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
4753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 653


4756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	erase(size() - 1, 1);
4759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
4766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
4778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
4786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
4790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
4793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
4800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 654


4813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
4825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2);
4829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
4832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
4855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
4858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
4869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 655


4870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
4877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
4880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
4887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
4894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
4898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
4917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 656


4927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
4959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
4975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
4977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= _M_iend());
4979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 657


4984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
4985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
4994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
4998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
5005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
5009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
5019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
5029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 658


5041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
5042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
5045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
5047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
5052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
5053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
5067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
5068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
5071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
5075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
5080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
5081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
5088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
5089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
5090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
5091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 659


5098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
5104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __val, __true_type)
5108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
5111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k2, __false_type);
5114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
5118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      size_type __n2);
5122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIter is an integral type
5125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __false_type)
5129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __true_type)
5140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				    __end, __a); }
5142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _S_construct(__req, __c, __a); }
5146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
5154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 660


5155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      input_iterator_tag);
5160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
5163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _FwdIterator>
5164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     forward_iterator_tag);
5167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
5172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
5175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
5176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
5177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
5178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
5179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
5184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
5190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
5191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
5194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
5196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s)
5197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
5200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
5205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
5209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 661


5212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
5221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
5225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
5230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
5231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
5233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data();
5234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
5236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
5241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
5243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
5246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
5262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
5263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 662


5269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
5277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
5283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
5294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
5308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
5324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
5325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 663


5326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
5330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
5339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
5355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
5358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
5361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
5362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 664


5383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
5386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
5402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
5418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
5434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 665


5440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
5452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
5458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
5459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
5465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
5469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 666


5497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
5502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
5518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
5549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 667


5554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
5570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
5577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
5585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
5601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 668


5611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
5619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
5620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
5626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
5636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
5651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
5657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 669


5668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
5670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
5682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
5688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
5701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
5702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
5718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 670


5725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
5733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
5734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
5736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
5739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
5744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
5746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
5750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
5758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
5764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
5766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
5767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
5771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
5772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
5773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 671


5782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
5784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   __sv_type __sv = __svt;
5787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
5788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
5789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
5793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
5794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
5795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
5801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
5803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
5818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                 against.
5820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
5822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
5832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
5838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 672


5839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
5840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
5844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
5849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
5850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
5851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
5854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
5860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
5861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
5876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
5877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
5887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
5894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 673


5896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
5898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
5904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
5906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
5917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
5918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
5919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
5922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
5928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
5931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
5932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
5941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
5943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
5946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
5949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 674


5953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
5955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
5961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
5973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
5979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    void* exc);
5984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend const char*
5985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # endif
5991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   };
5992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides >= 201606
5995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _InputIterator, typename _CharT
5997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
6000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
6002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
6003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
6005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
6006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 675


6010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const _Allocator& = _Allocator())
6019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator+
6024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate two strings.
6026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate C string and string.
6042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate character and string.
6053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and C string.
6063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 676


6067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and character.
6079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __string_type __str(__lhs);
6090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__size_type(1), __rhs);
6091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
6095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
6113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       using _Alloc_traits = allocator_traits<_Alloc>;
6114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool __use_rhs = false;
6115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if _GLIBCXX17_CONSTEXPR (typename _Alloc_traits::is_always_equal{})
6116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
6117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       else if (__lhs.get_allocator() == __rhs.get_allocator())
6118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
6119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if (__use_rhs)
6120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
6122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const auto __size = __lhs.size() + __rhs.size();
6123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__size > __lhs.capacity() && __size <= __rhs.capacity())
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 677


6124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    return std::move(__rhs.insert(0, __lhs));
6125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
6126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return std::move(__lhs.append(__rhs));
6127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs,
6138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __rhs)
6151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator ==
6155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of two strings.
6157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT>
6169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline
6170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return (__lhs.size() == __rhs.size()
6174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
6176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of string and C string.
6179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 678


6181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_lib_three_way_comparison
6190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  A string.
6193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  A null-terminated string.
6194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline auto
6199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		const basic_string<_CharT, _Traits, _Alloc>& __rhs) noexcept
6201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  A string.
6207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  A null-terminated string.
6208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline auto
6213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		const _CharT* __rhs) noexcept
6215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
6218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of C string and string.
6220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const _CharT* __lhs,
6227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator !=
6231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of two strings.
6233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 679


6238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of C string and string.
6246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
6249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const _CharT* __lhs,
6253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of string and C string.
6258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator <
6269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string precedes string.
6271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 16655              		.loc 18 6277 5 view .LVU3855
 16656              	.LBB9444:
 16657              	.LBB9445:
 16658              	.LBB9446:
 16659              	.LBB9447:
 16660              	.LBB9448:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16661              		.loc 21 347 2 view .LVU3856
 16662 0020 6669     		ldr	r6, [r4, #20]
 16663              	.LBE9448:
 16664              	.LBE9447:
 16665              	.LBE9446:
 16666              	.LBI9445:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16667              		.loc 18 2852 7 view .LVU3857
 16668              	.LVL1046:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 680


 16669              		.loc 18 2852 7 is_stmt 0 view .LVU3858
 16670 0022 4546     		mov	r5, r8
 16671 0024 2769     		ldr	r7, [r4, #16]
 16672              	.LBB9454:
 16673              	.LBB9451:
 16674              	.LBB9449:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16675              		.loc 21 347 25 view .LVU3859
 16676 0026 5046     		mov	r0, r10
 16677 0028 B045     		cmp	r8, r6
 16678 002a 3946     		mov	r1, r7
 16679 002c 28BF     		it	cs
 16680 002e 3546     		movcs	r5, r6
 16681              	.LVL1047:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16682              		.loc 21 347 25 view .LVU3860
 16683              	.LBE9449:
 16684              	.LBI9447:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 16685              		.loc 21 337 7 is_stmt 1 view .LVU3861
 16686              	.LBB9450:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 16687              		.loc 21 339 2 view .LVU3862
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16688              		.loc 21 347 25 is_stmt 0 view .LVU3863
 16689 0030 2A46     		mov	r2, r5
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 16690              		.loc 21 339 2 view .LVU3864
 16691 0032 15B1     		cbz	r5, .L728
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16692              		.loc 21 347 25 view .LVU3865
 16693 0034 FFF7FEFF 		bl	memcmp
 16694              	.LVL1048:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16695              		.loc 21 347 25 view .LVU3866
 16696              	.LBE9450:
 16697              	.LBE9451:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 16698              		.loc 18 2859 2 view .LVU3867
 16699 0038 08B9     		cbnz	r0, .L729
 16700              	.LVL1049:
 16701              	.L728:
 16702              	.LBB9452:
 16703              	.LBI9452:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16704              		.loc 18 401 7 is_stmt 1 view .LVU3868
 16705              	.LBB9453:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16706              		.loc 18 403 51 is_stmt 0 view .LVU3869
 16707 003a A8EB0600 		sub	r0, r8, r6
 16708              	.LVL1050:
 16709              	.L729:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16710              		.loc 18 403 51 view .LVU3870
 16711              	.LBE9453:
 16712              	.LBE9452:
 16713              	.LBE9454:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 681


 16714              	.LBE9445:
 16715              	.LBE9444:
 16716              	.LBE9443:
 16717              	.LBE9442:
 16718 003e 0028     		cmp	r0, #0
 16719              	.LBB9455:
 16720              	.LBB9456:
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 16721              		.loc 29 798 53 view .LVU3871
 16722 0040 D4E90212 		ldrd	r1, r2, [r4, #8]
 16723              	.LBE9456:
 16724              	.LBE9455:
 16725 0044 AEBF     		itee	ge
 16726 0046 0021     		movge	r1, #0
 16727 0048 0A46     		movlt	r2, r1
 16728 004a 0121     		movlt	r1, #1
 16729              	.LVL1051:
 16730              		.loc 29 2098 18 is_stmt 1 view .LVU3872
 16731 004c 002A     		cmp	r2, #0
 16732 004e E6D1     		bne	.L745
 16733              	.LVL1052:
 16734              	.LBB9457:
 16735              	.LBI9457:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 16736              		.loc 29 273 7 view .LVU3873
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 16737              		.loc 29 273 7 is_stmt 0 view .LVU3874
 16738              	.LBE9457:
2099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x;
2101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
2102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = __comp ? _S_left(__x) : _S_right(__x);
2103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator __j = iterator(__y);
2105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__comp)
 16739              		.loc 29 2105 7 view .LVU3875
 16740 0050 B9B9     		cbnz	r1, .L725
 16741 0052 A346     		mov	fp, r4
 16742              	.LVL1053:
 16743              	.L732:
 16744              	.LBB9458:
 16745              	.LBI9458:
 16746              		.loc 40 385 7 is_stmt 1 view .LVU3876
 16747              	.LBB9459:
 16748              	.LBI9459:
 16749              		.loc 18 6277 5 view .LVU3877
 16750              	.LBB9460:
 16751              	.LBI9460:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16752              		.loc 18 2852 7 view .LVU3878
 16753              	.LBB9461:
 16754              	.LBB9462:
 16755              	.LBI9462:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 16756              		.loc 21 337 7 view .LVU3879
 16757              	.LBB9463:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 682


 16758              		.loc 21 339 2 view .LVU3880
 16759 0054 8DB1     		cbz	r5, .L735
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16760              		.loc 21 347 2 view .LVU3881
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16761              		.loc 21 347 25 is_stmt 0 view .LVU3882
 16762 0056 2A46     		mov	r2, r5
 16763 0058 5146     		mov	r1, r10
 16764 005a 3846     		mov	r0, r7
 16765 005c FFF7FEFF 		bl	memcmp
 16766              	.LVL1054:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16767              		.loc 21 347 25 view .LVU3883
 16768              	.LBE9463:
 16769              	.LBE9462:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 16770              		.loc 18 2859 2 view .LVU3884
 16771 0060 58B1     		cbz	r0, .L735
 16772              	.L736:
 16773              	.LVL1055:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 16774              		.loc 18 2859 2 view .LVU3885
 16775              	.LBE9461:
 16776              	.LBE9460:
 16777              	.LBE9459:
 16778              	.LBE9458:
2106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__j == begin())
2108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(__x, __y);
2109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    --__j;
2111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 16779              		.loc 29 2112 7 view .LVU3886
 16780 0062 0028     		cmp	r0, #0
 16781              	.LVL1056:
 16782              	.LBB9469:
 16783              	.LBI9469:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 16784              		.loc 30 352 12 is_stmt 1 view .LVU3887
 16785              	.LBB9470:
 16786              	.LBB9471:
 16787              	.LBB9472:
 16788              	.LBI9472:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16789              		.loc 34 76 5 view .LVU3888
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16790              		.loc 34 76 5 is_stmt 0 view .LVU3889
 16791              	.LBE9472:
 16792              		.loc 30 353 64 view .LVU3890
 16793 0064 4FF00003 		mov	r3, #0
 16794              	.LBE9471:
 16795              	.LBE9470:
 16796              	.LBE9469:
2113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _Res(__x, __y);
2114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _Res(__j._M_node, 0);
2115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 683


 16797              		.loc 29 2115 5 view .LVU3891
 16798 0068 4846     		mov	r0, r9
 16799              	.LBB9476:
 16800              	.LBB9475:
 16801              	.LBB9474:
 16802              		.loc 30 353 64 view .LVU3892
 16803 006a B4BF     		ite	lt
 16804 006c C9E9003B 		strdlt	r3, fp, [r9]
 16805              	.LVL1057:
 16806              	.LBB9473:
 16807              	.LBI9473:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16808              		.loc 34 76 5 is_stmt 1 view .LVU3893
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16809              		.loc 34 76 5 is_stmt 0 view .LVU3894
 16810              	.LBE9473:
 16811              	.LBE9474:
 16812              	.LBE9475:
 16813              	.LBE9476:
 16814              	.LBB9477:
 16815              	.LBI9477:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 16816              		.loc 30 322 18 is_stmt 1 view .LVU3895
 16817              	.LBB9478:
 16818              	.LBB9479:
 16819              	.LBB9480:
 16820              	.LBI9480:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16821              		.loc 34 76 5 view .LVU3896
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16822              		.loc 34 76 5 is_stmt 0 view .LVU3897
 16823              	.LBE9480:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 16824              		.loc 30 323 51 view .LVU3898
 16825 0070 C9E90043 		strdge	r4, r3, [r9]
 16826              	.LVL1058:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 16827              		.loc 30 323 51 view .LVU3899
 16828              	.LBE9479:
 16829              	.LBE9478:
 16830              	.LBE9477:
 16831              		.loc 29 2115 5 view .LVU3900
 16832 0074 03B0     		add	sp, sp, #12
 16833              		.cfi_remember_state
 16834              		.cfi_def_cfa_offset 36
 16835              		@ sp needed
 16836 0076 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 16837              	.LVL1059:
 16838              	.L735:
 16839              		.cfi_restore_state
 16840              	.LBB9481:
 16841              	.LBB9468:
 16842              	.LBB9467:
 16843              	.LBB9466:
 16844              	.LBB9464:
 16845              	.LBI9464:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 684


 16846              		.loc 18 401 7 is_stmt 1 view .LVU3901
 16847              	.LBB9465:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16848              		.loc 18 403 51 is_stmt 0 view .LVU3902
 16849 007a A6EB0800 		sub	r0, r6, r8
 16850              	.LVL1060:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16851              		.loc 18 403 51 view .LVU3903
 16852              	.LBE9465:
 16853              	.LBE9464:
 16854 007e F0E7     		b	.L736
 16855              	.LVL1061:
 16856              	.L747:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16857              		.loc 18 403 51 view .LVU3904
 16858              	.LBE9466:
 16859              	.LBE9467:
 16860              	.LBE9468:
 16861              	.LBE9481:
 16862              	.LBB9482:
 16863              	.LBB9441:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 16864              		.loc 29 760 31 view .LVU3905
 16865 0080 0C1D     		adds	r4, r1, #4
 16866              	.LVL1062:
 16867              	.L725:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 16868              		.loc 29 760 31 view .LVU3906
 16869              	.LBE9441:
 16870              	.LBE9482:
 16871              	.LBB9483:
 16872              	.LBI9483:
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
 16873              		.loc 29 1002 7 is_stmt 1 view .LVU3907
 16874              	.LBB9484:
 16875              	.LBB9485:
 16876              	.LBI9485:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 16877              		.loc 29 273 7 view .LVU3908
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 16878              		.loc 29 273 7 is_stmt 0 view .LVU3909
 16879              	.LBE9485:
 16880              	.LBE9484:
 16881              	.LBE9483:
2107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(__x, __y);
 16882              		.loc 29 2107 4 view .LVU3910
 16883 0082 DBF80C30 		ldr	r3, [fp, #12]
 16884 0086 A342     		cmp	r3, r4
 16885 0088 10D0     		beq	.L748
 16886              	.LVL1063:
 16887              	.LBB9486:
 16888              	.LBI9486:
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 16889              		.loc 29 300 7 is_stmt 1 view .LVU3911
 16890              	.LBB9487:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 16891              		.loc 29 302 30 is_stmt 0 view .LVU3912
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 685


 16892 008a 2046     		mov	r0, r4
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 16893              		.loc 29 303 10 view .LVU3913
 16894 008c A346     		mov	fp, r4
 16895              	.LVL1064:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 16896              		.loc 29 302 30 view .LVU3914
 16897 008e FFF7FEFF 		bl	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
 16898              	.LVL1065:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 16899              		.loc 29 302 30 view .LVU3915
 16900 0092 019B     		ldr	r3, [sp, #4]
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 16901              		.loc 29 303 10 view .LVU3916
 16902 0094 0446     		mov	r4, r0
 16903 0096 D3F80480 		ldr	r8, [r3, #4]
 16904 009a D3F800A0 		ldr	r10, [r3]
 16905 009e D0E90476 		ldrd	r7, r6, [r0, #16]
 16906 00a2 4645     		cmp	r6, r8
 16907 00a4 3546     		mov	r5, r6
 16908 00a6 28BF     		it	cs
 16909 00a8 4546     		movcs	r5, r8
 16910 00aa D3E7     		b	.L732
 16911              	.LVL1066:
 16912              	.L748:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 16913              		.loc 29 303 10 view .LVU3917
 16914              	.LBE9487:
 16915              	.LBE9486:
 16916              	.LBB9488:
 16917              	.LBI9488:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 16918              		.loc 30 352 12 is_stmt 1 view .LVU3918
 16919              	.LBB9489:
 16920              	.LBB9490:
 16921              	.LBB9491:
 16922              	.LBI9491:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16923              		.loc 34 76 5 view .LVU3919
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16924              		.loc 34 76 5 is_stmt 0 view .LVU3920
 16925              	.LBE9491:
 16926              		.loc 30 353 64 view .LVU3921
 16927 00ac 0023     		movs	r3, #0
 16928              	.LBE9490:
 16929              	.LBE9489:
 16930              	.LBE9488:
 16931              		.loc 29 2115 5 view .LVU3922
 16932 00ae 4846     		mov	r0, r9
 16933              	.LBB9495:
 16934              	.LBB9494:
 16935              	.LBB9493:
 16936              		.loc 30 353 64 view .LVU3923
 16937 00b0 C9E90034 		strd	r3, r4, [r9]
 16938              	.LVL1067:
 16939              	.LBB9492:
 16940              	.LBI9492:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 686


  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16941              		.loc 34 76 5 is_stmt 1 view .LVU3924
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16942              		.loc 34 76 5 is_stmt 0 view .LVU3925
 16943              	.LBE9492:
 16944              	.LBE9493:
 16945              	.LBE9494:
 16946              	.LBE9495:
 16947              		.loc 29 2115 5 view .LVU3926
 16948 00b4 03B0     		add	sp, sp, #12
 16949              		.cfi_def_cfa_offset 36
 16950              		@ sp needed
 16951 00b6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 16952              		.loc 29 2115 5 view .LVU3927
 16953              		.cfi_endproc
 16954              	.LFE6061:
 16956 00ba 00BF     		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 16957              		.align	1
 16958              		.p2align 2,,3
 16959              		.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSa
 16960              		.syntax unified
 16961              		.thumb
 16962              		.thumb_func
 16963              		.fpu fpv5-d16
 16965              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 16966              	.LVL1068:
 16967              	.LFB5963:
2116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_equal_pos(const key_type& __k)
2125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
2128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
2129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
2130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x;
2132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _M_impl._M_key_compare(__k, _S_key(__x)) ?
2133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_S_left(__x) : _S_right(__x);
2134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _Res(__x, __y);
2136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
2142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::iterator, bool>
2145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 687


2146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_unique(_Arg&& __v)
2148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_unique(const _Val& __v)
2150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<iterator, bool> _Res;
2153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
2154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
2155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__res.second)
2157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
2159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return _Res(_M_insert_(__res.first, __res.second,
2160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				 _GLIBCXX_FORWARD(_Arg, __v), __an),
2161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      true);
2162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _Res(iterator(__res.first), false);
2165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
2171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal(_Arg&& __v)
2176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal(const _Val& __v)
2178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
2181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	= _M_get_insert_equal_pos(_KeyOfValue()(__v));
2182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Alloc_node __an(*this);
2183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _M_insert_(__res.first, __res.second,
2184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_GLIBCXX_FORWARD(_Arg, __v), __an);
2185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 16968              		.loc 29 2193 5 is_stmt 1 view -0
 16969              		.cfi_startproc
 16970              		@ args = 0, pretend = 0, frame = 8
 16971              		@ frame_needed = 0, uses_anonymous_args = 0
 16972              		.loc 29 2193 5 is_stmt 0 view .LVU3929
 16973 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 16974              		.cfi_def_cfa_offset 36
 16975              		.cfi_offset 4, -36
 16976              		.cfi_offset 5, -32
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 688


 16977              		.cfi_offset 6, -28
 16978              		.cfi_offset 7, -24
 16979              		.cfi_offset 8, -20
 16980              		.cfi_offset 9, -16
 16981              		.cfi_offset 10, -12
 16982              		.cfi_offset 11, -8
 16983              		.cfi_offset 14, -4
 16984 0004 1F46     		mov	r7, r3
 16985              	.LBB9667:
 16986              	.LBB9668:
 16987              	.LBB9669:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 16988              		.loc 29 760 31 view .LVU3930
 16989 0006 0B1D     		adds	r3, r1, #4
 16990              	.LVL1069:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 16991              		.loc 29 760 31 view .LVU3931
 16992              	.LBE9669:
 16993              	.LBE9668:
 16994              	.LBE9667:
 16995              		.loc 29 2193 5 view .LVU3932
 16996 0008 83B0     		sub	sp, sp, #12
 16997              		.cfi_def_cfa_offset 48
 16998              		.loc 29 2193 5 view .LVU3933
 16999 000a 0E46     		mov	r6, r1
 17000              	.LBB9778:
2194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
2195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				  const key_type& __k)
2196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator __pos = __position._M_const_cast();
2198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // end()
2201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__pos._M_node == _M_end())
 17001              		.loc 29 2201 7 view .LVU3934
 17002 000c 9A42     		cmp	r2, r3
 17003              	.LBE9778:
2193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
 17004              		.loc 29 2193 5 view .LVU3935
 17005 000e 0546     		mov	r5, r0
 17006              	.LVL1070:
 17007              	.LBB9779:
 17008              	.LBI9779:
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 17009              		.loc 29 354 7 is_stmt 1 view .LVU3936
 17010              	.LBB9780:
 17011              	.LBB9781:
 17012              	.LBI9781:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 17013              		.loc 29 273 7 view .LVU3937
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 17014              		.loc 29 273 7 is_stmt 0 view .LVU3938
 17015              	.LBE9781:
 17016              	.LBE9780:
 17017              	.LBE9779:
 17018              	.LBB9782:
 17019              	.LBB9670:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 689


 17020              	.LBI9668:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 17021              		.loc 29 759 7 is_stmt 1 view .LVU3939
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 17022              		.loc 29 759 7 is_stmt 0 view .LVU3940
 17023              	.LBE9670:
 17024              		.loc 29 2201 7 view .LVU3941
 17025 0010 4DD0     		beq	.L788
 17026              	.LVL1071:
 17027              	.LBB9671:
 17028              	.LBB9672:
 17029              	.LBI9672:
 17030              		.loc 40 385 7 is_stmt 1 view .LVU3942
 17031              	.LBB9673:
 17032              	.LBI9673:
 17033              		.loc 18 6277 5 view .LVU3943
 17034 0012 1446     		mov	r4, r2
 17035              	.LVL1072:
 17036              		.loc 18 6277 5 is_stmt 0 view .LVU3944
 17037 0014 D7E900B8 		ldrd	fp, r8, [r7]
 17038 0018 D2E90419 		ldrd	r1, r9, [r2, #16]
 17039              	.LVL1073:
 17040              		.loc 18 6277 5 view .LVU3945
 17041 001c C246     		mov	r10, r8
 17042 001e C845     		cmp	r8, r9
 17043 0020 28BF     		it	cs
 17044 0022 CA46     		movcs	r10, r9
 17045              	.LVL1074:
 17046              	.LBB9674:
 17047              	.LBB9675:
 17048              	.LBB9676:
 17049              	.LBB9677:
 17050              	.LBI9677:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 17051              		.loc 21 337 7 is_stmt 1 view .LVU3946
 17052              	.LBB9678:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 17053              		.loc 21 339 2 view .LVU3947
 17054 0024 BAF1000F 		cmp	r10, #0
 17055 0028 1CD0     		beq	.L755
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17056              		.loc 21 347 2 view .LVU3948
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17057              		.loc 21 347 25 is_stmt 0 view .LVU3949
 17058 002a 5246     		mov	r2, r10
 17059              	.LVL1075:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17060              		.loc 21 347 25 view .LVU3950
 17061 002c 5846     		mov	r0, fp
 17062              	.LVL1076:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17063              		.loc 21 347 25 view .LVU3951
 17064 002e 0191     		str	r1, [sp, #4]
 17065 0030 FFF7FEFF 		bl	memcmp
 17066              	.LVL1077:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17067              		.loc 21 347 25 view .LVU3952
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 690


 17068              	.LBE9678:
 17069              	.LBE9677:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 17070              		.loc 18 2859 2 view .LVU3953
 17071 0034 0028     		cmp	r0, #0
 17072 0036 0199     		ldr	r1, [sp, #4]
 17073 0038 02D1     		bne	.L786
 17074              	.LVL1078:
 17075              	.LBB9679:
 17076              	.LBI9679:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17077              		.loc 18 401 7 is_stmt 1 view .LVU3954
 17078              	.LBB9680:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17079              		.loc 18 403 51 is_stmt 0 view .LVU3955
 17080 003a A8EB0903 		sub	r3, r8, r9
 17081              	.LBE9680:
 17082              	.LBE9679:
 17083              	.LBE9676:
 17084              	.LBE9675:
 17085              	.LBE9674:
 17086              	.LBE9673:
 17087              	.LBE9672:
2202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (size() > 0
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
2205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
2206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 17088              		.loc 29 2209 12 view .LVU3956
 17089 003e 002B     		cmp	r3, #0
 17090              	.L786:
 17091 0040 14DB     		blt	.L768
 17092              	.LVL1079:
 17093              	.LBB9687:
 17094              	.LBB9688:
 17095              	.LBB9689:
 17096              	.LBB9690:
 17097              	.LBB9691:
 17098              	.LBB9692:
 17099              	.LBB9693:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17100              		.loc 21 347 2 is_stmt 1 view .LVU3957
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17101              		.loc 21 347 25 is_stmt 0 view .LVU3958
 17102 0042 0846     		mov	r0, r1
 17103 0044 5246     		mov	r2, r10
 17104 0046 5946     		mov	r1, fp
 17105 0048 FFF7FEFF 		bl	memcmp
 17106              	.LVL1080:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17107              		.loc 21 347 25 view .LVU3959
 17108              	.LBE9693:
 17109              	.LBE9692:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 691


 17110              		.loc 18 2859 2 view .LVU3960
 17111 004c 08B9     		cbnz	r0, .L762
 17112              	.LVL1081:
 17113              	.L770:
 17114              	.LBB9694:
 17115              	.LBI9694:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17116              		.loc 18 401 7 is_stmt 1 view .LVU3961
 17117              	.LBB9695:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17118              		.loc 18 403 51 is_stmt 0 view .LVU3962
 17119 004e A9EB0800 		sub	r0, r9, r8
 17120              	.LVL1082:
 17121              	.L762:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17122              		.loc 18 403 51 view .LVU3963
 17123              	.LBE9695:
 17124              	.LBE9694:
 17125              	.LBE9691:
 17126              	.LBE9690:
 17127              	.LBE9689:
 17128              	.LBE9688:
2210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  // First, try before...
2212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  iterator __before = __pos;
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__pos._M_node == _M_leftmost()) // begin()
2214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
2215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
2216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_S_right(__before._M_node) == 0)
2218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __before._M_node);
2219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      else
2220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(__pos._M_node, __pos._M_node);
2221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 17129              		.loc 29 2225 12 view .LVU3964
 17130 0052 0028     		cmp	r0, #0
 17131 0054 50DB     		blt	.L789
 17132              	.LVL1083:
 17133              	.LBB9696:
 17134              	.LBI9696:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 17135              		.loc 30 322 18 is_stmt 1 view .LVU3965
 17136              	.LBB9697:
 17137              	.LBB9698:
 17138              	.LBB9699:
 17139              	.LBI9699:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17140              		.loc 34 76 5 view .LVU3966
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17141              		.loc 34 76 5 is_stmt 0 view .LVU3967
 17142              	.LBE9699:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17143              		.loc 30 323 51 view .LVU3968
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 692


 17144 0056 0023     		movs	r3, #0
 17145 0058 C5E90043 		strd	r4, r3, [r5]
 17146              	.LVL1084:
 17147              	.L749:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17148              		.loc 30 323 51 view .LVU3969
 17149              	.LBE9698:
 17150              	.LBE9697:
 17151              	.LBE9696:
 17152              	.LBE9687:
 17153              	.LBE9671:
 17154              	.LBE9782:
2226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  // ... then try after.
2228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  iterator __after = __pos;
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__pos._M_node == _M_rightmost())
2230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
2231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
2232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_S_right(__pos._M_node) == 0)
2234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __pos._M_node);
2235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      else
2236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(__after._M_node, __after._M_node);
2237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
2242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// Equivalent keys.
2243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _Res(__pos._M_node, 0);
2244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 17155              		.loc 29 2244 5 view .LVU3970
 17156 005c 2846     		mov	r0, r5
 17157 005e 03B0     		add	sp, sp, #12
 17158              		.cfi_remember_state
 17159              		.cfi_def_cfa_offset 36
 17160              		@ sp needed
 17161 0060 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17162              	.LVL1085:
 17163              	.L755:
 17164              		.cfi_restore_state
 17165              	.LBB9783:
 17166              	.LBB9763:
 17167              	.LBB9734:
 17168              	.LBB9686:
 17169              	.LBB9685:
 17170              	.LBB9684:
 17171              	.LBB9683:
 17172              	.LBB9682:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17173              		.loc 18 401 7 is_stmt 1 view .LVU3971
 17174              	.LBB9681:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17175              		.loc 18 403 51 is_stmt 0 view .LVU3972
 17176 0064 A8EB0903 		sub	r3, r8, r9
 17177              	.LBE9681:
 17178              	.LBE9682:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 693


 17179              	.LBE9683:
 17180              	.LBE9684:
 17181              	.LBE9685:
 17182              	.LBE9686:
 17183              	.LBE9734:
2209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 17184              		.loc 29 2209 12 view .LVU3973
 17185 0068 002B     		cmp	r3, #0
 17186 006a F0DA     		bge	.L770
 17187              	.LVL1086:
 17188              	.L768:
 17189              	.LBB9735:
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
 17190              		.loc 29 2213 22 view .LVU3974
 17191 006c F368     		ldr	r3, [r6, #12]
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
 17192              		.loc 29 2213 4 view .LVU3975
 17193 006e A342     		cmp	r3, r4
 17194 0070 17D0     		beq	.L761
 17195              	.LVL1087:
 17196              	.LBB9736:
 17197              	.LBI9736:
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 17198              		.loc 29 300 7 is_stmt 1 view .LVU3976
 17199              	.LBB9737:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 17200              		.loc 29 302 30 is_stmt 0 view .LVU3977
 17201 0072 2046     		mov	r0, r4
 17202 0074 FFF7FEFF 		bl	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
 17203              	.LVL1088:
 17204 0078 D0F814A0 		ldr	r10, [r0, #20]
 17205 007c 8146     		mov	r9, r0
 17206              	.LVL1089:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 17207              		.loc 29 302 30 view .LVU3978
 17208              	.LBE9737:
 17209              	.LBE9736:
 17210              	.LBB9738:
 17211              	.LBI9738:
 17212              		.loc 40 385 7 is_stmt 1 view .LVU3979
 17213              	.LBB9739:
 17214              	.LBI9739:
 17215              		.loc 18 6277 5 view .LVU3980
 17216              	.LBB9740:
 17217              	.LBB9741:
 17218              	.LBI9741:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17219              		.loc 18 2852 7 view .LVU3981
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17220              		.loc 18 2852 7 is_stmt 0 view .LVU3982
 17221 007e C245     		cmp	r10, r8
 17222 0080 5246     		mov	r2, r10
 17223 0082 28BF     		it	cs
 17224 0084 4246     		movcs	r2, r8
 17225              	.LVL1090:
 17226              	.LBB9742:
 17227              	.LBB9743:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 694


 17228              	.LBI9743:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 17229              		.loc 21 337 7 is_stmt 1 view .LVU3983
 17230              	.LBB9744:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 17231              		.loc 21 339 2 view .LVU3984
 17232 0086 22B1     		cbz	r2, .L759
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17233              		.loc 21 347 2 view .LVU3985
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17234              		.loc 21 347 25 is_stmt 0 view .LVU3986
 17235 0088 5946     		mov	r1, fp
 17236 008a 0069     		ldr	r0, [r0, #16]
 17237              	.LVL1091:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17238              		.loc 21 347 25 view .LVU3987
 17239 008c FFF7FEFF 		bl	memcmp
 17240              	.LVL1092:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17241              		.loc 21 347 25 view .LVU3988
 17242              	.LBE9744:
 17243              	.LBE9743:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 17244              		.loc 18 2859 2 view .LVU3989
 17245 0090 08B9     		cbnz	r0, .L760
 17246              	.LVL1093:
 17247              	.L759:
 17248              	.LBB9745:
 17249              	.LBI9745:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17250              		.loc 18 401 7 is_stmt 1 view .LVU3990
 17251              	.LBB9746:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17252              		.loc 18 403 51 is_stmt 0 view .LVU3991
 17253 0092 AAEB0800 		sub	r0, r10, r8
 17254              	.LVL1094:
 17255              	.L760:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17256              		.loc 18 403 51 view .LVU3992
 17257              	.LBE9746:
 17258              	.LBE9745:
 17259              	.LBE9742:
 17260              	.LBE9741:
 17261              	.LBE9740:
 17262              	.LBE9739:
 17263              	.LBE9738:
2215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 17264              		.loc 29 2215 9 view .LVU3993
 17265 0096 0028     		cmp	r0, #0
 17266 0098 25DA     		bge	.L751
 17267              	.LVL1095:
 17268              	.LBB9747:
 17269              	.LBI9747:
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 17270              		.loc 29 797 7 is_stmt 1 view .LVU3994
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 17271              		.loc 29 797 7 is_stmt 0 view .LVU3995
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 695


 17272              	.LBE9747:
2217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __before._M_node);
 17273              		.loc 29 2217 8 view .LVU3996
 17274 009a D9F80C30 		ldr	r3, [r9, #12]
 17275 009e 002B     		cmp	r3, #0
 17276 00a0 4BD0     		beq	.L790
 17277              	.LVL1096:
 17278              	.L761:
 17279              	.LBB9748:
 17280              	.LBI9748:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 17281              		.loc 30 352 12 is_stmt 1 view .LVU3997
 17282              	.LBB9749:
 17283              	.LBB9750:
 17284              	.LBB9751:
 17285              	.LBI9751:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17286              		.loc 34 76 5 view .LVU3998
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17287              		.loc 34 76 5 is_stmt 0 view .LVU3999
 17288              	.LBE9751:
 17289              	.LBE9750:
 17290              	.LBE9749:
 17291              	.LBE9748:
 17292              	.LBE9735:
 17293              	.LBE9763:
 17294              	.LBE9783:
 17295              		.loc 29 2244 5 view .LVU4000
 17296 00a2 2846     		mov	r0, r5
 17297              	.LBB9784:
 17298              	.LBB9764:
 17299              	.LBB9758:
 17300              	.LBB9754:
 17301              	.LBB9753:
 17302              	.LBB9752:
 17303              		.loc 30 353 64 view .LVU4001
 17304 00a4 C5E90044 		strd	r4, r4, [r5]
 17305              	.LBE9752:
 17306              	.LBE9753:
 17307              	.LBE9754:
 17308              	.LBE9758:
 17309              	.LBE9764:
 17310              	.LBE9784:
 17311              		.loc 29 2244 5 view .LVU4002
 17312 00a8 03B0     		add	sp, sp, #12
 17313              		.cfi_remember_state
 17314              		.cfi_def_cfa_offset 36
 17315              		@ sp needed
 17316 00aa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17317              	.LVL1097:
 17318              	.L788:
 17319              		.cfi_restore_state
 17320              	.LBB9785:
 17321              	.LBB9765:
 17322              	.LBI9765:
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count; }
 17323              		.loc 29 1038 7 is_stmt 1 view .LVU4003
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 696


1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count; }
 17324              		.loc 29 1038 7 is_stmt 0 view .LVU4004
 17325              	.LBE9765:
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 17326              		.loc 29 2204 8 view .LVU4005
 17327 00ae 4B69     		ldr	r3, [r1, #20]
 17328 00b0 CBB1     		cbz	r3, .L751
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 17329              		.loc 29 2204 33 discriminator 1 view .LVU4006
 17330 00b2 0C69     		ldr	r4, [r1, #16]
 17331              	.LVL1098:
 17332              	.LBB9766:
 17333              	.LBI9766:
 17334              		.loc 40 385 7 is_stmt 1 discriminator 1 view .LVU4007
 17335              	.LBB9767:
 17336              	.LBI9767:
 17337              		.loc 18 6277 5 discriminator 1 view .LVU4008
 17338 00b4 D7F80480 		ldr	r8, [r7, #4]
 17339 00b8 D4F81490 		ldr	r9, [r4, #20]
 17340              	.LBB9768:
 17341              	.LBB9769:
 17342              	.LBI9769:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17343              		.loc 18 2852 7 discriminator 1 view .LVU4009
 17344              	.LVL1099:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17345              		.loc 18 2852 7 is_stmt 0 discriminator 1 view .LVU4010
 17346 00bc C145     		cmp	r9, r8
 17347 00be 4A46     		mov	r2, r9
 17348              	.LVL1100:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17349              		.loc 18 2852 7 discriminator 1 view .LVU4011
 17350 00c0 28BF     		it	cs
 17351 00c2 4246     		movcs	r2, r8
 17352              	.LVL1101:
 17353              	.LBB9770:
 17354              	.LBB9771:
 17355              	.LBI9771:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 17356              		.loc 21 337 7 is_stmt 1 discriminator 1 view .LVU4012
 17357              	.LBB9772:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 17358              		.loc 21 339 2 discriminator 1 view .LVU4013
 17359 00c4 22B1     		cbz	r2, .L752
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17360              		.loc 21 347 2 view .LVU4014
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17361              		.loc 21 347 25 is_stmt 0 view .LVU4015
 17362 00c6 3968     		ldr	r1, [r7]
 17363              	.LVL1102:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17364              		.loc 21 347 25 view .LVU4016
 17365 00c8 2069     		ldr	r0, [r4, #16]
 17366              	.LVL1103:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17367              		.loc 21 347 25 view .LVU4017
 17368 00ca FFF7FEFF 		bl	memcmp
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 697


 17369              	.LVL1104:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17370              		.loc 21 347 25 view .LVU4018
 17371              	.LBE9772:
 17372              	.LBE9771:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 17373              		.loc 18 2859 2 view .LVU4019
 17374 00ce 08B9     		cbnz	r0, .L753
 17375              	.LVL1105:
 17376              	.L752:
 17377              	.LBB9773:
 17378              	.LBI9773:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17379              		.loc 18 401 7 is_stmt 1 view .LVU4020
 17380              	.LBB9774:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17381              		.loc 18 403 51 is_stmt 0 view .LVU4021
 17382 00d0 A9EB0800 		sub	r0, r9, r8
 17383              	.LVL1106:
 17384              	.L753:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17385              		.loc 18 403 51 view .LVU4022
 17386              	.LBE9774:
 17387              	.LBE9773:
 17388              	.LBE9770:
 17389              	.LBE9769:
 17390              	.LBE9768:
 17391              	.LBE9767:
 17392              	.LBE9766:
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 17393              		.loc 29 2204 8 view .LVU4023
 17394 00d4 0028     		cmp	r0, #0
 17395 00d6 06DA     		bge	.L751
 17396              	.LVL1107:
 17397              	.L787:
 17398              	.LBB9775:
 17399              	.LBB9759:
 17400              	.LBB9700:
 17401              	.LBB9701:
 17402              	.LBI9701:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 17403              		.loc 30 336 18 is_stmt 1 view .LVU4024
 17404              	.LBB9702:
 17405              	.LBB9703:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17406              		.loc 30 337 51 is_stmt 0 view .LVU4025
 17407 00d8 0023     		movs	r3, #0
 17408              	.LBE9703:
 17409              	.LBE9702:
 17410              	.LBE9701:
 17411              	.LBE9700:
 17412              	.LBE9759:
 17413              	.LBE9775:
 17414              	.LBE9785:
 17415              		.loc 29 2244 5 view .LVU4026
 17416 00da 2846     		mov	r0, r5
 17417              	.LBB9786:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 698


 17418              	.LBB9776:
 17419              	.LBB9760:
 17420              	.LBB9732:
 17421              	.LBB9707:
 17422              	.LBB9706:
 17423              	.LBB9705:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17424              		.loc 30 337 51 view .LVU4027
 17425 00dc C5E90034 		strd	r3, r4, [r5]
 17426              	.LVL1108:
 17427              	.LBB9704:
 17428              	.LBI9704:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17429              		.loc 34 76 5 is_stmt 1 view .LVU4028
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17430              		.loc 34 76 5 is_stmt 0 view .LVU4029
 17431              	.LBE9704:
 17432              	.LBE9705:
 17433              	.LBE9706:
 17434              	.LBE9707:
 17435              	.LBE9732:
 17436              	.LBE9760:
 17437              	.LBE9776:
 17438              	.LBE9786:
 17439              		.loc 29 2244 5 view .LVU4030
 17440 00e0 03B0     		add	sp, sp, #12
 17441              		.cfi_remember_state
 17442              		.cfi_def_cfa_offset 36
 17443              		@ sp needed
 17444 00e2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17445              	.LVL1109:
 17446              	.L751:
 17447              		.cfi_restore_state
 17448              	.LBB9787:
2207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 17449              		.loc 29 2207 37 discriminator 4 view .LVU4031
 17450 00e6 2846     		mov	r0, r5
 17451 00e8 3A46     		mov	r2, r7
 17452 00ea 3146     		mov	r1, r6
 17453 00ec FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 17454              	.LVL1110:
 17455              	.LBE9787:
 17456              		.loc 29 2244 5 discriminator 4 view .LVU4032
 17457 00f0 2846     		mov	r0, r5
 17458 00f2 03B0     		add	sp, sp, #12
 17459              		.cfi_remember_state
 17460              		.cfi_def_cfa_offset 36
 17461              		@ sp needed
 17462 00f4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17463              	.LVL1111:
 17464              	.L789:
 17465              		.cfi_restore_state
 17466              	.LBB9788:
 17467              	.LBB9777:
 17468              	.LBB9761:
 17469              	.LBB9733:
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 699


 17470              		.loc 29 2229 22 view .LVU4033
 17471 00f8 3369     		ldr	r3, [r6, #16]
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 17472              		.loc 29 2229 4 view .LVU4034
 17473 00fa A342     		cmp	r3, r4
 17474 00fc ECD0     		beq	.L787
 17475              	.LVL1112:
 17476              	.LBB9708:
 17477              	.LBI9708:
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 17478              		.loc 29 285 7 is_stmt 1 view .LVU4035
 17479              	.LBB9709:
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 17480              		.loc 29 287 30 is_stmt 0 view .LVU4036
 17481 00fe 2046     		mov	r0, r4
 17482 0100 FFF7FEFF 		bl	_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
 17483              	.LVL1113:
 17484 0104 D0F814A0 		ldr	r10, [r0, #20]
 17485 0108 8146     		mov	r9, r0
 17486              	.LVL1114:
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 17487              		.loc 29 287 30 view .LVU4037
 17488              	.LBE9709:
 17489              	.LBE9708:
 17490              	.LBB9710:
 17491              	.LBI9710:
 17492              		.loc 40 385 7 is_stmt 1 view .LVU4038
 17493              	.LBB9711:
 17494              	.LBI9711:
 17495              		.loc 18 6277 5 view .LVU4039
 17496              	.LBB9712:
 17497              	.LBB9713:
 17498              	.LBI9713:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17499              		.loc 18 2852 7 view .LVU4040
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17500              		.loc 18 2852 7 is_stmt 0 view .LVU4041
 17501 010a C245     		cmp	r10, r8
 17502 010c 5246     		mov	r2, r10
 17503 010e 28BF     		it	cs
 17504 0110 4246     		movcs	r2, r8
 17505              	.LVL1115:
 17506              	.LBB9714:
 17507              	.LBB9715:
 17508              	.LBI9715:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 17509              		.loc 21 337 7 is_stmt 1 view .LVU4042
 17510              	.LBB9716:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 17511              		.loc 21 339 2 view .LVU4043
 17512 0112 62B1     		cbz	r2, .L765
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17513              		.loc 21 347 2 view .LVU4044
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17514              		.loc 21 347 25 is_stmt 0 view .LVU4045
 17515 0114 5846     		mov	r0, fp
 17516              	.LVL1116:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 700


 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17517              		.loc 21 347 25 view .LVU4046
 17518 0116 D9F81010 		ldr	r1, [r9, #16]
 17519 011a FFF7FEFF 		bl	memcmp
 17520              	.LVL1117:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17521              		.loc 21 347 25 view .LVU4047
 17522              	.LBE9716:
 17523              	.LBE9715:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 17524              		.loc 18 2859 2 view .LVU4048
 17525 011e 30B1     		cbz	r0, .L765
 17526              	.L766:
 17527              	.LVL1118:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 17528              		.loc 18 2859 2 view .LVU4049
 17529              	.LBE9714:
 17530              	.LBE9713:
 17531              	.LBE9712:
 17532              	.LBE9711:
 17533              	.LBE9710:
2231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 17534              		.loc 29 2231 9 view .LVU4050
 17535 0120 0028     		cmp	r0, #0
 17536 0122 E0DA     		bge	.L751
 17537              	.LVL1119:
 17538              	.LBB9723:
 17539              	.LBI9723:
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 17540              		.loc 29 797 7 is_stmt 1 view .LVU4051
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 17541              		.loc 29 797 7 is_stmt 0 view .LVU4052
 17542              	.LBE9723:
2233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __pos._M_node);
 17543              		.loc 29 2233 8 view .LVU4053
 17544 0124 E368     		ldr	r3, [r4, #12]
 17545 0126 2BB1     		cbz	r3, .L791
 17546              	.LVL1120:
 17547              	.LBB9724:
 17548              	.LBI9724:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 17549              		.loc 30 352 12 is_stmt 1 view .LVU4054
 17550              	.LBB9725:
 17551              	.LBB9726:
 17552              	.LBB9727:
 17553              	.LBI9727:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17554              		.loc 34 76 5 view .LVU4055
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17555              		.loc 34 76 5 is_stmt 0 view .LVU4056
 17556              	.LBE9727:
 17557              		.loc 30 353 64 view .LVU4057
 17558 0128 C5E90099 		strd	r9, r9, [r5]
 17559              	.LBE9726:
 17560              		.loc 30 353 68 view .LVU4058
 17561 012c 96E7     		b	.L749
 17562              	.LVL1121:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 701


 17563              	.L765:
 17564              		.loc 30 353 68 view .LVU4059
 17565              	.LBE9725:
 17566              	.LBE9724:
 17567              	.LBB9728:
 17568              	.LBB9722:
 17569              	.LBB9721:
 17570              	.LBB9720:
 17571              	.LBB9719:
 17572              	.LBB9717:
 17573              	.LBI9717:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17574              		.loc 18 401 7 is_stmt 1 view .LVU4060
 17575              	.LBB9718:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17576              		.loc 18 403 51 is_stmt 0 view .LVU4061
 17577 012e A8EB0A00 		sub	r0, r8, r10
 17578              	.LVL1122:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17579              		.loc 18 403 51 view .LVU4062
 17580              	.LBE9718:
 17581              	.LBE9717:
 17582 0132 F5E7     		b	.L766
 17583              	.LVL1123:
 17584              	.L791:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17585              		.loc 18 403 51 view .LVU4063
 17586              	.LBE9719:
 17587              	.LBE9720:
 17588              	.LBE9721:
 17589              	.LBE9722:
 17590              	.LBE9728:
 17591              	.LBB9729:
 17592              	.LBI9729:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 17593              		.loc 30 336 18 is_stmt 1 view .LVU4064
 17594              	.LBB9730:
 17595              	.LBB9731:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17596              		.loc 30 337 51 is_stmt 0 view .LVU4065
 17597 0134 C5E90034 		strd	r3, r4, [r5]
 17598              	.LVL1124:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17599              		.loc 30 337 51 view .LVU4066
 17600 0138 90E7     		b	.L749
 17601              	.LVL1125:
 17602              	.L790:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17603              		.loc 30 337 51 view .LVU4067
 17604              	.LBE9731:
 17605              	.LBE9730:
 17606              	.LBE9729:
 17607              	.LBE9733:
 17608              	.LBE9761:
 17609              	.LBB9762:
 17610              	.LBB9755:
 17611              	.LBI9755:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 702


 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 17612              		.loc 30 336 18 is_stmt 1 view .LVU4068
 17613              	.LBB9756:
 17614              	.LBB9757:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17615              		.loc 30 337 51 is_stmt 0 view .LVU4069
 17616 013a C5E90039 		strd	r3, r9, [r5]
 17617              	.LVL1126:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17618              		.loc 30 337 51 view .LVU4070
 17619 013e 8DE7     		b	.L749
 17620              	.LBE9757:
 17621              	.LBE9756:
 17622              	.LBE9755:
 17623              	.LBE9762:
 17624              	.LBE9777:
 17625              	.LBE9788:
 17626              		.cfi_endproc
 17627              	.LFE5963:
 17629              		.section	.rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.4,"aMS",%progbit
 17630              		.align	2
 17631              	.LC19:
 17632 0000 4300     		.ascii	"C\000"
 17633 0002 0000     		.align	2
 17634              	.LC20:
 17635 0004 432300   		.ascii	"C#\000"
 17636 0007 00       		.align	2
 17637              	.LC21:
 17638 0008 4400     		.ascii	"D\000"
 17639 000a 0000     		.align	2
 17640              	.LC22:
 17641 000c 442300   		.ascii	"D#\000"
 17642 000f 00       		.align	2
 17643              	.LC23:
 17644 0010 4500     		.ascii	"E\000"
 17645 0012 0000     		.align	2
 17646              	.LC24:
 17647 0014 4600     		.ascii	"F\000"
 17648 0016 0000     		.align	2
 17649              	.LC25:
 17650 0018 462300   		.ascii	"F#\000"
 17651 001b 00       		.align	2
 17652              	.LC26:
 17653 001c 4700     		.ascii	"G\000"
 17654 001e 0000     		.align	2
 17655              	.LC27:
 17656 0020 472300   		.ascii	"G#\000"
 17657 0023 00       		.align	2
 17658              	.LC28:
 17659 0024 4100     		.ascii	"A\000"
 17660 0026 0000     		.align	2
 17661              	.LC29:
 17662 0028 412300   		.ascii	"A#\000"
 17663 002b 00       		.align	2
 17664              	.LC30:
 17665 002c 4200     		.ascii	"B\000"
 17666 002e 0000     		.align	2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 703


 17667              	.LC31:
 17668 0030 433000   		.ascii	"C0\000"
 17669 0033 00       		.align	2
 17670              	.LC32:
 17671 0034 43233000 		.ascii	"C#0\000"
 17672              		.align	2
 17673              	.LC33:
 17674 0038 443000   		.ascii	"D0\000"
 17675 003b 00       		.align	2
 17676              	.LC34:
 17677 003c 44233000 		.ascii	"D#0\000"
 17678              		.align	2
 17679              	.LC35:
 17680 0040 453000   		.ascii	"E0\000"
 17681 0043 00       		.align	2
 17682              	.LC36:
 17683 0044 463000   		.ascii	"F0\000"
 17684 0047 00       		.align	2
 17685              	.LC37:
 17686 0048 46233000 		.ascii	"F#0\000"
 17687              		.align	2
 17688              	.LC38:
 17689 004c 473000   		.ascii	"G0\000"
 17690 004f 00       		.align	2
 17691              	.LC39:
 17692 0050 47233000 		.ascii	"G#0\000"
 17693              		.align	2
 17694              	.LC40:
 17695 0054 413000   		.ascii	"A0\000"
 17696 0057 00       		.align	2
 17697              	.LC41:
 17698 0058 41233000 		.ascii	"A#0\000"
 17699              		.align	2
 17700              	.LC42:
 17701 005c 423000   		.ascii	"B0\000"
 17702 005f 00       		.align	2
 17703              	.LC43:
 17704 0060 433100   		.ascii	"C1\000"
 17705 0063 00       		.align	2
 17706              	.LC44:
 17707 0064 43233100 		.ascii	"C#1\000"
 17708              		.align	2
 17709              	.LC45:
 17710 0068 443100   		.ascii	"D1\000"
 17711 006b 00       		.align	2
 17712              	.LC46:
 17713 006c 44233100 		.ascii	"D#1\000"
 17714              		.align	2
 17715              	.LC47:
 17716 0070 453100   		.ascii	"E1\000"
 17717 0073 00       		.align	2
 17718              	.LC48:
 17719 0074 463100   		.ascii	"F1\000"
 17720 0077 00       		.align	2
 17721              	.LC49:
 17722 0078 46233100 		.ascii	"F#1\000"
 17723              		.align	2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 704


 17724              	.LC50:
 17725 007c 473100   		.ascii	"G1\000"
 17726 007f 00       		.align	2
 17727              	.LC51:
 17728 0080 47233100 		.ascii	"G#1\000"
 17729              		.align	2
 17730              	.LC52:
 17731 0084 413100   		.ascii	"A1\000"
 17732 0087 00       		.align	2
 17733              	.LC53:
 17734 0088 41233100 		.ascii	"A#1\000"
 17735              		.align	2
 17736              	.LC54:
 17737 008c 423100   		.ascii	"B1\000"
 17738 008f 00       		.align	2
 17739              	.LC55:
 17740 0090 433200   		.ascii	"C2\000"
 17741 0093 00       		.align	2
 17742              	.LC56:
 17743 0094 43233200 		.ascii	"C#2\000"
 17744              		.align	2
 17745              	.LC57:
 17746 0098 443200   		.ascii	"D2\000"
 17747 009b 00       		.align	2
 17748              	.LC58:
 17749 009c 44233200 		.ascii	"D#2\000"
 17750              		.align	2
 17751              	.LC59:
 17752 00a0 453200   		.ascii	"E2\000"
 17753 00a3 00       		.align	2
 17754              	.LC60:
 17755 00a4 463200   		.ascii	"F2\000"
 17756 00a7 00       		.align	2
 17757              	.LC61:
 17758 00a8 46233200 		.ascii	"F#2\000"
 17759              		.align	2
 17760              	.LC62:
 17761 00ac 473200   		.ascii	"G2\000"
 17762 00af 00       		.align	2
 17763              	.LC63:
 17764 00b0 47233200 		.ascii	"G#2\000"
 17765              		.align	2
 17766              	.LC64:
 17767 00b4 413200   		.ascii	"A2\000"
 17768 00b7 00       		.align	2
 17769              	.LC65:
 17770 00b8 41233200 		.ascii	"A#2\000"
 17771              		.align	2
 17772              	.LC66:
 17773 00bc 423200   		.ascii	"B2\000"
 17774 00bf 00       		.align	2
 17775              	.LC67:
 17776 00c0 433300   		.ascii	"C3\000"
 17777 00c3 00       		.align	2
 17778              	.LC68:
 17779 00c4 43233300 		.ascii	"C#3\000"
 17780              		.align	2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 705


 17781              	.LC69:
 17782 00c8 443300   		.ascii	"D3\000"
 17783 00cb 00       		.align	2
 17784              	.LC70:
 17785 00cc 44233300 		.ascii	"D#3\000"
 17786              		.align	2
 17787              	.LC71:
 17788 00d0 453300   		.ascii	"E3\000"
 17789 00d3 00       		.align	2
 17790              	.LC72:
 17791 00d4 463300   		.ascii	"F3\000"
 17792 00d7 00       		.align	2
 17793              	.LC73:
 17794 00d8 46233300 		.ascii	"F#3\000"
 17795              		.align	2
 17796              	.LC74:
 17797 00dc 473300   		.ascii	"G3\000"
 17798 00df 00       		.align	2
 17799              	.LC75:
 17800 00e0 47233300 		.ascii	"G#3\000"
 17801              		.align	2
 17802              	.LC76:
 17803 00e4 413300   		.ascii	"A3\000"
 17804 00e7 00       		.align	2
 17805              	.LC77:
 17806 00e8 41233300 		.ascii	"A#3\000"
 17807              		.align	2
 17808              	.LC78:
 17809 00ec 423300   		.ascii	"B3\000"
 17810 00ef 00       		.align	2
 17811              	.LC79:
 17812 00f0 433400   		.ascii	"C4\000"
 17813 00f3 00       		.align	2
 17814              	.LC80:
 17815 00f4 43233400 		.ascii	"C#4\000"
 17816              		.align	2
 17817              	.LC81:
 17818 00f8 443400   		.ascii	"D4\000"
 17819 00fb 00       		.align	2
 17820              	.LC82:
 17821 00fc 44233400 		.ascii	"D#4\000"
 17822              		.align	2
 17823              	.LC83:
 17824 0100 453400   		.ascii	"E4\000"
 17825 0103 00       		.align	2
 17826              	.LC84:
 17827 0104 463400   		.ascii	"F4\000"
 17828 0107 00       		.align	2
 17829              	.LC85:
 17830 0108 46233400 		.ascii	"F#4\000"
 17831              		.align	2
 17832              	.LC86:
 17833 010c 473400   		.ascii	"G4\000"
 17834 010f 00       		.align	2
 17835              	.LC87:
 17836 0110 47233400 		.ascii	"G#4\000"
 17837              		.align	2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 706


 17838              	.LC88:
 17839 0114 413400   		.ascii	"A4\000"
 17840 0117 00       		.align	2
 17841              	.LC89:
 17842 0118 41233400 		.ascii	"A#4\000"
 17843              		.align	2
 17844              	.LC90:
 17845 011c 423400   		.ascii	"B4\000"
 17846 011f 00       		.align	2
 17847              	.LC91:
 17848 0120 4D616A6F 		.ascii	"Major\000"
 17848      7200
 17849 0126 0000     		.align	2
 17850              	.LC92:
 17851 0128 4D696E6F 		.ascii	"Minor\000"
 17851      7200
 17852 012e 0000     		.align	2
 17853              	.LC93:
 17854 0130 446F7269 		.ascii	"Dorian\000"
 17854      616E00
 17855 0137 00       		.align	2
 17856              	.LC94:
 17857 0138 50687972 		.ascii	"Phyrgi\000"
 17857      676900
 17858 013f 00       		.align	2
 17859              	.LC95:
 17860 0140 4C796469 		.ascii	"Lydian\000"
 17860      616E00
 17861 0147 00       		.align	2
 17862              	.LC96:
 17863 0148 4D69786F 		.ascii	"Mixo\000"
 17863      00
 17864 014d 000000   		.align	2
 17865              	.LC97:
 17866 0150 4C6F6372 		.ascii	"Locri\000"
 17866      6900
 17867 0156 0000     		.align	2
 17868              	.LC98:
 17869 0158 4E6F6E65 		.ascii	"None\000"
 17869      00
 17870 015d 000000   		.align	2
 17871              	.LC99:
 17872 0160 44726F70 		.ascii	"Drop 2\000"
 17872      203200
 17873 0167 00       		.align	2
 17874              	.LC100:
 17875 0168 44726F70 		.ascii	"Drop 3\000"
 17875      203300
 17876 016f 00       		.align	2
 17877              	.LC101:
 17878 0170 44726F70 		.ascii	"Drop 4\000"
 17878      203400
 17879 0177 00       		.align	2
 17880              	.LC102:
 17881 0178 3100     		.ascii	"1\000"
 17882 017a 0000     		.align	2
 17883              	.LC103:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 707


 17884 017c 3200     		.ascii	"2\000"
 17885 017e 0000     		.align	2
 17886              	.LC104:
 17887 0180 3400     		.ascii	"4\000"
 17888 0182 0000     		.align	2
 17889              	.LC105:
 17890 0184 3800     		.ascii	"8\000"
 17891 0186 0000     		.align	2
 17892              	.LC106:
 17893 0188 313600   		.ascii	"16\000"
 17894 018b 00       		.align	2
 17895              	.LC107:
 17896 018c 54726961 		.ascii	"Triad\000"
 17896      6400
 17897 0192 0000     		.align	2
 17898              	.LC108:
 17899 0194 54726961 		.ascii	"Triad+\000"
 17899      642B00
 17900 019b 00       		.align	2
 17901              	.LC109:
 17902 019c 37746800 		.ascii	"7th\000"
 17903              		.align	2
 17904              	.LC110:
 17905 01a0 3774682B 		.ascii	"7th+9th\000"
 17905      39746800 
 17906              		.align	2
 17907              	.LC111:
 17908 01a8 31317468 		.ascii	"11th\000"
 17908      00
 17909 01ad 000000   		.align	2
 17910              	.LC112:
 17911 01b0 31337468 		.ascii	"13th\000"
 17911      00
 17912 01b5 000000   		.align	2
 17913              	.LC113:
 17914 01b8 36746800 		.ascii	"6th\000"
 17915              		.align	2
 17916              	.LC114:
 17917 01bc 53757332 		.ascii	"Sus2\000"
 17917      00
 17918 01c1 000000   		.align	2
 17919              	.LC115:
 17920 01c4 53757334 		.ascii	"Sus4\000"
 17920      00
 17921 01c9 000000   		.align	2
 17922              	.LC116:
 17923 01cc 506F7765 		.ascii	"Power\000"
 17923      7200
 17924 01d2 0000     		.align	2
 17925              	.LC117:
 17926 01d4 5368656C 		.ascii	"Shell 1\000"
 17926      6C203100 
 17927              		.align	2
 17928              	.LC118:
 17929 01dc 5368656C 		.ascii	"Shell 2\000"
 17929      6C203200 
 17930              		.align	2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 708


 17931              	.LC119:
 17932 01e4 557000   		.ascii	"Up\000"
 17933 01e7 00       		.align	2
 17934              	.LC120:
 17935 01e8 446F776E 		.ascii	"Down\000"
 17935      00
 17936 01ed 000000   		.align	2
 17937              	.LC121:
 17938 01f0 552B4420 		.ascii	"U+D In\000"
 17938      496E00
 17939 01f7 00       		.align	2
 17940              	.LC122:
 17941 01f8 552B4420 		.ascii	"U+D Ex\000"
 17941      457800
 17942 01ff 00       		.align	2
 17943              	.LC123:
 17944 0200 52616E64 		.ascii	"Random\000"
 17944      6F6D00
 17945 0207 00       		.align	2
 17946              	.LC124:
 17947 0208 53772032 		.ascii	"Sw 25%\000"
 17947      352500
 17948 020f 00       		.align	2
 17949              	.LC125:
 17950 0210 53772035 		.ascii	"Sw 50%\000"
 17950      302500
 17951 0217 00       		.align	2
 17952              	.LC126:
 17953 0218 53772037 		.ascii	"Sw 75%\000"
 17953      352500
 17954 021f 00       		.align	2
 17955              	.LC127:
 17956 0220 53772031 		.ascii	"Sw 100%\000"
 17956      30302500 
 17957              		.align	2
 17958              	.LC128:
 17959 0228 3000     		.ascii	"0\000"
 17960 022a 0000     		.align	2
 17961              	.LC129:
 17962 022c 2B3100   		.ascii	"+1\000"
 17963 022f 00       		.align	2
 17964              	.LC130:
 17965 0230 2B3200   		.ascii	"+2\000"
 17966              		.section	.text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0,"ax",%progbits
 17967              		.align	1
 17968              		.p2align 2,,3
 17969              		.syntax unified
 17970              		.thumb
 17971              		.thumb_func
 17972              		.fpu fpv5-d16
 17974              	_Z41__static_initialization_and_destruction_0ii.constprop.0:
 17975              	.LFB6226:
 17976              		.loc 17 281 1 is_stmt 1 view -0
 17977              		.cfi_startproc
 17978              		@ args = 0, pretend = 0, frame = 688
 17979              		@ frame_needed = 0, uses_anonymous_args = 0
 17980              	.LVL1127:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 709


 17981              	.LBB10763:
 17982              	.LBI10763:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17983              		.loc 19 144 7 view .LVU4072
 17984              	.LBB10764:
 17985              	.LBI10764:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17986              		.loc 20 79 7 view .LVU4073
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17987              		.loc 20 79 7 is_stmt 0 view .LVU4074
 17988              	.LBE10764:
 17989              	.LBE10763:
 17990              		.loc 17 281 1 view .LVU4075
 17991 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 17992              		.cfi_def_cfa_offset 36
 17993              		.cfi_offset 4, -36
 17994              		.cfi_offset 5, -32
 17995              		.cfi_offset 6, -28
 17996              		.cfi_offset 7, -24
 17997              		.cfi_offset 8, -20
 17998              		.cfi_offset 9, -16
 17999              		.cfi_offset 10, -12
 18000              		.cfi_offset 11, -8
 18001              		.cfi_offset 14, -4
 18002 0004 ADF52D7D 		sub	sp, sp, #692
 18003              		.cfi_def_cfa_offset 728
 18004              		.file 41 "theory.h"
   1:theory.h      **** /* 
   2:theory.h      ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:theory.h      ****  * You may use, distribute and modify this code under the
   4:theory.h      ****  * terms of the GNU AGPLv3 license.
   5:theory.h      ****  * 
   6:theory.h      ****  * You should have received a copy of the GNU AGPLv3 license with
   7:theory.h      ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:theory.h      ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:theory.h      ****  */
  10:theory.h      **** 
  11:theory.h      **** #pragma once
  12:theory.h      **** 
  13:theory.h      **** #include <map>
  14:theory.h      **** #include <vector>
  15:theory.h      **** #include <string>
  16:theory.h      **** 
  17:theory.h      **** namespace jellybeans {
  18:theory.h      **** 
  19:theory.h      ****     const int MAX_NOTE = 60;
  20:theory.h      ****     const int MIN_NOTE = 0;
  21:theory.h      **** 
  22:theory.h      ****     // Returns true if the given note is diatonic to the given mode
  23:theory.h      ****     // @param a note's index in semitones from C or C0
  24:theory.h      ****     // @param an element of mu::allModes
  25:theory.h      ****     bool isDiatonic(int, std::string);
  26:theory.h      **** 
  27:theory.h      ****     // Note that the indices of these elements also correspond to
  28:theory.h      ****     // their semitone distances from C.
  29:theory.h      ****     const std::vector<std::string> allNotes {
  30:theory.h      ****         "C",
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 710


  31:theory.h      ****         "C#",
  32:theory.h      ****         "D",
  33:theory.h      ****         "D#",
  34:theory.h      ****         "E",
  35:theory.h      ****         "F",
  36:theory.h      ****         "F#",
  37:theory.h      ****         "G",
  38:theory.h      ****         "G#",
  39:theory.h      ****         "A",
  40:theory.h      ****         "A#",
  41:theory.h      ****         "B"
  42:theory.h      ****     };
 18005              		.loc 41 42 5 view .LVU4076
 18006 0008 A849     		ldr	r1, .L848
 18007 000a 64AC     		add	r4, sp, #400
 18008 000c ACAD     		add	r5, sp, #688
 18009 000e 2046     		mov	r0, r4
 18010 0010 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18011              	.LVL1128:
 18012              	.LBB10765:
 18013              	.LBI10765:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18014              		.loc 19 144 7 is_stmt 1 view .LVU4077
 18015              	.LBB10766:
 18016              	.LBI10766:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18017              		.loc 20 79 7 view .LVU4078
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18018              		.loc 20 79 7 is_stmt 0 view .LVU4079
 18019              	.LBE10766:
 18020              	.LBE10765:
 18021              		.loc 41 42 5 view .LVU4080
 18022 0014 A649     		ldr	r1, .L848+4
 18023 0016 6AA8     		add	r0, sp, #424
 18024 0018 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18025              	.LVL1129:
 18026              	.LBB10767:
 18027              	.LBI10767:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18028              		.loc 19 144 7 is_stmt 1 view .LVU4081
 18029              	.LBB10768:
 18030              	.LBI10768:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18031              		.loc 20 79 7 view .LVU4082
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18032              		.loc 20 79 7 is_stmt 0 view .LVU4083
 18033              	.LBE10768:
 18034              	.LBE10767:
 18035              		.loc 41 42 5 view .LVU4084
 18036 001c A549     		ldr	r1, .L848+8
 18037 001e 70A8     		add	r0, sp, #448
 18038 0020 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18039              	.LVL1130:
 18040              	.LBB10769:
 18041              	.LBI10769:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18042              		.loc 19 144 7 is_stmt 1 view .LVU4085
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 711


 18043              	.LBB10770:
 18044              	.LBI10770:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18045              		.loc 20 79 7 view .LVU4086
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18046              		.loc 20 79 7 is_stmt 0 view .LVU4087
 18047              	.LBE10770:
 18048              	.LBE10769:
 18049              		.loc 41 42 5 view .LVU4088
 18050 0024 A449     		ldr	r1, .L848+12
 18051 0026 76A8     		add	r0, sp, #472
 18052 0028 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18053              	.LVL1131:
 18054              	.LBB10771:
 18055              	.LBI10771:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18056              		.loc 19 144 7 is_stmt 1 view .LVU4089
 18057              	.LBB10772:
 18058              	.LBI10772:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18059              		.loc 20 79 7 view .LVU4090
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18060              		.loc 20 79 7 is_stmt 0 view .LVU4091
 18061              	.LBE10772:
 18062              	.LBE10771:
 18063              		.loc 41 42 5 view .LVU4092
 18064 002c A349     		ldr	r1, .L848+16
 18065 002e 7CA8     		add	r0, sp, #496
 18066 0030 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18067              	.LVL1132:
 18068              	.LBB10773:
 18069              	.LBI10773:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18070              		.loc 19 144 7 is_stmt 1 view .LVU4093
 18071              	.LBB10774:
 18072              	.LBI10774:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18073              		.loc 20 79 7 view .LVU4094
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18074              		.loc 20 79 7 is_stmt 0 view .LVU4095
 18075              	.LBE10774:
 18076              	.LBE10773:
 18077              		.loc 41 42 5 view .LVU4096
 18078 0034 A249     		ldr	r1, .L848+20
 18079 0036 82A8     		add	r0, sp, #520
 18080 0038 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18081              	.LVL1133:
 18082              	.LBB10775:
 18083              	.LBI10775:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18084              		.loc 19 144 7 is_stmt 1 view .LVU4097
 18085              	.LBB10776:
 18086              	.LBI10776:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18087              		.loc 20 79 7 view .LVU4098
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18088              		.loc 20 79 7 is_stmt 0 view .LVU4099
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 712


 18089              	.LBE10776:
 18090              	.LBE10775:
 18091              		.loc 41 42 5 view .LVU4100
 18092 003c A149     		ldr	r1, .L848+24
 18093 003e 88A8     		add	r0, sp, #544
 18094 0040 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18095              	.LVL1134:
 18096              	.LBB10777:
 18097              	.LBI10777:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18098              		.loc 19 144 7 is_stmt 1 view .LVU4101
 18099              	.LBB10778:
 18100              	.LBI10778:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18101              		.loc 20 79 7 view .LVU4102
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18102              		.loc 20 79 7 is_stmt 0 view .LVU4103
 18103              	.LBE10778:
 18104              	.LBE10777:
 18105              		.loc 41 42 5 view .LVU4104
 18106 0044 A049     		ldr	r1, .L848+28
 18107 0046 8EA8     		add	r0, sp, #568
 18108 0048 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18109              	.LVL1135:
 18110              	.LBB10779:
 18111              	.LBI10779:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18112              		.loc 19 144 7 is_stmt 1 view .LVU4105
 18113              	.LBB10780:
 18114              	.LBI10780:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18115              		.loc 20 79 7 view .LVU4106
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18116              		.loc 20 79 7 is_stmt 0 view .LVU4107
 18117              	.LBE10780:
 18118              	.LBE10779:
 18119              		.loc 41 42 5 view .LVU4108
 18120 004c 9F49     		ldr	r1, .L848+32
 18121 004e 94A8     		add	r0, sp, #592
 18122 0050 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18123              	.LVL1136:
 18124              	.LBB10781:
 18125              	.LBI10781:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18126              		.loc 19 144 7 is_stmt 1 view .LVU4109
 18127              	.LBB10782:
 18128              	.LBI10782:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18129              		.loc 20 79 7 view .LVU4110
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18130              		.loc 20 79 7 is_stmt 0 view .LVU4111
 18131              	.LBE10782:
 18132              	.LBE10781:
 18133              		.loc 41 42 5 view .LVU4112
 18134 0054 9E49     		ldr	r1, .L848+36
 18135 0056 9AA8     		add	r0, sp, #616
 18136 0058 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 713


 18137              	.LVL1137:
 18138              	.LBB10783:
 18139              	.LBI10783:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18140              		.loc 19 144 7 is_stmt 1 view .LVU4113
 18141              	.LBB10784:
 18142              	.LBI10784:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18143              		.loc 20 79 7 view .LVU4114
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18144              		.loc 20 79 7 is_stmt 0 view .LVU4115
 18145              	.LBE10784:
 18146              	.LBE10783:
 18147              		.loc 41 42 5 view .LVU4116
 18148 005c 9D49     		ldr	r1, .L848+40
 18149 005e A0A8     		add	r0, sp, #640
 18150 0060 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18151              	.LVL1138:
 18152              	.LBB10785:
 18153              	.LBI10785:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18154              		.loc 19 144 7 is_stmt 1 view .LVU4117
 18155              	.LBB10786:
 18156              	.LBI10786:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18157              		.loc 20 79 7 view .LVU4118
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18158              		.loc 20 79 7 is_stmt 0 view .LVU4119
 18159              	.LBE10786:
 18160              	.LBE10785:
 18161              		.loc 41 42 5 view .LVU4120
 18162 0064 9C49     		ldr	r1, .L848+44
 18163 0066 A6A8     		add	r0, sp, #664
 18164 0068 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18165              	.LVL1139:
 18166 006c 0C23     		movs	r3, #12
 18167 006e 1AAA     		add	r2, sp, #104
 18168 0070 1A94     		str	r4, [sp, #104]
 18169 0072 1B93     		str	r3, [sp, #108]
 18170              	.LVL1140:
 18171              	.LBB10787:
 18172              	.LBI10787:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18173              		.loc 19 144 7 is_stmt 1 view .LVU4121
 18174              	.LBB10788:
 18175              	.LBI10788:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18176              		.loc 20 79 7 view .LVU4122
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18177              		.loc 20 79 7 is_stmt 0 view .LVU4123
 18178              	.LBE10788:
 18179              	.LBE10787:
 18180              		.loc 41 42 5 view .LVU4124
 18181 0074 5DAB     		add	r3, sp, #372
 18182 0076 9948     		ldr	r0, .L848+48
 18183 0078 06CA     		ldm	r2, {r1, r2}
 18184 007a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 714


 18185              	.LVL1141:
 18186              	.LBB10789:
 18187              	.LBI10789:
 18188              		.loc 19 162 7 is_stmt 1 view .LVU4125
 18189              	.LBB10790:
 18190              	.LBI10790:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18191              		.loc 20 89 7 view .LVU4126
 18192              	.L793:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18193              		.loc 20 89 7 is_stmt 0 view .LVU4127
 18194              	.LBE10790:
 18195              	.LBE10789:
 18196              		.loc 41 42 5 view .LVU4128
 18197 007e 183D     		subs	r5, r5, #24
 18198              	.LVL1142:
 18199              	.LBB10791:
 18200              	.LBI10791:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 18201              		.loc 18 657 7 is_stmt 1 view .LVU4129
 18202              	.LBB10792:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 18203              		.loc 18 658 19 is_stmt 0 view .LVU4130
 18204 0080 2846     		mov	r0, r5
 18205 0082 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 18206              	.LVL1143:
 18207              	.LBB10793:
 18208              	.LBI10793:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 18209              		.loc 18 150 14 is_stmt 1 view .LVU4131
 18210              	.LBB10794:
 18211              	.LBI10794:
 18212              		.loc 19 162 7 view .LVU4132
 18213              	.LBB10795:
 18214              	.LBI10795:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18215              		.loc 20 89 7 view .LVU4133
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18216              		.loc 20 89 7 is_stmt 0 view .LVU4134
 18217              	.LBE10795:
 18218              	.LBE10794:
 18219              	.LBE10793:
 18220              	.LBE10792:
 18221              	.LBE10791:
 18222              		.loc 41 42 5 view .LVU4135
 18223 0086 A542     		cmp	r5, r4
 18224 0088 F9D1     		bne	.L793
 18225              	.LVL1144:
 18226              	.LBB10796:
 18227              	.LBI10796:
 18228              		.loc 19 162 7 is_stmt 1 view .LVU4136
 18229              	.LBB10797:
 18230              	.LBI10797:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18231              		.loc 20 89 7 view .LVU4137
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18232              		.loc 20 89 7 is_stmt 0 view .LVU4138
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 715


 18233              	.LBE10797:
 18234              	.LBE10796:
 18235              	.LBB10798:
 18236              	.LBI10798:
 18237              		.loc 19 162 7 is_stmt 1 view .LVU4139
 18238              	.LBB10799:
 18239              	.LBI10799:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18240              		.loc 20 89 7 view .LVU4140
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18241              		.loc 20 89 7 is_stmt 0 view .LVU4141
 18242              	.LBE10799:
 18243              	.LBE10798:
 18244              	.LBB10800:
 18245              	.LBI10800:
 18246              		.loc 19 162 7 is_stmt 1 view .LVU4142
 18247              	.LBB10801:
 18248              	.LBI10801:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18249              		.loc 20 89 7 view .LVU4143
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18250              		.loc 20 89 7 is_stmt 0 view .LVU4144
 18251              	.LBE10801:
 18252              	.LBE10800:
 18253              	.LBB10802:
 18254              	.LBI10802:
 18255              		.loc 19 162 7 is_stmt 1 view .LVU4145
 18256              	.LBB10803:
 18257              	.LBI10803:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18258              		.loc 20 89 7 view .LVU4146
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18259              		.loc 20 89 7 is_stmt 0 view .LVU4147
 18260              	.LBE10803:
 18261              	.LBE10802:
 18262              	.LBB10804:
 18263              	.LBI10804:
 18264              		.loc 19 162 7 is_stmt 1 view .LVU4148
 18265              	.LBB10805:
 18266              	.LBI10805:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18267              		.loc 20 89 7 view .LVU4149
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18268              		.loc 20 89 7 is_stmt 0 view .LVU4150
 18269              	.LBE10805:
 18270              	.LBE10804:
 18271              	.LBB10806:
 18272              	.LBI10806:
 18273              		.loc 19 162 7 is_stmt 1 view .LVU4151
 18274              	.LBB10807:
 18275              	.LBI10807:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18276              		.loc 20 89 7 view .LVU4152
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18277              		.loc 20 89 7 is_stmt 0 view .LVU4153
 18278              	.LBE10807:
 18279              	.LBE10806:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 716


 18280              	.LBB10808:
 18281              	.LBI10808:
 18282              		.loc 19 162 7 is_stmt 1 view .LVU4154
 18283              	.LBB10809:
 18284              	.LBI10809:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18285              		.loc 20 89 7 view .LVU4155
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18286              		.loc 20 89 7 is_stmt 0 view .LVU4156
 18287              	.LBE10809:
 18288              	.LBE10808:
 18289              	.LBB10810:
 18290              	.LBI10810:
 18291              		.loc 19 162 7 is_stmt 1 view .LVU4157
 18292              	.LBB10811:
 18293              	.LBI10811:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18294              		.loc 20 89 7 view .LVU4158
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18295              		.loc 20 89 7 is_stmt 0 view .LVU4159
 18296              	.LBE10811:
 18297              	.LBE10810:
 18298              	.LBB10812:
 18299              	.LBI10812:
 18300              		.loc 19 162 7 is_stmt 1 view .LVU4160
 18301              	.LBB10813:
 18302              	.LBI10813:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18303              		.loc 20 89 7 view .LVU4161
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18304              		.loc 20 89 7 is_stmt 0 view .LVU4162
 18305              	.LBE10813:
 18306              	.LBE10812:
 18307              	.LBB10814:
 18308              	.LBI10814:
 18309              		.loc 19 162 7 is_stmt 1 view .LVU4163
 18310              	.LBB10815:
 18311              	.LBI10815:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18312              		.loc 20 89 7 view .LVU4164
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18313              		.loc 20 89 7 is_stmt 0 view .LVU4165
 18314              	.LBE10815:
 18315              	.LBE10814:
 18316              	.LBB10816:
 18317              	.LBI10816:
 18318              		.loc 19 162 7 is_stmt 1 view .LVU4166
 18319              	.LBB10817:
 18320              	.LBI10817:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18321              		.loc 20 89 7 view .LVU4167
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18322              		.loc 20 89 7 is_stmt 0 view .LVU4168
 18323              	.LBE10817:
 18324              	.LBE10816:
 18325              	.LBB10818:
 18326              	.LBI10818:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 717


 18327              		.loc 19 162 7 is_stmt 1 view .LVU4169
 18328              	.LBB10819:
 18329              	.LBI10819:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18330              		.loc 20 89 7 view .LVU4170
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18331              		.loc 20 89 7 is_stmt 0 view .LVU4171
 18332              	.LBE10819:
 18333              	.LBE10818:
  29:theory.h      ****         "C",
 18334              		.loc 41 29 36 view .LVU4172
 18335 008a 954A     		ldr	r2, .L848+52
 18336 008c 88AE     		add	r6, sp, #544
 18337 008e 9549     		ldr	r1, .L848+56
 18338 0090 9248     		ldr	r0, .L848+48
 18339 0092 FFF7FEFF 		bl	__aeabi_atexit
 18340              	.LVL1145:
 18341              	.LBB10820:
 18342              	.LBI10820:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18343              		.loc 19 144 7 is_stmt 1 view .LVU4173
 18344              	.LBB10821:
 18345              	.LBI10821:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18346              		.loc 20 79 7 view .LVU4174
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18347              		.loc 20 79 7 is_stmt 0 view .LVU4175
 18348              	.LBE10821:
 18349              	.LBE10820:
  43:theory.h      **** 
  44:theory.h      ****     // Note that the indices of these elements also correspond to
  45:theory.h      ****     // their semitone distances from C0.
  46:theory.h      ****     const std::array<std::string, 60> allNotes5Oct {
  47:theory.h      ****         "C0",
  48:theory.h      ****         "C#0",
  49:theory.h      ****         "D0",
  50:theory.h      ****         "D#0",
  51:theory.h      ****         "E0",
  52:theory.h      ****         "F0",
  53:theory.h      ****         "F#0",
  54:theory.h      ****         "G0",
  55:theory.h      ****         "G#0",
  56:theory.h      ****         "A0",
  57:theory.h      ****         "A#0",
  58:theory.h      ****         "B0",
  59:theory.h      ****         "C1",
  60:theory.h      ****         "C#1",
  61:theory.h      ****         "D1",
  62:theory.h      ****         "D#1",
  63:theory.h      ****         "E1",
  64:theory.h      ****         "F1",
  65:theory.h      ****         "F#1",
  66:theory.h      ****         "G1",
  67:theory.h      ****         "G#1",
  68:theory.h      ****         "A1",
  69:theory.h      ****         "A#1",
  70:theory.h      ****         "B1",
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 718


  71:theory.h      ****         "C2",
  72:theory.h      ****         "C#2",
  73:theory.h      ****         "D2",
  74:theory.h      ****         "D#2",
  75:theory.h      ****         "E2",
  76:theory.h      ****         "F2",
  77:theory.h      ****         "F#2",
  78:theory.h      ****         "G2",
  79:theory.h      ****         "G#2",
  80:theory.h      ****         "A2",
  81:theory.h      ****         "A#2",
  82:theory.h      ****         "B2",
  83:theory.h      ****         "C3",
  84:theory.h      ****         "C#3",
  85:theory.h      ****         "D3",
  86:theory.h      ****         "D#3",
  87:theory.h      ****         "E3",
  88:theory.h      ****         "F3",
  89:theory.h      ****         "F#3",
  90:theory.h      ****         "G3",
  91:theory.h      ****         "G#3",
  92:theory.h      ****         "A3",
  93:theory.h      ****         "A#3",
  94:theory.h      ****         "B3",
  95:theory.h      ****         "C4",
  96:theory.h      ****         "C#4",
  97:theory.h      ****         "D4",
  98:theory.h      ****         "D#4",
  99:theory.h      ****         "E4",
 100:theory.h      ****         "F4",
 101:theory.h      ****         "F#4",
 102:theory.h      ****         "G4",
 103:theory.h      ****         "G#4",
 104:theory.h      ****         "A4",
 105:theory.h      ****         "A#4",
 106:theory.h      ****         "B4"
 107:theory.h      ****     };
 18350              		.loc 41 107 5 view .LVU4176
 18351 0096 9449     		ldr	r1, .L848+60
 18352 0098 9448     		ldr	r0, .L848+64
 18353 009a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18354              	.LVL1146:
 18355              	.LBB10822:
 18356              	.LBI10822:
 18357              		.loc 19 162 7 is_stmt 1 view .LVU4177
 18358              	.LBB10823:
 18359              	.LBI10823:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18360              		.loc 20 89 7 view .LVU4178
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18361              		.loc 20 89 7 is_stmt 0 view .LVU4179
 18362              	.LBE10823:
 18363              	.LBE10822:
 18364              	.LBB10824:
 18365              	.LBI10824:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18366              		.loc 19 144 7 is_stmt 1 view .LVU4180
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 719


 18367              	.LBB10825:
 18368              	.LBI10825:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18369              		.loc 20 79 7 view .LVU4181
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18370              		.loc 20 79 7 is_stmt 0 view .LVU4182
 18371              	.LBE10825:
 18372              	.LBE10824:
 18373              		.loc 41 107 5 view .LVU4183
 18374 009e 9449     		ldr	r1, .L848+68
 18375 00a0 9448     		ldr	r0, .L848+72
 18376 00a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18377              	.LVL1147:
 18378              	.LBB10826:
 18379              	.LBI10826:
 18380              		.loc 19 162 7 is_stmt 1 view .LVU4184
 18381              	.LBB10827:
 18382              	.LBI10827:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18383              		.loc 20 89 7 view .LVU4185
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18384              		.loc 20 89 7 is_stmt 0 view .LVU4186
 18385              	.LBE10827:
 18386              	.LBE10826:
 18387              	.LBB10828:
 18388              	.LBI10828:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18389              		.loc 19 144 7 is_stmt 1 view .LVU4187
 18390              	.LBB10829:
 18391              	.LBI10829:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18392              		.loc 20 79 7 view .LVU4188
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18393              		.loc 20 79 7 is_stmt 0 view .LVU4189
 18394              	.LBE10829:
 18395              	.LBE10828:
 18396              		.loc 41 107 5 view .LVU4190
 18397 00a6 9449     		ldr	r1, .L848+76
 18398 00a8 9448     		ldr	r0, .L848+80
 18399 00aa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18400              	.LVL1148:
 18401              	.LBB10830:
 18402              	.LBI10830:
 18403              		.loc 19 162 7 is_stmt 1 view .LVU4191
 18404              	.LBB10831:
 18405              	.LBI10831:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18406              		.loc 20 89 7 view .LVU4192
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18407              		.loc 20 89 7 is_stmt 0 view .LVU4193
 18408              	.LBE10831:
 18409              	.LBE10830:
 18410              	.LBB10832:
 18411              	.LBI10832:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18412              		.loc 19 144 7 is_stmt 1 view .LVU4194
 18413              	.LBB10833:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 720


 18414              	.LBI10833:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18415              		.loc 20 79 7 view .LVU4195
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18416              		.loc 20 79 7 is_stmt 0 view .LVU4196
 18417              	.LBE10833:
 18418              	.LBE10832:
 18419              		.loc 41 107 5 view .LVU4197
 18420 00ae 9449     		ldr	r1, .L848+84
 18421 00b0 9448     		ldr	r0, .L848+88
 18422 00b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18423              	.LVL1149:
 18424              	.LBB10834:
 18425              	.LBI10834:
 18426              		.loc 19 162 7 is_stmt 1 view .LVU4198
 18427              	.LBB10835:
 18428              	.LBI10835:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18429              		.loc 20 89 7 view .LVU4199
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18430              		.loc 20 89 7 is_stmt 0 view .LVU4200
 18431              	.LBE10835:
 18432              	.LBE10834:
 18433              	.LBB10836:
 18434              	.LBI10836:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18435              		.loc 19 144 7 is_stmt 1 view .LVU4201
 18436              	.LBB10837:
 18437              	.LBI10837:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18438              		.loc 20 79 7 view .LVU4202
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18439              		.loc 20 79 7 is_stmt 0 view .LVU4203
 18440              	.LBE10837:
 18441              	.LBE10836:
 18442              		.loc 41 107 5 view .LVU4204
 18443 00b6 9449     		ldr	r1, .L848+92
 18444 00b8 9448     		ldr	r0, .L848+96
 18445 00ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18446              	.LVL1150:
 18447              	.LBB10838:
 18448              	.LBI10838:
 18449              		.loc 19 162 7 is_stmt 1 view .LVU4205
 18450              	.LBB10839:
 18451              	.LBI10839:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18452              		.loc 20 89 7 view .LVU4206
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18453              		.loc 20 89 7 is_stmt 0 view .LVU4207
 18454              	.LBE10839:
 18455              	.LBE10838:
 18456              	.LBB10840:
 18457              	.LBI10840:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18458              		.loc 19 144 7 is_stmt 1 view .LVU4208
 18459              	.LBB10841:
 18460              	.LBI10841:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 721


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18461              		.loc 20 79 7 view .LVU4209
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18462              		.loc 20 79 7 is_stmt 0 view .LVU4210
 18463              	.LBE10841:
 18464              	.LBE10840:
 18465              		.loc 41 107 5 view .LVU4211
 18466 00be 9449     		ldr	r1, .L848+100
 18467 00c0 9448     		ldr	r0, .L848+104
 18468 00c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18469              	.LVL1151:
 18470              	.LBB10842:
 18471              	.LBI10842:
 18472              		.loc 19 162 7 is_stmt 1 view .LVU4212
 18473              	.LBB10843:
 18474              	.LBI10843:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18475              		.loc 20 89 7 view .LVU4213
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18476              		.loc 20 89 7 is_stmt 0 view .LVU4214
 18477              	.LBE10843:
 18478              	.LBE10842:
 18479              	.LBB10844:
 18480              	.LBI10844:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18481              		.loc 19 144 7 is_stmt 1 view .LVU4215
 18482              	.LBB10845:
 18483              	.LBI10845:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18484              		.loc 20 79 7 view .LVU4216
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18485              		.loc 20 79 7 is_stmt 0 view .LVU4217
 18486              	.LBE10845:
 18487              	.LBE10844:
 18488              		.loc 41 107 5 view .LVU4218
 18489 00c6 9449     		ldr	r1, .L848+108
 18490 00c8 9448     		ldr	r0, .L848+112
 18491 00ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18492              	.LVL1152:
 18493              	.LBB10846:
 18494              	.LBI10846:
 18495              		.loc 19 162 7 is_stmt 1 view .LVU4219
 18496              	.LBB10847:
 18497              	.LBI10847:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18498              		.loc 20 89 7 view .LVU4220
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18499              		.loc 20 89 7 is_stmt 0 view .LVU4221
 18500              	.LBE10847:
 18501              	.LBE10846:
 18502              	.LBB10848:
 18503              	.LBI10848:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18504              		.loc 19 144 7 is_stmt 1 view .LVU4222
 18505              	.LBB10849:
 18506              	.LBI10849:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 722


 18507              		.loc 20 79 7 view .LVU4223
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18508              		.loc 20 79 7 is_stmt 0 view .LVU4224
 18509              	.LBE10849:
 18510              	.LBE10848:
 18511              		.loc 41 107 5 view .LVU4225
 18512 00ce 9449     		ldr	r1, .L848+116
 18513 00d0 9448     		ldr	r0, .L848+120
 18514 00d2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18515              	.LVL1153:
 18516              	.LBB10850:
 18517              	.LBI10850:
 18518              		.loc 19 162 7 is_stmt 1 view .LVU4226
 18519              	.LBB10851:
 18520              	.LBI10851:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18521              		.loc 20 89 7 view .LVU4227
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18522              		.loc 20 89 7 is_stmt 0 view .LVU4228
 18523              	.LBE10851:
 18524              	.LBE10850:
 18525              	.LBB10852:
 18526              	.LBI10852:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18527              		.loc 19 144 7 is_stmt 1 view .LVU4229
 18528              	.LBB10853:
 18529              	.LBI10853:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18530              		.loc 20 79 7 view .LVU4230
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18531              		.loc 20 79 7 is_stmt 0 view .LVU4231
 18532              	.LBE10853:
 18533              	.LBE10852:
 18534              		.loc 41 107 5 view .LVU4232
 18535 00d6 9449     		ldr	r1, .L848+124
 18536 00d8 9448     		ldr	r0, .L848+128
 18537 00da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18538              	.LVL1154:
 18539              	.LBB10854:
 18540              	.LBI10854:
 18541              		.loc 19 162 7 is_stmt 1 view .LVU4233
 18542              	.LBB10855:
 18543              	.LBI10855:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18544              		.loc 20 89 7 view .LVU4234
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18545              		.loc 20 89 7 is_stmt 0 view .LVU4235
 18546              	.LBE10855:
 18547              	.LBE10854:
 18548              	.LBB10856:
 18549              	.LBI10856:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18550              		.loc 19 144 7 is_stmt 1 view .LVU4236
 18551              	.LBB10857:
 18552              	.LBI10857:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18553              		.loc 20 79 7 view .LVU4237
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 723


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18554              		.loc 20 79 7 is_stmt 0 view .LVU4238
 18555              	.LBE10857:
 18556              	.LBE10856:
 18557              		.loc 41 107 5 view .LVU4239
 18558 00de 9449     		ldr	r1, .L848+132
 18559 00e0 9448     		ldr	r0, .L848+136
 18560 00e2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18561              	.LVL1155:
 18562              	.LBB10858:
 18563              	.LBI10858:
 18564              		.loc 19 162 7 is_stmt 1 view .LVU4240
 18565              	.LBB10859:
 18566              	.LBI10859:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18567              		.loc 20 89 7 view .LVU4241
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18568              		.loc 20 89 7 is_stmt 0 view .LVU4242
 18569              	.LBE10859:
 18570              	.LBE10858:
 18571              	.LBB10860:
 18572              	.LBI10860:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18573              		.loc 19 144 7 is_stmt 1 view .LVU4243
 18574              	.LBB10861:
 18575              	.LBI10861:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18576              		.loc 20 79 7 view .LVU4244
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18577              		.loc 20 79 7 is_stmt 0 view .LVU4245
 18578              	.LBE10861:
 18579              	.LBE10860:
 18580              		.loc 41 107 5 view .LVU4246
 18581 00e6 9449     		ldr	r1, .L848+140
 18582 00e8 9448     		ldr	r0, .L848+144
 18583 00ea FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18584              	.LVL1156:
 18585              	.LBB10862:
 18586              	.LBI10862:
 18587              		.loc 19 162 7 is_stmt 1 view .LVU4247
 18588              	.LBB10863:
 18589              	.LBI10863:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18590              		.loc 20 89 7 view .LVU4248
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18591              		.loc 20 89 7 is_stmt 0 view .LVU4249
 18592              	.LBE10863:
 18593              	.LBE10862:
 18594              	.LBB10864:
 18595              	.LBI10864:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18596              		.loc 19 144 7 is_stmt 1 view .LVU4250
 18597              	.LBB10865:
 18598              	.LBI10865:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18599              		.loc 20 79 7 view .LVU4251
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 724


 18600              		.loc 20 79 7 is_stmt 0 view .LVU4252
 18601              	.LBE10865:
 18602              	.LBE10864:
 18603              		.loc 41 107 5 view .LVU4253
 18604 00ee 9449     		ldr	r1, .L848+148
 18605 00f0 9448     		ldr	r0, .L848+152
 18606 00f2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18607              	.LVL1157:
 18608              	.LBB10866:
 18609              	.LBI10866:
 18610              		.loc 19 162 7 is_stmt 1 view .LVU4254
 18611              	.LBB10867:
 18612              	.LBI10867:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18613              		.loc 20 89 7 view .LVU4255
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18614              		.loc 20 89 7 is_stmt 0 view .LVU4256
 18615              	.LBE10867:
 18616              	.LBE10866:
 18617              	.LBB10868:
 18618              	.LBI10868:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18619              		.loc 19 144 7 is_stmt 1 view .LVU4257
 18620              	.LBB10869:
 18621              	.LBI10869:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18622              		.loc 20 79 7 view .LVU4258
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18623              		.loc 20 79 7 is_stmt 0 view .LVU4259
 18624              	.LBE10869:
 18625              	.LBE10868:
 18626              		.loc 41 107 5 view .LVU4260
 18627 00f6 9449     		ldr	r1, .L848+156
 18628 00f8 9448     		ldr	r0, .L848+160
 18629 00fa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18630              	.LVL1158:
 18631              	.LBB10870:
 18632              	.LBI10870:
 18633              		.loc 19 162 7 is_stmt 1 view .LVU4261
 18634              	.LBB10871:
 18635              	.LBI10871:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18636              		.loc 20 89 7 view .LVU4262
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18637              		.loc 20 89 7 is_stmt 0 view .LVU4263
 18638              	.LBE10871:
 18639              	.LBE10870:
 18640              	.LBB10872:
 18641              	.LBI10872:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18642              		.loc 19 144 7 is_stmt 1 view .LVU4264
 18643              	.LBB10873:
 18644              	.LBI10873:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18645              		.loc 20 79 7 view .LVU4265
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18646              		.loc 20 79 7 is_stmt 0 view .LVU4266
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 725


 18647              	.LBE10873:
 18648              	.LBE10872:
 18649              		.loc 41 107 5 view .LVU4267
 18650 00fe 9449     		ldr	r1, .L848+164
 18651 0100 9448     		ldr	r0, .L848+168
 18652 0102 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18653              	.LVL1159:
 18654              	.LBB10874:
 18655              	.LBI10874:
 18656              		.loc 19 162 7 is_stmt 1 view .LVU4268
 18657              	.LBB10875:
 18658              	.LBI10875:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18659              		.loc 20 89 7 view .LVU4269
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18660              		.loc 20 89 7 is_stmt 0 view .LVU4270
 18661              	.LBE10875:
 18662              	.LBE10874:
 18663              	.LBB10876:
 18664              	.LBI10876:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18665              		.loc 19 144 7 is_stmt 1 view .LVU4271
 18666              	.LBB10877:
 18667              	.LBI10877:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18668              		.loc 20 79 7 view .LVU4272
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18669              		.loc 20 79 7 is_stmt 0 view .LVU4273
 18670              	.LBE10877:
 18671              	.LBE10876:
 18672              		.loc 41 107 5 view .LVU4274
 18673 0106 9449     		ldr	r1, .L848+172
 18674 0108 9448     		ldr	r0, .L848+176
 18675 010a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18676              	.LVL1160:
 18677              	.LBB10878:
 18678              	.LBI10878:
 18679              		.loc 19 162 7 is_stmt 1 view .LVU4275
 18680              	.LBB10879:
 18681              	.LBI10879:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18682              		.loc 20 89 7 view .LVU4276
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18683              		.loc 20 89 7 is_stmt 0 view .LVU4277
 18684              	.LBE10879:
 18685              	.LBE10878:
 18686              	.LBB10880:
 18687              	.LBI10880:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18688              		.loc 19 144 7 is_stmt 1 view .LVU4278
 18689              	.LBB10881:
 18690              	.LBI10881:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18691              		.loc 20 79 7 view .LVU4279
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18692              		.loc 20 79 7 is_stmt 0 view .LVU4280
 18693              	.LBE10881:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 726


 18694              	.LBE10880:
 18695              		.loc 41 107 5 view .LVU4281
 18696 010e 9449     		ldr	r1, .L848+180
 18697 0110 9448     		ldr	r0, .L848+184
 18698 0112 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18699              	.LVL1161:
 18700              	.LBB10882:
 18701              	.LBI10882:
 18702              		.loc 19 162 7 is_stmt 1 view .LVU4282
 18703              	.LBB10883:
 18704              	.LBI10883:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18705              		.loc 20 89 7 view .LVU4283
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18706              		.loc 20 89 7 is_stmt 0 view .LVU4284
 18707              	.LBE10883:
 18708              	.LBE10882:
 18709              	.LBB10884:
 18710              	.LBI10884:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18711              		.loc 19 144 7 is_stmt 1 view .LVU4285
 18712              	.LBB10885:
 18713              	.LBI10885:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18714              		.loc 20 79 7 view .LVU4286
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18715              		.loc 20 79 7 is_stmt 0 view .LVU4287
 18716              	.LBE10885:
 18717              	.LBE10884:
 18718              		.loc 41 107 5 view .LVU4288
 18719 0116 9449     		ldr	r1, .L848+188
 18720 0118 9448     		ldr	r0, .L848+192
 18721 011a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18722              	.LVL1162:
 18723              	.LBB10886:
 18724              	.LBI10886:
 18725              		.loc 19 162 7 is_stmt 1 view .LVU4289
 18726              	.LBB10887:
 18727              	.LBI10887:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18728              		.loc 20 89 7 view .LVU4290
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18729              		.loc 20 89 7 is_stmt 0 view .LVU4291
 18730              	.LBE10887:
 18731              	.LBE10886:
 18732              	.LBB10888:
 18733              	.LBI10888:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18734              		.loc 19 144 7 is_stmt 1 view .LVU4292
 18735              	.LBB10889:
 18736              	.LBI10889:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18737              		.loc 20 79 7 view .LVU4293
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18738              		.loc 20 79 7 is_stmt 0 view .LVU4294
 18739              	.LBE10889:
 18740              	.LBE10888:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 727


 18741              		.loc 41 107 5 view .LVU4295
 18742 011e 9449     		ldr	r1, .L848+196
 18743 0120 9448     		ldr	r0, .L848+200
 18744 0122 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18745              	.LVL1163:
 18746              	.LBB10890:
 18747              	.LBI10890:
 18748              		.loc 19 162 7 is_stmt 1 view .LVU4296
 18749              	.LBB10891:
 18750              	.LBI10891:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18751              		.loc 20 89 7 view .LVU4297
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18752              		.loc 20 89 7 is_stmt 0 view .LVU4298
 18753              	.LBE10891:
 18754              	.LBE10890:
 18755              	.LBB10892:
 18756              	.LBI10892:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18757              		.loc 19 144 7 is_stmt 1 view .LVU4299
 18758              	.LBB10893:
 18759              	.LBI10893:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18760              		.loc 20 79 7 view .LVU4300
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18761              		.loc 20 79 7 is_stmt 0 view .LVU4301
 18762              	.LBE10893:
 18763              	.LBE10892:
 18764              		.loc 41 107 5 view .LVU4302
 18765 0126 9449     		ldr	r1, .L848+204
 18766 0128 9448     		ldr	r0, .L848+208
 18767 012a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18768              	.LVL1164:
 18769              	.LBB10894:
 18770              	.LBI10894:
 18771              		.loc 19 162 7 is_stmt 1 view .LVU4303
 18772              	.LBB10895:
 18773              	.LBI10895:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18774              		.loc 20 89 7 view .LVU4304
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18775              		.loc 20 89 7 is_stmt 0 view .LVU4305
 18776              	.LBE10895:
 18777              	.LBE10894:
 18778              	.LBB10896:
 18779              	.LBI10896:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18780              		.loc 19 144 7 is_stmt 1 view .LVU4306
 18781              	.LBB10897:
 18782              	.LBI10897:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18783              		.loc 20 79 7 view .LVU4307
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18784              		.loc 20 79 7 is_stmt 0 view .LVU4308
 18785              	.LBE10897:
 18786              	.LBE10896:
 18787              		.loc 41 107 5 view .LVU4309
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 728


 18788 012e 9449     		ldr	r1, .L848+212
 18789 0130 9448     		ldr	r0, .L848+216
 18790 0132 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18791              	.LVL1165:
 18792              	.LBB10898:
 18793              	.LBI10898:
 18794              		.loc 19 162 7 is_stmt 1 view .LVU4310
 18795              	.LBB10899:
 18796              	.LBI10899:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18797              		.loc 20 89 7 view .LVU4311
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18798              		.loc 20 89 7 is_stmt 0 view .LVU4312
 18799              	.LBE10899:
 18800              	.LBE10898:
 18801              	.LBB10900:
 18802              	.LBI10900:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18803              		.loc 19 144 7 is_stmt 1 view .LVU4313
 18804              	.LBB10901:
 18805              	.LBI10901:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18806              		.loc 20 79 7 view .LVU4314
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18807              		.loc 20 79 7 is_stmt 0 view .LVU4315
 18808              	.LBE10901:
 18809              	.LBE10900:
 18810              		.loc 41 107 5 view .LVU4316
 18811 0136 9449     		ldr	r1, .L848+220
 18812 0138 9448     		ldr	r0, .L848+224
 18813 013a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18814              	.LVL1166:
 18815              	.LBB10902:
 18816              	.LBI10902:
 18817              		.loc 19 162 7 is_stmt 1 view .LVU4317
 18818              	.LBB10903:
 18819              	.LBI10903:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18820              		.loc 20 89 7 view .LVU4318
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18821              		.loc 20 89 7 is_stmt 0 view .LVU4319
 18822              	.LBE10903:
 18823              	.LBE10902:
 18824              	.LBB10904:
 18825              	.LBI10904:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18826              		.loc 19 144 7 is_stmt 1 view .LVU4320
 18827              	.LBB10905:
 18828              	.LBI10905:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18829              		.loc 20 79 7 view .LVU4321
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18830              		.loc 20 79 7 is_stmt 0 view .LVU4322
 18831              	.LBE10905:
 18832              	.LBE10904:
 18833              		.loc 41 107 5 view .LVU4323
 18834 013e 9449     		ldr	r1, .L848+228
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 729


 18835 0140 9448     		ldr	r0, .L848+232
 18836 0142 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18837              	.LVL1167:
 18838              	.LBB10906:
 18839              	.LBI10906:
 18840              		.loc 19 162 7 is_stmt 1 view .LVU4324
 18841              	.LBB10907:
 18842              	.LBI10907:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18843              		.loc 20 89 7 view .LVU4325
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18844              		.loc 20 89 7 is_stmt 0 view .LVU4326
 18845              	.LBE10907:
 18846              	.LBE10906:
 18847              	.LBB10908:
 18848              	.LBI10908:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18849              		.loc 19 144 7 is_stmt 1 view .LVU4327
 18850              	.LBB10909:
 18851              	.LBI10909:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18852              		.loc 20 79 7 view .LVU4328
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18853              		.loc 20 79 7 is_stmt 0 view .LVU4329
 18854              	.LBE10909:
 18855              	.LBE10908:
 18856              		.loc 41 107 5 view .LVU4330
 18857 0146 9449     		ldr	r1, .L848+236
 18858 0148 9448     		ldr	r0, .L848+240
 18859 014a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18860              	.LVL1168:
 18861              	.LBB10910:
 18862              	.LBI10910:
 18863              		.loc 19 162 7 is_stmt 1 view .LVU4331
 18864              	.LBB10911:
 18865              	.LBI10911:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18866              		.loc 20 89 7 view .LVU4332
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18867              		.loc 20 89 7 is_stmt 0 view .LVU4333
 18868              	.LBE10911:
 18869              	.LBE10910:
 18870              	.LBB10912:
 18871              	.LBI10912:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18872              		.loc 19 144 7 is_stmt 1 view .LVU4334
 18873              	.LBB10913:
 18874              	.LBI10913:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18875              		.loc 20 79 7 view .LVU4335
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18876              		.loc 20 79 7 is_stmt 0 view .LVU4336
 18877              	.LBE10913:
 18878              	.LBE10912:
 18879              		.loc 41 107 5 view .LVU4337
 18880 014e 9449     		ldr	r1, .L848+244
 18881 0150 9448     		ldr	r0, .L848+248
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 730


 18882 0152 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18883              	.LVL1169:
 18884              	.LBB10914:
 18885              	.LBI10914:
 18886              		.loc 19 162 7 is_stmt 1 view .LVU4338
 18887              	.LBB10915:
 18888              	.LBI10915:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18889              		.loc 20 89 7 view .LVU4339
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18890              		.loc 20 89 7 is_stmt 0 view .LVU4340
 18891              	.LBE10915:
 18892              	.LBE10914:
 18893              	.LBB10916:
 18894              	.LBI10916:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18895              		.loc 19 144 7 is_stmt 1 view .LVU4341
 18896              	.LBB10917:
 18897              	.LBI10917:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18898              		.loc 20 79 7 view .LVU4342
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18899              		.loc 20 79 7 is_stmt 0 view .LVU4343
 18900              	.LBE10917:
 18901              	.LBE10916:
 18902              		.loc 41 107 5 view .LVU4344
 18903 0156 9449     		ldr	r1, .L848+252
 18904 0158 9448     		ldr	r0, .L848+256
 18905 015a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18906              	.LVL1170:
 18907              	.LBB10918:
 18908              	.LBI10918:
 18909              		.loc 19 162 7 is_stmt 1 view .LVU4345
 18910              	.LBB10919:
 18911              	.LBI10919:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18912              		.loc 20 89 7 view .LVU4346
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18913              		.loc 20 89 7 is_stmt 0 view .LVU4347
 18914              	.LBE10919:
 18915              	.LBE10918:
 18916              	.LBB10920:
 18917              	.LBI10920:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18918              		.loc 19 144 7 is_stmt 1 view .LVU4348
 18919              	.LBB10921:
 18920              	.LBI10921:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18921              		.loc 20 79 7 view .LVU4349
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18922              		.loc 20 79 7 is_stmt 0 view .LVU4350
 18923              	.LBE10921:
 18924              	.LBE10920:
 18925              		.loc 41 107 5 view .LVU4351
 18926 015e 9449     		ldr	r1, .L848+260
 18927 0160 9448     		ldr	r0, .L848+264
 18928 0162 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 731


 18929              	.LVL1171:
 18930              	.LBB10922:
 18931              	.LBI10922:
 18932              		.loc 19 162 7 is_stmt 1 view .LVU4352
 18933              	.LBB10923:
 18934              	.LBI10923:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18935              		.loc 20 89 7 view .LVU4353
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18936              		.loc 20 89 7 is_stmt 0 view .LVU4354
 18937              	.LBE10923:
 18938              	.LBE10922:
 18939              	.LBB10924:
 18940              	.LBI10924:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18941              		.loc 19 144 7 is_stmt 1 view .LVU4355
 18942              	.LBB10925:
 18943              	.LBI10925:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18944              		.loc 20 79 7 view .LVU4356
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18945              		.loc 20 79 7 is_stmt 0 view .LVU4357
 18946              	.LBE10925:
 18947              	.LBE10924:
 18948              		.loc 41 107 5 view .LVU4358
 18949 0166 9449     		ldr	r1, .L848+268
 18950 0168 9448     		ldr	r0, .L848+272
 18951 016a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18952              	.LVL1172:
 18953              	.LBB10926:
 18954              	.LBI10926:
 18955              		.loc 19 162 7 is_stmt 1 view .LVU4359
 18956              	.LBB10927:
 18957              	.LBI10927:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18958              		.loc 20 89 7 view .LVU4360
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18959              		.loc 20 89 7 is_stmt 0 view .LVU4361
 18960              	.LBE10927:
 18961              	.LBE10926:
 18962              	.LBB10928:
 18963              	.LBI10928:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18964              		.loc 19 144 7 is_stmt 1 view .LVU4362
 18965              	.LBB10929:
 18966              	.LBI10929:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18967              		.loc 20 79 7 view .LVU4363
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18968              		.loc 20 79 7 is_stmt 0 view .LVU4364
 18969              	.LBE10929:
 18970              	.LBE10928:
 18971              		.loc 41 107 5 view .LVU4365
 18972 016e 9449     		ldr	r1, .L848+276
 18973 0170 9448     		ldr	r0, .L848+280
 18974 0172 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18975              	.LVL1173:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 732


 18976              	.LBB10930:
 18977              	.LBI10930:
 18978              		.loc 19 162 7 is_stmt 1 view .LVU4366
 18979              	.LBB10931:
 18980              	.LBI10931:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18981              		.loc 20 89 7 view .LVU4367
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18982              		.loc 20 89 7 is_stmt 0 view .LVU4368
 18983              	.LBE10931:
 18984              	.LBE10930:
 18985              	.LBB10932:
 18986              	.LBI10932:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18987              		.loc 19 144 7 is_stmt 1 view .LVU4369
 18988              	.LBB10933:
 18989              	.LBI10933:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18990              		.loc 20 79 7 view .LVU4370
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18991              		.loc 20 79 7 is_stmt 0 view .LVU4371
 18992              	.LBE10933:
 18993              	.LBE10932:
 18994              		.loc 41 107 5 view .LVU4372
 18995 0176 9449     		ldr	r1, .L848+284
 18996 0178 9448     		ldr	r0, .L848+288
 18997 017a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18998              	.LVL1174:
 18999              	.LBB10934:
 19000              	.LBI10934:
 19001              		.loc 19 162 7 is_stmt 1 view .LVU4373
 19002              	.LBB10935:
 19003              	.LBI10935:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19004              		.loc 20 89 7 view .LVU4374
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19005              		.loc 20 89 7 is_stmt 0 view .LVU4375
 19006              	.LBE10935:
 19007              	.LBE10934:
 19008              	.LBB10936:
 19009              	.LBI10936:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19010              		.loc 19 144 7 is_stmt 1 view .LVU4376
 19011              	.LBB10937:
 19012              	.LBI10937:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19013              		.loc 20 79 7 view .LVU4377
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19014              		.loc 20 79 7 is_stmt 0 view .LVU4378
 19015              	.LBE10937:
 19016              	.LBE10936:
 19017              		.loc 41 107 5 view .LVU4379
 19018 017e 9449     		ldr	r1, .L848+292
 19019 0180 9448     		ldr	r0, .L848+296
 19020 0182 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19021              	.LVL1175:
 19022              	.LBB10938:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 733


 19023              	.LBI10938:
 19024              		.loc 19 162 7 is_stmt 1 view .LVU4380
 19025              	.LBB10939:
 19026              	.LBI10939:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19027              		.loc 20 89 7 view .LVU4381
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19028              		.loc 20 89 7 is_stmt 0 view .LVU4382
 19029              	.LBE10939:
 19030              	.LBE10938:
 19031              	.LBB10940:
 19032              	.LBI10940:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19033              		.loc 19 144 7 is_stmt 1 view .LVU4383
 19034              	.LBB10941:
 19035              	.LBI10941:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19036              		.loc 20 79 7 view .LVU4384
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19037              		.loc 20 79 7 is_stmt 0 view .LVU4385
 19038              	.LBE10941:
 19039              	.LBE10940:
 19040              		.loc 41 107 5 view .LVU4386
 19041 0186 9449     		ldr	r1, .L848+300
 19042 0188 9448     		ldr	r0, .L848+304
 19043 018a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19044              	.LVL1176:
 19045              	.LBB10942:
 19046              	.LBI10942:
 19047              		.loc 19 162 7 is_stmt 1 view .LVU4387
 19048              	.LBB10943:
 19049              	.LBI10943:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19050              		.loc 20 89 7 view .LVU4388
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19051              		.loc 20 89 7 is_stmt 0 view .LVU4389
 19052              	.LBE10943:
 19053              	.LBE10942:
 19054              	.LBB10944:
 19055              	.LBI10944:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19056              		.loc 19 144 7 is_stmt 1 view .LVU4390
 19057              	.LBB10945:
 19058              	.LBI10945:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19059              		.loc 20 79 7 view .LVU4391
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19060              		.loc 20 79 7 is_stmt 0 view .LVU4392
 19061              	.LBE10945:
 19062              	.LBE10944:
 19063              		.loc 41 107 5 view .LVU4393
 19064 018e 9449     		ldr	r1, .L848+308
 19065 0190 9448     		ldr	r0, .L848+312
 19066 0192 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19067              	.LVL1177:
 19068              	.LBB10946:
 19069              	.LBI10946:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 734


 19070              		.loc 19 162 7 is_stmt 1 view .LVU4394
 19071              	.LBB10947:
 19072              	.LBI10947:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19073              		.loc 20 89 7 view .LVU4395
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19074              		.loc 20 89 7 is_stmt 0 view .LVU4396
 19075              	.LBE10947:
 19076              	.LBE10946:
 19077              	.LBB10948:
 19078              	.LBI10948:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19079              		.loc 19 144 7 is_stmt 1 view .LVU4397
 19080              	.LBB10949:
 19081              	.LBI10949:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19082              		.loc 20 79 7 view .LVU4398
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19083              		.loc 20 79 7 is_stmt 0 view .LVU4399
 19084              	.LBE10949:
 19085              	.LBE10948:
 19086              		.loc 41 107 5 view .LVU4400
 19087 0196 9449     		ldr	r1, .L848+316
 19088 0198 9448     		ldr	r0, .L848+320
 19089 019a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19090              	.LVL1178:
 19091              	.LBB10950:
 19092              	.LBI10950:
 19093              		.loc 19 162 7 is_stmt 1 view .LVU4401
 19094              	.LBB10951:
 19095              	.LBI10951:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19096              		.loc 20 89 7 view .LVU4402
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19097              		.loc 20 89 7 is_stmt 0 view .LVU4403
 19098              	.LBE10951:
 19099              	.LBE10950:
 19100              	.LBB10952:
 19101              	.LBI10952:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19102              		.loc 19 144 7 is_stmt 1 view .LVU4404
 19103              	.LBB10953:
 19104              	.LBI10953:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19105              		.loc 20 79 7 view .LVU4405
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19106              		.loc 20 79 7 is_stmt 0 view .LVU4406
 19107              	.LBE10953:
 19108              	.LBE10952:
 19109              		.loc 41 107 5 view .LVU4407
 19110 019e 9449     		ldr	r1, .L848+324
 19111 01a0 9448     		ldr	r0, .L848+328
 19112 01a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19113              	.LVL1179:
 19114              	.LBB10954:
 19115              	.LBI10954:
 19116              		.loc 19 162 7 is_stmt 1 view .LVU4408
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 735


 19117              	.LBB10955:
 19118              	.LBI10955:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19119              		.loc 20 89 7 view .LVU4409
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19120              		.loc 20 89 7 is_stmt 0 view .LVU4410
 19121              	.LBE10955:
 19122              	.LBE10954:
 19123              	.LBB10956:
 19124              	.LBI10956:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19125              		.loc 19 144 7 is_stmt 1 view .LVU4411
 19126              	.LBB10957:
 19127              	.LBI10957:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19128              		.loc 20 79 7 view .LVU4412
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19129              		.loc 20 79 7 is_stmt 0 view .LVU4413
 19130              	.LBE10957:
 19131              	.LBE10956:
 19132              		.loc 41 107 5 view .LVU4414
 19133 01a6 9449     		ldr	r1, .L848+332
 19134 01a8 9448     		ldr	r0, .L848+336
 19135 01aa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19136              	.LVL1180:
 19137              	.LBB10958:
 19138              	.LBI10958:
 19139              		.loc 19 162 7 is_stmt 1 view .LVU4415
 19140              	.LBB10959:
 19141              	.LBI10959:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19142              		.loc 20 89 7 view .LVU4416
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19143              		.loc 20 89 7 is_stmt 0 view .LVU4417
 19144              	.LBE10959:
 19145              	.LBE10958:
 19146              	.LBB10960:
 19147              	.LBI10960:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19148              		.loc 19 144 7 is_stmt 1 view .LVU4418
 19149              	.LBB10961:
 19150              	.LBI10961:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19151              		.loc 20 79 7 view .LVU4419
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19152              		.loc 20 79 7 is_stmt 0 view .LVU4420
 19153              	.LBE10961:
 19154              	.LBE10960:
 19155              		.loc 41 107 5 view .LVU4421
 19156 01ae 9449     		ldr	r1, .L848+340
 19157 01b0 9448     		ldr	r0, .L848+344
 19158 01b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19159              	.LVL1181:
 19160              	.LBB10962:
 19161              	.LBI10962:
 19162              		.loc 19 162 7 is_stmt 1 view .LVU4422
 19163              	.LBB10963:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 736


 19164              	.LBI10963:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19165              		.loc 20 89 7 view .LVU4423
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19166              		.loc 20 89 7 is_stmt 0 view .LVU4424
 19167              	.LBE10963:
 19168              	.LBE10962:
 19169              	.LBB10964:
 19170              	.LBI10964:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19171              		.loc 19 144 7 is_stmt 1 view .LVU4425
 19172              	.LBB10965:
 19173              	.LBI10965:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19174              		.loc 20 79 7 view .LVU4426
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19175              		.loc 20 79 7 is_stmt 0 view .LVU4427
 19176              	.LBE10965:
 19177              	.LBE10964:
 19178              		.loc 41 107 5 view .LVU4428
 19179 01b6 9449     		ldr	r1, .L848+348
 19180 01b8 9448     		ldr	r0, .L848+352
 19181 01ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19182              	.LVL1182:
 19183              	.LBB10966:
 19184              	.LBI10966:
 19185              		.loc 19 162 7 is_stmt 1 view .LVU4429
 19186              	.LBB10967:
 19187              	.LBI10967:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19188              		.loc 20 89 7 view .LVU4430
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19189              		.loc 20 89 7 is_stmt 0 view .LVU4431
 19190              	.LBE10967:
 19191              	.LBE10966:
 19192              	.LBB10968:
 19193              	.LBI10968:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19194              		.loc 19 144 7 is_stmt 1 view .LVU4432
 19195              	.LBB10969:
 19196              	.LBI10969:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19197              		.loc 20 79 7 view .LVU4433
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19198              		.loc 20 79 7 is_stmt 0 view .LVU4434
 19199              	.LBE10969:
 19200              	.LBE10968:
 19201              		.loc 41 107 5 view .LVU4435
 19202 01be 9449     		ldr	r1, .L848+356
 19203 01c0 9448     		ldr	r0, .L848+360
 19204 01c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19205              	.LVL1183:
 19206              	.LBB10970:
 19207              	.LBI10970:
 19208              		.loc 19 162 7 is_stmt 1 view .LVU4436
 19209              	.LBB10971:
 19210              	.LBI10971:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 737


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19211              		.loc 20 89 7 view .LVU4437
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19212              		.loc 20 89 7 is_stmt 0 view .LVU4438
 19213              	.LBE10971:
 19214              	.LBE10970:
 19215              	.LBB10972:
 19216              	.LBI10972:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19217              		.loc 19 144 7 is_stmt 1 view .LVU4439
 19218              	.LBB10973:
 19219              	.LBI10973:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19220              		.loc 20 79 7 view .LVU4440
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19221              		.loc 20 79 7 is_stmt 0 view .LVU4441
 19222              	.LBE10973:
 19223              	.LBE10972:
 19224              		.loc 41 107 5 view .LVU4442
 19225 01c6 9449     		ldr	r1, .L848+364
 19226 01c8 9448     		ldr	r0, .L848+368
 19227 01ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19228              	.LVL1184:
 19229              	.LBB10974:
 19230              	.LBI10974:
 19231              		.loc 19 162 7 is_stmt 1 view .LVU4443
 19232              	.LBB10975:
 19233              	.LBI10975:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19234              		.loc 20 89 7 view .LVU4444
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19235              		.loc 20 89 7 is_stmt 0 view .LVU4445
 19236              	.LBE10975:
 19237              	.LBE10974:
 19238              	.LBB10976:
 19239              	.LBI10976:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19240              		.loc 19 144 7 is_stmt 1 view .LVU4446
 19241              	.LBB10977:
 19242              	.LBI10977:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19243              		.loc 20 79 7 view .LVU4447
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19244              		.loc 20 79 7 is_stmt 0 view .LVU4448
 19245              	.LBE10977:
 19246              	.LBE10976:
 19247              		.loc 41 107 5 view .LVU4449
 19248 01ce 9449     		ldr	r1, .L848+372
 19249 01d0 9448     		ldr	r0, .L848+376
 19250 01d2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19251              	.LVL1185:
 19252              	.LBB10978:
 19253              	.LBI10978:
 19254              		.loc 19 162 7 is_stmt 1 view .LVU4450
 19255              	.LBB10979:
 19256              	.LBI10979:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 738


 19257              		.loc 20 89 7 view .LVU4451
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19258              		.loc 20 89 7 is_stmt 0 view .LVU4452
 19259              	.LBE10979:
 19260              	.LBE10978:
 19261              	.LBB10980:
 19262              	.LBI10980:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19263              		.loc 19 144 7 is_stmt 1 view .LVU4453
 19264              	.LBB10981:
 19265              	.LBI10981:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19266              		.loc 20 79 7 view .LVU4454
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19267              		.loc 20 79 7 is_stmt 0 view .LVU4455
 19268              	.LBE10981:
 19269              	.LBE10980:
 19270              		.loc 41 107 5 view .LVU4456
 19271 01d6 9449     		ldr	r1, .L848+380
 19272 01d8 9448     		ldr	r0, .L848+384
 19273 01da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19274              	.LVL1186:
 19275              	.LBB10982:
 19276              	.LBI10982:
 19277              		.loc 19 162 7 is_stmt 1 view .LVU4457
 19278              	.LBB10983:
 19279              	.LBI10983:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19280              		.loc 20 89 7 view .LVU4458
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19281              		.loc 20 89 7 is_stmt 0 view .LVU4459
 19282              	.LBE10983:
 19283              	.LBE10982:
 19284              	.LBB10984:
 19285              	.LBI10984:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19286              		.loc 19 144 7 is_stmt 1 view .LVU4460
 19287              	.LBB10985:
 19288              	.LBI10985:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19289              		.loc 20 79 7 view .LVU4461
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19290              		.loc 20 79 7 is_stmt 0 view .LVU4462
 19291              	.LBE10985:
 19292              	.LBE10984:
 19293              		.loc 41 107 5 view .LVU4463
 19294 01de 9449     		ldr	r1, .L848+388
 19295 01e0 9448     		ldr	r0, .L848+392
 19296 01e2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19297              	.LVL1187:
 19298              	.LBB10986:
 19299              	.LBI10986:
 19300              		.loc 19 162 7 is_stmt 1 view .LVU4464
 19301              	.LBB10987:
 19302              	.LBI10987:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19303              		.loc 20 89 7 view .LVU4465
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 739


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19304              		.loc 20 89 7 is_stmt 0 view .LVU4466
 19305              	.LBE10987:
 19306              	.LBE10986:
 19307              	.LBB10988:
 19308              	.LBI10988:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19309              		.loc 19 144 7 is_stmt 1 view .LVU4467
 19310              	.LBB10989:
 19311              	.LBI10989:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19312              		.loc 20 79 7 view .LVU4468
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19313              		.loc 20 79 7 is_stmt 0 view .LVU4469
 19314              	.LBE10989:
 19315              	.LBE10988:
 19316              		.loc 41 107 5 view .LVU4470
 19317 01e6 9449     		ldr	r1, .L848+396
 19318 01e8 9448     		ldr	r0, .L848+400
 19319 01ea FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19320              	.LVL1188:
 19321              	.LBB10990:
 19322              	.LBI10990:
 19323              		.loc 19 162 7 is_stmt 1 view .LVU4471
 19324              	.LBB10991:
 19325              	.LBI10991:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19326              		.loc 20 89 7 view .LVU4472
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19327              		.loc 20 89 7 is_stmt 0 view .LVU4473
 19328              	.LBE10991:
 19329              	.LBE10990:
 19330              	.LBB10992:
 19331              	.LBI10992:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19332              		.loc 19 144 7 is_stmt 1 view .LVU4474
 19333              	.LBB10993:
 19334              	.LBI10993:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19335              		.loc 20 79 7 view .LVU4475
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19336              		.loc 20 79 7 is_stmt 0 view .LVU4476
 19337              	.LBE10993:
 19338              	.LBE10992:
 19339              		.loc 41 107 5 view .LVU4477
 19340 01ee 9449     		ldr	r1, .L848+404
 19341 01f0 9448     		ldr	r0, .L848+408
 19342 01f2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19343              	.LVL1189:
 19344              	.LBB10994:
 19345              	.LBI10994:
 19346              		.loc 19 162 7 is_stmt 1 view .LVU4478
 19347              	.LBB10995:
 19348              	.LBI10995:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19349              		.loc 20 89 7 view .LVU4479
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 740


 19350              		.loc 20 89 7 is_stmt 0 view .LVU4480
 19351              	.LBE10995:
 19352              	.LBE10994:
 19353              	.LBB10996:
 19354              	.LBI10996:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19355              		.loc 19 144 7 is_stmt 1 view .LVU4481
 19356              	.LBB10997:
 19357              	.LBI10997:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19358              		.loc 20 79 7 view .LVU4482
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19359              		.loc 20 79 7 is_stmt 0 view .LVU4483
 19360              	.LBE10997:
 19361              	.LBE10996:
 19362              		.loc 41 107 5 view .LVU4484
 19363 01f6 9449     		ldr	r1, .L848+412
 19364 01f8 9448     		ldr	r0, .L848+416
 19365 01fa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19366              	.LVL1190:
 19367              	.LBB10998:
 19368              	.LBI10998:
 19369              		.loc 19 162 7 is_stmt 1 view .LVU4485
 19370              	.LBB10999:
 19371              	.LBI10999:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19372              		.loc 20 89 7 view .LVU4486
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19373              		.loc 20 89 7 is_stmt 0 view .LVU4487
 19374              	.LBE10999:
 19375              	.LBE10998:
 19376              	.LBB11000:
 19377              	.LBI11000:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19378              		.loc 19 144 7 is_stmt 1 view .LVU4488
 19379              	.LBB11001:
 19380              	.LBI11001:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19381              		.loc 20 79 7 view .LVU4489
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19382              		.loc 20 79 7 is_stmt 0 view .LVU4490
 19383              	.LBE11001:
 19384              	.LBE11000:
 19385              		.loc 41 107 5 view .LVU4491
 19386 01fe 9449     		ldr	r1, .L848+420
 19387 0200 9448     		ldr	r0, .L848+424
 19388 0202 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19389              	.LVL1191:
 19390              	.LBB11002:
 19391              	.LBI11002:
 19392              		.loc 19 162 7 is_stmt 1 view .LVU4492
 19393              	.LBB11003:
 19394              	.LBI11003:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19395              		.loc 20 89 7 view .LVU4493
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19396              		.loc 20 89 7 is_stmt 0 view .LVU4494
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 741


 19397              	.LBE11003:
 19398              	.LBE11002:
 19399              	.LBB11004:
 19400              	.LBI11004:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19401              		.loc 19 144 7 is_stmt 1 view .LVU4495
 19402              	.LBB11005:
 19403              	.LBI11005:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19404              		.loc 20 79 7 view .LVU4496
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19405              		.loc 20 79 7 is_stmt 0 view .LVU4497
 19406              	.LBE11005:
 19407              	.LBE11004:
 19408              		.loc 41 107 5 view .LVU4498
 19409 0206 9449     		ldr	r1, .L848+428
 19410 0208 9448     		ldr	r0, .L848+432
 19411 020a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19412              	.LVL1192:
 19413              	.LBB11006:
 19414              	.LBI11006:
 19415              		.loc 19 162 7 is_stmt 1 view .LVU4499
 19416              	.LBB11007:
 19417              	.LBI11007:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19418              		.loc 20 89 7 view .LVU4500
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19419              		.loc 20 89 7 is_stmt 0 view .LVU4501
 19420              	.LBE11007:
 19421              	.LBE11006:
 19422              	.LBB11008:
 19423              	.LBI11008:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19424              		.loc 19 144 7 is_stmt 1 view .LVU4502
 19425              	.LBB11009:
 19426              	.LBI11009:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19427              		.loc 20 79 7 view .LVU4503
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19428              		.loc 20 79 7 is_stmt 0 view .LVU4504
 19429              	.LBE11009:
 19430              	.LBE11008:
 19431              		.loc 41 107 5 view .LVU4505
 19432 020e 9449     		ldr	r1, .L848+436
 19433 0210 9448     		ldr	r0, .L848+440
 19434 0212 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19435              	.LVL1193:
 19436              	.LBB11010:
 19437              	.LBI11010:
 19438              		.loc 19 162 7 is_stmt 1 view .LVU4506
 19439              	.LBB11011:
 19440              	.LBI11011:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19441              		.loc 20 89 7 view .LVU4507
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19442              		.loc 20 89 7 is_stmt 0 view .LVU4508
 19443              	.LBE11011:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 742


 19444              	.LBE11010:
 19445              	.LBB11012:
 19446              	.LBI11012:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19447              		.loc 19 144 7 is_stmt 1 view .LVU4509
 19448              	.LBB11013:
 19449              	.LBI11013:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19450              		.loc 20 79 7 view .LVU4510
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19451              		.loc 20 79 7 is_stmt 0 view .LVU4511
 19452              	.LBE11013:
 19453              	.LBE11012:
 19454              		.loc 41 107 5 view .LVU4512
 19455 0216 9449     		ldr	r1, .L848+444
 19456 0218 9448     		ldr	r0, .L848+448
 19457 021a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19458              	.LVL1194:
 19459              	.LBB11014:
 19460              	.LBI11014:
 19461              		.loc 19 162 7 is_stmt 1 view .LVU4513
 19462              	.LBB11015:
 19463              	.LBI11015:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19464              		.loc 20 89 7 view .LVU4514
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19465              		.loc 20 89 7 is_stmt 0 view .LVU4515
 19466              	.LBE11015:
 19467              	.LBE11014:
 19468              	.LBB11016:
 19469              	.LBI11016:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19470              		.loc 19 144 7 is_stmt 1 view .LVU4516
 19471              	.LBB11017:
 19472              	.LBI11017:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19473              		.loc 20 79 7 view .LVU4517
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19474              		.loc 20 79 7 is_stmt 0 view .LVU4518
 19475              	.LBE11017:
 19476              	.LBE11016:
 19477              		.loc 41 107 5 view .LVU4519
 19478 021e 9449     		ldr	r1, .L848+452
 19479 0220 9448     		ldr	r0, .L848+456
 19480 0222 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19481              	.LVL1195:
 19482              	.LBB11018:
 19483              	.LBI11018:
 19484              		.loc 19 162 7 is_stmt 1 view .LVU4520
 19485              	.LBB11019:
 19486              	.LBI11019:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19487              		.loc 20 89 7 view .LVU4521
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19488              		.loc 20 89 7 is_stmt 0 view .LVU4522
 19489              	.LBE11019:
 19490              	.LBE11018:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 743


 19491              	.LBB11020:
 19492              	.LBI11020:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19493              		.loc 19 144 7 is_stmt 1 view .LVU4523
 19494              	.LBB11021:
 19495              	.LBI11021:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19496              		.loc 20 79 7 view .LVU4524
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19497              		.loc 20 79 7 is_stmt 0 view .LVU4525
 19498              	.LBE11021:
 19499              	.LBE11020:
 19500              		.loc 41 107 5 view .LVU4526
 19501 0226 9449     		ldr	r1, .L848+460
 19502 0228 9448     		ldr	r0, .L848+464
 19503 022a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19504              	.LVL1196:
 19505              	.LBB11022:
 19506              	.LBI11022:
 19507              		.loc 19 162 7 is_stmt 1 view .LVU4527
 19508              	.LBB11023:
 19509              	.LBI11023:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19510              		.loc 20 89 7 view .LVU4528
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19511              		.loc 20 89 7 is_stmt 0 view .LVU4529
 19512              	.LBE11023:
 19513              	.LBE11022:
 19514              	.LBB11024:
 19515              	.LBI11024:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19516              		.loc 19 144 7 is_stmt 1 view .LVU4530
 19517              	.LBB11025:
 19518              	.LBI11025:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19519              		.loc 20 79 7 view .LVU4531
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19520              		.loc 20 79 7 is_stmt 0 view .LVU4532
 19521              	.LBE11025:
 19522              	.LBE11024:
 19523              		.loc 41 107 5 view .LVU4533
 19524 022e 9449     		ldr	r1, .L848+468
 19525 0230 9448     		ldr	r0, .L848+472
 19526 0232 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19527              	.LVL1197:
 19528              	.LBB11026:
 19529              	.LBI11026:
 19530              		.loc 19 162 7 is_stmt 1 view .LVU4534
 19531              	.LBB11027:
 19532              	.LBI11027:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19533              		.loc 20 89 7 view .LVU4535
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19534              		.loc 20 89 7 is_stmt 0 view .LVU4536
 19535              	.LBE11027:
 19536              	.LBE11026:
 19537              	.LBB11028:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 744


 19538              	.LBI11028:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19539              		.loc 19 144 7 is_stmt 1 view .LVU4537
 19540              	.LBB11029:
 19541              	.LBI11029:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19542              		.loc 20 79 7 view .LVU4538
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19543              		.loc 20 79 7 is_stmt 0 view .LVU4539
 19544              	.LBE11029:
 19545              	.LBE11028:
 19546              		.loc 41 107 5 view .LVU4540
 19547 0236 9449     		ldr	r1, .L848+476
 19548 0238 9448     		ldr	r0, .L848+480
 19549 023a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19550              	.LVL1198:
 19551              	.LBB11030:
 19552              	.LBI11030:
 19553              		.loc 19 162 7 is_stmt 1 view .LVU4541
 19554              	.LBB11031:
 19555              	.LBI11031:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19556              		.loc 20 89 7 view .LVU4542
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19557              		.loc 20 89 7 is_stmt 0 view .LVU4543
 19558              	.LBE11031:
 19559              	.LBE11030:
 19560              	.LBB11032:
 19561              	.LBI11032:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19562              		.loc 19 144 7 is_stmt 1 view .LVU4544
 19563              	.LBB11033:
 19564              	.LBI11033:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19565              		.loc 20 79 7 view .LVU4545
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19566              		.loc 20 79 7 is_stmt 0 view .LVU4546
 19567              	.LBE11033:
 19568              	.LBE11032:
 19569              		.loc 41 107 5 view .LVU4547
 19570 023e 9449     		ldr	r1, .L848+484
 19571 0240 9448     		ldr	r0, .L848+488
 19572 0242 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19573              	.LVL1199:
 19574              	.LBB11034:
 19575              	.LBI11034:
 19576              		.loc 19 162 7 is_stmt 1 view .LVU4548
 19577              	.LBB11035:
 19578              	.LBI11035:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19579              		.loc 20 89 7 view .LVU4549
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19580              		.loc 20 89 7 is_stmt 0 view .LVU4550
 19581              	.LBE11035:
 19582              	.LBE11034:
 19583              	.LBB11036:
 19584              	.LBI11036:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 745


 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19585              		.loc 19 144 7 is_stmt 1 view .LVU4551
 19586              	.LBB11037:
 19587              	.LBI11037:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19588              		.loc 20 79 7 view .LVU4552
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19589              		.loc 20 79 7 is_stmt 0 view .LVU4553
 19590              	.LBE11037:
 19591              	.LBE11036:
 19592              		.loc 41 107 5 view .LVU4554
 19593 0246 9449     		ldr	r1, .L848+492
 19594 0248 9448     		ldr	r0, .L848+496
 19595 024a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19596              	.LVL1200:
 19597              	.LBB11038:
 19598              	.LBI11038:
 19599              		.loc 19 162 7 is_stmt 1 view .LVU4555
 19600              	.LBB11039:
 19601              	.LBI11039:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19602              		.loc 20 89 7 view .LVU4556
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19603              		.loc 20 89 7 is_stmt 0 view .LVU4557
 19604              	.LBE11039:
 19605              	.LBE11038:
 19606              	.LBB11040:
 19607              	.LBI11040:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19608              		.loc 19 144 7 is_stmt 1 view .LVU4558
 19609              	.LBB11041:
 19610              	.LBI11041:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19611              		.loc 20 79 7 view .LVU4559
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19612              		.loc 20 79 7 is_stmt 0 view .LVU4560
 19613              	.LBE11041:
 19614              	.LBE11040:
 19615              		.loc 41 107 5 view .LVU4561
 19616 024e 9449     		ldr	r1, .L848+500
 19617 0250 9448     		ldr	r0, .L848+504
 19618 0252 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19619              	.LVL1201:
 19620              	.LBB11042:
 19621              	.LBI11042:
 19622              		.loc 19 162 7 is_stmt 1 view .LVU4562
 19623              	.LBB11043:
 19624              	.LBI11043:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19625              		.loc 20 89 7 view .LVU4563
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19626              		.loc 20 89 7 is_stmt 0 view .LVU4564
 19627              	.LBE11043:
 19628              	.LBE11042:
 19629              	.LBB11044:
 19630              	.LBI11044:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 746


 19631              		.loc 19 144 7 is_stmt 1 view .LVU4565
 19632              	.LBB11045:
 19633              	.LBI11045:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19634              		.loc 20 79 7 view .LVU4566
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19635              		.loc 20 79 7 is_stmt 0 view .LVU4567
 19636              	.LBE11045:
 19637              	.LBE11044:
 19638              		.loc 41 107 5 view .LVU4568
 19639 0256 9449     		ldr	r1, .L848+508
 19640 0258 9448     		ldr	r0, .L848+512
 19641 025a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19642              	.LVL1202:
 19643              	.LBB11046:
 19644              	.LBI11046:
 19645              		.loc 19 162 7 is_stmt 1 view .LVU4569
 19646              	.LBB11047:
 19647              	.LBI11047:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19648              		.loc 20 89 7 view .LVU4570
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19649              		.loc 20 89 7 is_stmt 0 view .LVU4571
 19650              	.LBE11047:
 19651              	.LBE11046:
 19652              	.LBB11048:
 19653              	.LBI11048:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19654              		.loc 19 144 7 is_stmt 1 view .LVU4572
 19655              	.LBB11049:
 19656              	.LBI11049:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19657              		.loc 20 79 7 view .LVU4573
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19658              		.loc 20 79 7 is_stmt 0 view .LVU4574
 19659              	.LBE11049:
 19660              	.LBE11048:
 19661              		.loc 41 107 5 view .LVU4575
 19662 025e 9449     		ldr	r1, .L848+516
 19663 0260 9448     		ldr	r0, .L848+520
 19664 0262 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19665              	.LVL1203:
 19666              	.LBB11050:
 19667              	.LBI11050:
 19668              		.loc 19 162 7 is_stmt 1 view .LVU4576
 19669              	.LBB11051:
 19670              	.LBI11051:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19671              		.loc 20 89 7 view .LVU4577
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19672              		.loc 20 89 7 is_stmt 0 view .LVU4578
 19673              	.LBE11051:
 19674              	.LBE11050:
 19675              	.LBB11052:
 19676              	.LBI11052:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19677              		.loc 19 144 7 is_stmt 1 view .LVU4579
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 747


 19678              	.LBB11053:
 19679              	.LBI11053:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19680              		.loc 20 79 7 view .LVU4580
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19681              		.loc 20 79 7 is_stmt 0 view .LVU4581
 19682              	.LBE11053:
 19683              	.LBE11052:
 19684              		.loc 41 107 5 view .LVU4582
 19685 0266 9449     		ldr	r1, .L848+524
 19686 0268 9448     		ldr	r0, .L848+528
 19687 026a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19688              	.LVL1204:
 19689              	.LBB11054:
 19690              	.LBI11054:
 19691              		.loc 19 162 7 is_stmt 1 view .LVU4583
 19692              	.LBB11055:
 19693              	.LBI11055:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19694              		.loc 20 89 7 view .LVU4584
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19695              		.loc 20 89 7 is_stmt 0 view .LVU4585
 19696              	.LBE11055:
 19697              	.LBE11054:
 19698              	.LBB11056:
 19699              	.LBI11056:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19700              		.loc 19 144 7 is_stmt 1 view .LVU4586
 19701              	.LBB11057:
 19702              	.LBI11057:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19703              		.loc 20 79 7 view .LVU4587
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19704              		.loc 20 79 7 is_stmt 0 view .LVU4588
 19705              	.LBE11057:
 19706              	.LBE11056:
 19707              		.loc 41 107 5 view .LVU4589
 19708 026e 9449     		ldr	r1, .L848+532
 19709 0270 9448     		ldr	r0, .L848+536
 19710 0272 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19711              	.LVL1205:
 19712              	.LBB11058:
 19713              	.LBI11058:
 19714              		.loc 19 162 7 is_stmt 1 view .LVU4590
 19715              	.LBB11059:
 19716              	.LBI11059:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19717              		.loc 20 89 7 view .LVU4591
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19718              		.loc 20 89 7 is_stmt 0 view .LVU4592
 19719              	.LBE11059:
 19720              	.LBE11058:
  46:theory.h      ****         "C0",
 19721              		.loc 41 46 39 view .LVU4593
 19722 0276 1A4A     		ldr	r2, .L848+52
 19723 0278 9349     		ldr	r1, .L848+540
 19724 027a 1C48     		ldr	r0, .L848+64
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 748


 19725 027c FFF7FEFF 		bl	__aeabi_atexit
 19726              	.LVL1206:
 19727              	.LBB11060:
 19728              	.LBI11060:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19729              		.loc 19 144 7 is_stmt 1 view .LVU4594
 19730              	.LBB11061:
 19731              	.LBI11061:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19732              		.loc 20 79 7 view .LVU4595
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19733              		.loc 20 79 7 is_stmt 0 view .LVU4596
 19734              	.LBE11061:
 19735              	.LBE11060:
 108:theory.h      **** 
 109:theory.h      ****     // Note: Mode names are currently abbreviated due to 
 110:theory.h      ****     // Daisy Patch screen size limitations.
 111:theory.h      ****     //
 112:theory.h      ****     // TODO support exotic modes
 113:theory.h      ****     const std::vector<std::string> modes {
 114:theory.h      ****         "Major",
 115:theory.h      ****         "Minor",
 116:theory.h      ****         "Dorian",
 117:theory.h      ****         "Phyrgi", // Phyrgian
 118:theory.h      ****         "Lydian",
 119:theory.h      ****         "Mixo",   // Mixolydian
 120:theory.h      ****         "Locri",  // Locrian
 121:theory.h      ****     };
 19736              		.loc 41 121 5 view .LVU4597
 19737 0280 9249     		ldr	r1, .L848+544
 19738 0282 2846     		mov	r0, r5
 19739 0284 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19740              	.LVL1207:
 19741              	.LBB11062:
 19742              	.LBI11062:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19743              		.loc 19 144 7 is_stmt 1 view .LVU4598
 19744              	.LBB11063:
 19745              	.LBI11063:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19746              		.loc 20 79 7 view .LVU4599
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19747              		.loc 20 79 7 is_stmt 0 view .LVU4600
 19748              	.LBE11063:
 19749              	.LBE11062:
 19750              		.loc 41 121 5 view .LVU4601
 19751 0288 9149     		ldr	r1, .L848+548
 19752 028a 6AA8     		add	r0, sp, #424
 19753 028c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19754              	.LVL1208:
 19755              	.LBB11064:
 19756              	.LBI11064:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19757              		.loc 19 144 7 is_stmt 1 view .LVU4602
 19758              	.LBB11065:
 19759              	.LBI11065:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 749


 19760              		.loc 20 79 7 view .LVU4603
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19761              		.loc 20 79 7 is_stmt 0 view .LVU4604
 19762              	.LBE11065:
 19763              	.LBE11064:
 19764              		.loc 41 121 5 view .LVU4605
 19765 0290 9049     		ldr	r1, .L848+552
 19766 0292 70A8     		add	r0, sp, #448
 19767 0294 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19768              	.LVL1209:
 19769              	.LBB11066:
 19770              	.LBI11066:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19771              		.loc 19 144 7 is_stmt 1 view .LVU4606
 19772              	.LBB11067:
 19773              	.LBI11067:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19774              		.loc 20 79 7 view .LVU4607
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19775              		.loc 20 79 7 is_stmt 0 view .LVU4608
 19776              	.LBE11067:
 19777              	.LBE11066:
 19778              		.loc 41 121 5 view .LVU4609
 19779 0298 8F49     		ldr	r1, .L848+556
 19780 029a 76A8     		add	r0, sp, #472
 19781 029c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19782              	.LVL1210:
 19783              	.LBB11068:
 19784              	.LBI11068:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19785              		.loc 19 144 7 is_stmt 1 view .LVU4610
 19786              	.LBB11069:
 19787              	.LBI11069:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19788              		.loc 20 79 7 view .LVU4611
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19789              		.loc 20 79 7 is_stmt 0 view .LVU4612
 19790              	.LBE11069:
 19791              	.LBE11068:
 19792              		.loc 41 121 5 view .LVU4613
 19793 02a0 8E49     		ldr	r1, .L848+560
 19794 02a2 7CA8     		add	r0, sp, #496
 19795 02a4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19796              	.LVL1211:
 19797 02a8 1AE1     		b	.L849
 19798              	.L850:
 19799 02aa 00BF     		.align	2
 19800              	.L848:
 19801 02ac 00000000 		.word	.LC19
 19802 02b0 04000000 		.word	.LC20
 19803 02b4 08000000 		.word	.LC21
 19804 02b8 0C000000 		.word	.LC22
 19805 02bc 10000000 		.word	.LC23
 19806 02c0 14000000 		.word	.LC24
 19807 02c4 18000000 		.word	.LC25
 19808 02c8 1C000000 		.word	.LC26
 19809 02cc 20000000 		.word	.LC27
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 750


 19810 02d0 24000000 		.word	.LC28
 19811 02d4 28000000 		.word	.LC29
 19812 02d8 2C000000 		.word	.LC30
 19813 02dc 00000000 		.word	.LANCHOR20
 19814 02e0 00000000 		.word	__dso_handle
 19815 02e4 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 19816 02e8 30000000 		.word	.LC31
 19817 02ec 00000000 		.word	.LANCHOR25
 19818 02f0 34000000 		.word	.LC32
 19819 02f4 18000000 		.word	.LANCHOR25+24
 19820 02f8 38000000 		.word	.LC33
 19821 02fc 30000000 		.word	.LANCHOR25+48
 19822 0300 3C000000 		.word	.LC34
 19823 0304 48000000 		.word	.LANCHOR25+72
 19824 0308 40000000 		.word	.LC35
 19825 030c 60000000 		.word	.LANCHOR25+96
 19826 0310 44000000 		.word	.LC36
 19827 0314 78000000 		.word	.LANCHOR25+120
 19828 0318 48000000 		.word	.LC37
 19829 031c 90000000 		.word	.LANCHOR25+144
 19830 0320 4C000000 		.word	.LC38
 19831 0324 A8000000 		.word	.LANCHOR25+168
 19832 0328 50000000 		.word	.LC39
 19833 032c C0000000 		.word	.LANCHOR25+192
 19834 0330 54000000 		.word	.LC40
 19835 0334 D8000000 		.word	.LANCHOR25+216
 19836 0338 58000000 		.word	.LC41
 19837 033c F0000000 		.word	.LANCHOR25+240
 19838 0340 5C000000 		.word	.LC42
 19839 0344 08010000 		.word	.LANCHOR25+264
 19840 0348 60000000 		.word	.LC43
 19841 034c 20010000 		.word	.LANCHOR25+288
 19842 0350 64000000 		.word	.LC44
 19843 0354 38010000 		.word	.LANCHOR25+312
 19844 0358 68000000 		.word	.LC45
 19845 035c 50010000 		.word	.LANCHOR25+336
 19846 0360 6C000000 		.word	.LC46
 19847 0364 68010000 		.word	.LANCHOR25+360
 19848 0368 70000000 		.word	.LC47
 19849 036c 80010000 		.word	.LANCHOR25+384
 19850 0370 74000000 		.word	.LC48
 19851 0374 98010000 		.word	.LANCHOR25+408
 19852 0378 78000000 		.word	.LC49
 19853 037c B0010000 		.word	.LANCHOR25+432
 19854 0380 7C000000 		.word	.LC50
 19855 0384 C8010000 		.word	.LANCHOR25+456
 19856 0388 80000000 		.word	.LC51
 19857 038c E0010000 		.word	.LANCHOR25+480
 19858 0390 84000000 		.word	.LC52
 19859 0394 F8010000 		.word	.LANCHOR25+504
 19860 0398 88000000 		.word	.LC53
 19861 039c 10020000 		.word	.LANCHOR25+528
 19862 03a0 8C000000 		.word	.LC54
 19863 03a4 28020000 		.word	.LANCHOR25+552
 19864 03a8 90000000 		.word	.LC55
 19865 03ac 40020000 		.word	.LANCHOR25+576
 19866 03b0 94000000 		.word	.LC56
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 751


 19867 03b4 58020000 		.word	.LANCHOR25+600
 19868 03b8 98000000 		.word	.LC57
 19869 03bc 70020000 		.word	.LANCHOR25+624
 19870 03c0 9C000000 		.word	.LC58
 19871 03c4 88020000 		.word	.LANCHOR25+648
 19872 03c8 A0000000 		.word	.LC59
 19873 03cc A0020000 		.word	.LANCHOR25+672
 19874 03d0 A4000000 		.word	.LC60
 19875 03d4 B8020000 		.word	.LANCHOR25+696
 19876 03d8 A8000000 		.word	.LC61
 19877 03dc D0020000 		.word	.LANCHOR25+720
 19878 03e0 AC000000 		.word	.LC62
 19879 03e4 E8020000 		.word	.LANCHOR25+744
 19880 03e8 B0000000 		.word	.LC63
 19881 03ec 00030000 		.word	.LANCHOR25+768
 19882 03f0 B4000000 		.word	.LC64
 19883 03f4 18030000 		.word	.LANCHOR25+792
 19884 03f8 B8000000 		.word	.LC65
 19885 03fc 30030000 		.word	.LANCHOR25+816
 19886 0400 BC000000 		.word	.LC66
 19887 0404 48030000 		.word	.LANCHOR25+840
 19888 0408 C0000000 		.word	.LC67
 19889 040c 60030000 		.word	.LANCHOR25+864
 19890 0410 C4000000 		.word	.LC68
 19891 0414 78030000 		.word	.LANCHOR25+888
 19892 0418 C8000000 		.word	.LC69
 19893 041c 90030000 		.word	.LANCHOR25+912
 19894 0420 CC000000 		.word	.LC70
 19895 0424 A8030000 		.word	.LANCHOR25+936
 19896 0428 D0000000 		.word	.LC71
 19897 042c C0030000 		.word	.LANCHOR25+960
 19898 0430 D4000000 		.word	.LC72
 19899 0434 D8030000 		.word	.LANCHOR25+984
 19900 0438 D8000000 		.word	.LC73
 19901 043c F0030000 		.word	.LANCHOR25+1008
 19902 0440 DC000000 		.word	.LC74
 19903 0444 08040000 		.word	.LANCHOR25+1032
 19904 0448 E0000000 		.word	.LC75
 19905 044c 20040000 		.word	.LANCHOR25+1056
 19906 0450 E4000000 		.word	.LC76
 19907 0454 38040000 		.word	.LANCHOR25+1080
 19908 0458 E8000000 		.word	.LC77
 19909 045c 50040000 		.word	.LANCHOR25+1104
 19910 0460 EC000000 		.word	.LC78
 19911 0464 68040000 		.word	.LANCHOR25+1128
 19912 0468 F0000000 		.word	.LC79
 19913 046c 80040000 		.word	.LANCHOR25+1152
 19914 0470 F4000000 		.word	.LC80
 19915 0474 98040000 		.word	.LANCHOR25+1176
 19916 0478 F8000000 		.word	.LC81
 19917 047c B0040000 		.word	.LANCHOR25+1200
 19918 0480 FC000000 		.word	.LC82
 19919 0484 C8040000 		.word	.LANCHOR25+1224
 19920 0488 00010000 		.word	.LC83
 19921 048c E0040000 		.word	.LANCHOR25+1248
 19922 0490 04010000 		.word	.LC84
 19923 0494 F8040000 		.word	.LANCHOR25+1272
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 752


 19924 0498 08010000 		.word	.LC85
 19925 049c 10050000 		.word	.LANCHOR25+1296
 19926 04a0 0C010000 		.word	.LC86
 19927 04a4 28050000 		.word	.LANCHOR25+1320
 19928 04a8 10010000 		.word	.LC87
 19929 04ac 40050000 		.word	.LANCHOR25+1344
 19930 04b0 14010000 		.word	.LC88
 19931 04b4 58050000 		.word	.LANCHOR25+1368
 19932 04b8 18010000 		.word	.LC89
 19933 04bc 70050000 		.word	.LANCHOR25+1392
 19934 04c0 1C010000 		.word	.LC90
 19935 04c4 88050000 		.word	.LANCHOR25+1416
 19936 04c8 00000000 		.word	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev
 19937 04cc 20010000 		.word	.LC91
 19938 04d0 28010000 		.word	.LC92
 19939 04d4 30010000 		.word	.LC93
 19940 04d8 38010000 		.word	.LC94
 19941 04dc 40010000 		.word	.LC95
 19942              	.L849:
 19943              	.LVL1212:
 19944              	.LBB11070:
 19945              	.LBI11070:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19946              		.loc 19 144 7 is_stmt 1 view .LVU4614
 19947              	.LBB11071:
 19948              	.LBI11071:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19949              		.loc 20 79 7 view .LVU4615
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19950              		.loc 20 79 7 is_stmt 0 view .LVU4616
 19951              	.LBE11071:
 19952              	.LBE11070:
 19953              		.loc 41 121 5 view .LVU4617
 19954 04e0 B449     		ldr	r1, .L851
 19955 04e2 82A8     		add	r0, sp, #520
 19956 04e4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19957              	.LVL1213:
 19958              	.LBB11072:
 19959              	.LBI11072:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19960              		.loc 19 144 7 is_stmt 1 view .LVU4618
 19961              	.LBB11073:
 19962              	.LBI11073:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19963              		.loc 20 79 7 view .LVU4619
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19964              		.loc 20 79 7 is_stmt 0 view .LVU4620
 19965              	.LBE11073:
 19966              	.LBE11072:
 19967              		.loc 41 121 5 view .LVU4621
 19968 04e8 B349     		ldr	r1, .L851+4
 19969 04ea 88A8     		add	r0, sp, #544
 19970 04ec FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19971              	.LVL1214:
 19972 04f0 0723     		movs	r3, #7
 19973 04f2 18AA     		add	r2, sp, #96
 19974 04f4 1895     		str	r5, [sp, #96]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 753


 19975 04f6 1993     		str	r3, [sp, #100]
 19976              	.LVL1215:
 19977              	.LBB11074:
 19978              	.LBI11074:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19979              		.loc 19 144 7 is_stmt 1 view .LVU4622
 19980              	.LBB11075:
 19981              	.LBI11075:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19982              		.loc 20 79 7 view .LVU4623
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19983              		.loc 20 79 7 is_stmt 0 view .LVU4624
 19984              	.LBE11075:
 19985              	.LBE11074:
 19986              		.loc 41 121 5 view .LVU4625
 19987 04f8 5DAB     		add	r3, sp, #372
 19988 04fa B048     		ldr	r0, .L851+8
 19989 04fc 06CA     		ldm	r2, {r1, r2}
 19990 04fe FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 19991              	.LVL1216:
 19992              	.LBB11076:
 19993              	.LBI11076:
 19994              		.loc 19 162 7 is_stmt 1 view .LVU4626
 19995              	.LBB11077:
 19996              	.LBI11077:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19997              		.loc 20 89 7 view .LVU4627
 19998              	.L794:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19999              		.loc 20 89 7 is_stmt 0 view .LVU4628
 20000              	.LBE11077:
 20001              	.LBE11076:
 20002              	.LBB11078:
 20003              	.LBI11078:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 20004              		.loc 18 657 7 is_stmt 1 view .LVU4629
 20005              	.LBB11079:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20006              		.loc 18 658 19 is_stmt 0 view .LVU4630
 20007 0502 3046     		mov	r0, r6
 20008 0504 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 20009              	.LVL1217:
 20010              	.LBB11080:
 20011              	.LBI11080:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20012              		.loc 18 150 14 is_stmt 1 view .LVU4631
 20013              	.LBB11081:
 20014              	.LBI11081:
 20015              		.loc 19 162 7 view .LVU4632
 20016              	.LBB11082:
 20017              	.LBI11082:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20018              		.loc 20 89 7 view .LVU4633
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20019              		.loc 20 89 7 is_stmt 0 view .LVU4634
 20020              	.LBE11082:
 20021              	.LBE11081:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 754


 20022              	.LBE11080:
 20023              	.LBE11079:
 20024              	.LBE11078:
 20025              		.loc 41 121 5 view .LVU4635
 20026 0508 B542     		cmp	r5, r6
 20027 050a A6F11806 		sub	r6, r6, #24
 20028 050e F8D1     		bne	.L794
 20029              	.LVL1218:
 20030              	.LBB11083:
 20031              	.LBI11083:
 20032              		.loc 19 162 7 is_stmt 1 view .LVU4636
 20033              	.LBB11084:
 20034              	.LBI11084:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20035              		.loc 20 89 7 view .LVU4637
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20036              		.loc 20 89 7 is_stmt 0 view .LVU4638
 20037              	.LBE11084:
 20038              	.LBE11083:
 20039              	.LBB11085:
 20040              	.LBI11085:
 20041              		.loc 19 162 7 is_stmt 1 view .LVU4639
 20042              	.LBB11086:
 20043              	.LBI11086:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20044              		.loc 20 89 7 view .LVU4640
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20045              		.loc 20 89 7 is_stmt 0 view .LVU4641
 20046              	.LBE11086:
 20047              	.LBE11085:
 20048              	.LBB11087:
 20049              	.LBI11087:
 20050              		.loc 19 162 7 is_stmt 1 view .LVU4642
 20051              	.LBB11088:
 20052              	.LBI11088:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20053              		.loc 20 89 7 view .LVU4643
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20054              		.loc 20 89 7 is_stmt 0 view .LVU4644
 20055              	.LBE11088:
 20056              	.LBE11087:
 20057              	.LBB11089:
 20058              	.LBI11089:
 20059              		.loc 19 162 7 is_stmt 1 view .LVU4645
 20060              	.LBB11090:
 20061              	.LBI11090:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20062              		.loc 20 89 7 view .LVU4646
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20063              		.loc 20 89 7 is_stmt 0 view .LVU4647
 20064              	.LBE11090:
 20065              	.LBE11089:
 20066              	.LBB11091:
 20067              	.LBI11091:
 20068              		.loc 19 162 7 is_stmt 1 view .LVU4648
 20069              	.LBB11092:
 20070              	.LBI11092:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 755


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20071              		.loc 20 89 7 view .LVU4649
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20072              		.loc 20 89 7 is_stmt 0 view .LVU4650
 20073              	.LBE11092:
 20074              	.LBE11091:
 20075              	.LBB11093:
 20076              	.LBI11093:
 20077              		.loc 19 162 7 is_stmt 1 view .LVU4651
 20078              	.LBB11094:
 20079              	.LBI11094:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20080              		.loc 20 89 7 view .LVU4652
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20081              		.loc 20 89 7 is_stmt 0 view .LVU4653
 20082              	.LBE11094:
 20083              	.LBE11093:
 20084              	.LBB11095:
 20085              	.LBI11095:
 20086              		.loc 19 162 7 is_stmt 1 view .LVU4654
 20087              	.LBB11096:
 20088              	.LBI11096:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20089              		.loc 20 89 7 view .LVU4655
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20090              		.loc 20 89 7 is_stmt 0 view .LVU4656
 20091              	.LBE11096:
 20092              	.LBE11095:
 122:theory.h      **** 
 123:theory.h      ****     // Maps scale names to their first octave of semitone values
 124:theory.h      ****     const std::map<std::string, std::vector<int>> modeToSemitones {
 125:theory.h      ****         {"Major",  std::vector<int>{0, 2, 4, 5, 7, 9, 11}},
 20093              		.loc 41 125 57 view .LVU4657
 20094 0510 AB4D     		ldr	r5, .L851+12
 20095 0512 4FF00709 		mov	r9, #7
 113:theory.h      ****         "Major",
 20096              		.loc 41 113 36 view .LVU4658
 20097 0516 AB4A     		ldr	r2, .L851+16
 20098              		.loc 41 125 57 view .LVU4659
 20099 0518 5DAF     		add	r7, sp, #372
 113:theory.h      ****         "Major",
 20100              		.loc 41 113 36 view .LVU4660
 20101 051a AB49     		ldr	r1, .L851+20
 20102 051c 6DAE     		add	r6, sp, #436
 20103 051e A748     		ldr	r0, .L851+8
 20104              	.LBB11097:
 20105              	.LBB11098:
 20106              	.LBB11099:
 20107              	.LBB11100:
 20108              	.LBB11101:
 20109              	.LBB11102:
 20110              	.LBB11103:
 20111              	.LBB11104:
 20112              	.LBB11105:
 20113              	.LBB11106:
 20114              	.LBB11107:
 20115              	.LBB11108:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 756


 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20116              		.loc 21 322 14 view .LVU4661
 20117 0520 4FF00008 		mov	r8, #0
 20118              	.LBE11108:
 20119              	.LBE11107:
 20120              	.LBE11106:
 20121              	.LBE11105:
 20122              	.LBE11104:
 20123              	.LBE11103:
 20124              	.LBE11102:
 20125              	.LBE11101:
 20126              	.LBE11100:
 20127              	.LBE11099:
 20128              	.LBE11098:
 20129              	.LBE11097:
 113:theory.h      ****         "Major",
 20130              		.loc 41 113 36 view .LVU4662
 20131 0524 FFF7FEFF 		bl	__aeabi_atexit
 20132              	.LVL1219:
 20133              		.loc 41 125 57 view .LVU4663
 20134 0528 0DF1580C 		add	ip, sp, #88
 20135              	.LBB11237:
 20136              	.LBB11238:
 20137              	.LBB11239:
 20138              	.LBB11240:
 20139              	.LBB11241:
 20140              	.LBB11242:
 20141              	.LBB11243:
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 20142              		.loc 29 175 26 view .LVU4664
 20143 052c DFF8BCA2 		ldr	r10, .L851+56
 20144 0530 0DF52C7B 		add	fp, sp, #688
 20145              	.LBE11243:
 20146              	.LBE11242:
 20147              	.LBE11241:
 20148              	.LBE11240:
 20149              	.LBE11239:
 20150              	.LBE11238:
 20151              	.LBE11237:
 20152              		.loc 41 125 57 view .LVU4665
 20153 0534 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20154 0536 CDE91679 		strd	r7, r9, [sp, #88]
 20155              	.LVL1220:
 20156              	.LBB11560:
 20157              	.LBI11560:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20158              		.loc 19 144 7 is_stmt 1 view .LVU4666
 20159              	.LBB11561:
 20160              	.LBI11561:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20161              		.loc 20 79 7 view .LVU4667
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20162              		.loc 20 79 7 is_stmt 0 view .LVU4668
 20163              	.LBE11561:
 20164              	.LBE11560:
 20165              		.loc 41 125 57 view .LVU4669
 20166 053a 0FC7     		stmia	r7!, {r0, r1, r2, r3}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 757


 20167 053c 95E80700 		ldm	r5, {r0, r1, r2}
 20168 0540 08AB     		add	r3, sp, #32
 20169 0542 87E80700 		stm	r7, {r0, r1, r2}
 20170 0546 9CE80600 		ldm	ip, {r1, r2}
 20171 054a 30A8     		add	r0, sp, #192
 126:theory.h      ****         {"Minor",  std::vector<int>{0, 2, 3, 5, 7, 8, 10}},
 20172              		.loc 41 126 57 view .LVU4670
 20173 054c 56AF     		add	r7, sp, #344
 125:theory.h      ****         {"Minor",  std::vector<int>{0, 2, 3, 5, 7, 8, 10}},
 20174              		.loc 41 125 57 view .LVU4671
 20175 054e FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 20176              	.LVL1221:
 127:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 128:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 129:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 130:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 131:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 132:theory.h      ****     };
 20177              		.loc 41 132 5 view .LVU4672
 20178 0552 30AA     		add	r2, sp, #192
 20179 0554 9D49     		ldr	r1, .L851+24
 20180 0556 2046     		mov	r0, r4
 20181 0558 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
 20182              	.LVL1222:
 126:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 20183              		.loc 41 126 57 view .LVU4673
 20184 055c 05F10C0C 		add	ip, r5, #12
 20185 0560 0DF1500E 		add	lr, sp, #80
 20186 0564 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 20187 0568 CDE91479 		strd	r7, r9, [sp, #80]
 20188              	.LVL1223:
 20189              	.LBB11562:
 20190              	.LBI11562:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20191              		.loc 19 144 7 is_stmt 1 view .LVU4674
 20192              	.LBB11563:
 20193              	.LBI11563:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20194              		.loc 20 79 7 view .LVU4675
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20195              		.loc 20 79 7 is_stmt 0 view .LVU4676
 20196              	.LBE11563:
 20197              	.LBE11562:
 126:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 20198              		.loc 41 126 57 view .LVU4677
 20199 056c 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 20200 056e 9CE80700 		ldm	ip, {r0, r1, r2}
 20201 0572 07AB     		add	r3, sp, #28
 20202 0574 87E80700 		stm	r7, {r0, r1, r2}
 20203 0578 9EE80600 		ldm	lr, {r1, r2}
 20204 057c 2DA8     		add	r0, sp, #180
 127:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 20205              		.loc 41 127 57 view .LVU4678
 20206 057e 4FAF     		add	r7, sp, #316
 126:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 20207              		.loc 41 126 57 view .LVU4679
 20208 0580 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 758


 20209              	.LVL1224:
 20210              		.loc 41 132 5 view .LVU4680
 20211 0584 2DAA     		add	r2, sp, #180
 20212 0586 9249     		ldr	r1, .L851+28
 20213 0588 3046     		mov	r0, r6
 20214 058a FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
 20215              	.LVL1225:
 127:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 20216              		.loc 41 127 57 view .LVU4681
 20217 058e 05F1280C 		add	ip, r5, #40
 20218 0592 0DF1480E 		add	lr, sp, #72
 20219 0596 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 20220 059a CDE91279 		strd	r7, r9, [sp, #72]
 20221              	.LVL1226:
 20222              	.LBB11564:
 20223              	.LBI11564:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20224              		.loc 19 144 7 is_stmt 1 view .LVU4682
 20225              	.LBB11565:
 20226              	.LBI11565:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20227              		.loc 20 79 7 view .LVU4683
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20228              		.loc 20 79 7 is_stmt 0 view .LVU4684
 20229              	.LBE11565:
 20230              	.LBE11564:
 127:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 20231              		.loc 41 127 57 view .LVU4685
 20232 059e 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 20233 05a0 9CE80700 		ldm	ip, {r0, r1, r2}
 20234 05a4 06AB     		add	r3, sp, #24
 20235 05a6 87E80700 		stm	r7, {r0, r1, r2}
 20236 05aa 9EE80600 		ldm	lr, {r1, r2}
 20237 05ae 2AA8     		add	r0, sp, #168
 128:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 20238              		.loc 41 128 57 view .LVU4686
 20239 05b0 48AF     		add	r7, sp, #288
 127:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 20240              		.loc 41 127 57 view .LVU4687
 20241 05b2 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 20242              	.LVL1227:
 20243              		.loc 41 132 5 view .LVU4688
 20244 05b6 2AAA     		add	r2, sp, #168
 20245 05b8 8649     		ldr	r1, .L851+32
 20246 05ba 76A8     		add	r0, sp, #472
 20247 05bc FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 20248              	.LVL1228:
 128:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 20249              		.loc 41 128 57 view .LVU4689
 20250 05c0 05F1440C 		add	ip, r5, #68
 20251 05c4 0DF1400E 		add	lr, sp, #64
 20252 05c8 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 20253 05cc CDE91079 		strd	r7, r9, [sp, #64]
 20254              	.LVL1229:
 20255              	.LBB11566:
 20256              	.LBI11566:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 759


 20257              		.loc 19 144 7 is_stmt 1 view .LVU4690
 20258              	.LBB11567:
 20259              	.LBI11567:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20260              		.loc 20 79 7 view .LVU4691
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20261              		.loc 20 79 7 is_stmt 0 view .LVU4692
 20262              	.LBE11567:
 20263              	.LBE11566:
 128:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 20264              		.loc 41 128 57 view .LVU4693
 20265 05d0 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 20266 05d2 9CE80700 		ldm	ip, {r0, r1, r2}
 20267 05d6 05AB     		add	r3, sp, #20
 20268 05d8 87E80700 		stm	r7, {r0, r1, r2}
 20269 05dc 9EE80600 		ldm	lr, {r1, r2}
 20270 05e0 27A8     		add	r0, sp, #156
 129:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 20271              		.loc 41 129 57 view .LVU4694
 20272 05e2 41AF     		add	r7, sp, #260
 128:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 20273              		.loc 41 128 57 view .LVU4695
 20274 05e4 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 20275              	.LVL1230:
 20276              		.loc 41 132 5 view .LVU4696
 20277 05e8 27AA     		add	r2, sp, #156
 20278 05ea 7B49     		ldr	r1, .L851+36
 20279 05ec 7FA8     		add	r0, sp, #508
 20280 05ee FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 20281              	.LVL1231:
 129:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 20282              		.loc 41 129 57 view .LVU4697
 20283 05f2 05F1600C 		add	ip, r5, #96
 20284 05f6 0DF1380E 		add	lr, sp, #56
 20285 05fa BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 20286 05fe CDE90E79 		strd	r7, r9, [sp, #56]
 20287              	.LVL1232:
 20288              	.LBB11568:
 20289              	.LBI11568:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20290              		.loc 19 144 7 is_stmt 1 view .LVU4698
 20291              	.LBB11569:
 20292              	.LBI11569:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20293              		.loc 20 79 7 view .LVU4699
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20294              		.loc 20 79 7 is_stmt 0 view .LVU4700
 20295              	.LBE11569:
 20296              	.LBE11568:
 129:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 20297              		.loc 41 129 57 view .LVU4701
 20298 0602 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 20299 0604 9CE80700 		ldm	ip, {r0, r1, r2}
 20300 0608 04AB     		add	r3, sp, #16
 20301 060a 87E80700 		stm	r7, {r0, r1, r2}
 20302 060e 9EE80600 		ldm	lr, {r1, r2}
 20303 0612 24A8     		add	r0, sp, #144
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 760


 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 20304              		.loc 41 130 57 view .LVU4702
 20305 0614 3AAF     		add	r7, sp, #232
 129:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 20306              		.loc 41 129 57 view .LVU4703
 20307 0616 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 20308              	.LVL1233:
 20309              		.loc 41 132 5 view .LVU4704
 20310 061a 24AA     		add	r2, sp, #144
 20311 061c 6F49     		ldr	r1, .L851+40
 20312 061e 88A8     		add	r0, sp, #544
 20313 0620 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 20314              	.LVL1234:
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 20315              		.loc 41 130 57 view .LVU4705
 20316 0624 05F17C0C 		add	ip, r5, #124
 20317 0628 0DF1300E 		add	lr, sp, #48
 131:theory.h      ****     };
 20318              		.loc 41 131 57 view .LVU4706
 20319 062c 9835     		adds	r5, r5, #152
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 20320              		.loc 41 130 57 view .LVU4707
 20321 062e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 20322 0632 CDE90C79 		strd	r7, r9, [sp, #48]
 20323              	.LVL1235:
 20324              	.LBB11570:
 20325              	.LBI11570:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20326              		.loc 19 144 7 is_stmt 1 view .LVU4708
 20327              	.LBB11571:
 20328              	.LBI11571:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20329              		.loc 20 79 7 view .LVU4709
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20330              		.loc 20 79 7 is_stmt 0 view .LVU4710
 20331              	.LBE11571:
 20332              	.LBE11570:
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 20333              		.loc 41 130 57 view .LVU4711
 20334 0636 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 20335 0638 9CE80700 		ldm	ip, {r0, r1, r2}
 20336 063c 03AB     		add	r3, sp, #12
 20337 063e 87E80700 		stm	r7, {r0, r1, r2}
 20338 0642 9EE80600 		ldm	lr, {r1, r2}
 20339 0646 21A8     		add	r0, sp, #132
 131:theory.h      ****     };
 20340              		.loc 41 131 57 view .LVU4712
 20341 0648 33AF     		add	r7, sp, #204
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 20342              		.loc 41 130 57 view .LVU4713
 20343 064a FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 20344              	.LVL1236:
 20345              	.LBB11572:
 20346              	.LBI11097:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 20347              		.loc 30 352 12 is_stmt 1 view .LVU4714
 20348              	.LBB11174:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 761


 20349              	.LBI11174:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 20350              		.loc 34 76 5 view .LVU4715
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 20351              		.loc 34 76 5 is_stmt 0 view .LVU4716
 20352              	.LBE11174:
 20353              	.LBB11175:
 20354              	.LBI11175:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20355              		.loc 19 144 7 is_stmt 1 view .LVU4717
 20356              	.LBB11176:
 20357              	.LBI11176:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20358              		.loc 20 79 7 view .LVU4718
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20359              		.loc 20 79 7 is_stmt 0 view .LVU4719
 20360              	.LBE11176:
 20361              	.LBE11175:
 20362              	.LBB11177:
 20363              	.LBI11098:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 20364              		.loc 18 525 7 is_stmt 1 view .LVU4720
 20365              	.LBB11167:
 20366              	.LBB11150:
 20367              	.LBI11150:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20368              		.loc 18 190 7 view .LVU4721
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20369              		.loc 18 190 7 is_stmt 0 view .LVU4722
 20370              	.LBE11150:
 20371              	.LBB11151:
 20372              	.LBI11151:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 20373              		.loc 18 156 2 is_stmt 1 view .LVU4723
 20374              	.LBB11152:
 20375              	.LBB11153:
 20376              	.LBB11154:
 20377              	.LBI11154:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20378              		.loc 19 147 7 view .LVU4724
 20379              	.LBB11155:
 20380              	.LBI11155:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20381              		.loc 20 82 7 view .LVU4725
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20382              		.loc 20 82 7 is_stmt 0 view .LVU4726
 20383              	.LBE11155:
 20384              	.LBE11154:
 20385              	.LBE11153:
 20386              	.LBE11152:
 20387              	.LBE11151:
 20388              	.LBE11167:
 20389              	.LBE11177:
 20390              	.LBB11178:
 20391              	.LBB11179:
 20392              	.LBB11180:
 20393              	.LBB11181:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 762


 20394              	.LBB11182:
 20395              	.LBB11183:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 20396              		.loc 26 104 43 view .LVU4727
 20397 064e 219B     		ldr	r3, [sp, #132]
 20398              	.LBE11183:
 20399              	.LBE11182:
 20400              	.LBE11181:
 20401              	.LBE11180:
 20402              	.LBE11179:
 20403              	.LBE11178:
 20404              	.LBB11221:
 20405              	.LBB11168:
 20406              	.LBB11160:
 20407              	.LBB11146:
 20408              	.LBB11142:
 20409              	.LBB11138:
 20410              	.LBB11134:
 20411              	.LBB11130:
 20412              	.LBB11117:
 20413              	.LBB11111:
 20414              	.LBB11109:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20415              		.loc 21 322 14 view .LVU4728
 20416 0650 84F8C080 		strb	r8, [r4, #192]
 20417              	.LBE11109:
 20418              	.LBE11111:
 20419              	.LBE11117:
 20420              	.LBE11130:
 20421              	.LBE11134:
 20422              	.LBE11138:
 20423              	.LBE11142:
 20424              	.LBE11146:
 20425              	.LBE11160:
 20426              	.LBE11168:
 20427              	.LBE11221:
 20428              	.LBE11572:
 131:theory.h      ****     };
 20429              		.loc 41 131 57 view .LVU4729
 20430 0654 0DF1280C 		add	ip, sp, #40
 20431              	.LBB11573:
 20432              	.LBB11222:
 20433              	.LBB11214:
 20434              	.LBB11207:
 20435              	.LBB11196:
 20436              	.LBB11190:
 20437              	.LBB11184:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 20438              		.loc 26 104 43 view .LVU4730
 20439 0658 C4F8CC30 		str	r3, [r4, #204]
 20440 065c 229B     		ldr	r3, [sp, #136]
 20441              	.LBE11184:
 20442              	.LBE11190:
 20443              	.LBE11196:
 20444              	.LBE11207:
 20445              	.LBE11214:
 20446              	.LBE11222:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 763


 20447              	.LBE11573:
 131:theory.h      ****     };
 20448              		.loc 41 131 57 view .LVU4731
 20449 065e 0A97     		str	r7, [sp, #40]
 20450              	.LBB11574:
 20451              	.LBB11223:
 20452              	.LBB11215:
 20453              	.LBB11208:
 20454              	.LBB11197:
 20455              	.LBB11191:
 20456              	.LBB11185:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 20457              		.loc 26 104 43 view .LVU4732
 20458 0660 C4F8D030 		str	r3, [r4, #208]
 20459 0664 239B     		ldr	r3, [sp, #140]
 20460              	.LBE11185:
 20461              	.LBE11191:
 20462              	.LBE11197:
 20463              	.LBE11208:
 20464              	.LBE11215:
 20465              	.LBE11223:
 20466              	.LBE11574:
 131:theory.h      ****     };
 20467              		.loc 41 131 57 view .LVU4733
 20468 0666 CDF82C90 		str	r9, [sp, #44]
 20469              	.LBB11575:
 20470              	.LBB11224:
 20471              	.LBB11216:
 20472              	.LBB11209:
 20473              	.LBB11198:
 20474              	.LBB11192:
 20475              	.LBB11186:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 20476              		.loc 26 104 43 view .LVU4734
 20477 066a C4F8D430 		str	r3, [r4, #212]
 20478              	.LBE11186:
 20479              	.LBE11192:
 20480              	.LBE11198:
 20481              	.LBE11209:
 20482              	.LBE11216:
 20483              	.LBE11224:
 20484              	.LBB11225:
 20485              	.LBB11169:
 20486              	.LBB11161:
 20487              	.LBB11158:
 20488              	.LBB11156:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20489              		.loc 18 157 35 view .LVU4735
 20490 066e 93AB     		add	r3, sp, #588
 20491              	.LVL1237:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20492              		.loc 18 157 35 view .LVU4736
 20493              	.LBE11156:
 20494              	.LBE11158:
 20495              	.LBE11161:
 20496              	.LBE11169:
 20497              	.LBE11225:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 764


 20498              	.LBB11226:
 20499              	.LBB11217:
 20500              	.LBB11210:
 20501              	.LBB11199:
 20502              	.LBB11193:
 20503              	.LBB11187:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 20504              		.loc 26 105 17 view .LVU4737
 20505 0670 CDF88480 		str	r8, [sp, #132]
 20506              	.LBE11187:
 20507              	.LBE11193:
 20508              	.LBE11199:
 20509              	.LBE11210:
 20510              	.LBE11217:
 20511              	.LBE11226:
 20512              	.LBB11227:
 20513              	.LBB11170:
 20514              	.LBB11162:
 20515              	.LBB11159:
 20516              	.LBB11157:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20517              		.loc 18 157 35 view .LVU4738
 20518 0674 C4F8B430 		str	r3, [r4, #180]
 20519              	.LVL1238:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20520              		.loc 18 157 35 view .LVU4739
 20521              	.LBE11157:
 20522              	.LBE11159:
 20523              	.LBE11162:
 20524              	.LBB11163:
 20525              	.LBI11163:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 20526              		.loc 21 351 7 is_stmt 1 view .LVU4740
 20527              	.LBE11163:
 20528              	.LBE11170:
 20529              	.LBE11227:
 20530              	.LBE11575:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 20531              		.loc 21 357 2 view .LVU4741
 20532              	.LBB11576:
 20533              	.LBB11228:
 20534              	.LBB11171:
 20535              	.LBB11164:
 20536              	.LBI11100:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 20537              		.loc 18 263 9 view .LVU4742
 20538              	.LBB11147:
 20539              	.LBB11143:
 20540              	.LBI11102:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 20541              		.loc 18 243 9 view .LVU4743
 20542              	.LBB11139:
 20543              	.LBB11135:
 20544              	.LBI11104:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 20545              		.loc 22 206 7 view .LVU4744
 20546              	.LBB11131:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 765


 20547              	.LBB11118:
 20548              	.LBI11118:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 20549              		.loc 18 396 7 view .LVU4745
 20550              	.LBB11119:
 20551              	.LBI11119:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20552              		.loc 18 346 7 view .LVU4746
 20553              	.LBB11120:
 20554              	.LBI11120:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20555              		.loc 18 346 7 view .LVU4747
 20556              	.LBB11121:
 20557              	.LBI11121:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 20558              		.loc 21 387 7 view .LVU4748
 20559              	.LBB11122:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 20560              		.loc 21 389 2 view .LVU4749
 20561              		.loc 21 395 2 view .LVU4750
 20562              		.loc 21 395 49 is_stmt 0 view .LVU4751
 20563 0678 594B     		ldr	r3, .L851+44
 20564              	.LVL1239:
 20565              		.loc 21 395 49 view .LVU4752
 20566              	.LBE11122:
 20567              	.LBE11121:
 20568              	.LBE11120:
 20569              	.LBE11119:
 20570              	.LBE11118:
 20571              	.LBE11131:
 20572              	.LBE11135:
 20573              	.LBE11139:
 20574              	.LBE11143:
 20575              	.LBE11147:
 20576              	.LBE11164:
 20577              	.LBE11171:
 20578              	.LBE11228:
 20579              	.LBB11229:
 20580              	.LBB11218:
 20581              	.LBB11211:
 20582              	.LBB11200:
 20583              	.LBB11194:
 20584              	.LBB11188:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 20585              		.loc 26 105 33 view .LVU4753
 20586 067a CDF88880 		str	r8, [sp, #136]
 20587              	.LBE11188:
 20588              	.LBE11194:
 20589              	.LBE11200:
 20590              	.LBE11211:
 20591              	.LBE11218:
 20592              	.LBE11229:
 20593              	.LBB11230:
 20594              	.LBB11172:
 20595              	.LBB11165:
 20596              	.LBB11148:
 20597              	.LBB11144:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 766


 20598              	.LBB11140:
 20599              	.LBB11136:
 20600              	.LBB11132:
 20601              	.LBB11127:
 20602              	.LBB11126:
 20603              	.LBB11125:
 20604              	.LBB11124:
 20605              	.LBB11123:
 20606              		.loc 21 395 49 view .LVU4754
 20607 067e 9393     		str	r3, [sp, #588]
 20608              	.LVL1240:
 20609              		.loc 21 395 49 view .LVU4755
 20610              	.LBE11123:
 20611              	.LBE11124:
 20612              	.LBE11125:
 20613              	.LBE11126:
 20614              	.LBE11127:
 20615              	.LBB11128:
 20616              	.LBI11106:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20617              		.loc 18 214 7 is_stmt 1 view .LVU4756
 20618              	.LBB11112:
 20619              	.LBI11112:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 20620              		.loc 18 182 7 view .LVU4757
 20621              	.LBB11113:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20622              		.loc 18 183 26 is_stmt 0 view .LVU4758
 20623 0680 0423     		movs	r3, #4
 20624              	.LBE11113:
 20625              	.LBE11112:
 20626              	.LBE11128:
 20627              	.LBE11132:
 20628              	.LBE11136:
 20629              	.LBE11140:
 20630              	.LBE11144:
 20631              	.LBE11148:
 20632              	.LBE11165:
 20633              	.LBE11172:
 20634              	.LBE11230:
 20635              	.LBB11231:
 20636              	.LBB11219:
 20637              	.LBB11212:
 20638              	.LBB11201:
 20639              	.LBB11195:
 20640              	.LBB11189:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 20641              		.loc 26 105 57 view .LVU4759
 20642 0682 CDF88C80 		str	r8, [sp, #140]
 20643              	.LBE11189:
 20644              	.LBE11195:
 20645              	.LBE11201:
 20646              	.LBE11212:
 20647              	.LBE11219:
 20648              	.LBE11231:
 20649              	.LBB11232:
 20650              	.LBB11173:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 767


 20651              	.LBB11166:
 20652              	.LBB11149:
 20653              	.LBB11145:
 20654              	.LBB11141:
 20655              	.LBB11137:
 20656              	.LBB11133:
 20657              	.LBB11129:
 20658              	.LBB11115:
 20659              	.LBB11114:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20660              		.loc 18 183 26 view .LVU4760
 20661 0686 C4F8B830 		str	r3, [r4, #184]
 20662              	.LVL1241:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20663              		.loc 18 183 26 view .LVU4761
 20664              	.LBE11114:
 20665              	.LBE11115:
 20666              	.LBB11116:
 20667              	.LBI11107:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 20668              		.loc 21 321 7 is_stmt 1 view .LVU4762
 20669              	.LBB11110:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20670              		.loc 21 322 9 view .LVU4763
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20671              		.loc 21 322 9 is_stmt 0 view .LVU4764
 20672              	.LBE11110:
 20673              	.LBE11116:
 20674              	.LBE11129:
 20675              	.LBE11133:
 20676              	.LBE11137:
 20677              	.LBE11141:
 20678              	.LBE11145:
 20679              	.LBE11149:
 20680              	.LBE11166:
 20681              	.LBE11173:
 20682              	.LBE11232:
 20683              	.LBB11233:
 20684              	.LBI11233:
 20685              		.loc 19 162 7 is_stmt 1 view .LVU4765
 20686              	.LBB11234:
 20687              	.LBI11234:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20688              		.loc 20 89 7 view .LVU4766
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20689              		.loc 20 89 7 is_stmt 0 view .LVU4767
 20690              	.LBE11234:
 20691              	.LBE11233:
 20692              	.LBB11235:
 20693              	.LBI11235:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 20694              		.loc 34 76 5 is_stmt 1 view .LVU4768
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 20695              		.loc 34 76 5 is_stmt 0 view .LVU4769
 20696              	.LBE11235:
 20697              	.LBB11236:
 20698              	.LBI11178:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 768


 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20699              		.loc 26 572 7 is_stmt 1 view .LVU4770
 20700              	.LBB11220:
 20701              	.LBI11179:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20702              		.loc 26 308 7 view .LVU4771
 20703              	.LBB11213:
 20704              	.LBI11180:
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 20705              		.loc 26 143 2 view .LVU4772
 20706              	.LBB11202:
 20707              	.LBI11202:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20708              		.loc 34 101 5 view .LVU4773
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20709              		.loc 34 101 5 is_stmt 0 view .LVU4774
 20710              	.LBE11202:
 20711              	.LBB11203:
 20712              	.LBI11203:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20713              		.loc 19 147 7 is_stmt 1 view .LVU4775
 20714              	.LBB11204:
 20715              	.LBI11204:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20716              		.loc 20 82 7 view .LVU4776
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20717              		.loc 20 82 7 is_stmt 0 view .LVU4777
 20718              	.LBE11204:
 20719              	.LBE11203:
 20720              	.LBB11205:
 20721              	.LBI11205:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20722              		.loc 34 101 5 is_stmt 1 view .LVU4778
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20723              		.loc 34 101 5 is_stmt 0 view .LVU4779
 20724              	.LBE11205:
 20725              	.LBB11206:
 20726              	.LBI11181:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 20727              		.loc 26 102 2 is_stmt 1 view .LVU4780
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 20728              		.loc 26 102 2 is_stmt 0 view .LVU4781
 20729              	.LBE11206:
 20730              	.LBE11213:
 20731              	.LBE11220:
 20732              	.LBE11236:
 20733              	.LBE11576:
 20734              	.LBB11577:
 20735              	.LBI11577:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20736              		.loc 19 144 7 is_stmt 1 view .LVU4782
 20737              	.LBB11578:
 20738              	.LBI11578:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20739              		.loc 20 79 7 view .LVU4783
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20740              		.loc 20 79 7 is_stmt 0 view .LVU4784
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 769


 20741              	.LBE11578:
 20742              	.LBE11577:
 131:theory.h      ****     };
 20743              		.loc 41 131 57 view .LVU4785
 20744 068a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20745 068c 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 20746 068e 95E80700 		ldm	r5, {r0, r1, r2}
 20747 0692 02AB     		add	r3, sp, #8
 20748 0694 87E80700 		stm	r7, {r0, r1, r2}
 20749 0698 9CE80600 		ldm	ip, {r1, r2}
 20750 069c 1EA8     		add	r0, sp, #120
 20751 069e FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 20752              	.LVL1242:
 20753              		.loc 41 132 5 view .LVU4786
 20754 06a2 1EAA     		add	r2, sp, #120
 20755 06a4 4449     		ldr	r1, .L851+4
 20756 06a6 9AA8     		add	r0, sp, #616
 20757 06a8 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
 20758              	.LVL1243:
 20759              	.LBB11579:
 20760              	.LBI11579:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20761              		.loc 19 144 7 is_stmt 1 view .LVU4787
 20762              	.LBB11580:
 20763              	.LBI11580:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20764              		.loc 20 79 7 view .LVU4788
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20765              		.loc 20 79 7 is_stmt 0 view .LVU4789
 20766              	.LBE11580:
 20767              	.LBE11579:
 20768              	.LBB11581:
 20769              	.LBI11237:
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const _Compare& __comp = _Compare(),
 20770              		.loc 31 228 7 is_stmt 1 view .LVU4790
 20771              	.LBB11261:
 20772              	.LBI11261:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20773              		.loc 19 147 7 view .LVU4791
 20774              	.LBB11262:
 20775              	.LBI11262:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20776              		.loc 20 82 7 view .LVU4792
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20777              		.loc 20 82 7 is_stmt 0 view .LVU4793
 20778              	.LBE11262:
 20779              	.LBE11261:
 20780              	.LBB11263:
 20781              	.LBI11238:
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 20782              		.loc 29 938 7 is_stmt 1 view .LVU4794
 20783              	.LBB11256:
 20784              	.LBI11256:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20785              		.loc 19 157 2 view .LVU4795
 20786              	.LBB11257:
 20787              	.LBI11257:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 770


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20788              		.loc 20 79 7 view .LVU4796
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20789              		.loc 20 79 7 is_stmt 0 view .LVU4797
 20790              	.LBE11257:
 20791              	.LBE11256:
 20792              	.LBB11258:
 20793              	.LBI11239:
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 20794              		.loc 29 714 4 is_stmt 1 view .LVU4798
 20795              	.LBB11255:
 20796              	.LBB11250:
 20797              	.LBI11250:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20798              		.loc 34 101 5 view .LVU4799
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20799              		.loc 34 101 5 is_stmt 0 view .LVU4800
 20800              	.LBE11250:
 20801              	.LBB11251:
 20802              	.LBI11251:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20803              		.loc 19 147 7 is_stmt 1 view .LVU4801
 20804              	.LBB11252:
 20805              	.LBI11252:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20806              		.loc 20 82 7 view .LVU4802
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20807              		.loc 20 82 7 is_stmt 0 view .LVU4803
 20808              	.LBE11252:
 20809              	.LBE11251:
 20810              	.LBB11253:
 20811              	.LBI11253:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
 20812              		.loc 29 152 7 is_stmt 1 view .LVU4804
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
 20813              		.loc 29 152 7 is_stmt 0 view .LVU4805
 20814              	.LBE11253:
 20815              	.LBB11254:
 20816              	.LBI11241:
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 20817              		.loc 29 173 5 is_stmt 1 view .LVU4806
 20818              	.LBB11249:
 20819              	.LBB11248:
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 20820              		.loc 29 175 7 view .LVU4807
 20821              	.LBB11244:
 20822              	.LBB11245:
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 20823              		.loc 29 209 25 is_stmt 0 view .LVU4808
 20824 06ac 0AF10403 		add	r3, r10, #4
 20825              	.LBE11245:
 20826              	.LBE11244:
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 20827              		.loc 29 175 26 view .LVU4809
 20828 06b0 8AF80480 		strb	r8, [r10, #4]
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 20829              		.loc 29 176 7 is_stmt 1 view .LVU4810
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 771


 20830              	.LVL1244:
 20831              	.LBB11247:
 20832              	.LBI11244:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 20833              		.loc 29 206 5 view .LVU4811
 20834              	.LBB11246:
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
 20835              		.loc 29 208 7 view .LVU4812
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
 20836              		.loc 29 208 27 is_stmt 0 view .LVU4813
 20837 06b4 CAF80880 		str	r8, [r10, #8]
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 20838              		.loc 29 209 7 is_stmt 1 view .LVU4814
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 20839              		.loc 29 211 21 is_stmt 0 view .LVU4815
 20840 06b8 CAF81480 		str	r8, [r10, #20]
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_node_count = 0;
 20841              		.loc 29 210 26 view .LVU4816
 20842 06bc CAE90333 		strd	r3, r3, [r10, #12]
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 20843              		.loc 29 211 7 is_stmt 1 view .LVU4817
 20844              	.LVL1245:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 20845              		.loc 29 211 7 is_stmt 0 view .LVU4818
 20846              	.LBE11246:
 20847              	.LBE11247:
 20848              	.LBE11248:
 20849              	.LBE11249:
 20850              	.LBE11254:
 20851              	.LBE11255:
 20852              	.LBE11258:
 20853              	.LBB11259:
 20854              	.LBI11259:
 20855              		.loc 19 162 7 is_stmt 1 view .LVU4819
 20856              	.LBB11260:
 20857              	.LBI11260:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20858              		.loc 20 89 7 view .LVU4820
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20859              		.loc 20 89 7 is_stmt 0 view .LVU4821
 20860              	.LBE11260:
 20861              	.LBE11259:
 20862              	.LBE11263:
 20863              	.LBB11264:
 20864              	.LBI11264:
 20865              		.loc 19 162 7 is_stmt 1 view .LVU4822
 20866              	.LBB11265:
 20867              	.LBI11265:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20868              		.loc 20 89 7 view .LVU4823
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20869              		.loc 20 89 7 is_stmt 0 view .LVU4824
 20870              	.LBE11265:
 20871              	.LBE11264:
 20872              	.LBB11266:
 20873              	.LBI11266:
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 772


 20874              		.loc 36 75 7 is_stmt 1 view .LVU4825
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 20875              		.loc 36 75 7 is_stmt 0 view .LVU4826
 20876              	.LBE11266:
 20877              	.LBB11267:
 20878              	.LBI11267:
 20879              		.loc 36 79 7 is_stmt 1 view .LVU4827
 20880              		.loc 36 79 7 is_stmt 0 view .LVU4828
 20881              	.LBE11267:
 20882              	.LBB11268:
 20883              	.LBI11268:
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 20884              		.loc 29 1105 2 is_stmt 1 view .LVU4829
 20885              	.LBB11269:
 20886              	.LBB11270:
 20887              	.LBI11270:
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_t(__t) { }
 20888              		.loc 29 542 2 view .LVU4830
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_t(__t) { }
 20889              		.loc 29 542 2 is_stmt 0 view .LVU4831
 20890              	.LBE11270:
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 20891              		.loc 29 1108 19 is_stmt 1 view .LVU4832
 20892 06c0 26E0     		b	.L807
 20893              	.LVL1246:
 20894              	.L847:
 20895              	.LBB11271:
 20896              	.LBB11272:
 20897              	.LBB11273:
 20898              	.LBB11274:
 20899              	.LBB11275:
 20900              	.LBB11276:
 20901              	.LBB11277:
 20902              	.LBB11278:
 20903              	.LBB11279:
 20904              	.LBB11280:
 20905              	.LBB11281:
 20906              	.LBB11282:
 20907              	.LBB11283:
 20908              	.LBB11284:
 20909              	.LBB11285:
 20910              	.LBB11286:
 20911              	.LBB11287:
 20912              	.LBB11288:
 20913              	.LBB11289:
 20914              	.LBI11289:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 20915              		.loc 25 459 7 view .LVU4833
 20916              	.LBB11290:
 20917              	.LBI11290:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 20918              		.loc 20 103 7 view .LVU4834
 20919              	.LBB11291:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 20920              		.loc 20 105 2 is_stmt 0 view .LVU4835
 20921 06c2 484B     		ldr	r3, .L851+48
 20922 06c4 9F42     		cmp	r7, r3
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 773


 20923 06c6 00F2C882 		bhi	.L842
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 20924              		.loc 20 115 41 view .LVU4836
 20925 06ca 3846     		mov	r0, r7
 20926 06cc FFF7FEFF 		bl	_Znwj
 20927              	.LVL1247:
 20928 06d0 0346     		mov	r3, r0
 20929              	.LVL1248:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 20930              		.loc 20 115 41 view .LVU4837
 20931              	.LBE11291:
 20932              	.LBE11290:
 20933              	.LBE11289:
 20934              	.LBE11288:
 20935              	.LBE11287:
 20936              	.LBE11286:
 20937              	.LBE11285:
 20938              	.LBE11284:
 20939              	.LBB11322:
 20940              	.LBB11323:
 20941              	.LBB11324:
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 20942              		.loc 39 979 23 view .LVU4838
 20943 06d2 56E90310 		ldrd	r1, r0, [r6, #-12]
 20944              	.LBE11324:
 20945              	.LBE11323:
 20946              	.LBE11322:
 20947              	.LBB11326:
 20948              	.LBB11327:
 20949              	.LBB11328:
 20950              	.LBB11329:
 20951              	.LBB11330:
 20952              	.LBB11331:
 20953              	.LBB11332:
 20954              	.LBB11333:
 20955              	.LBB11334:
 20956              	.LBB11335:
 20957              	.LBB11336:
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 20958              		.loc 38 424 34 view .LVU4839
 20959 06d6 421A     		subs	r2, r0, r1
 20960              	.L804:
 20961              	.LVL1249:
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 20962              		.loc 38 424 34 view .LVU4840
 20963              	.LBE11336:
 20964              	.LBE11335:
 20965              	.LBE11334:
 20966              	.LBE11333:
 20967              	.LBE11332:
 20968              	.LBE11331:
 20969              	.LBE11330:
 20970              	.LBE11329:
 20971              	.LBE11328:
 20972              	.LBE11327:
 20973              	.LBE11326:
 20974              	.LBB11366:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 774


 20975              	.LBB11306:
 20976              	.LBB11300:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20977              		.loc 26 363 59 view .LVU4841
 20978 06d8 1F44     		add	r7, r7, r3
 20979              	.LVL1250:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20980              		.loc 26 363 59 view .LVU4842
 20981              	.LBE11300:
 20982              	.LBE11306:
 20983              	.LBE11366:
 20984              	.LBB11367:
 20985              	.LBB11363:
 20986              	.LBB11360:
 20987              	.LBB11357:
 20988              	.LBB11354:
 20989              	.LBB11351:
 20990              	.LBB11348:
 20991              	.LBB11345:
 20992              	.LBB11342:
 20993              	.LBB11339:
 20994              	.LBB11337:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 20995              		.loc 38 425 4 view .LVU4843
 20996 06da 8842     		cmp	r0, r1
 20997              	.LBE11337:
 20998              	.LBE11339:
 20999              	.LBE11342:
 21000              	.LBE11345:
 21001              	.LBE11348:
 21002              	.LBE11351:
 21003              	.LBE11354:
 21004              	.LBE11357:
 21005              	.LBE11360:
 21006              	.LBE11363:
 21007              	.LBE11367:
 21008              	.LBB11368:
 21009              	.LBB11307:
 21010              	.LBB11301:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 21011              		.loc 26 363 34 view .LVU4844
 21012 06dc 2F63     		str	r7, [r5, #48]
 21013              	.LVL1251:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 21014              		.loc 26 363 34 view .LVU4845
 21015              	.LBE11301:
 21016              	.LBE11307:
 21017              	.LBE11368:
 21018              	.LBB11369:
 21019              	.LBI11369:
 21020              		.loc 19 162 7 is_stmt 1 view .LVU4846
 21021              	.LBB11370:
 21022              	.LBI11370:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21023              		.loc 20 89 7 view .LVU4847
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21024              		.loc 20 89 7 is_stmt 0 view .LVU4848
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 775


 21025              	.LBE11370:
 21026              	.LBE11369:
 21027              	.LBB11371:
 21028              	.LBI11371:
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 21029              		.loc 26 820 7 is_stmt 1 view .LVU4849
 21030              	.LBB11372:
 21031              	.LBI11372:
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 21032              		.loc 39 978 7 view .LVU4850
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 21033              		.loc 39 978 7 is_stmt 0 view .LVU4851
 21034              	.LBE11372:
 21035              	.LBE11371:
 21036              	.LBB11373:
 21037              	.LBI11322:
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 21038              		.loc 26 838 7 is_stmt 1 view .LVU4852
 21039              	.LBB11325:
 21040              	.LBI11323:
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 21041              		.loc 39 978 7 view .LVU4853
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 21042              		.loc 39 978 7 is_stmt 0 view .LVU4854
 21043              	.LBE11325:
 21044              	.LBE11373:
 21045              	.LBB11374:
 21046              	.LBI11374:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21047              		.loc 26 276 7 is_stmt 1 view .LVU4855
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21048              		.loc 26 276 7 is_stmt 0 view .LVU4856
 21049              	.LBE11374:
 21050              	.LBB11375:
 21051              	.LBI11326:
 21052              		.loc 37 323 5 is_stmt 1 view .LVU4857
 21053              	.LBB11364:
 21054              	.LBI11327:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 21055              		.loc 37 125 5 view .LVU4858
 21056              	.LBB11361:
 21057              	.LBB11358:
 21058              	.LBI11329:
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 21059              		.loc 37 107 9 view .LVU4859
 21060              	.LBB11355:
 21061              	.LBI11330:
 21062              		.loc 38 560 5 view .LVU4860
 21063              	.LBB11352:
 21064              	.LBI11331:
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 21065              		.loc 38 511 5 view .LVU4861
 21066              	.LBB11349:
 21067              	.LBI11332:
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 21068              		.loc 38 505 5 view .LVU4862
 21069              	.LBB11346:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 776


 21070              	.LBI11333:
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 21071              		.loc 38 463 5 view .LVU4863
 21072              	.LBB11343:
 21073              	.LBB11340:
 21074              	.LBI11335:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 21075              		.loc 38 415 2 view .LVU4864
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 21076              		.loc 38 415 2 is_stmt 0 view .LVU4865
 21077              	.LBE11340:
 21078              	.LBE11343:
 21079              	.LBE11346:
 21080              	.LBE11349:
 21081              	.LBE11352:
 21082              	.LBE11355:
 21083              	.LBE11358:
 21084              	.LBE11361:
 21085              	.LBE11364:
 21086              	.LBE11375:
 21087              	.LBB11376:
 21088              	.LBB11308:
 21089              	.LBB11302:
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 21090              		.loc 26 362 26 view .LVU4866
 21091 06de C5E90A33 		strd	r3, r3, [r5, #40]
 21092              	.LVL1252:
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 21093              		.loc 26 362 26 view .LVU4867
 21094              	.LBE11302:
 21095              	.LBE11308:
 21096              	.LBE11376:
 21097              	.LBB11377:
 21098              	.LBB11365:
 21099              	.LBB11362:
 21100              	.LBB11359:
 21101              	.LBB11356:
 21102              	.LBB11353:
 21103              	.LBB11350:
 21104              	.LBB11347:
 21105              	.LBB11344:
 21106              	.LBB11341:
 21107              	.LBB11338:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 21108              		.loc 38 425 4 view .LVU4868
 21109 06e2 05D0     		beq	.L806
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 21110              		.loc 38 426 23 view .LVU4869
 21111 06e4 1846     		mov	r0, r3
 21112 06e6 0192     		str	r2, [sp, #4]
 21113 06e8 FFF7FEFF 		bl	memmove
 21114              	.LVL1253:
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 21115              		.loc 38 426 23 view .LVU4870
 21116 06ec 019A     		ldr	r2, [sp, #4]
 21117 06ee 0346     		mov	r3, r0
 21118              	.L806:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 777


 21119              	.LVL1254:
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 21120              		.loc 38 427 22 view .LVU4871
 21121 06f0 1344     		add	r3, r3, r2
 21122              	.LBE11338:
 21123              	.LBE11341:
 21124              	.LBE11344:
 21125              	.LBE11347:
 21126              	.LBE11350:
 21127              	.LBE11353:
 21128              	.LBE11356:
 21129              	.LBE11359:
 21130              	.LBE11362:
 21131              	.LBE11365:
 21132              	.LBE11377:
 21133              	.LBE11283:
 21134              	.LBE11282:
 21135              	.LBE11281:
 21136              	.LBE11280:
 21137              	.LBE11279:
 21138              	.LBE11278:
 21139              	.LBE11277:
 21140              	.LBE11276:
 21141              	.LBE11275:
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      this->_M_impl._M_header);
 21142              		.loc 29 1818 31 view .LVU4872
 21143 06f2 2946     		mov	r1, r5
 21144 06f4 4A46     		mov	r2, r9
 21145 06f6 4046     		mov	r0, r8
 21146              	.LBB11519:
 21147              	.LBB11514:
 21148              	.LBB11509:
 21149              	.LBB11500:
 21150              	.LBB11493:
 21151              	.LBB11489:
 21152              	.LBB11486:
 21153              	.LBB11392:
 21154              	.LBB11389:
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 21155              		.loc 26 557 26 view .LVU4873
 21156 06f8 EB62     		str	r3, [r5, #44]
 21157              	.LVL1255:
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 21158              		.loc 26 557 26 view .LVU4874
 21159              	.LBE11389:
 21160              	.LBE11392:
 21161              	.LBE11486:
 21162              	.LBE11489:
 21163              	.LBE11493:
 21164              	.LBE11500:
 21165              	.LBE11509:
 21166              	.LBE11514:
 21167              	.LBE11519:
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      this->_M_impl._M_header);
 21168              		.loc 29 1818 31 view .LVU4875
 21169 06fa 3B4B     		ldr	r3, .L851+52
 21170 06fc FFF7FEFF 		bl	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 778


 21171              	.LVL1256:
1820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return iterator(__z);
 21172              		.loc 29 1820 2 view .LVU4876
 21173 0700 DAF81430 		ldr	r3, [r10, #20]
 21174 0704 0133     		adds	r3, r3, #1
 21175 0706 CAF81430 		str	r3, [r10, #20]
 21176              	.LVL1257:
 21177              	.LBB11520:
 21178              	.LBI11520:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 21179              		.loc 29 273 7 is_stmt 1 view .LVU4877
 21180              	.L795:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 21181              		.loc 29 273 7 is_stmt 0 view .LVU4878
 21182              	.LBE11520:
 21183              	.LBE11274:
 21184              	.LBE11273:
 21185              	.LBE11272:
 21186              	.LBE11271:
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 21187              		.loc 29 1108 4 is_stmt 1 view .LVU4879
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 21188              		.loc 29 1108 19 view .LVU4880
 21189 070a 2436     		adds	r6, r6, #36
 21190              	.LVL1258:
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 21191              		.loc 29 1108 19 is_stmt 0 view .LVU4881
 21192 070c B345     		cmp	fp, r6
 21193 070e 6FD0     		beq	.L843
 21194              	.LVL1259:
 21195              	.L807:
 21196              	.LBB11547:
 21197              	.LBI11547:
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
 21198              		.loc 29 1010 7 is_stmt 1 view .LVU4882
 21199              	.LBB11548:
 21200              	.LBI11548:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 21201              		.loc 29 273 7 view .LVU4883
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 21202              		.loc 29 273 7 is_stmt 0 view .LVU4884
 21203              	.LBE11548:
 21204              	.LBE11547:
 21205              	.LBB11549:
 21206              	.LBI11549:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__it._M_node) { }
 21207              		.loc 29 350 7 is_stmt 1 view .LVU4885
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__it._M_node) { }
 21208              		.loc 29 350 7 is_stmt 0 view .LVU4886
 21209              	.LBE11549:
 21210              	.LBB11550:
 21211              	.LBI11271:
2245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg, typename _NodeGen>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 779


2250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _NodeGen>
2252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 21212              		.loc 29 2254 7 is_stmt 1 view .LVU4887
 21213              	.LBB11543:
2255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_unique_(const_iterator __position,
2256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_Arg&& __v,
2258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			const _Val& __v,
2260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_NodeGen& __node_gen)
2262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
2264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 21214              		.loc 29 2264 33 is_stmt 0 view .LVU4888
 21215 0710 354A     		ldr	r2, .L851+52
 21216 0712 A6F12403 		sub	r3, r6, #36
 21217              	.LVL1260:
 21218              		.loc 29 2264 33 view .LVU4889
 21219 0716 1CA8     		add	r0, sp, #112
 21220 0718 111F     		subs	r1, r2, #4
 21221 071a FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 21222              	.LVL1261:
 21223              		.loc 29 2264 33 view .LVU4890
 21224 071e DDF87490 		ldr	r9, [sp, #116]
 21225              	.LVL1262:
2265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__res.second)
 21226              		.loc 29 2266 7 view .LVU4891
 21227 0722 B9F1000F 		cmp	r9, #0
 21228 0726 F0D0     		beq	.L795
 21229              	.LVL1263:
 21230              	.LBB11539:
 21231              	.LBI11273:
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
 21232              		.loc 29 1803 7 is_stmt 1 view .LVU4892
 21233              	.LBB11535:
 21234              	.LBB11521:
 21235              	.LBI11521:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 21236              		.loc 29 759 7 view .LVU4893
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 21237              		.loc 29 759 7 is_stmt 0 view .LVU4894
 21238              	.LBE11521:
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 21239              		.loc 29 1812 33 view .LVU4895
 21240 0728 2F4A     		ldr	r2, .L851+52
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							_S_key(__p)));
 21241              		.loc 29 1813 10 view .LVU4896
 21242 072a 1C9B     		ldr	r3, [sp, #112]
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 21243              		.loc 29 1812 33 view .LVU4897
 21244 072c A9EB0208 		sub	r8, r9, r2
 21245 0730 B8FA88F8 		clz	r8, r8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 780


 21246 0734 4FEA5818 		lsr	r8, r8, #5
 21247 0738 002B     		cmp	r3, #0
 21248 073a 18BF     		it	ne
 21249 073c 48F00108 		orrne	r8, r8, #1
 21250 0740 B8F1000F 		cmp	r8, #0
 21251 0744 00F07582 		beq	.L844
 21252              	.L796:
 21253              	.LVL1264:
 21254              	.LBB11522:
 21255              	.LBI11275:
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 21256              		.loc 29 550 4 is_stmt 1 view .LVU4898
 21257              	.LBB11515:
 21258              	.LBI11276:
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 21259              		.loc 29 632 2 view .LVU4899
 21260              	.LBB11510:
 21261              	.LBB11501:
 21262              	.LBI11501:
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 21263              		.loc 29 583 7 view .LVU4900
 21264              	.LBB11502:
 21265              	.LBI11502:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 21266              		.loc 25 459 7 view .LVU4901
 21267              	.LBB11503:
 21268              	.LBI11503:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 21269              		.loc 20 103 7 view .LVU4902
 21270              	.LBB11504:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 21271              		.loc 20 115 41 is_stmt 0 view .LVU4903
 21272 0748 3420     		movs	r0, #52
 21273 074a FFF7FEFF 		bl	_Znwj
 21274              	.LVL1265:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 21275              		.loc 20 115 41 view .LVU4904
 21276 074e 0546     		mov	r5, r0
 21277              	.LVL1266:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 21278              		.loc 20 115 41 view .LVU4905
 21279              	.LBE11504:
 21280              	.LBE11503:
 21281              	.LBE11502:
 21282              	.LBE11501:
 21283              	.LBB11505:
 21284              	.LBI11278:
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 21285              		.loc 29 613 2 is_stmt 1 view .LVU4906
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 21286              		.loc 29 613 2 is_stmt 0 view .LVU4907
 21287              	.LBE11505:
 21288              	.LBE11510:
 21289              	.LBE11515:
 21290              	.LBE11522:
 21291              	.LBE11535:
 21292              	.LBE11539:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 781


 21293              	.LBE11543:
 21294              	.LBE11550:
 21295              	.LBE11269:
 21296              	.LBE11268:
 21297              	.LBE11581:
 21298              		.loc 23 175 3 is_stmt 1 view .LVU4908
 21299              	.LBB11582:
 21300              	.LBB11557:
 21301              	.LBB11554:
 21302              	.LBB11551:
 21303              	.LBB11544:
 21304              	.LBB11540:
 21305              	.LBB11536:
 21306              	.LBB11523:
 21307              	.LBB11516:
 21308              	.LBB11511:
 21309              	.LBB11506:
 21310              	.LBB11494:
 21311              	.LBI11494:
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_storage._M_ptr(); }
 21312              		.loc 29 234 7 view .LVU4909
 21313              	.LBB11495:
 21314              	.LBI11495:
 21315              		.file 42 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alig
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Aligned memory buffer -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Copyright (C) 2013-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** /** @file ext/aligned_buffer.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #ifndef _ALIGNED_BUFFER_H
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #define _ALIGNED_BUFFER_H 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #pragma GCC system_header
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 782


  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #if __cplusplus >= 201103L
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** # include <type_traits>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #else
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** # include <bits/c++0x_warning.h>
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #endif
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** namespace __gnu_cxx
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** {
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // A utility type containing a POD object that can hold an object of type
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // _Tp initialized via placement new or allocator_traits::construct.
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // Intended for use as a data member subobject, use __aligned_buffer for
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // complete objects.
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   template<typename _Tp>
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****     struct __aligned_membuf
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****     {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // Target macro ADJUST_FIELD_ALIGN can produce different alignment for
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // types when used as class members. __aligned_membuf is intended
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // for use as a class member, so align the buffer as for a class member.
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // Since GCC 8 we could just use alignof(_Tp) instead, but older
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // versions of non-GNU compilers might still need this trick.
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       struct _Tp2 { _Tp _M_t; };
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       alignas(__alignof__(_Tp2::_M_t)) unsigned char _M_storage[sizeof(_Tp)];
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       __aligned_membuf() = default;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // Can be used to avoid value-initialization zeroing _M_storage.
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       __aligned_membuf(std::nullptr_t) { }
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       void*
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _M_addr() noexcept
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       const void*
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _M_addr() const noexcept
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<const void*>(&_M_storage); }
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _Tp*
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _M_ptr() noexcept
 21316              		.loc 42 72 7 view .LVU4910
 21317              	.LBB11496:
 21318              	.LBI11496:
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 21319              		.loc 42 64 7 view .LVU4911
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 21320              		.loc 42 64 7 is_stmt 0 view .LVU4912
 21321              	.LBE11496:
 21322              	.LBE11495:
 21323              	.LBE11494:
 21324              	.LBB11497:
 21325              	.LBI11279:
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 21326              		.loc 25 507 2 is_stmt 1 view .LVU4913
 21327              	.LBB11490:
 21328              	.LBI11280:
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 21329              		.loc 20 148 2 view .LVU4914
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 783


 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 21330              		.loc 20 148 2 is_stmt 0 view .LVU4915
 21331              	.LBE11490:
 21332              	.LBE11497:
 21333              	.LBE11506:
 21334              	.LBE11511:
 21335              	.LBE11516:
 21336              	.LBE11523:
 21337              	.LBE11536:
 21338              	.LBE11540:
 21339              	.LBE11544:
 21340              	.LBE11551:
 21341              	.LBE11554:
 21342              	.LBE11557:
 21343              	.LBE11582:
 21344              		.loc 23 175 3 is_stmt 1 view .LVU4916
 21345              	.LBB11583:
 21346              	.LBB11558:
 21347              	.LBB11555:
 21348              	.LBB11552:
 21349              	.LBB11545:
 21350              	.LBB11541:
 21351              	.LBB11537:
 21352              	.LBB11524:
 21353              	.LBB11517:
 21354              	.LBB11512:
 21355              	.LBB11507:
 21356              	.LBB11498:
 21357              	.LBB11491:
 21358              	.LBB11487:
 21359              	.LBI11281:
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 21360              		.loc 30 314 17 view .LVU4917
 21361              	.LBB11393:
 21362              	.LBI11393:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 21363              		.loc 18 448 7 view .LVU4918
 21364              	.LBB11394:
 21365              	.LBB11395:
 21366              	.LBI11395:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21367              		.loc 18 190 7 view .LVU4919
 21368              	.LBB11396:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 21369              		.loc 18 193 51 is_stmt 0 view .LVU4920
 21370 0750 1830     		adds	r0, r0, #24
 21371              	.LVL1267:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 21372              		.loc 18 193 51 view .LVU4921
 21373              	.LBE11396:
 21374              	.LBE11395:
 21375              	.LBB11397:
 21376              	.LBI11397:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 21377              		.loc 18 290 7 is_stmt 1 view .LVU4922
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 21378              		.loc 18 290 7 is_stmt 0 view .LVU4923
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 784


 21379              	.LBE11397:
 21380              	.LBB11398:
 21381              	.LBI11398:
 21382              		.loc 35 97 29 is_stmt 1 view .LVU4924
 21383              	.LBB11399:
 21384              	.LBI11399:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 21385              		.loc 25 558 7 view .LVU4925
 21386              	.LBB11400:
 21387              	.LBI11400:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21388              		.loc 19 147 7 view .LVU4926
 21389              	.LBB11401:
 21390              	.LBI11401:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21391              		.loc 20 82 7 view .LVU4927
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21392              		.loc 20 82 7 is_stmt 0 view .LVU4928
 21393              	.LBE11401:
 21394              	.LBE11400:
 21395              	.LBE11399:
 21396              	.LBE11398:
 21397              	.LBB11402:
 21398              	.LBI11402:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 21399              		.loc 18 159 2 is_stmt 1 view .LVU4929
 21400              	.LBB11403:
 21401              	.LBB11404:
 21402              	.LBI11404:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 21403              		.loc 34 101 5 view .LVU4930
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 21404              		.loc 34 101 5 is_stmt 0 view .LVU4931
 21405              	.LBE11404:
 21406              	.LBB11405:
 21407              	.LBI11405:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21408              		.loc 19 147 7 is_stmt 1 view .LVU4932
 21409              	.LBB11406:
 21410              	.LBI11406:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21411              		.loc 20 82 7 view .LVU4933
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21412              		.loc 20 82 7 is_stmt 0 view .LVU4934
 21413              	.LBE11406:
 21414              	.LBE11405:
 21415              	.LBE11403:
 21416              	.LBE11402:
 21417              	.LBB11408:
 21418              	.LBB11409:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21419              		.loc 18 908 16 view .LVU4935
 21420 0752 56E90937 		ldrd	r3, r7, [r6, #-36]
 21421              	.LBE11409:
 21422              	.LBE11408:
 21423              	.LBB11410:
 21424              	.LBB11407:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 785


 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 21425              		.loc 18 160 46 view .LVU4936
 21426 0756 2861     		str	r0, [r5, #16]
 21427              	.LVL1268:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 21428              		.loc 18 160 46 view .LVU4937
 21429              	.LBE11407:
 21430              	.LBE11410:
 21431              	.LBB11411:
 21432              	.LBI11411:
 21433              		.loc 19 162 7 is_stmt 1 view .LVU4938
 21434              	.LBB11412:
 21435              	.LBI11412:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21436              		.loc 20 89 7 view .LVU4939
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21437              		.loc 20 89 7 is_stmt 0 view .LVU4940
 21438              	.LBE11412:
 21439              	.LBE11411:
 21440              	.LBB11413:
 21441              	.LBI11413:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21442              		.loc 18 186 7 is_stmt 1 view .LVU4941
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21443              		.loc 18 186 7 is_stmt 0 view .LVU4942
 21444              	.LBE11413:
 21445              	.LBB11414:
 21446              	.LBI11414:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21447              		.loc 18 186 7 is_stmt 1 view .LVU4943
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21448              		.loc 18 186 7 is_stmt 0 view .LVU4944
 21449              	.LBE11414:
 21450              	.LBB11415:
 21451              	.LBI11408:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 21452              		.loc 18 907 7 is_stmt 1 view .LVU4945
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 21453              		.loc 18 907 7 is_stmt 0 view .LVU4946
 21454              	.LBE11415:
 21455              	.LBB11416:
 21456              	.LBI11416:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 21457              		.loc 18 263 9 is_stmt 1 view .LVU4947
 21458              	.LBB11417:
 21459              	.LBB11418:
 21460              	.LBI11418:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 21461              		.loc 18 243 9 view .LVU4948
 21462              	.LBB11419:
 21463              	.LBB11420:
 21464              	.LBI11420:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 21465              		.loc 22 206 7 view .LVU4949
 21466              	.LBB11421:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 21467              		.loc 22 211 42 is_stmt 0 view .LVU4950
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 786


 21468 0758 FB42     		cmn	r3, r7
 21469 075a 02D0     		beq	.L799
 21470 075c 002B     		cmp	r3, #0
 21471 075e 00F07E82 		beq	.L845
 21472              	.L799:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 21473              		.loc 22 217 2 view .LVU4951
 21474 0762 0F2F     		cmp	r7, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 21475              		.loc 22 215 12 view .LVU4952
 21476 0764 0997     		str	r7, [sp, #36]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 21477              		.loc 22 217 2 view .LVU4953
 21478 0766 13D8     		bhi	.L846
 21479              	.LVL1269:
 21480              	.LBB11422:
 21481              	.LBI11422:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21482              		.loc 18 186 7 is_stmt 1 view .LVU4954
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21483              		.loc 18 186 7 is_stmt 0 view .LVU4955
 21484              	.LBE11422:
 21485              	.LBB11423:
 21486              	.LBI11423:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 21487              		.loc 18 392 7 is_stmt 1 view .LVU4956
 21488              	.LBB11424:
 21489              	.LBI11424:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21490              		.loc 18 346 7 view .LVU4957
 21491              	.LBB11425:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 21492              		.loc 18 348 2 is_stmt 0 view .LVU4958
 21493 0768 012F     		cmp	r7, #1
 21494 076a 0ED1     		bne	.L802
 21495              	.LVL1270:
 21496              	.LBB11426:
 21497              	.LBI11426:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 21498              		.loc 21 321 7 is_stmt 1 view .LVU4959
 21499              	.LBB11427:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21500              		.loc 21 322 9 view .LVU4960
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21501              		.loc 21 322 16 is_stmt 0 view .LVU4961
 21502 076c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21503              	.LVL1271:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21504              		.loc 21 322 14 view .LVU4962
 21505 076e 2B76     		strb	r3, [r5, #24]
 21506              	.LVL1272:
 21507              	.L803:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21508              		.loc 21 322 14 view .LVU4963
 21509              	.LBE11427:
 21510              	.LBE11426:
 21511              	.LBE11425:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 787


 21512              	.LBE11424:
 21513              	.LBE11423:
 21514              	.LBB11443:
 21515              	.LBI11443:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21516              		.loc 18 214 7 is_stmt 1 view .LVU4964
 21517              	.LBB11444:
 21518              	.LBB11445:
 21519              	.LBI11445:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 21520              		.loc 18 182 7 view .LVU4965
 21521              	.LBE11445:
 21522              	.LBB11447:
 21523              	.LBB11448:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21524              		.loc 21 322 14 is_stmt 0 view .LVU4966
 21525 0770 0023     		movs	r3, #0
 21526              	.LBE11448:
 21527              	.LBE11447:
 21528              	.LBB11450:
 21529              	.LBB11446:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21530              		.loc 18 183 26 view .LVU4967
 21531 0772 6F61     		str	r7, [r5, #20]
 21532              	.LVL1273:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21533              		.loc 18 183 26 view .LVU4968
 21534              	.LBE11446:
 21535              	.LBE11450:
 21536              	.LBB11451:
 21537              	.LBI11451:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21538              		.loc 18 186 7 is_stmt 1 view .LVU4969
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21539              		.loc 18 186 7 is_stmt 0 view .LVU4970
 21540              	.LBE11451:
 21541              	.LBB11453:
 21542              	.LBI11447:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 21543              		.loc 21 321 7 is_stmt 1 view .LVU4971
 21544              	.LBB11449:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21545              		.loc 21 322 9 view .LVU4972
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21546              		.loc 21 322 14 is_stmt 0 view .LVU4973
 21547 0774 C355     		strb	r3, [r0, r7]
 21548              	.LVL1274:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21549              		.loc 21 322 14 view .LVU4974
 21550              	.LBE11449:
 21551              	.LBE11453:
 21552              	.LBE11444:
 21553              	.LBE11443:
 21554              	.LBE11421:
 21555              	.LBE11420:
 21556              	.LBE11419:
 21557              	.LBE11418:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 788


 21558              	.LBE11417:
 21559              	.LBE11416:
 21560              	.LBE11394:
 21561              	.LBE11393:
 21562              	.LBB11482:
 21563              	.LBI11282:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 21564              		.loc 26 553 7 is_stmt 1 view .LVU4975
 21565              	.LBB11390:
 21566              	.LBB11378:
 21567              	.LBI11378:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 21568              		.loc 26 918 7 view .LVU4976
 21569              	.LBE11378:
 21570              	.LBB11380:
 21571              	.LBB11309:
 21572              	.LBB11310:
 21573              	.LBB11311:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 21574              		.loc 26 98 47 is_stmt 0 view .LVU4977
 21575 0776 2B63     		str	r3, [r5, #48]
 21576              	.LBE11311:
 21577              	.LBE11310:
 21578              	.LBE11309:
 21579              	.LBE11380:
 21580              	.LBB11381:
 21581              	.LBB11379:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21582              		.loc 26 919 66 view .LVU4978
 21583 0778 56E90310 		ldrd	r1, r0, [r6, #-12]
 21584              	.LVL1275:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21585              		.loc 26 919 66 view .LVU4979
 21586              	.LBE11379:
 21587              	.LBE11381:
 21588              	.LBB11382:
 21589              	.LBI11382:
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21590              		.loc 26 280 7 is_stmt 1 view .LVU4980
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21591              		.loc 26 280 7 is_stmt 0 view .LVU4981
 21592              	.LBE11382:
 21593              	.LBB11383:
 21594              	.LBI11383:
 21595              		.loc 35 97 29 is_stmt 1 view .LVU4982
 21596              	.LBB11384:
 21597              	.LBI11384:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 21598              		.loc 25 558 7 view .LVU4983
 21599              	.LBB11385:
 21600              	.LBI11385:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21601              		.loc 19 147 7 view .LVU4984
 21602              	.LBB11386:
 21603              	.LBI11386:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21604              		.loc 20 82 7 view .LVU4985
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 789


  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21605              		.loc 20 82 7 is_stmt 0 view .LVU4986
 21606              	.LBE11386:
 21607              	.LBE11385:
 21608              	.LBE11384:
 21609              	.LBE11383:
 21610              	.LBB11387:
 21611              	.LBI11284:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 21612              		.loc 26 303 7 is_stmt 1 view .LVU4987
 21613              	.LBB11317:
 21614              	.LBI11309:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 21615              		.loc 26 136 2 view .LVU4988
 21616              	.LBB11313:
 21617              	.LBI11313:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21618              		.loc 19 147 7 view .LVU4989
 21619              	.LBB11314:
 21620              	.LBI11314:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21621              		.loc 20 82 7 view .LVU4990
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21622              		.loc 20 82 7 is_stmt 0 view .LVU4991
 21623              	.LBE11314:
 21624              	.LBE11313:
 21625              	.LBB11315:
 21626              	.LBI11310:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 21627              		.loc 26 97 2 is_stmt 1 view .LVU4992
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 21628              		.loc 26 97 2 is_stmt 0 view .LVU4993
 21629              	.LBE11315:
 21630              	.LBE11317:
 21631              	.LBB11318:
 21632              	.LBI11285:
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 21633              		.loc 26 359 7 is_stmt 1 view .LVU4994
 21634              	.LBB11303:
 21635              	.LBB11297:
 21636              	.LBI11287:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 21637              		.loc 26 343 7 view .LVU4995
 21638              	.LBE11297:
 21639              	.LBE11303:
 21640              	.LBE11318:
 21641              	.LBB11319:
 21642              	.LBB11316:
 21643              	.LBB11312:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 21644              		.loc 26 98 47 is_stmt 0 view .LVU4996
 21645 077c C5E90A33 		strd	r3, r3, [r5, #40]
 21646              	.LBE11312:
 21647              	.LBE11316:
 21648              	.LBE11319:
 21649              	.LBB11320:
 21650              	.LBB11304:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 790


 21651              	.LBB11298:
 21652              	.LBB11295:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 21653              		.loc 26 346 18 view .LVU4997
 21654 0780 471A     		subs	r7, r0, r1
 21655              	.LVL1276:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 21656              		.loc 26 346 18 view .LVU4998
 21657 0782 9ED1     		bne	.L847
 21658 0784 3A46     		mov	r2, r7
 21659 0786 3B46     		mov	r3, r7
 21660 0788 A6E7     		b	.L804
 21661              	.LVL1277:
 21662              	.L802:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 21663              		.loc 26 346 18 view .LVU4999
 21664              	.LBE11295:
 21665              	.LBE11298:
 21666              	.LBE11304:
 21667              	.LBE11320:
 21668              	.LBE11387:
 21669              	.LBE11390:
 21670              	.LBE11482:
 21671              	.LBB11483:
 21672              	.LBB11480:
 21673              	.LBB11478:
 21674              	.LBB11476:
 21675              	.LBB11474:
 21676              	.LBB11472:
 21677              	.LBB11470:
 21678              	.LBB11468:
 21679              	.LBB11456:
 21680              	.LBB11440:
 21681              	.LBB11437:
 21682              	.LBB11428:
 21683              	.LBI11428:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21684              		.loc 18 346 7 is_stmt 1 view .LVU5000
 21685              	.LBB11429:
 21686              	.LBI11429:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 21687              		.loc 21 387 7 view .LVU5001
 21688              	.LBB11430:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 21689              		.loc 21 389 2 view .LVU5002
 21690 078a 002F     		cmp	r7, #0
 21691 078c F0D0     		beq	.L803
 21692 078e 0AE0     		b	.L801
 21693              	.LVL1278:
 21694              	.L846:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 21695              		.loc 21 389 2 is_stmt 0 view .LVU5003
 21696              	.LBE11430:
 21697              	.LBE11429:
 21698              	.LBE11428:
 21699              	.LBE11437:
 21700              	.LBE11440:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 791


 21701              	.LBE11456:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 21702              		.loc 22 219 13 view .LVU5004
 21703 0790 0022     		movs	r2, #0
 21704 0792 09A9     		add	r1, sp, #36
 21705 0794 05F11000 		add	r0, r5, #16
 21706 0798 0193     		str	r3, [sp, #4]
 21707 079a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 21708              	.LVL1279:
 21709              	.LBB11457:
 21710              	.LBI11457:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 21711              		.loc 18 178 7 is_stmt 1 view .LVU5005
 21712              	.LBE11457:
 21713              	.LBB11459:
 21714              	.LBB11460:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21715              		.loc 18 211 31 is_stmt 0 view .LVU5006
 21716 079e 099A     		ldr	r2, [sp, #36]
 21717 07a0 019B     		ldr	r3, [sp, #4]
 21718              	.LBE11460:
 21719              	.LBE11459:
 21720              	.LBB11462:
 21721              	.LBB11458:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21722              		.loc 18 179 26 view .LVU5007
 21723 07a2 2861     		str	r0, [r5, #16]
 21724              	.LVL1280:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21725              		.loc 18 179 26 view .LVU5008
 21726              	.LBE11458:
 21727              	.LBE11462:
 21728              	.LBB11463:
 21729              	.LBI11459:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 21730              		.loc 18 210 7 is_stmt 1 view .LVU5009
 21731              	.LBB11461:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21732              		.loc 18 211 31 is_stmt 0 view .LVU5010
 21733 07a4 AA61     		str	r2, [r5, #24]
 21734              	.LVL1281:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21735              		.loc 18 211 31 view .LVU5011
 21736              	.LBE11461:
 21737              	.LBE11463:
 21738              	.LBB11464:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21739              		.loc 18 186 7 is_stmt 1 view .LVU5012
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21740              		.loc 18 186 7 is_stmt 0 view .LVU5013
 21741              	.LBE11464:
 21742              	.LBB11465:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 21743              		.loc 18 392 7 is_stmt 1 view .LVU5014
 21744              	.LBB11441:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21745              		.loc 18 346 7 view .LVU5015
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 792


 21746              	.LBB11438:
 21747              	.LBB11435:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21748              		.loc 18 346 7 view .LVU5016
 21749              	.LBB11433:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 21750              		.loc 21 387 7 view .LVU5017
 21751              	.LBB11431:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 21752              		.loc 21 389 2 view .LVU5018
 21753              	.L801:
 21754              		.loc 21 395 2 view .LVU5019
 21755              		.loc 21 395 49 is_stmt 0 view .LVU5020
 21756 07a6 3A46     		mov	r2, r7
 21757 07a8 1946     		mov	r1, r3
 21758 07aa FFF7FEFF 		bl	memcpy
 21759              	.LVL1282:
 21760              		.loc 21 395 49 view .LVU5021
 21761              	.LBE11431:
 21762              	.LBE11433:
 21763              	.LBE11435:
 21764              	.LBE11438:
 21765              	.LBE11441:
 21766              	.LBE11465:
 21767              		.loc 22 232 15 view .LVU5022
 21768 07ae 099F     		ldr	r7, [sp, #36]
 21769              	.LVL1283:
 21770              	.LBB11466:
 21771              	.LBB11455:
 21772              	.LBB11454:
 21773              	.LBB11452:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21774              		.loc 18 187 28 view .LVU5023
 21775 07b0 2869     		ldr	r0, [r5, #16]
 21776              	.LBE11452:
 21777              	.LBE11454:
 21778              	.LBE11455:
 21779              	.LBE11466:
 21780              	.LBB11467:
 21781              	.LBB11442:
 21782              	.LBB11439:
 21783              	.LBB11436:
 21784              	.LBB11434:
 21785              	.LBB11432:
 21786              		.loc 21 395 66 view .LVU5024
 21787 07b2 DDE7     		b	.L803
 21788              	.L852:
 21789              		.align	2
 21790              	.L851:
 21791 07b4 48010000 		.word	.LC96
 21792 07b8 50010000 		.word	.LC97
 21793 07bc 00000000 		.word	.LANCHOR21
 21794 07c0 00000000 		.word	.LANCHOR26
 21795 07c4 00000000 		.word	__dso_handle
 21796 07c8 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 21797 07cc 20010000 		.word	.LC91
 21798 07d0 28010000 		.word	.LC92
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 793


 21799 07d4 30010000 		.word	.LC93
 21800 07d8 38010000 		.word	.LC94
 21801 07dc 40010000 		.word	.LC95
 21802 07e0 4D69786F 		.word	1870162253
 21803 07e4 FCFFFF7F 		.word	2147483644
 21804 07e8 04000000 		.word	.LANCHOR27+4
 21805 07ec 00000000 		.word	.LANCHOR27
 21806              	.LVL1284:
 21807              	.L843:
 21808              		.loc 21 395 66 view .LVU5025
 21809 07f0 9AAD     		add	r5, sp, #616
 21810              	.L808:
 21811              	.LVL1285:
 21812              		.loc 21 395 66 view .LVU5026
 21813              	.LBE11432:
 21814              	.LBE11434:
 21815              	.LBE11436:
 21816              	.LBE11439:
 21817              	.LBE11442:
 21818              	.LBE11467:
 21819              	.LBE11468:
 21820              	.LBE11470:
 21821              	.LBE11472:
 21822              	.LBE11474:
 21823              	.LBE11476:
 21824              	.LBE11478:
 21825              	.LBE11480:
 21826              	.LBE11483:
 21827              	.LBE11487:
 21828              	.LBE11491:
 21829              	.LBE11498:
 21830              	.LBE11507:
 21831              	.LBE11512:
 21832              	.LBE11517:
 21833              	.LBE11524:
 21834              	.LBE11537:
 21835              	.LBE11541:
 21836              	.LBE11545:
 21837              	.LBE11552:
 21838              	.LBE11555:
 21839              	.LBE11558:
 21840              	.LBE11583:
 21841              	.LBB11584:
 21842              	.LBI11584:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 21843              		.loc 30 211 12 is_stmt 1 view .LVU5027
 21844              	.LBB11585:
 21845              	.LBI11585:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 21846              		.loc 26 678 7 view .LVU5028
 21847              	.LBB11586:
 21848              	.LBB11587:
 21849              	.LBI11587:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21850              		.loc 26 276 7 view .LVU5029
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21851              		.loc 26 276 7 is_stmt 0 view .LVU5030
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 794


 21852              	.LBE11587:
 21853              	.LBB11588:
 21854              	.LBI11588:
 21855              		.loc 25 735 5 is_stmt 1 view .LVU5031
 21856              		.loc 25 735 5 is_stmt 0 view .LVU5032
 21857              	.LBE11588:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21858              		.loc 26 683 7 view .LVU5033
 21859 07f2 05F11800 		add	r0, r5, #24
 21860              	.LVL1286:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21861              		.loc 26 683 7 view .LVU5034
 21862 07f6 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 21863              	.LVL1287:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21864              		.loc 26 683 7 view .LVU5035
 21865              	.LBE11586:
 21866              	.LBE11585:
 21867              	.LBB11589:
 21868              	.LBI11589:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 21869              		.loc 18 657 7 is_stmt 1 view .LVU5036
 21870              	.LBB11590:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21871              		.loc 18 658 19 is_stmt 0 view .LVU5037
 21872 07fa 2846     		mov	r0, r5
 21873 07fc FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 21874              	.LVL1288:
 21875              	.LBB11591:
 21876              	.LBI11591:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21877              		.loc 18 150 14 is_stmt 1 view .LVU5038
 21878              	.LBB11592:
 21879              	.LBI11592:
 21880              		.loc 19 162 7 view .LVU5039
 21881              	.LBB11593:
 21882              	.LBI11593:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21883              		.loc 20 89 7 view .LVU5040
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21884              		.loc 20 89 7 is_stmt 0 view .LVU5041
 21885              	.LBE11593:
 21886              	.LBE11592:
 21887              	.LBE11591:
 21888              	.LBE11590:
 21889              	.LBE11589:
 21890              	.LBE11584:
 21891              		.loc 41 132 5 view .LVU5042
 21892 0800 AC42     		cmp	r4, r5
 21893 0802 A5F12405 		sub	r5, r5, #36
 21894 0806 F4D1     		bne	.L808
 21895              	.LVL1289:
 21896              	.LBB11594:
 21897              	.LBI11594:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 21898              		.loc 26 678 7 is_stmt 1 view .LVU5043
 21899              	.LBB11595:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 795


 21900              	.LBB11596:
 21901              	.LBI11596:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21902              		.loc 26 276 7 view .LVU5044
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21903              		.loc 26 276 7 is_stmt 0 view .LVU5045
 21904              	.LBE11596:
 21905              	.LBB11597:
 21906              	.LBI11597:
 21907              		.loc 25 735 5 is_stmt 1 view .LVU5046
 21908              		.loc 25 735 5 is_stmt 0 view .LVU5047
 21909              	.LBE11597:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21910              		.loc 26 683 7 view .LVU5048
 21911 0808 1EA8     		add	r0, sp, #120
 21912              	.LVL1290:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21913              		.loc 26 683 7 view .LVU5049
 21914              	.LBE11595:
 21915              	.LBE11594:
 133:theory.h      **** 
 134:theory.h      ****     const std::vector<std::string> allInversions {
 135:theory.h      ****         "None",
 136:theory.h      ****         "Drop 2",
 137:theory.h      ****         "Drop 3",
 138:theory.h      ****         "Drop 4"
 139:theory.h      ****     };
 21916              		.loc 41 139 5 view .LVU5050
 21917 080a 7CAD     		add	r5, sp, #496
 21918              	.LBB11599:
 21919              	.LBB11598:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21920              		.loc 26 683 7 view .LVU5051
 21921 080c FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 21922              	.LVL1291:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21923              		.loc 26 683 7 view .LVU5052
 21924              	.LBE11598:
 21925              	.LBE11599:
 21926              	.LBB11600:
 21927              	.LBI11600:
 21928              		.loc 19 162 7 is_stmt 1 view .LVU5053
 21929              	.LBB11601:
 21930              	.LBI11601:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21931              		.loc 20 89 7 view .LVU5054
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21932              		.loc 20 89 7 is_stmt 0 view .LVU5055
 21933              	.LBE11601:
 21934              	.LBE11600:
 21935              	.LBB11602:
 21936              	.LBI11602:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 21937              		.loc 26 678 7 is_stmt 1 view .LVU5056
 21938              	.LBB11603:
 21939              	.LBB11604:
 21940              	.LBI11604:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 796


 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21941              		.loc 26 276 7 view .LVU5057
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21942              		.loc 26 276 7 is_stmt 0 view .LVU5058
 21943              	.LBE11604:
 21944              	.LBB11605:
 21945              	.LBI11605:
 21946              		.loc 25 735 5 is_stmt 1 view .LVU5059
 21947              		.loc 25 735 5 is_stmt 0 view .LVU5060
 21948              	.LBE11605:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21949              		.loc 26 683 7 view .LVU5061
 21950 0810 21A8     		add	r0, sp, #132
 21951              	.LVL1292:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21952              		.loc 26 683 7 view .LVU5062
 21953 0812 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 21954              	.LVL1293:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21955              		.loc 26 683 7 view .LVU5063
 21956              	.LBE11603:
 21957              	.LBE11602:
 21958              	.LBB11606:
 21959              	.LBI11606:
 21960              		.loc 19 162 7 is_stmt 1 view .LVU5064
 21961              	.LBB11607:
 21962              	.LBI11607:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21963              		.loc 20 89 7 view .LVU5065
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21964              		.loc 20 89 7 is_stmt 0 view .LVU5066
 21965              	.LBE11607:
 21966              	.LBE11606:
 21967              	.LBB11608:
 21968              	.LBI11608:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 21969              		.loc 26 678 7 is_stmt 1 view .LVU5067
 21970              	.LBB11609:
 21971              	.LBB11610:
 21972              	.LBI11610:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21973              		.loc 26 276 7 view .LVU5068
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21974              		.loc 26 276 7 is_stmt 0 view .LVU5069
 21975              	.LBE11610:
 21976              	.LBB11611:
 21977              	.LBI11611:
 21978              		.loc 25 735 5 is_stmt 1 view .LVU5070
 21979              		.loc 25 735 5 is_stmt 0 view .LVU5071
 21980              	.LBE11611:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21981              		.loc 26 683 7 view .LVU5072
 21982 0816 24A8     		add	r0, sp, #144
 21983              	.LVL1294:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21984              		.loc 26 683 7 view .LVU5073
 21985 0818 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 797


 21986              	.LVL1295:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21987              		.loc 26 683 7 view .LVU5074
 21988              	.LBE11609:
 21989              	.LBE11608:
 21990              	.LBB11612:
 21991              	.LBI11612:
 21992              		.loc 19 162 7 is_stmt 1 view .LVU5075
 21993              	.LBB11613:
 21994              	.LBI11613:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21995              		.loc 20 89 7 view .LVU5076
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21996              		.loc 20 89 7 is_stmt 0 view .LVU5077
 21997              	.LBE11613:
 21998              	.LBE11612:
 21999              	.LBB11614:
 22000              	.LBI11614:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 22001              		.loc 26 678 7 is_stmt 1 view .LVU5078
 22002              	.LBB11615:
 22003              	.LBB11616:
 22004              	.LBI11616:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22005              		.loc 26 276 7 view .LVU5079
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22006              		.loc 26 276 7 is_stmt 0 view .LVU5080
 22007              	.LBE11616:
 22008              	.LBB11617:
 22009              	.LBI11617:
 22010              		.loc 25 735 5 is_stmt 1 view .LVU5081
 22011              		.loc 25 735 5 is_stmt 0 view .LVU5082
 22012              	.LBE11617:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22013              		.loc 26 683 7 view .LVU5083
 22014 081c 27A8     		add	r0, sp, #156
 22015              	.LVL1296:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22016              		.loc 26 683 7 view .LVU5084
 22017 081e FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 22018              	.LVL1297:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22019              		.loc 26 683 7 view .LVU5085
 22020              	.LBE11615:
 22021              	.LBE11614:
 22022              	.LBB11618:
 22023              	.LBI11618:
 22024              		.loc 19 162 7 is_stmt 1 view .LVU5086
 22025              	.LBB11619:
 22026              	.LBI11619:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22027              		.loc 20 89 7 view .LVU5087
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22028              		.loc 20 89 7 is_stmt 0 view .LVU5088
 22029              	.LBE11619:
 22030              	.LBE11618:
 22031              	.LBB11620:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 798


 22032              	.LBI11620:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 22033              		.loc 26 678 7 is_stmt 1 view .LVU5089
 22034              	.LBB11621:
 22035              	.LBB11622:
 22036              	.LBI11622:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22037              		.loc 26 276 7 view .LVU5090
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22038              		.loc 26 276 7 is_stmt 0 view .LVU5091
 22039              	.LBE11622:
 22040              	.LBB11623:
 22041              	.LBI11623:
 22042              		.loc 25 735 5 is_stmt 1 view .LVU5092
 22043              		.loc 25 735 5 is_stmt 0 view .LVU5093
 22044              	.LBE11623:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22045              		.loc 26 683 7 view .LVU5094
 22046 0822 2AA8     		add	r0, sp, #168
 22047              	.LVL1298:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22048              		.loc 26 683 7 view .LVU5095
 22049 0824 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 22050              	.LVL1299:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22051              		.loc 26 683 7 view .LVU5096
 22052              	.LBE11621:
 22053              	.LBE11620:
 22054              	.LBB11624:
 22055              	.LBI11624:
 22056              		.loc 19 162 7 is_stmt 1 view .LVU5097
 22057              	.LBB11625:
 22058              	.LBI11625:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22059              		.loc 20 89 7 view .LVU5098
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22060              		.loc 20 89 7 is_stmt 0 view .LVU5099
 22061              	.LBE11625:
 22062              	.LBE11624:
 22063              	.LBB11626:
 22064              	.LBI11626:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 22065              		.loc 26 678 7 is_stmt 1 view .LVU5100
 22066              	.LBB11627:
 22067              	.LBB11628:
 22068              	.LBI11628:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22069              		.loc 26 276 7 view .LVU5101
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22070              		.loc 26 276 7 is_stmt 0 view .LVU5102
 22071              	.LBE11628:
 22072              	.LBB11629:
 22073              	.LBI11629:
 22074              		.loc 25 735 5 is_stmt 1 view .LVU5103
 22075              		.loc 25 735 5 is_stmt 0 view .LVU5104
 22076              	.LBE11629:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 799


 22077              		.loc 26 683 7 view .LVU5105
 22078 0828 2DA8     		add	r0, sp, #180
 22079              	.LVL1300:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22080              		.loc 26 683 7 view .LVU5106
 22081 082a FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 22082              	.LVL1301:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22083              		.loc 26 683 7 view .LVU5107
 22084              	.LBE11627:
 22085              	.LBE11626:
 22086              	.LBB11630:
 22087              	.LBI11630:
 22088              		.loc 19 162 7 is_stmt 1 view .LVU5108
 22089              	.LBB11631:
 22090              	.LBI11631:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22091              		.loc 20 89 7 view .LVU5109
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22092              		.loc 20 89 7 is_stmt 0 view .LVU5110
 22093              	.LBE11631:
 22094              	.LBE11630:
 22095              	.LBB11632:
 22096              	.LBI11632:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 22097              		.loc 26 678 7 is_stmt 1 view .LVU5111
 22098              	.LBB11633:
 22099              	.LBB11634:
 22100              	.LBI11634:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22101              		.loc 26 276 7 view .LVU5112
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22102              		.loc 26 276 7 is_stmt 0 view .LVU5113
 22103              	.LBE11634:
 22104              	.LBB11635:
 22105              	.LBI11635:
 22106              		.loc 25 735 5 is_stmt 1 view .LVU5114
 22107              		.loc 25 735 5 is_stmt 0 view .LVU5115
 22108              	.LBE11635:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22109              		.loc 26 683 7 view .LVU5116
 22110 082e 30A8     		add	r0, sp, #192
 22111              	.LVL1302:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22112              		.loc 26 683 7 view .LVU5117
 22113 0830 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 22114              	.LVL1303:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22115              		.loc 26 683 7 view .LVU5118
 22116              	.LBE11633:
 22117              	.LBE11632:
 22118              	.LBB11636:
 22119              	.LBI11636:
 22120              		.loc 19 162 7 is_stmt 1 view .LVU5119
 22121              	.LBB11637:
 22122              	.LBI11637:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 800


 22123              		.loc 20 89 7 view .LVU5120
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22124              		.loc 20 89 7 is_stmt 0 view .LVU5121
 22125              	.LBE11637:
 22126              	.LBE11636:
 124:theory.h      ****         {"Major",  std::vector<int>{0, 2, 4, 5, 7, 9, 11}},
 22127              		.loc 41 124 51 view .LVU5122
 22128 0834 AB4A     		ldr	r2, .L853
 22129 0836 AC49     		ldr	r1, .L853+4
 22130 0838 AC48     		ldr	r0, .L853+8
 22131 083a FFF7FEFF 		bl	__aeabi_atexit
 22132              	.LVL1304:
 22133              	.LBB11638:
 22134              	.LBI11638:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22135              		.loc 19 144 7 is_stmt 1 view .LVU5123
 22136              	.LBB11639:
 22137              	.LBI11639:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22138              		.loc 20 79 7 view .LVU5124
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22139              		.loc 20 79 7 is_stmt 0 view .LVU5125
 22140              	.LBE11639:
 22141              	.LBE11638:
 22142              		.loc 41 139 5 view .LVU5126
 22143 083e AC49     		ldr	r1, .L853+12
 22144 0840 2046     		mov	r0, r4
 22145 0842 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22146              	.LVL1305:
 22147              	.LBB11640:
 22148              	.LBI11640:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22149              		.loc 19 144 7 is_stmt 1 view .LVU5127
 22150              	.LBB11641:
 22151              	.LBI11641:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22152              		.loc 20 79 7 view .LVU5128
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22153              		.loc 20 79 7 is_stmt 0 view .LVU5129
 22154              	.LBE11641:
 22155              	.LBE11640:
 22156              		.loc 41 139 5 view .LVU5130
 22157 0846 AB49     		ldr	r1, .L853+16
 22158 0848 6AA8     		add	r0, sp, #424
 22159 084a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22160              	.LVL1306:
 22161              	.LBB11642:
 22162              	.LBI11642:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22163              		.loc 19 144 7 is_stmt 1 view .LVU5131
 22164              	.LBB11643:
 22165              	.LBI11643:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22166              		.loc 20 79 7 view .LVU5132
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22167              		.loc 20 79 7 is_stmt 0 view .LVU5133
 22168              	.LBE11643:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 801


 22169              	.LBE11642:
 22170              		.loc 41 139 5 view .LVU5134
 22171 084e AA49     		ldr	r1, .L853+20
 22172 0850 70A8     		add	r0, sp, #448
 22173 0852 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22174              	.LVL1307:
 22175              	.LBB11644:
 22176              	.LBI11644:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22177              		.loc 19 144 7 is_stmt 1 view .LVU5135
 22178              	.LBB11645:
 22179              	.LBI11645:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22180              		.loc 20 79 7 view .LVU5136
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22181              		.loc 20 79 7 is_stmt 0 view .LVU5137
 22182              	.LBE11645:
 22183              	.LBE11644:
 22184              		.loc 41 139 5 view .LVU5138
 22185 0856 A949     		ldr	r1, .L853+24
 22186 0858 76A8     		add	r0, sp, #472
 22187 085a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22188              	.LVL1308:
 22189 085e 0423     		movs	r3, #4
 22190 0860 5DAA     		add	r2, sp, #372
 22191 0862 5D94     		str	r4, [sp, #372]
 22192 0864 5E93     		str	r3, [sp, #376]
 22193              	.LVL1309:
 22194              	.LBB11646:
 22195              	.LBI11646:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22196              		.loc 19 144 7 is_stmt 1 view .LVU5139
 22197              	.LBB11647:
 22198              	.LBI11647:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22199              		.loc 20 79 7 view .LVU5140
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22200              		.loc 20 79 7 is_stmt 0 view .LVU5141
 22201              	.LBE11647:
 22202              	.LBE11646:
 22203              		.loc 41 139 5 view .LVU5142
 22204 0866 56AB     		add	r3, sp, #344
 22205 0868 A548     		ldr	r0, .L853+28
 22206 086a 06CA     		ldm	r2, {r1, r2}
 22207 086c FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 22208              	.LVL1310:
 22209              	.LBB11648:
 22210              	.LBI11648:
 22211              		.loc 19 162 7 is_stmt 1 view .LVU5143
 22212              	.LBB11649:
 22213              	.LBI11649:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22214              		.loc 20 89 7 view .LVU5144
 22215              	.L809:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22216              		.loc 20 89 7 is_stmt 0 view .LVU5145
 22217              	.LBE11649:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 802


 22218              	.LBE11648:
 22219              		.loc 41 139 5 view .LVU5146
 22220 0870 183D     		subs	r5, r5, #24
 22221              	.LVL1311:
 22222              	.LBB11650:
 22223              	.LBI11650:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 22224              		.loc 18 657 7 is_stmt 1 view .LVU5147
 22225              	.LBB11651:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22226              		.loc 18 658 19 is_stmt 0 view .LVU5148
 22227 0872 2846     		mov	r0, r5
 22228 0874 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 22229              	.LVL1312:
 22230              	.LBB11652:
 22231              	.LBI11652:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22232              		.loc 18 150 14 is_stmt 1 view .LVU5149
 22233              	.LBB11653:
 22234              	.LBI11653:
 22235              		.loc 19 162 7 view .LVU5150
 22236              	.LBB11654:
 22237              	.LBI11654:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22238              		.loc 20 89 7 view .LVU5151
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22239              		.loc 20 89 7 is_stmt 0 view .LVU5152
 22240              	.LBE11654:
 22241              	.LBE11653:
 22242              	.LBE11652:
 22243              	.LBE11651:
 22244              	.LBE11650:
 22245              		.loc 41 139 5 view .LVU5153
 22246 0878 A542     		cmp	r5, r4
 22247 087a F9D1     		bne	.L809
 22248              	.LVL1313:
 22249              	.LBB11655:
 22250              	.LBI11655:
 22251              		.loc 19 162 7 is_stmt 1 view .LVU5154
 22252              	.LBB11656:
 22253              	.LBI11656:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22254              		.loc 20 89 7 view .LVU5155
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22255              		.loc 20 89 7 is_stmt 0 view .LVU5156
 22256              	.LBE11656:
 22257              	.LBE11655:
 22258              	.LBB11657:
 22259              	.LBI11657:
 22260              		.loc 19 162 7 is_stmt 1 view .LVU5157
 22261              	.LBB11658:
 22262              	.LBI11658:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22263              		.loc 20 89 7 view .LVU5158
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22264              		.loc 20 89 7 is_stmt 0 view .LVU5159
 22265              	.LBE11658:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 803


 22266              	.LBE11657:
 22267              	.LBB11659:
 22268              	.LBI11659:
 22269              		.loc 19 162 7 is_stmt 1 view .LVU5160
 22270              	.LBB11660:
 22271              	.LBI11660:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22272              		.loc 20 89 7 view .LVU5161
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22273              		.loc 20 89 7 is_stmt 0 view .LVU5162
 22274              	.LBE11660:
 22275              	.LBE11659:
 22276              	.LBB11661:
 22277              	.LBI11661:
 22278              		.loc 19 162 7 is_stmt 1 view .LVU5163
 22279              	.LBB11662:
 22280              	.LBI11662:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22281              		.loc 20 89 7 view .LVU5164
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22282              		.loc 20 89 7 is_stmt 0 view .LVU5165
 22283              	.LBE11662:
 22284              	.LBE11661:
 134:theory.h      ****         "None",
 22285              		.loc 41 134 36 view .LVU5166
 22286 087c 994A     		ldr	r2, .L853
 140:theory.h      **** 
 141:theory.h      ****     const std::vector<std::string> allClockInDivs {
 142:theory.h      ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 143:theory.h      ****         // "1/4",
 144:theory.h      ****         // "1/8",
 145:theory.h      ****         // "1/16",
 146:theory.h      ****         // "1/32",
 147:theory.h      ****         // "1/64",
 148:theory.h      ****         "1",
 149:theory.h      ****         "2",
 150:theory.h      ****         "4",
 151:theory.h      ****         "8",
 152:theory.h      ****         "16"
 153:theory.h      ****     };
 22287              		.loc 41 153 5 view .LVU5167
 22288 087e 82AD     		add	r5, sp, #520
 134:theory.h      ****         "None",
 22289              		.loc 41 134 36 view .LVU5168
 22290 0880 A049     		ldr	r1, .L853+32
 22291 0882 9F48     		ldr	r0, .L853+28
 22292 0884 FFF7FEFF 		bl	__aeabi_atexit
 22293              	.LVL1314:
 22294              	.LBB11663:
 22295              	.LBI11663:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22296              		.loc 19 144 7 is_stmt 1 view .LVU5169
 22297              	.LBB11664:
 22298              	.LBI11664:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22299              		.loc 20 79 7 view .LVU5170
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 804


 22300              		.loc 20 79 7 is_stmt 0 view .LVU5171
 22301              	.LBE11664:
 22302              	.LBE11663:
 22303              		.loc 41 153 5 view .LVU5172
 22304 0888 9F49     		ldr	r1, .L853+36
 22305 088a 2046     		mov	r0, r4
 22306 088c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22307              	.LVL1315:
 22308              	.LBB11665:
 22309              	.LBI11665:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22310              		.loc 19 144 7 is_stmt 1 view .LVU5173
 22311              	.LBB11666:
 22312              	.LBI11666:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22313              		.loc 20 79 7 view .LVU5174
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22314              		.loc 20 79 7 is_stmt 0 view .LVU5175
 22315              	.LBE11666:
 22316              	.LBE11665:
 22317              		.loc 41 153 5 view .LVU5176
 22318 0890 9E49     		ldr	r1, .L853+40
 22319 0892 6AA8     		add	r0, sp, #424
 22320 0894 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22321              	.LVL1316:
 22322              	.LBB11667:
 22323              	.LBI11667:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22324              		.loc 19 144 7 is_stmt 1 view .LVU5177
 22325              	.LBB11668:
 22326              	.LBI11668:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22327              		.loc 20 79 7 view .LVU5178
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22328              		.loc 20 79 7 is_stmt 0 view .LVU5179
 22329              	.LBE11668:
 22330              	.LBE11667:
 22331              		.loc 41 153 5 view .LVU5180
 22332 0898 9D49     		ldr	r1, .L853+44
 22333 089a 70A8     		add	r0, sp, #448
 22334 089c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22335              	.LVL1317:
 22336              	.LBB11669:
 22337              	.LBI11669:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22338              		.loc 19 144 7 is_stmt 1 view .LVU5181
 22339              	.LBB11670:
 22340              	.LBI11670:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22341              		.loc 20 79 7 view .LVU5182
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22342              		.loc 20 79 7 is_stmt 0 view .LVU5183
 22343              	.LBE11670:
 22344              	.LBE11669:
 22345              		.loc 41 153 5 view .LVU5184
 22346 08a0 9C49     		ldr	r1, .L853+48
 22347 08a2 76A8     		add	r0, sp, #472
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 805


 22348 08a4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22349              	.LVL1318:
 22350              	.LBB11671:
 22351              	.LBI11671:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22352              		.loc 19 144 7 is_stmt 1 view .LVU5185
 22353              	.LBB11672:
 22354              	.LBI11672:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22355              		.loc 20 79 7 view .LVU5186
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22356              		.loc 20 79 7 is_stmt 0 view .LVU5187
 22357              	.LBE11672:
 22358              	.LBE11671:
 22359              		.loc 41 153 5 view .LVU5188
 22360 08a8 9B49     		ldr	r1, .L853+52
 22361 08aa 7CA8     		add	r0, sp, #496
 22362 08ac FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22363              	.LVL1319:
 22364 08b0 0523     		movs	r3, #5
 22365 08b2 56AA     		add	r2, sp, #344
 22366 08b4 5694     		str	r4, [sp, #344]
 22367 08b6 5793     		str	r3, [sp, #348]
 22368              	.LVL1320:
 22369              	.LBB11673:
 22370              	.LBI11673:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22371              		.loc 19 144 7 is_stmt 1 view .LVU5189
 22372              	.LBB11674:
 22373              	.LBI11674:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22374              		.loc 20 79 7 view .LVU5190
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22375              		.loc 20 79 7 is_stmt 0 view .LVU5191
 22376              	.LBE11674:
 22377              	.LBE11673:
 22378              		.loc 41 153 5 view .LVU5192
 22379 08b8 4FAB     		add	r3, sp, #316
 22380 08ba 9848     		ldr	r0, .L853+56
 22381 08bc 06CA     		ldm	r2, {r1, r2}
 22382 08be FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 22383              	.LVL1321:
 22384              	.LBB11675:
 22385              	.LBI11675:
 22386              		.loc 19 162 7 is_stmt 1 view .LVU5193
 22387              	.LBB11676:
 22388              	.LBI11676:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22389              		.loc 20 89 7 view .LVU5194
 22390              	.L810:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22391              		.loc 20 89 7 is_stmt 0 view .LVU5195
 22392              	.LBE11676:
 22393              	.LBE11675:
 22394              		.loc 41 153 5 view .LVU5196
 22395 08c2 183D     		subs	r5, r5, #24
 22396              	.LVL1322:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 806


 22397              	.LBB11677:
 22398              	.LBI11677:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 22399              		.loc 18 657 7 is_stmt 1 view .LVU5197
 22400              	.LBB11678:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22401              		.loc 18 658 19 is_stmt 0 view .LVU5198
 22402 08c4 2846     		mov	r0, r5
 22403 08c6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 22404              	.LVL1323:
 22405              	.LBB11679:
 22406              	.LBI11679:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22407              		.loc 18 150 14 is_stmt 1 view .LVU5199
 22408              	.LBB11680:
 22409              	.LBI11680:
 22410              		.loc 19 162 7 view .LVU5200
 22411              	.LBB11681:
 22412              	.LBI11681:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22413              		.loc 20 89 7 view .LVU5201
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22414              		.loc 20 89 7 is_stmt 0 view .LVU5202
 22415              	.LBE11681:
 22416              	.LBE11680:
 22417              	.LBE11679:
 22418              	.LBE11678:
 22419              	.LBE11677:
 22420              		.loc 41 153 5 view .LVU5203
 22421 08ca A542     		cmp	r5, r4
 22422 08cc F9D1     		bne	.L810
 22423              	.LVL1324:
 22424              	.LBB11682:
 22425              	.LBI11682:
 22426              		.loc 19 162 7 is_stmt 1 view .LVU5204
 22427              	.LBB11683:
 22428              	.LBI11683:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22429              		.loc 20 89 7 view .LVU5205
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22430              		.loc 20 89 7 is_stmt 0 view .LVU5206
 22431              	.LBE11683:
 22432              	.LBE11682:
 22433              	.LBB11684:
 22434              	.LBI11684:
 22435              		.loc 19 162 7 is_stmt 1 view .LVU5207
 22436              	.LBB11685:
 22437              	.LBI11685:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22438              		.loc 20 89 7 view .LVU5208
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22439              		.loc 20 89 7 is_stmt 0 view .LVU5209
 22440              	.LBE11685:
 22441              	.LBE11684:
 22442              	.LBB11686:
 22443              	.LBI11686:
 22444              		.loc 19 162 7 is_stmt 1 view .LVU5210
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 807


 22445              	.LBB11687:
 22446              	.LBI11687:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22447              		.loc 20 89 7 view .LVU5211
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22448              		.loc 20 89 7 is_stmt 0 view .LVU5212
 22449              	.LBE11687:
 22450              	.LBE11686:
 22451              	.LBB11688:
 22452              	.LBI11688:
 22453              		.loc 19 162 7 is_stmt 1 view .LVU5213
 22454              	.LBB11689:
 22455              	.LBI11689:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22456              		.loc 20 89 7 view .LVU5214
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22457              		.loc 20 89 7 is_stmt 0 view .LVU5215
 22458              	.LBE11689:
 22459              	.LBE11688:
 22460              	.LBB11690:
 22461              	.LBI11690:
 22462              		.loc 19 162 7 is_stmt 1 view .LVU5216
 22463              	.LBB11691:
 22464              	.LBI11691:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22465              		.loc 20 89 7 view .LVU5217
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22466              		.loc 20 89 7 is_stmt 0 view .LVU5218
 22467              	.LBE11691:
 22468              	.LBE11690:
 141:theory.h      ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 22469              		.loc 41 141 36 view .LVU5219
 22470 08ce 854A     		ldr	r2, .L853
 22471              		.file 43 "chord.h"
   1:chord.h       **** /* 
   2:chord.h       ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:chord.h       ****  * You may use, distribute and modify this code under the
   4:chord.h       ****  * terms of the GNU AGPLv3 license.
   5:chord.h       ****  * 
   6:chord.h       ****  * You should have received a copy of the GNU AGPLv3 license with
   7:chord.h       ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:chord.h       ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:chord.h       ****  */
  10:chord.h       **** 
  11:chord.h       **** #pragma once
  12:chord.h       **** 
  13:chord.h       **** #include <map>
  14:chord.h       **** #include <vector>
  15:chord.h       **** #include <string>
  16:chord.h       **** 
  17:chord.h       **** #include "theory.h"
  18:chord.h       **** 
  19:chord.h       **** namespace jellybeans {
  20:chord.h       **** 
  21:chord.h       ****     // Notes are represented as ints, as they correspond to mu::allNotes5Oct
  22:chord.h       ****     // For performance reasons, all functions assume valid input
  23:chord.h       ****     class DiatonicChord {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 808


  24:chord.h       ****     private:
  25:chord.h       ****         // String representation of the chord
  26:chord.h       ****         std::string string;
  27:chord.h       **** 
  28:chord.h       ****         // The diatonic distance, in relation to the root, of 
  29:chord.h       ****         // each note in the chord (ascending order)
  30:chord.h       ****         std::vector<int> notes;
  31:chord.h       **** 
  32:chord.h       ****         // Semitone value of each note in the chord
  33:chord.h       ****         std::vector<int> semis;
  34:chord.h       **** 
  35:chord.h       ****         // Must be an element of mu::modes (theory.h)
  36:chord.h       ****         std::string mode;
  37:chord.h       **** 
  38:chord.h       ****         // Root note of current mode
  39:chord.h       ****         int modeRoot;
  40:chord.h       **** 
  41:chord.h       ****         // Scale degree of the current root note
  42:chord.h       ****         int root;
  43:chord.h       **** 
  44:chord.h       ****         int length;
  45:chord.h       **** 
  46:chord.h       ****         // Must be an element of voicings
  47:chord.h       ****         std::string voicing;
  48:chord.h       ****     public:
  49:chord.h       **** 
  50:chord.h       ****         // Default is C major triad
  51:chord.h       ****         DiatonicChord(); // : DiatonicChord(1, 0, "Major", "Triad") {};
  52:chord.h       **** 
  53:chord.h       ****         // @param chord root - scale degree  int from 0-7
  54:chord.h       ****         // @param mode root - the note value, int from 0-12
  55:chord.h       ****         // @param mode - an element of mu::allModes
  56:chord.h       ****         // @param voicing - an element of mu::voicings
  57:chord.h       ****         DiatonicChord(int, int, std::string, std::string);
  58:chord.h       **** 
  59:chord.h       ****         // Updates the value of string, so that it only needs to be 
  60:chord.h       ****         // computed when necessary
  61:chord.h       ****         void updateString();
  62:chord.h       **** 
  63:chord.h       ****         // @param the index of a note
  64:chord.h       ****         // Sets the root of the chord to the given note. If it's a non-diatonic note, 
  65:chord.h       ****         // transpose it up a semitone to become diatonic.
  66:chord.h       ****         void setRootByNote(int);
  67:chord.h       **** 
  68:chord.h       ****         // @param the scale degree of the desired root note, int from 0-7
  69:chord.h       ****         void setRoot(int);
  70:chord.h       **** 
  71:chord.h       ****         // @param the note value of the desired mode root, int from 0-12
  72:chord.h       ****         void setModeRoot(int);
  73:chord.h       **** 
  74:chord.h       ****         // @param an element of mu::allModes
  75:chord.h       ****         void setMode(std::string);
  76:chord.h       **** 
  77:chord.h       ****         // @param an element of mu::voicings
  78:chord.h       ****         void setVoicing(std::string);
  79:chord.h       **** 
  80:chord.h       ****         // Transposes all notes in the chord by the given number of semitones.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 809


  81:chord.h       ****         // If a note would fall out of register, do nothing.
  82:chord.h       ****         void transpose(int);
  83:chord.h       **** 
  84:chord.h       ****         // Given the chord's properties, formulates the chord.
  85:chord.h       ****         // Call this every time a property of the chord is updated.
  86:chord.h       ****         void updateChord();
  87:chord.h       **** 
  88:chord.h       ****         // @return semis[n], or semis[0] if n is out of bounds
  89:chord.h       ****         int getNoteAt(int);
  90:chord.h       **** 
  91:chord.h       ****         // @return the number of notes in the chord
  92:chord.h       ****         int getLength();
  93:chord.h       **** 
  94:chord.h       ****         std::string toString();
  95:chord.h       ****     };
  96:chord.h       **** 
  97:chord.h       ****     // All possible chord voicings
  98:chord.h       ****     const std::vector<std::string> voicings {
  99:chord.h       ****         "Triad",
 100:chord.h       ****         "Triad+",
 101:chord.h       ****         "7th",
 102:chord.h       ****         "7th+"
 103:chord.h       ****         "9th",
 104:chord.h       ****         "11th",
 105:chord.h       ****         "13th",
 106:chord.h       ****         "6th",
 107:chord.h       ****         "Sus2",
 108:chord.h       ****         "Sus4",
 109:chord.h       ****         // disabled til its bug is fixed
 110:chord.h       ****         //"Kenny B.",  // Kenny Barron chord 
 111:chord.h       ****         "Power",
 112:chord.h       ****         "Shell 1",
 113:chord.h       ****         "Shell 2"
 114:chord.h       ****     };
 22472              		.loc 43 114 5 view .LVU5220
 22473 08d0 ACAD     		add	r5, sp, #688
 141:theory.h      ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 22474              		.loc 41 141 36 view .LVU5221
 22475 08d2 8C49     		ldr	r1, .L853+32
 22476 08d4 9148     		ldr	r0, .L853+56
 22477 08d6 FFF7FEFF 		bl	__aeabi_atexit
 22478              	.LVL1325:
 22479              	.LBB11692:
 22480              	.LBI11692:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22481              		.loc 19 144 7 is_stmt 1 view .LVU5222
 22482              	.LBB11693:
 22483              	.LBI11693:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22484              		.loc 20 79 7 view .LVU5223
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22485              		.loc 20 79 7 is_stmt 0 view .LVU5224
 22486              	.LBE11693:
 22487              	.LBE11692:
 22488              		.loc 43 114 5 view .LVU5225
 22489 08da 9149     		ldr	r1, .L853+60
 22490 08dc 2046     		mov	r0, r4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 810


 22491 08de FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22492              	.LVL1326:
 22493              	.LBB11694:
 22494              	.LBI11694:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22495              		.loc 19 144 7 is_stmt 1 view .LVU5226
 22496              	.LBB11695:
 22497              	.LBI11695:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22498              		.loc 20 79 7 view .LVU5227
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22499              		.loc 20 79 7 is_stmt 0 view .LVU5228
 22500              	.LBE11695:
 22501              	.LBE11694:
 22502              		.loc 43 114 5 view .LVU5229
 22503 08e2 9049     		ldr	r1, .L853+64
 22504 08e4 6AA8     		add	r0, sp, #424
 22505 08e6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22506              	.LVL1327:
 22507              	.LBB11696:
 22508              	.LBI11696:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22509              		.loc 19 144 7 is_stmt 1 view .LVU5230
 22510              	.LBB11697:
 22511              	.LBI11697:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22512              		.loc 20 79 7 view .LVU5231
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22513              		.loc 20 79 7 is_stmt 0 view .LVU5232
 22514              	.LBE11697:
 22515              	.LBE11696:
 22516              		.loc 43 114 5 view .LVU5233
 22517 08ea 8F49     		ldr	r1, .L853+68
 22518 08ec 70A8     		add	r0, sp, #448
 22519 08ee FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22520              	.LVL1328:
 22521              	.LBB11698:
 22522              	.LBI11698:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22523              		.loc 19 144 7 is_stmt 1 view .LVU5234
 22524              	.LBB11699:
 22525              	.LBI11699:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22526              		.loc 20 79 7 view .LVU5235
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22527              		.loc 20 79 7 is_stmt 0 view .LVU5236
 22528              	.LBE11699:
 22529              	.LBE11698:
 22530              		.loc 43 114 5 view .LVU5237
 22531 08f2 8E49     		ldr	r1, .L853+72
 22532 08f4 76A8     		add	r0, sp, #472
 22533 08f6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22534              	.LVL1329:
 22535              	.LBB11700:
 22536              	.LBI11700:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22537              		.loc 19 144 7 is_stmt 1 view .LVU5238
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 811


 22538              	.LBB11701:
 22539              	.LBI11701:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22540              		.loc 20 79 7 view .LVU5239
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22541              		.loc 20 79 7 is_stmt 0 view .LVU5240
 22542              	.LBE11701:
 22543              	.LBE11700:
 22544              		.loc 43 114 5 view .LVU5241
 22545 08fa 8D49     		ldr	r1, .L853+76
 22546 08fc 7CA8     		add	r0, sp, #496
 22547 08fe FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22548              	.LVL1330:
 22549              	.LBB11702:
 22550              	.LBI11702:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22551              		.loc 19 144 7 is_stmt 1 view .LVU5242
 22552              	.LBB11703:
 22553              	.LBI11703:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22554              		.loc 20 79 7 view .LVU5243
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22555              		.loc 20 79 7 is_stmt 0 view .LVU5244
 22556              	.LBE11703:
 22557              	.LBE11702:
 22558              		.loc 43 114 5 view .LVU5245
 22559 0902 8C49     		ldr	r1, .L853+80
 22560 0904 82A8     		add	r0, sp, #520
 22561 0906 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22562              	.LVL1331:
 22563              	.LBB11704:
 22564              	.LBI11704:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22565              		.loc 19 144 7 is_stmt 1 view .LVU5246
 22566              	.LBB11705:
 22567              	.LBI11705:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22568              		.loc 20 79 7 view .LVU5247
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22569              		.loc 20 79 7 is_stmt 0 view .LVU5248
 22570              	.LBE11705:
 22571              	.LBE11704:
 22572              		.loc 43 114 5 view .LVU5249
 22573 090a 88A8     		add	r0, sp, #544
 22574 090c 8A49     		ldr	r1, .L853+84
 22575 090e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22576              	.LVL1332:
 22577              	.LBB11706:
 22578              	.LBI11706:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22579              		.loc 19 144 7 is_stmt 1 view .LVU5250
 22580              	.LBB11707:
 22581              	.LBI11707:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22582              		.loc 20 79 7 view .LVU5251
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22583              		.loc 20 79 7 is_stmt 0 view .LVU5252
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 812


 22584              	.LBE11707:
 22585              	.LBE11706:
 22586              		.loc 43 114 5 view .LVU5253
 22587 0912 8EA8     		add	r0, sp, #568
 22588 0914 8949     		ldr	r1, .L853+88
 22589 0916 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22590              	.LVL1333:
 22591              	.LBB11708:
 22592              	.LBI11708:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22593              		.loc 19 144 7 is_stmt 1 view .LVU5254
 22594              	.LBB11709:
 22595              	.LBI11709:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22596              		.loc 20 79 7 view .LVU5255
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22597              		.loc 20 79 7 is_stmt 0 view .LVU5256
 22598              	.LBE11709:
 22599              	.LBE11708:
 22600              		.loc 43 114 5 view .LVU5257
 22601 091a 94A8     		add	r0, sp, #592
 22602 091c 8849     		ldr	r1, .L853+92
 22603 091e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22604              	.LVL1334:
 22605              	.LBB11710:
 22606              	.LBI11710:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22607              		.loc 19 144 7 is_stmt 1 view .LVU5258
 22608              	.LBB11711:
 22609              	.LBI11711:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22610              		.loc 20 79 7 view .LVU5259
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22611              		.loc 20 79 7 is_stmt 0 view .LVU5260
 22612              	.LBE11711:
 22613              	.LBE11710:
 22614              		.loc 43 114 5 view .LVU5261
 22615 0922 9AA8     		add	r0, sp, #616
 22616 0924 8749     		ldr	r1, .L853+96
 22617 0926 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22618              	.LVL1335:
 22619              	.LBB11712:
 22620              	.LBI11712:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22621              		.loc 19 144 7 is_stmt 1 view .LVU5262
 22622              	.LBB11713:
 22623              	.LBI11713:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22624              		.loc 20 79 7 view .LVU5263
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22625              		.loc 20 79 7 is_stmt 0 view .LVU5264
 22626              	.LBE11713:
 22627              	.LBE11712:
 22628              		.loc 43 114 5 view .LVU5265
 22629 092a A0A8     		add	r0, sp, #640
 22630 092c 8649     		ldr	r1, .L853+100
 22631 092e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 813


 22632              	.LVL1336:
 22633              	.LBB11714:
 22634              	.LBI11714:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22635              		.loc 19 144 7 is_stmt 1 view .LVU5266
 22636              	.LBB11715:
 22637              	.LBI11715:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22638              		.loc 20 79 7 view .LVU5267
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22639              		.loc 20 79 7 is_stmt 0 view .LVU5268
 22640              	.LBE11715:
 22641              	.LBE11714:
 22642              		.loc 43 114 5 view .LVU5269
 22643 0932 A6A8     		add	r0, sp, #664
 22644 0934 8549     		ldr	r1, .L853+104
 22645 0936 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22646              	.LVL1337:
 22647 093a 0C23     		movs	r3, #12
 22648 093c 4FAA     		add	r2, sp, #316
 22649 093e 4F94     		str	r4, [sp, #316]
 22650 0940 5093     		str	r3, [sp, #320]
 22651              	.LVL1338:
 22652              	.LBB11716:
 22653              	.LBI11716:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22654              		.loc 19 144 7 is_stmt 1 view .LVU5270
 22655              	.LBB11717:
 22656              	.LBI11717:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22657              		.loc 20 79 7 view .LVU5271
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22658              		.loc 20 79 7 is_stmt 0 view .LVU5272
 22659              	.LBE11717:
 22660              	.LBE11716:
 22661              		.loc 43 114 5 view .LVU5273
 22662 0942 48AB     		add	r3, sp, #288
 22663 0944 8248     		ldr	r0, .L853+108
 22664 0946 06CA     		ldm	r2, {r1, r2}
 22665 0948 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 22666              	.LVL1339:
 22667              	.LBB11718:
 22668              	.LBI11718:
 22669              		.loc 19 162 7 is_stmt 1 view .LVU5274
 22670              	.LBB11719:
 22671              	.LBI11719:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22672              		.loc 20 89 7 view .LVU5275
 22673              	.L811:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22674              		.loc 20 89 7 is_stmt 0 view .LVU5276
 22675              	.LBE11719:
 22676              	.LBE11718:
 22677              		.loc 43 114 5 view .LVU5277
 22678 094c 183D     		subs	r5, r5, #24
 22679              	.LVL1340:
 22680              	.LBB11720:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 814


 22681              	.LBI11720:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 22682              		.loc 18 657 7 is_stmt 1 view .LVU5278
 22683              	.LBB11721:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22684              		.loc 18 658 19 is_stmt 0 view .LVU5279
 22685 094e 2846     		mov	r0, r5
 22686 0950 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 22687              	.LVL1341:
 22688              	.LBB11722:
 22689              	.LBI11722:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22690              		.loc 18 150 14 is_stmt 1 view .LVU5280
 22691              	.LBB11723:
 22692              	.LBI11723:
 22693              		.loc 19 162 7 view .LVU5281
 22694              	.LBB11724:
 22695              	.LBI11724:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22696              		.loc 20 89 7 view .LVU5282
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22697              		.loc 20 89 7 is_stmt 0 view .LVU5283
 22698              	.LBE11724:
 22699              	.LBE11723:
 22700              	.LBE11722:
 22701              	.LBE11721:
 22702              	.LBE11720:
 22703              		.loc 43 114 5 view .LVU5284
 22704 0954 A542     		cmp	r5, r4
 22705 0956 F9D1     		bne	.L811
 22706              	.LVL1342:
 22707              	.LBB11725:
 22708              	.LBI11725:
 22709              		.loc 19 162 7 is_stmt 1 view .LVU5285
 22710              	.LBB11726:
 22711              	.LBI11726:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22712              		.loc 20 89 7 view .LVU5286
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22713              		.loc 20 89 7 is_stmt 0 view .LVU5287
 22714              	.LBE11726:
 22715              	.LBE11725:
 22716              	.LBB11727:
 22717              	.LBI11727:
 22718              		.loc 19 162 7 is_stmt 1 view .LVU5288
 22719              	.LBB11728:
 22720              	.LBI11728:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22721              		.loc 20 89 7 view .LVU5289
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22722              		.loc 20 89 7 is_stmt 0 view .LVU5290
 22723              	.LBE11728:
 22724              	.LBE11727:
 22725              	.LBB11729:
 22726              	.LBI11729:
 22727              		.loc 19 162 7 is_stmt 1 view .LVU5291
 22728              	.LBB11730:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 815


 22729              	.LBI11730:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22730              		.loc 20 89 7 view .LVU5292
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22731              		.loc 20 89 7 is_stmt 0 view .LVU5293
 22732              	.LBE11730:
 22733              	.LBE11729:
 22734              	.LBB11731:
 22735              	.LBI11731:
 22736              		.loc 19 162 7 is_stmt 1 view .LVU5294
 22737              	.LBB11732:
 22738              	.LBI11732:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22739              		.loc 20 89 7 view .LVU5295
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22740              		.loc 20 89 7 is_stmt 0 view .LVU5296
 22741              	.LBE11732:
 22742              	.LBE11731:
 22743              	.LBB11733:
 22744              	.LBI11733:
 22745              		.loc 19 162 7 is_stmt 1 view .LVU5297
 22746              	.LBB11734:
 22747              	.LBI11734:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22748              		.loc 20 89 7 view .LVU5298
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22749              		.loc 20 89 7 is_stmt 0 view .LVU5299
 22750              	.LBE11734:
 22751              	.LBE11733:
 22752              	.LBB11735:
 22753              	.LBI11735:
 22754              		.loc 19 162 7 is_stmt 1 view .LVU5300
 22755              	.LBB11736:
 22756              	.LBI11736:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22757              		.loc 20 89 7 view .LVU5301
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22758              		.loc 20 89 7 is_stmt 0 view .LVU5302
 22759              	.LBE11736:
 22760              	.LBE11735:
 22761              	.LBB11737:
 22762              	.LBI11737:
 22763              		.loc 19 162 7 is_stmt 1 view .LVU5303
 22764              	.LBB11738:
 22765              	.LBI11738:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22766              		.loc 20 89 7 view .LVU5304
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22767              		.loc 20 89 7 is_stmt 0 view .LVU5305
 22768              	.LBE11738:
 22769              	.LBE11737:
 22770              	.LBB11739:
 22771              	.LBI11739:
 22772              		.loc 19 162 7 is_stmt 1 view .LVU5306
 22773              	.LBB11740:
 22774              	.LBI11740:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 816


 22775              		.loc 20 89 7 view .LVU5307
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22776              		.loc 20 89 7 is_stmt 0 view .LVU5308
 22777              	.LBE11740:
 22778              	.LBE11739:
 22779              	.LBB11741:
 22780              	.LBI11741:
 22781              		.loc 19 162 7 is_stmt 1 view .LVU5309
 22782              	.LBB11742:
 22783              	.LBI11742:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22784              		.loc 20 89 7 view .LVU5310
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22785              		.loc 20 89 7 is_stmt 0 view .LVU5311
 22786              	.LBE11742:
 22787              	.LBE11741:
 22788              	.LBB11743:
 22789              	.LBI11743:
 22790              		.loc 19 162 7 is_stmt 1 view .LVU5312
 22791              	.LBB11744:
 22792              	.LBI11744:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22793              		.loc 20 89 7 view .LVU5313
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22794              		.loc 20 89 7 is_stmt 0 view .LVU5314
 22795              	.LBE11744:
 22796              	.LBE11743:
 22797              	.LBB11745:
 22798              	.LBI11745:
 22799              		.loc 19 162 7 is_stmt 1 view .LVU5315
 22800              	.LBB11746:
 22801              	.LBI11746:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22802              		.loc 20 89 7 view .LVU5316
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22803              		.loc 20 89 7 is_stmt 0 view .LVU5317
 22804              	.LBE11746:
 22805              	.LBE11745:
 22806              	.LBB11747:
 22807              	.LBI11747:
 22808              		.loc 19 162 7 is_stmt 1 view .LVU5318
 22809              	.LBB11748:
 22810              	.LBI11748:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22811              		.loc 20 89 7 view .LVU5319
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22812              		.loc 20 89 7 is_stmt 0 view .LVU5320
 22813              	.LBE11748:
 22814              	.LBE11747:
  98:chord.h       ****         "Triad",
 22815              		.loc 43 98 36 view .LVU5321
 22816 0958 624A     		ldr	r2, .L853
 22817              		.file 44 "arp.h"
   1:arp.h         **** /* 
   2:arp.h         ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:arp.h         ****  * You may use, distribute and modify this code under the
   4:arp.h         ****  * terms of the GNU AGPLv3 license.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 817


   5:arp.h         ****  * 
   6:arp.h         ****  * You should have received a copy of the GNU AGPLv3 license with
   7:arp.h         ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:arp.h         ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:arp.h         ****  */
  10:arp.h         **** 
  11:arp.h         **** #include <string>
  12:arp.h         **** #include <vector>
  13:arp.h         **** 
  14:arp.h         **** #include "chord.h"
  15:arp.h         **** 
  16:arp.h         **** namespace jellybeans {
  17:arp.h         ****     class Arp {
  18:arp.h         ****     private:
  19:arp.h         ****         // Maximum arp steps
  20:arp.h         ****         int maxSteps;
  21:arp.h         **** 
  22:arp.h         ****         // Tracks the current position in arpTraversal
  23:arp.h         ****         int traversalIndex;
  24:arp.h         **** 
  25:arp.h         ****         // Current step index, 0 based
  26:arp.h         ****         int step;
  27:arp.h         **** 
  28:arp.h         ****         // If true, a new note is being played this frame
  29:arp.h         ****         bool newNote; 
  30:arp.h         **** 
  31:arp.h         ****         // The CV value currently being sent to Patches' DAC's output 1
  32:arp.h         ****         // This is stored so that it's only calculated upon a change
  33:arp.h         ****         float dacValue;
  34:arp.h         **** 
  35:arp.h         ****         // Number of clock pulses that have been received since the last reset
  36:arp.h         ****         //int clockCount;
  37:arp.h         **** 
  38:arp.h         ****         // The arp's clock division (step to the next note every X clock pulses)
  39:arp.h         ****         // TODO convert to int, out of say 256 notes per bar, so that we can use rapid pulses for f
  40:arp.h         ****         //int clockDiv;
  41:arp.h         **** 
  42:arp.h         ****         // Stores which arp note should be played at each next step.
  43:arp.h         ****         // Contains a list of indices of arpNotes
  44:arp.h         ****         std::vector<int> traversal;
  45:arp.h         **** 
  46:arp.h         ****         // Must be an element of mu::arpPatterns
  47:arp.h         ****         std::string pattern;
  48:arp.h         **** 
  49:arp.h         ****         // String representation of the arp
  50:arp.h         ****         std::string string;
  51:arp.h         **** 
  52:arp.h         ****         // Current root note
  53:arp.h         ****         float root; //TODO delete?
  54:arp.h         **** 
  55:arp.h         ****         // Underlying chord
  56:arp.h         ****         DiatonicChord* chord;
  57:arp.h         ****     public:
  58:arp.h         ****         Arp();// : Arp(8, DiatonicChord(1, 0, "Major", "Triad"), "Up", 1) {};
  59:arp.h         **** 
  60:arp.h         ****         // @param maxSteps
  61:arp.h         ****         // @param chord
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 818


  62:arp.h         ****         // @param pattern - must be an element of arpPatterns
  63:arp.h         ****         // @param clockDiv
  64:arp.h         ****         Arp(int, DiatonicChord*, std::string, int);
  65:arp.h         **** 
  66:arp.h         ****         // Intended to be called every time a clock pulse is received
  67:arp.h         ****         void onClockPulse();
  68:arp.h         ****     
  69:arp.h         ****         // Updates the arp traversal values based on the current pattern
  70:arp.h         ****         void updateTraversal();
  71:arp.h         **** 
  72:arp.h         ****         // Called every time the arp steps to the next note
  73:arp.h         ****         void updateStep();
  74:arp.h         **** 
  75:arp.h         ****         void updateString();
  76:arp.h         **** 
  77:arp.h         ****         std::string toString();
  78:arp.h         **** 
  79:arp.h         ****         // Returns true if there's a new note to consume.
  80:arp.h         ****         // Resets the "new note" bool, effectively telling the 
  81:arp.h         ****         // arp "I've consumed the note"
  82:arp.h         ****         bool getNewNote();
  83:arp.h         **** 
  84:arp.h         ****         float getDacValue();
  85:arp.h         **** 
  86:arp.h         ****         DiatonicChord* getChord();
  87:arp.h         **** 
  88:arp.h         ****         //void setMaxSteps(int);
  89:arp.h         ****         //void setChord(DiatonicChord*);
  90:arp.h         ****         void setPattern(std::string);
  91:arp.h         ****     };
  92:arp.h         **** 
  93:arp.h         ****     const std::vector<std::string> arpPatterns {
  94:arp.h         ****         "Up",
  95:arp.h         ****         "Down",
  96:arp.h         ****         "U+D In",
  97:arp.h         ****         "U+D Ex",
  98:arp.h         ****         "Random"
  99:arp.h         ****     };
 22818              		.loc 44 99 5 view .LVU5322
 22819 095a 82AD     		add	r5, sp, #520
  98:chord.h       ****         "Triad",
 22820              		.loc 43 98 36 view .LVU5323
 22821 095c 6949     		ldr	r1, .L853+32
 22822 095e 7C48     		ldr	r0, .L853+108
 22823 0960 FFF7FEFF 		bl	__aeabi_atexit
 22824              	.LVL1343:
 22825              	.LBB11749:
 22826              	.LBI11749:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22827              		.loc 19 144 7 is_stmt 1 view .LVU5324
 22828              	.LBB11750:
 22829              	.LBI11750:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22830              		.loc 20 79 7 view .LVU5325
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22831              		.loc 20 79 7 is_stmt 0 view .LVU5326
 22832              	.LBE11750:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 819


 22833              	.LBE11749:
 22834              		.loc 44 99 5 view .LVU5327
 22835 0964 7B49     		ldr	r1, .L853+112
 22836 0966 2046     		mov	r0, r4
 22837 0968 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22838              	.LVL1344:
 22839              	.LBB11751:
 22840              	.LBI11751:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22841              		.loc 19 144 7 is_stmt 1 view .LVU5328
 22842              	.LBB11752:
 22843              	.LBI11752:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22844              		.loc 20 79 7 view .LVU5329
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22845              		.loc 20 79 7 is_stmt 0 view .LVU5330
 22846              	.LBE11752:
 22847              	.LBE11751:
 22848              		.loc 44 99 5 view .LVU5331
 22849 096c 7A49     		ldr	r1, .L853+116
 22850 096e 6AA8     		add	r0, sp, #424
 22851 0970 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22852              	.LVL1345:
 22853              	.LBB11753:
 22854              	.LBI11753:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22855              		.loc 19 144 7 is_stmt 1 view .LVU5332
 22856              	.LBB11754:
 22857              	.LBI11754:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22858              		.loc 20 79 7 view .LVU5333
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22859              		.loc 20 79 7 is_stmt 0 view .LVU5334
 22860              	.LBE11754:
 22861              	.LBE11753:
 22862              		.loc 44 99 5 view .LVU5335
 22863 0974 7949     		ldr	r1, .L853+120
 22864 0976 70A8     		add	r0, sp, #448
 22865 0978 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22866              	.LVL1346:
 22867              	.LBB11755:
 22868              	.LBI11755:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22869              		.loc 19 144 7 is_stmt 1 view .LVU5336
 22870              	.LBB11756:
 22871              	.LBI11756:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22872              		.loc 20 79 7 view .LVU5337
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22873              		.loc 20 79 7 is_stmt 0 view .LVU5338
 22874              	.LBE11756:
 22875              	.LBE11755:
 22876              		.loc 44 99 5 view .LVU5339
 22877 097c 7849     		ldr	r1, .L853+124
 22878 097e 76A8     		add	r0, sp, #472
 22879 0980 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22880              	.LVL1347:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 820


 22881              	.LBB11757:
 22882              	.LBI11757:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22883              		.loc 19 144 7 is_stmt 1 view .LVU5340
 22884              	.LBB11758:
 22885              	.LBI11758:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22886              		.loc 20 79 7 view .LVU5341
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22887              		.loc 20 79 7 is_stmt 0 view .LVU5342
 22888              	.LBE11758:
 22889              	.LBE11757:
 22890              		.loc 44 99 5 view .LVU5343
 22891 0984 7749     		ldr	r1, .L853+128
 22892 0986 7CA8     		add	r0, sp, #496
 22893 0988 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22894              	.LVL1348:
 22895 098c 0523     		movs	r3, #5
 22896 098e 48AA     		add	r2, sp, #288
 22897 0990 4894     		str	r4, [sp, #288]
 22898 0992 4993     		str	r3, [sp, #292]
 22899              	.LVL1349:
 22900              	.LBB11759:
 22901              	.LBI11759:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22902              		.loc 19 144 7 is_stmt 1 view .LVU5344
 22903              	.LBB11760:
 22904              	.LBI11760:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22905              		.loc 20 79 7 view .LVU5345
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22906              		.loc 20 79 7 is_stmt 0 view .LVU5346
 22907              	.LBE11760:
 22908              	.LBE11759:
 22909              		.loc 44 99 5 view .LVU5347
 22910 0994 41AB     		add	r3, sp, #260
 22911 0996 7448     		ldr	r0, .L853+132
 22912 0998 06CA     		ldm	r2, {r1, r2}
 22913 099a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 22914              	.LVL1350:
 22915              	.LBB11761:
 22916              	.LBI11761:
 22917              		.loc 19 162 7 is_stmt 1 view .LVU5348
 22918              	.LBB11762:
 22919              	.LBI11762:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22920              		.loc 20 89 7 view .LVU5349
 22921              	.L812:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22922              		.loc 20 89 7 is_stmt 0 view .LVU5350
 22923              	.LBE11762:
 22924              	.LBE11761:
 22925              		.loc 44 99 5 view .LVU5351
 22926 099e 183D     		subs	r5, r5, #24
 22927              	.LVL1351:
 22928              	.LBB11763:
 22929              	.LBI11763:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 821


 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 22930              		.loc 18 657 7 is_stmt 1 view .LVU5352
 22931              	.LBB11764:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22932              		.loc 18 658 19 is_stmt 0 view .LVU5353
 22933 09a0 2846     		mov	r0, r5
 22934 09a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 22935              	.LVL1352:
 22936              	.LBB11765:
 22937              	.LBI11765:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22938              		.loc 18 150 14 is_stmt 1 view .LVU5354
 22939              	.LBB11766:
 22940              	.LBI11766:
 22941              		.loc 19 162 7 view .LVU5355
 22942              	.LBB11767:
 22943              	.LBI11767:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22944              		.loc 20 89 7 view .LVU5356
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22945              		.loc 20 89 7 is_stmt 0 view .LVU5357
 22946              	.LBE11767:
 22947              	.LBE11766:
 22948              	.LBE11765:
 22949              	.LBE11764:
 22950              	.LBE11763:
 22951              		.loc 44 99 5 view .LVU5358
 22952 09a6 A542     		cmp	r5, r4
 22953 09a8 F9D1     		bne	.L812
 22954              	.LVL1353:
 22955              	.LBB11768:
 22956              	.LBI11768:
 22957              		.loc 19 162 7 is_stmt 1 view .LVU5359
 22958              	.LBB11769:
 22959              	.LBI11769:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22960              		.loc 20 89 7 view .LVU5360
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22961              		.loc 20 89 7 is_stmt 0 view .LVU5361
 22962              	.LBE11769:
 22963              	.LBE11768:
 22964              	.LBB11770:
 22965              	.LBI11770:
 22966              		.loc 19 162 7 is_stmt 1 view .LVU5362
 22967              	.LBB11771:
 22968              	.LBI11771:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22969              		.loc 20 89 7 view .LVU5363
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22970              		.loc 20 89 7 is_stmt 0 view .LVU5364
 22971              	.LBE11771:
 22972              	.LBE11770:
 22973              	.LBB11772:
 22974              	.LBI11772:
 22975              		.loc 19 162 7 is_stmt 1 view .LVU5365
 22976              	.LBB11773:
 22977              	.LBI11773:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 822


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22978              		.loc 20 89 7 view .LVU5366
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22979              		.loc 20 89 7 is_stmt 0 view .LVU5367
 22980              	.LBE11773:
 22981              	.LBE11772:
 22982              	.LBB11774:
 22983              	.LBI11774:
 22984              		.loc 19 162 7 is_stmt 1 view .LVU5368
 22985              	.LBB11775:
 22986              	.LBI11775:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22987              		.loc 20 89 7 view .LVU5369
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22988              		.loc 20 89 7 is_stmt 0 view .LVU5370
 22989              	.LBE11775:
 22990              	.LBE11774:
 22991              	.LBB11776:
 22992              	.LBI11776:
 22993              		.loc 19 162 7 is_stmt 1 view .LVU5371
 22994              	.LBB11777:
 22995              	.LBI11777:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22996              		.loc 20 89 7 view .LVU5372
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22997              		.loc 20 89 7 is_stmt 0 view .LVU5373
 22998              	.LBE11777:
 22999              	.LBE11776:
  93:arp.h         ****         "Up",
 23000              		.loc 44 93 36 view .LVU5374
 23001 09aa 4E4A     		ldr	r2, .L853
 100:arp.h         **** 
 101:arp.h         ****     const std::vector<std::string> arpRhythms {
 102:arp.h         ****         "None",
 103:arp.h         ****         "Sw 25%",
 104:arp.h         ****         "Sw 50%",
 105:arp.h         ****         "Sw 75%",
 106:arp.h         ****         "Sw 100%"
 107:arp.h         ****     };
 23002              		.loc 44 107 5 view .LVU5375
 23003 09ac 82AD     		add	r5, sp, #520
  93:arp.h         ****         "Up",
 23004              		.loc 44 93 36 view .LVU5376
 23005 09ae 5549     		ldr	r1, .L853+32
 23006 09b0 6D48     		ldr	r0, .L853+132
 23007 09b2 FFF7FEFF 		bl	__aeabi_atexit
 23008              	.LVL1354:
 23009              	.LBB11778:
 23010              	.LBI11778:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23011              		.loc 19 144 7 is_stmt 1 view .LVU5377
 23012              	.LBB11779:
 23013              	.LBI11779:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23014              		.loc 20 79 7 view .LVU5378
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23015              		.loc 20 79 7 is_stmt 0 view .LVU5379
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 823


 23016              	.LBE11779:
 23017              	.LBE11778:
 23018              		.loc 44 107 5 view .LVU5380
 23019 09b6 4E49     		ldr	r1, .L853+12
 23020 09b8 2046     		mov	r0, r4
 23021 09ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23022              	.LVL1355:
 23023              	.LBB11780:
 23024              	.LBI11780:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23025              		.loc 19 144 7 is_stmt 1 view .LVU5381
 23026              	.LBB11781:
 23027              	.LBI11781:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23028              		.loc 20 79 7 view .LVU5382
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23029              		.loc 20 79 7 is_stmt 0 view .LVU5383
 23030              	.LBE11781:
 23031              	.LBE11780:
 23032              		.loc 44 107 5 view .LVU5384
 23033 09be 6B49     		ldr	r1, .L853+136
 23034 09c0 6AA8     		add	r0, sp, #424
 23035 09c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23036              	.LVL1356:
 23037              	.LBB11782:
 23038              	.LBI11782:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23039              		.loc 19 144 7 is_stmt 1 view .LVU5385
 23040              	.LBB11783:
 23041              	.LBI11783:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23042              		.loc 20 79 7 view .LVU5386
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23043              		.loc 20 79 7 is_stmt 0 view .LVU5387
 23044              	.LBE11783:
 23045              	.LBE11782:
 23046              		.loc 44 107 5 view .LVU5388
 23047 09c6 6A49     		ldr	r1, .L853+140
 23048 09c8 70A8     		add	r0, sp, #448
 23049 09ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23050              	.LVL1357:
 23051              	.LBB11784:
 23052              	.LBI11784:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23053              		.loc 19 144 7 is_stmt 1 view .LVU5389
 23054              	.LBB11785:
 23055              	.LBI11785:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23056              		.loc 20 79 7 view .LVU5390
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23057              		.loc 20 79 7 is_stmt 0 view .LVU5391
 23058              	.LBE11785:
 23059              	.LBE11784:
 23060              		.loc 44 107 5 view .LVU5392
 23061 09ce 76A8     		add	r0, sp, #472
 23062 09d0 6849     		ldr	r1, .L853+144
 23063 09d2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 824


 23064              	.LVL1358:
 23065              	.LBB11786:
 23066              	.LBI11786:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23067              		.loc 19 144 7 is_stmt 1 view .LVU5393
 23068              	.LBB11787:
 23069              	.LBI11787:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23070              		.loc 20 79 7 view .LVU5394
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23071              		.loc 20 79 7 is_stmt 0 view .LVU5395
 23072              	.LBE11787:
 23073              	.LBE11786:
 23074              		.loc 44 107 5 view .LVU5396
 23075 09d6 7CA8     		add	r0, sp, #496
 23076 09d8 6749     		ldr	r1, .L853+148
 23077 09da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23078              	.LVL1359:
 23079 09de 0523     		movs	r3, #5
 23080 09e0 41AA     		add	r2, sp, #260
 23081 09e2 4194     		str	r4, [sp, #260]
 23082 09e4 4293     		str	r3, [sp, #264]
 23083              	.LVL1360:
 23084              	.LBB11788:
 23085              	.LBI11788:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23086              		.loc 19 144 7 is_stmt 1 view .LVU5397
 23087              	.LBB11789:
 23088              	.LBI11789:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23089              		.loc 20 79 7 view .LVU5398
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23090              		.loc 20 79 7 is_stmt 0 view .LVU5399
 23091              	.LBE11789:
 23092              	.LBE11788:
 23093              		.loc 44 107 5 view .LVU5400
 23094 09e6 3AAB     		add	r3, sp, #232
 23095 09e8 6448     		ldr	r0, .L853+152
 23096 09ea 06CA     		ldm	r2, {r1, r2}
 23097 09ec FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 23098              	.LVL1361:
 23099              	.LBB11790:
 23100              	.LBI11790:
 23101              		.loc 19 162 7 is_stmt 1 view .LVU5401
 23102              	.LBB11791:
 23103              	.LBI11791:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23104              		.loc 20 89 7 view .LVU5402
 23105              	.L813:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23106              		.loc 20 89 7 is_stmt 0 view .LVU5403
 23107              	.LBE11791:
 23108              	.LBE11790:
 23109              		.loc 44 107 5 view .LVU5404
 23110 09f0 183D     		subs	r5, r5, #24
 23111              	.LVL1362:
 23112              	.LBB11792:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 825


 23113              	.LBI11792:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 23114              		.loc 18 657 7 is_stmt 1 view .LVU5405
 23115              	.LBB11793:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23116              		.loc 18 658 19 is_stmt 0 view .LVU5406
 23117 09f2 2846     		mov	r0, r5
 23118 09f4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 23119              	.LVL1363:
 23120              	.LBB11794:
 23121              	.LBI11794:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23122              		.loc 18 150 14 is_stmt 1 view .LVU5407
 23123              	.LBB11795:
 23124              	.LBI11795:
 23125              		.loc 19 162 7 view .LVU5408
 23126              	.LBB11796:
 23127              	.LBI11796:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23128              		.loc 20 89 7 view .LVU5409
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23129              		.loc 20 89 7 is_stmt 0 view .LVU5410
 23130              	.LBE11796:
 23131              	.LBE11795:
 23132              	.LBE11794:
 23133              	.LBE11793:
 23134              	.LBE11792:
 23135              		.loc 44 107 5 view .LVU5411
 23136 09f8 A542     		cmp	r5, r4
 23137 09fa F9D1     		bne	.L813
 23138              	.LVL1364:
 23139              	.LBB11797:
 23140              	.LBI11797:
 23141              		.loc 19 162 7 is_stmt 1 view .LVU5412
 23142              	.LBB11798:
 23143              	.LBI11798:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23144              		.loc 20 89 7 view .LVU5413
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23145              		.loc 20 89 7 is_stmt 0 view .LVU5414
 23146              	.LBE11798:
 23147              	.LBE11797:
 23148              	.LBB11799:
 23149              	.LBI11799:
 23150              		.loc 19 162 7 is_stmt 1 view .LVU5415
 23151              	.LBB11800:
 23152              	.LBI11800:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23153              		.loc 20 89 7 view .LVU5416
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23154              		.loc 20 89 7 is_stmt 0 view .LVU5417
 23155              	.LBE11800:
 23156              	.LBE11799:
 23157              	.LBB11801:
 23158              	.LBI11801:
 23159              		.loc 19 162 7 is_stmt 1 view .LVU5418
 23160              	.LBB11802:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 826


 23161              	.LBI11802:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23162              		.loc 20 89 7 view .LVU5419
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23163              		.loc 20 89 7 is_stmt 0 view .LVU5420
 23164              	.LBE11802:
 23165              	.LBE11801:
 23166              	.LBB11803:
 23167              	.LBI11803:
 23168              		.loc 19 162 7 is_stmt 1 view .LVU5421
 23169              	.LBB11804:
 23170              	.LBI11804:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23171              		.loc 20 89 7 view .LVU5422
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23172              		.loc 20 89 7 is_stmt 0 view .LVU5423
 23173              	.LBE11804:
 23174              	.LBE11803:
 23175              	.LBB11805:
 23176              	.LBI11805:
 23177              		.loc 19 162 7 is_stmt 1 view .LVU5424
 23178              	.LBB11806:
 23179              	.LBI11806:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23180              		.loc 20 89 7 view .LVU5425
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23181              		.loc 20 89 7 is_stmt 0 view .LVU5426
 23182              	.LBE11806:
 23183              	.LBE11805:
 101:arp.h         ****         "None",
 23184              		.loc 44 101 36 view .LVU5427
 23185 09fc 394A     		ldr	r2, .L853
 23186              	.LBB11807:
 23187              	.LBB11808:
 23188              	.LBB11809:
 23189              	.LBB11810:
 23190              	.LBB11811:
 23191              	.LBB11812:
 23192              	.LBB11813:
 23193              		.file 45 "../../libdaisy/src/per/qspi.h"
   1:../../libdaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libdaisy/src/per/qspi.h **** 
   4:../../libdaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libdaisy/src/per/qspi.h **** 
   6:../../libdaisy/src/per/qspi.h **** #include <cstdint>
   7:../../libdaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libdaisy/src/per/qspi.h **** 
   9:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../../libdaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../../libdaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../../libdaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 827


  18:../../libdaisy/src/per/qspi.h **** 
  19:../../libdaisy/src/per/qspi.h **** namespace daisy
  20:../../libdaisy/src/per/qspi.h **** {
  21:../../libdaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../../libdaisy/src/per/qspi.h **** @{
  23:../../libdaisy/src/per/qspi.h **** */
  24:../../libdaisy/src/per/qspi.h **** 
  25:../../libdaisy/src/per/qspi.h **** /** 
  26:../../libdaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libdaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libdaisy/src/per/qspi.h ****     * IS25LP080D
  29:../../libdaisy/src/per/qspi.h **** */
  30:../../libdaisy/src/per/qspi.h **** class QSPIHandle
  31:../../libdaisy/src/per/qspi.h **** {
  32:../../libdaisy/src/per/qspi.h ****   public:
  33:../../libdaisy/src/per/qspi.h ****     enum Result
  34:../../libdaisy/src/per/qspi.h ****     {
  35:../../libdaisy/src/per/qspi.h ****         OK = 0,
  36:../../libdaisy/src/per/qspi.h ****         ERR
  37:../../libdaisy/src/per/qspi.h ****     };
  38:../../libdaisy/src/per/qspi.h **** 
  39:../../libdaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libdaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libdaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libdaisy/src/per/qspi.h ****          * 
  43:../../libdaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libdaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libdaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libdaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libdaisy/src/per/qspi.h ****          */
  48:../../libdaisy/src/per/qspi.h ****     enum Status
  49:../../libdaisy/src/per/qspi.h ****     {
  50:../../libdaisy/src/per/qspi.h ****         GOOD = 0,
  51:../../libdaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libdaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libdaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libdaisy/src/per/qspi.h ****     };
  55:../../libdaisy/src/per/qspi.h **** 
  56:../../libdaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libdaisy/src/per/qspi.h ****     struct Config
  58:../../libdaisy/src/per/qspi.h ****     {
  59:../../libdaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libdaisy/src/per/qspi.h ****         enum Device
  61:../../libdaisy/src/per/qspi.h ****         {
  62:../../libdaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libdaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libdaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libdaisy/src/per/qspi.h ****         };
  66:../../libdaisy/src/per/qspi.h **** 
  67:../../libdaisy/src/per/qspi.h ****         /** 
  68:../../libdaisy/src/per/qspi.h ****         Modes of operation.
  69:../../libdaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libdaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libdaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../../libdaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libdaisy/src/per/qspi.h ****         */
  74:../../libdaisy/src/per/qspi.h ****         enum Mode
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 828


  75:../../libdaisy/src/per/qspi.h ****         {
  76:../../libdaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libdaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libdaisy/src/per/qspi.h ****             MODE_LAST,
  79:../../libdaisy/src/per/qspi.h ****         };
  80:../../libdaisy/src/per/qspi.h **** 
  81:../../libdaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libdaisy/src/per/qspi.h ****         struct
  83:../../libdaisy/src/per/qspi.h ****         {
  84:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libdaisy/src/per/qspi.h ****         } pin_config;
  91:../../libdaisy/src/per/qspi.h **** 
  92:../../libdaisy/src/per/qspi.h ****         Device device;
  93:../../libdaisy/src/per/qspi.h ****         Mode   mode;
  94:../../libdaisy/src/per/qspi.h ****     };
  95:../../libdaisy/src/per/qspi.h **** 
  96:../../libdaisy/src/per/qspi.h ****     /** 
  97:../../libdaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libdaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libdaisy/src/per/qspi.h ****         */
 101:../../libdaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libdaisy/src/per/qspi.h **** 
 103:../../libdaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../../libdaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libdaisy/src/per/qspi.h **** 
 106:../../libdaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libdaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libdaisy/src/per/qspi.h ****     /** 
 109:../../libdaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libdaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libdaisy/src/per/qspi.h ****         */
 113:../../libdaisy/src/per/qspi.h ****     Result DeInit();
 114:../../libdaisy/src/per/qspi.h **** 
 115:../../libdaisy/src/per/qspi.h ****     /** 
 116:../../libdaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libdaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libdaisy/src/per/qspi.h ****         \param address Address to write to
 119:../../libdaisy/src/per/qspi.h ****         \param size Buffer size
 120:../../libdaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libdaisy/src/per/qspi.h ****         */
 123:../../libdaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libdaisy/src/per/qspi.h **** 
 125:../../libdaisy/src/per/qspi.h ****     /** 
 126:../../libdaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libdaisy/src/per/qspi.h ****         \param address Address to write to
 128:../../libdaisy/src/per/qspi.h ****         \param size Buffer size
 129:../../libdaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libdaisy/src/per/qspi.h ****         */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 829


 132:../../libdaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libdaisy/src/per/qspi.h **** 
 134:../../libdaisy/src/per/qspi.h ****     /** 
 135:../../libdaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libdaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libdaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libdaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libdaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libdaisy/src/per/qspi.h ****         */
 142:../../libdaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libdaisy/src/per/qspi.h **** 
 144:../../libdaisy/src/per/qspi.h ****     /**  
 145:../../libdaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libdaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libdaisy/src/per/qspi.h ****         \param addr Address of sector to erase
 148:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libdaisy/src/per/qspi.h ****         */
 150:../../libdaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libdaisy/src/per/qspi.h **** 
 152:../../libdaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libdaisy/src/per/qspi.h ****      *  \returns Status
 154:../../libdaisy/src/per/qspi.h ****      */
 155:../../libdaisy/src/per/qspi.h ****     Status GetStatus();
 156:../../libdaisy/src/per/qspi.h **** 
 157:../../libdaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libdaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libdaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libdaisy/src/per/qspi.h ****      * 
 161:../../libdaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libdaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../../libdaisy/src/per/qspi.h ****     */
 164:../../libdaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libdaisy/src/per/qspi.h **** 
 166:../../libdaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 23194              		.loc 45 166 34 view .LVU5428
 23195 09fe 0024     		movs	r4, #0
 23196              	.LBE11813:
 23197              	.LBE11812:
 23198              	.LBE11811:
 23199              	.LBE11810:
 23200              	.LBE11809:
 23201              	.LBE11808:
 23202              	.LBE11807:
 101:arp.h         ****         "None",
 23203              		.loc 44 101 36 view .LVU5429
 23204 0a00 4049     		ldr	r1, .L853+32
 23205 0a02 5E48     		ldr	r0, .L853+152
 23206 0a04 FFF7FEFF 		bl	__aeabi_atexit
 23207              	.LVL1365:
 23208              	.LBB11894:
 23209              	.LBI11807:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23210              		.loc 3 39 5 is_stmt 1 view .LVU5430
 23211              	.LBB11891:
 23212              	.LBB11835:
 23213              	.LBI11809:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 830


  21:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 23214              		.loc 9 21 5 view .LVU5431
 23215              	.LBB11832:
 23216              	.LBB11818:
 23217              	.LBI11811:
 23218              		.loc 45 166 5 view .LVU5432
 23219              		.loc 45 166 5 is_stmt 0 view .LVU5433
 23220              	.LBE11818:
 23221              	.LBB11819:
 23222              	.LBI11819:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 23223              		.loc 13 62 5 is_stmt 1 view .LVU5434
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 23224              		.loc 13 62 5 is_stmt 0 view .LVU5435
 23225              	.LBE11819:
 23226              	.LBB11822:
 23227              	.LBI11822:
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 23228              		.loc 12 84 5 is_stmt 1 view .LVU5436
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 23229              		.loc 12 84 5 is_stmt 0 view .LVU5437
 23230              	.LBE11822:
 23231              	.LBB11823:
 23232              	.LBI11823:
 23233              		.file 46 "../../libdaisy/src/per/dac.h"
   1:../../libdaisy/src/per/dac.h **** #pragma once
   2:../../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libdaisy/src/per/dac.h **** 
   5:../../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/dac.h **** 
   7:../../libdaisy/src/per/dac.h **** namespace daisy
   8:../../libdaisy/src/per/dac.h **** {
   9:../../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy/src/per/dac.h ****  ** 
  11:../../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../../libdaisy/src/per/dac.h ****  **
  14:../../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../../libdaisy/src/per/dac.h ****  **
  16:../../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../../libdaisy/src/per/dac.h ****  ***/
  20:../../libdaisy/src/per/dac.h **** class DacHandle
  21:../../libdaisy/src/per/dac.h **** {
  22:../../libdaisy/src/per/dac.h ****   public:
  23:../../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../../libdaisy/src/per/dac.h ****     enum class Result
  25:../../libdaisy/src/per/dac.h ****     {
  26:../../libdaisy/src/per/dac.h ****         OK,
  27:../../libdaisy/src/per/dac.h ****         ERR,
  28:../../libdaisy/src/per/dac.h ****     };
  29:../../libdaisy/src/per/dac.h **** 
  30:../../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../../libdaisy/src/per/dac.h ****     enum class Channel
  32:../../libdaisy/src/per/dac.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 831


  33:../../libdaisy/src/per/dac.h ****         ONE,
  34:../../libdaisy/src/per/dac.h ****         TWO,
  35:../../libdaisy/src/per/dac.h ****         BOTH,
  36:../../libdaisy/src/per/dac.h ****     };
  37:../../libdaisy/src/per/dac.h **** 
  38:../../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../../libdaisy/src/per/dac.h ****      **
  40:../../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../../libdaisy/src/per/dac.h ****      **
  42:../../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../../libdaisy/src/per/dac.h ****      ***/
  45:../../libdaisy/src/per/dac.h ****     enum class Mode
  46:../../libdaisy/src/per/dac.h ****     {
  47:../../libdaisy/src/per/dac.h ****         POLLING,
  48:../../libdaisy/src/per/dac.h ****         DMA,
  49:../../libdaisy/src/per/dac.h ****     };
  50:../../libdaisy/src/per/dac.h **** 
  51:../../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../../libdaisy/src/per/dac.h ****      ***/
  55:../../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../../libdaisy/src/per/dac.h ****     {
  57:../../libdaisy/src/per/dac.h ****         BITS_8,
  58:../../libdaisy/src/per/dac.h ****         BITS_12
  59:../../libdaisy/src/per/dac.h ****     };
  60:../../libdaisy/src/per/dac.h **** 
  61:../../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../../libdaisy/src/per/dac.h ****     {
  64:../../libdaisy/src/per/dac.h ****         ENABLED,
  65:../../libdaisy/src/per/dac.h ****         DISABLED,
  66:../../libdaisy/src/per/dac.h ****     };
  67:../../libdaisy/src/per/dac.h **** 
  68:../../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../../libdaisy/src/per/dac.h ****     struct Config
  70:../../libdaisy/src/per/dac.h ****     {
  71:../../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../../libdaisy/src/per/dac.h **** 
  77:../../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../../libdaisy/src/per/dac.h ****     };
  82:../../libdaisy/src/per/dac.h **** 
  83:../../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 23234              		.loc 46 83 5 is_stmt 1 view .LVU5438
 23235              		.loc 46 83 5 is_stmt 0 view .LVU5439
 23236              	.LBE11823:
 23237              	.LBB11826:
 23238              	.LBI11826:
  40:../../libdaisy/src/hid/usb.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 832


 23239              		.loc 11 40 5 is_stmt 1 view .LVU5440
  40:../../libdaisy/src/hid/usb.h **** 
 23240              		.loc 11 40 5 is_stmt 0 view .LVU5441
 23241              	.LBE11826:
 23242              	.LBB11827:
 23243              	.LBI11827:
  77:../../libdaisy/src/sys/system.h ****     ~System() {}
 23244              		.loc 10 77 5 is_stmt 1 view .LVU5442
  77:../../libdaisy/src/sys/system.h ****     ~System() {}
 23245              		.loc 10 77 5 is_stmt 0 view .LVU5443
 23246              	.LBE11827:
 23247              	.LBE11832:
 23248              	.LBE11835:
 23249              	.LBB11836:
 23250              	.LBI11836:
  20:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
 23251              		.loc 7 20 5 is_stmt 1 view .LVU5444
 23252              	.LBB11837:
 23253              	.LBB11838:
 23254              	.LBI11838:
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 23255              		.loc 8 41 5 view .LVU5445
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 23256              		.loc 8 41 5 is_stmt 0 view .LVU5446
 23257              	.LBE11838:
 23258              	.LBE11837:
 23259              	.LBE11836:
 23260              	.LBE11891:
 23261              	.LBE11894:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23262              		.loc 3 39 18 is_stmt 1 view .LVU5447
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23263              		.loc 3 39 18 view .LVU5448
 23264              	.LBB11895:
 23265              	.LBB11892:
 23266              	.LBB11839:
 23267              	.LBI11839:
  83:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 23268              		.loc 6 83 5 view .LVU5449
 23269              	.LBB11840:
 23270              	.LBB11841:
 23271              	.LBI11841:
 23272              		.file 47 "../../libdaisy/src/per/uart.h"
   1:../../libdaisy/src/per/uart.h **** /* 
   2:../../libdaisy/src/per/uart.h **** TODO
   3:../../libdaisy/src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libdaisy/src/per/uart.h **** - Transmit function improvements.
   5:../../libdaisy/src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libdaisy/src/per/uart.h **** */
   7:../../libdaisy/src/per/uart.h **** 
   8:../../libdaisy/src/per/uart.h **** #pragma once
   9:../../libdaisy/src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libdaisy/src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libdaisy/src/per/uart.h **** #include "daisy_core.h"
  12:../../libdaisy/src/per/uart.h **** 
  13:../../libdaisy/src/per/uart.h **** 
  14:../../libdaisy/src/per/uart.h **** namespace daisy
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 833


  15:../../libdaisy/src/per/uart.h **** {
  16:../../libdaisy/src/per/uart.h **** /** @addtogroup serial
  17:../../libdaisy/src/per/uart.h ****     @{
  18:../../libdaisy/src/per/uart.h ****     */
  19:../../libdaisy/src/per/uart.h **** 
  20:../../libdaisy/src/per/uart.h **** /** 
  21:../../libdaisy/src/per/uart.h ****     Uart Peripheral
  22:../../libdaisy/src/per/uart.h ****     @author shensley
  23:../../libdaisy/src/per/uart.h ****     @date March 2020
  24:../../libdaisy/src/per/uart.h ****     */
  25:../../libdaisy/src/per/uart.h **** class UartHandler
  26:../../libdaisy/src/per/uart.h **** {
  27:../../libdaisy/src/per/uart.h ****   public:
  28:../../libdaisy/src/per/uart.h ****     struct Config
  29:../../libdaisy/src/per/uart.h ****     {
  30:../../libdaisy/src/per/uart.h ****         enum class Peripheral
  31:../../libdaisy/src/per/uart.h ****         {
  32:../../libdaisy/src/per/uart.h ****             USART_1,
  33:../../libdaisy/src/per/uart.h ****             USART_2,
  34:../../libdaisy/src/per/uart.h ****             USART_3,
  35:../../libdaisy/src/per/uart.h ****             UART_4,
  36:../../libdaisy/src/per/uart.h ****             UART_5,
  37:../../libdaisy/src/per/uart.h ****             USART_6,
  38:../../libdaisy/src/per/uart.h ****             UART_7,
  39:../../libdaisy/src/per/uart.h ****             UART_8,
  40:../../libdaisy/src/per/uart.h ****             LPUART_1,
  41:../../libdaisy/src/per/uart.h ****         };
  42:../../libdaisy/src/per/uart.h **** 
  43:../../libdaisy/src/per/uart.h ****         enum class StopBits
  44:../../libdaisy/src/per/uart.h ****         {
  45:../../libdaisy/src/per/uart.h ****             BITS_0_5,
  46:../../libdaisy/src/per/uart.h ****             BITS_1,
  47:../../libdaisy/src/per/uart.h ****             BITS_1_5,
  48:../../libdaisy/src/per/uart.h ****             BITS_2,
  49:../../libdaisy/src/per/uart.h ****         };
  50:../../libdaisy/src/per/uart.h **** 
  51:../../libdaisy/src/per/uart.h ****         enum class Parity
  52:../../libdaisy/src/per/uart.h ****         {
  53:../../libdaisy/src/per/uart.h ****             NONE,
  54:../../libdaisy/src/per/uart.h ****             EVEN,
  55:../../libdaisy/src/per/uart.h ****             ODD,
  56:../../libdaisy/src/per/uart.h ****         };
  57:../../libdaisy/src/per/uart.h **** 
  58:../../libdaisy/src/per/uart.h ****         enum class Mode
  59:../../libdaisy/src/per/uart.h ****         {
  60:../../libdaisy/src/per/uart.h ****             RX,
  61:../../libdaisy/src/per/uart.h ****             TX,
  62:../../libdaisy/src/per/uart.h ****             TX_RX,
  63:../../libdaisy/src/per/uart.h ****         };
  64:../../libdaisy/src/per/uart.h **** 
  65:../../libdaisy/src/per/uart.h ****         enum class WordLength
  66:../../libdaisy/src/per/uart.h ****         {
  67:../../libdaisy/src/per/uart.h ****             BITS_7,
  68:../../libdaisy/src/per/uart.h ****             BITS_8,
  69:../../libdaisy/src/per/uart.h ****             BITS_9,
  70:../../libdaisy/src/per/uart.h ****         };
  71:../../libdaisy/src/per/uart.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 834


  72:../../libdaisy/src/per/uart.h ****         struct
  73:../../libdaisy/src/per/uart.h ****         {
  74:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libdaisy/src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libdaisy/src/per/uart.h **** 
  78:../../libdaisy/src/per/uart.h ****         Peripheral periph;
  79:../../libdaisy/src/per/uart.h ****         StopBits   stopbits;
  80:../../libdaisy/src/per/uart.h ****         Parity     parity;
  81:../../libdaisy/src/per/uart.h ****         Mode       mode;
  82:../../libdaisy/src/per/uart.h ****         WordLength wordlength;
  83:../../libdaisy/src/per/uart.h ****         uint32_t   baudrate;
  84:../../libdaisy/src/per/uart.h ****     };
  85:../../libdaisy/src/per/uart.h **** 
  86:../../libdaisy/src/per/uart.h **** 
  87:../../libdaisy/src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 23273              		.loc 47 87 5 view .LVU5450
 23274              		.loc 47 87 5 is_stmt 0 view .LVU5451
 23275              	.LBE11841:
 23276              	.LBB11844:
 23277              	.LBI11844:
 23278              		.file 48 "../../libdaisy/src/util/ringbuffer.h"
   1:../../libdaisy/src/util/ringbuffer.h **** #pragma once
   2:../../libdaisy/src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libdaisy/src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libdaisy/src/util/ringbuffer.h **** 
   5:../../libdaisy/src/util/ringbuffer.h **** #include <algorithm>
   6:../../libdaisy/src/util/ringbuffer.h **** 
   7:../../libdaisy/src/util/ringbuffer.h **** namespace daisy
   8:../../libdaisy/src/util/ringbuffer.h **** {
   9:../../libdaisy/src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libdaisy/src/util/ringbuffer.h ****     @{
  11:../../libdaisy/src/util/ringbuffer.h **** */
  12:../../libdaisy/src/util/ringbuffer.h **** 
  13:../../libdaisy/src/util/ringbuffer.h **** /**
  14:../../libdaisy/src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libdaisy/src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libdaisy/src/util/ringbuffer.h **** */
  17:../../libdaisy/src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libdaisy/src/util/ringbuffer.h **** class RingBuffer
  19:../../libdaisy/src/util/ringbuffer.h **** {
  20:../../libdaisy/src/util/ringbuffer.h ****   public:
  21:../../libdaisy/src/util/ringbuffer.h ****     RingBuffer() {}
 23279              		.loc 48 21 5 is_stmt 1 view .LVU5452
 23280              		.loc 48 21 5 is_stmt 0 view .LVU5453
 23281              	.LBE11844:
 23282              	.LBB11845:
 23283              	.LBI11845:
  85:../../libdaisy/src/hid/midi.h **** 
  86:../../libdaisy/src/hid/midi.h ****     struct Config
 23284              		.loc 6 86 12 is_stmt 1 view .LVU5454
 23285              	.LBB11846:
 23286              	.LBI11846:
  34:../../libdaisy/src/hid/midi.h ****         {
 23287              		.loc 6 34 9 view .LVU5455
 23288              	.LBB11847:
 23289              	.LBB11848:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 835


  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 23290              		.loc 6 36 13 view .LVU5456
  37:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 23291              		.loc 6 37 13 view .LVU5457
  38:../../libdaisy/src/hid/midi.h ****         }
 23292              		.loc 6 38 13 view .LVU5458
  38:../../libdaisy/src/hid/midi.h ****         }
 23293              		.loc 6 38 13 is_stmt 0 view .LVU5459
 23294              	.LBE11848:
 23295              	.LBE11847:
 23296              	.LBE11846:
 23297              	.LBE11845:
 23298              	.LBB11855:
 23299              	.LBI11855:
  25:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
 23300              		.loc 6 25 5 is_stmt 1 view .LVU5460
 23301              	.LBB11856:
 23302              	.LBI11856:
 23303              		.loc 47 87 5 view .LVU5461
 23304              		.loc 47 87 5 is_stmt 0 view .LVU5462
 23305              	.LBE11856:
 23306              	.LBE11855:
 23307              	.LBE11840:
 23308              	.LBE11839:
 23309              	.LBB11867:
 23310              	.LBI11867:
  16:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
 23311              		.loc 4 16 5 is_stmt 1 view .LVU5463
 23312              	.LBB11868:
 23313              	.LBB11869:
 23314              	.LBB11870:
 23315              	.LBI11870:
 218:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplayImpl() {}
 23316              		.loc 5 218 5 view .LVU5464
 23317              	.LBB11871:
 23318              	.LBI11871:
  22:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplay() {}
 23319              		.loc 5 22 5 view .LVU5465
 23320              	.LBE11871:
 23321              	.LBE11870:
 23322              	.LBE11869:
 23323              	.LBE11868:
 23324              	.LBE11867:
 23325              	.LBB11884:
 23326              	.LBB11833:
 23327              	.LBB11828:
 23328              	.LBB11816:
 23329              	.LBB11814:
 23330              		.loc 45 166 34 is_stmt 0 view .LVU5466
 23331 0a08 5D48     		ldr	r0, .L853+156
 23332              	.LBE11814:
 23333              	.LBE11816:
 23334              	.LBE11828:
 23335              	.LBE11833:
 23336              	.LBE11884:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23337              		.loc 3 39 18 view .LVU5467
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 836


 23338 0a0a 5E4A     		ldr	r2, .L853+160
 23339              	.LBB11885:
 23340              	.LBB11864:
 23341              	.LBB11860:
 23342              	.LBB11853:
 23343              	.LBB11851:
 23344              	.LBB11849:
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 23345              		.loc 6 36 20 view .LVU5468
 23346 0a0c 00F51043 		add	r3, r0, #36864
 23347              	.LBE11849:
 23348              	.LBE11851:
 23349              	.LBE11853:
 23350              	.LBE11860:
 23351              	.LBE11864:
 23352              	.LBE11885:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23353              		.loc 3 39 18 view .LVU5469
 23354 0a10 5D4E     		ldr	r6, .L853+164
 23355              	.LBE11892:
 23356              	.LBE11895:
  39:Jellybeans.cpp **** DaisyPatch patch;
 23357              		.loc 17 39 12 view .LVU5470
 23358 0a12 5E49     		ldr	r1, .L853+168
 23359              	.LBB11896:
 23360              	.LBB11893:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23361              		.loc 3 39 18 view .LVU5471
 23362 0a14 C3F89021 		str	r2, [r3, #400]
 23363 0a18 5D4A     		ldr	r2, .L853+172
 23364              	.LBB11886:
 23365              	.LBB11865:
 23366              	.LBB11861:
 23367              	.LBB11854:
 23368              	.LBB11852:
 23369              	.LBB11850:
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 23370              		.loc 6 36 20 view .LVU5472
 23371 0a1a C3F88C41 		str	r4, [r3, #396]
 23372              	.LBE11850:
 23373              	.LBE11852:
 23374              	.LBE11854:
 23375              	.LBE11861:
 23376              	.LBB11862:
 23377              	.LBB11859:
 23378              	.LBB11857:
 23379              	.LBB11858:
 23380              		.loc 47 87 35 view .LVU5473
 23381 0a1e C3F89441 		str	r4, [r3, #404]
 23382              	.LBE11858:
 23383              	.LBE11857:
 23384              	.LBE11859:
 23385              	.LBE11862:
 23386              	.LBE11865:
 23387              	.LBE11886:
 23388              	.LBB11887:
 23389              	.LBB11882:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 837


 23390              	.LBB11880:
 23391              	.LBB11872:
 23392              	.LBB11873:
 23393              	.LBB11874:
 23394              	.LBB11875:
 23395              	.LBB11876:
 23396              		.file 49 "../../libdaisy/src/per/spi.h"
   1:../../libdaisy/src/per/spi.h **** #pragma once
   2:../../libdaisy/src/per/spi.h **** #ifndef DSY_SPI_H
   3:../../libdaisy/src/per/spi.h **** #define DSY_SPI_H
   4:../../libdaisy/src/per/spi.h **** 
   5:../../libdaisy/src/per/spi.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/spi.h **** 
   7:../../libdaisy/src/per/spi.h **** /* TODO:
   8:../../libdaisy/src/per/spi.h **** - Add documentation
   9:../../libdaisy/src/per/spi.h **** - Add reception
  10:../../libdaisy/src/per/spi.h **** - Add IT
  11:../../libdaisy/src/per/spi.h **** - Add DMA
  12:../../libdaisy/src/per/spi.h **** */
  13:../../libdaisy/src/per/spi.h **** 
  14:../../libdaisy/src/per/spi.h **** namespace daisy
  15:../../libdaisy/src/per/spi.h **** {
  16:../../libdaisy/src/per/spi.h **** /** @addtogroup serial
  17:../../libdaisy/src/per/spi.h **** @{
  18:../../libdaisy/src/per/spi.h **** */
  19:../../libdaisy/src/per/spi.h **** 
  20:../../libdaisy/src/per/spi.h **** /**  Handler for serial peripheral interface */
  21:../../libdaisy/src/per/spi.h **** class SpiHandle
  22:../../libdaisy/src/per/spi.h **** {
  23:../../libdaisy/src/per/spi.h ****   public:
  24:../../libdaisy/src/per/spi.h ****     struct Config
  25:../../libdaisy/src/per/spi.h ****     {
  26:../../libdaisy/src/per/spi.h ****         enum class Peripheral
  27:../../libdaisy/src/per/spi.h ****         {
  28:../../libdaisy/src/per/spi.h ****             SPI_1,
  29:../../libdaisy/src/per/spi.h ****             SPI_2,
  30:../../libdaisy/src/per/spi.h ****             SPI_3,
  31:../../libdaisy/src/per/spi.h ****             SPI_4,
  32:../../libdaisy/src/per/spi.h ****             SPI_5,
  33:../../libdaisy/src/per/spi.h ****             SPI_6,
  34:../../libdaisy/src/per/spi.h ****         };
  35:../../libdaisy/src/per/spi.h **** 
  36:../../libdaisy/src/per/spi.h ****         enum class Mode
  37:../../libdaisy/src/per/spi.h ****         {
  38:../../libdaisy/src/per/spi.h ****             MASTER,
  39:../../libdaisy/src/per/spi.h ****             SLAVE,
  40:../../libdaisy/src/per/spi.h ****         };
  41:../../libdaisy/src/per/spi.h **** 
  42:../../libdaisy/src/per/spi.h ****         enum class Direction
  43:../../libdaisy/src/per/spi.h ****         {
  44:../../libdaisy/src/per/spi.h ****             TWO_LINES,
  45:../../libdaisy/src/per/spi.h ****             TWO_LINES_TX_ONLY,
  46:../../libdaisy/src/per/spi.h ****             TWO_LINES_RX_ONLY,
  47:../../libdaisy/src/per/spi.h ****             ONE_LINE,
  48:../../libdaisy/src/per/spi.h ****         };
  49:../../libdaisy/src/per/spi.h **** 
  50:../../libdaisy/src/per/spi.h ****         enum class ClockPolarity
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 838


  51:../../libdaisy/src/per/spi.h ****         {
  52:../../libdaisy/src/per/spi.h ****             LOW,
  53:../../libdaisy/src/per/spi.h ****             HIGH,
  54:../../libdaisy/src/per/spi.h ****         };
  55:../../libdaisy/src/per/spi.h **** 
  56:../../libdaisy/src/per/spi.h ****         enum class ClockPhase
  57:../../libdaisy/src/per/spi.h ****         {
  58:../../libdaisy/src/per/spi.h ****             ONE_EDGE,
  59:../../libdaisy/src/per/spi.h ****             TWO_EDGE,
  60:../../libdaisy/src/per/spi.h ****         };
  61:../../libdaisy/src/per/spi.h **** 
  62:../../libdaisy/src/per/spi.h ****         enum class NSS
  63:../../libdaisy/src/per/spi.h ****         {
  64:../../libdaisy/src/per/spi.h ****             SOFT,
  65:../../libdaisy/src/per/spi.h ****             HARD_INPUT,
  66:../../libdaisy/src/per/spi.h ****             HARD_OUTPUT,
  67:../../libdaisy/src/per/spi.h ****         };
  68:../../libdaisy/src/per/spi.h **** 
  69:../../libdaisy/src/per/spi.h ****         enum class BaudPrescaler
  70:../../libdaisy/src/per/spi.h ****         {
  71:../../libdaisy/src/per/spi.h ****             PS_2,
  72:../../libdaisy/src/per/spi.h ****             PS_4,
  73:../../libdaisy/src/per/spi.h ****             PS_8,
  74:../../libdaisy/src/per/spi.h ****             PS_16,
  75:../../libdaisy/src/per/spi.h ****             PS_32,
  76:../../libdaisy/src/per/spi.h ****             PS_64,
  77:../../libdaisy/src/per/spi.h ****             PS_128,
  78:../../libdaisy/src/per/spi.h ****             PS_256,
  79:../../libdaisy/src/per/spi.h ****         };
  80:../../libdaisy/src/per/spi.h **** 
  81:../../libdaisy/src/per/spi.h ****         struct
  82:../../libdaisy/src/per/spi.h ****         {
  83:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin sclk; /**< & */
  84:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin miso; /**< & */
  85:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin mosi; /**< & */
  86:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin nss;  /**< & */
  87:../../libdaisy/src/per/spi.h ****         } pin_config;
  88:../../libdaisy/src/per/spi.h **** 
  89:../../libdaisy/src/per/spi.h ****         Peripheral    periph;
  90:../../libdaisy/src/per/spi.h ****         Mode          mode;
  91:../../libdaisy/src/per/spi.h ****         Direction     direction;
  92:../../libdaisy/src/per/spi.h ****         unsigned long datasize;
  93:../../libdaisy/src/per/spi.h ****         ClockPolarity clock_polarity;
  94:../../libdaisy/src/per/spi.h ****         ClockPhase    clock_phase;
  95:../../libdaisy/src/per/spi.h ****         NSS           nss;
  96:../../libdaisy/src/per/spi.h ****         BaudPrescaler baud_prescaler;
  97:../../libdaisy/src/per/spi.h ****     };
  98:../../libdaisy/src/per/spi.h **** 
  99:../../libdaisy/src/per/spi.h ****     SpiHandle() : pimpl_(nullptr) {}
 23397              		.loc 49 99 33 view .LVU5474
 23398 0a22 C3F8A841 		str	r4, [r3, #424]
 23399              	.LBE11876:
 23400              	.LBE11875:
 23401              	.LBE11874:
 23402              	.LBE11873:
 23403              	.LBE11872:
 23404              	.LBE11880:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 839


 23405              	.LBE11882:
 23406              	.LBE11887:
 23407              	.LBB11888:
 23408              	.LBB11834:
 23409              	.LBB11829:
 23410              	.LBB11817:
 23411              	.LBB11815:
 23412              		.loc 45 166 34 view .LVU5475
 23413 0a26 0460     		str	r4, [r0]
 23414              	.LBE11815:
 23415              	.LBE11817:
 23416              	.LBE11829:
 23417              	.LBB11830:
 23418              	.LBB11820:
 23419              	.LBB11821:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 23420              		.loc 13 62 35 view .LVU5476
 23421 0a28 4461     		str	r4, [r0, #20]
 23422              	.LBE11821:
 23423              	.LBE11820:
 23424              	.LBE11830:
 23425              	.LBB11831:
 23426              	.LBB11824:
 23427              	.LBB11825:
 23428              		.loc 46 83 33 view .LVU5477
 23429 0a2a 0462     		str	r4, [r0, #32]
 23430              	.LBE11825:
 23431              	.LBE11824:
 23432              	.LBE11831:
 23433              	.LBE11834:
 23434              	.LBE11888:
 23435              	.LBB11889:
 23436              	.LBB11866:
 23437              	.LBB11863:
 23438              	.LBB11842:
 23439              	.LBB11843:
 23440              		.loc 47 87 35 view .LVU5478
 23441 0a2c C0F8E440 		str	r4, [r0, #228]
 23442              	.LBE11843:
 23443              	.LBE11842:
 23444              	.LBE11863:
 23445              	.LBE11866:
 23446              	.LBE11889:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23447              		.loc 3 39 18 view .LVU5479
 23448 0a30 C3E96662 		strd	r6, r2, [r3, #408]
 23449              	.LVL1366:
 23450              	.LBB11890:
 23451              	.LBB11883:
 23452              	.LBB11881:
  16:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
 23453              		.loc 4 16 19 view .LVU5480
 23454 0a34 574A     		ldr	r2, .L853+176
 23455 0a36 584E     		ldr	r6, .L853+180
 23456 0a38 C3F8A021 		str	r2, [r3, #416]
 23457              	.LVL1367:
 23458              	.LBB11879:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 840


 23459              	.LBI11872:
 132:../../libdaisy/src/dev/oled_ssd130x.h **** {
 23460              		.loc 14 132 7 is_stmt 1 view .LVU5481
 23461              	.LBB11878:
 23462              	.LBI11873:
  60:../../libdaisy/src/dev/oled_ssd130x.h **** {
 23463              		.loc 14 60 7 view .LVU5482
 23464              	.LBB11877:
 23465              	.LBI11874:
 23466              		.loc 49 99 5 view .LVU5483
 23467              		.loc 49 99 5 is_stmt 0 view .LVU5484
 23468              	.LBE11877:
 23469              	.LBE11878:
 23470              	.LBE11879:
 23471              	.LBE11881:
 23472              	.LBE11883:
 23473              	.LBE11890:
 23474              	.LBE11893:
 23475              	.LBE11896:
  39:Jellybeans.cpp **** DaisyPatch patch;
 23476              		.loc 17 39 12 view .LVU5485
 23477 0a3c 294A     		ldr	r2, .L853
 23478 0a3e FFF7FEFF 		bl	__aeabi_atexit
 23479              	.LVL1368:
 23480              	.LBB11897:
 23481              	.LBI11897:
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 23482              		.loc 18 431 7 is_stmt 1 view .LVU5486
 23483              	.LBB11898:
 23484              	.LBB11899:
 23485              	.LBI11899:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23486              		.loc 18 190 7 view .LVU5487
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23487              		.loc 18 190 7 is_stmt 0 view .LVU5488
 23488              	.LBE11899:
 23489              	.LBB11900:
 23490              	.LBI11900:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23491              		.loc 19 144 7 is_stmt 1 view .LVU5489
 23492              	.LBB11901:
 23493              	.LBI11901:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23494              		.loc 20 79 7 view .LVU5490
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23495              		.loc 20 79 7 is_stmt 0 view .LVU5491
 23496              	.LBE11901:
 23497              	.LBE11900:
 23498              	.LBB11902:
 23499              	.LBI11902:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 23500              		.loc 18 159 2 is_stmt 1 view .LVU5492
 23501              	.LBB11903:
 23502              	.LBB11904:
 23503              	.LBB11905:
 23504              	.LBI11905:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 841


 23505              		.loc 34 101 5 view .LVU5493
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 23506              		.loc 34 101 5 is_stmt 0 view .LVU5494
 23507              	.LBE11905:
 23508              	.LBB11906:
 23509              	.LBI11906:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23510              		.loc 19 147 7 is_stmt 1 view .LVU5495
 23511              	.LBB11907:
 23512              	.LBI11907:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23513              		.loc 20 82 7 view .LVU5496
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23514              		.loc 20 82 7 is_stmt 0 view .LVU5497
 23515              	.LBE11907:
 23516              	.LBE11906:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 23517              		.loc 18 160 46 view .LVU5498
 23518 0a42 5648     		ldr	r0, .L853+184
 23519              	.LBE11904:
 23520              	.LBE11903:
 23521              	.LBE11902:
 23522              	.LBE11898:
 23523              	.LBE11897:
  43:Jellybeans.cpp **** std::string debugString;
 23524              		.loc 17 43 13 view .LVU5499
 23525 0a44 274A     		ldr	r2, .L853
 23526              	.LBB11927:
 23527              	.LBB11925:
 23528              	.LBB11912:
 23529              	.LBB11910:
 23530              	.LBB11908:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 23531              		.loc 18 160 46 view .LVU5500
 23532 0a46 00F10803 		add	r3, r0, #8
 23533              	.LBE11908:
 23534              	.LBE11910:
 23535              	.LBE11912:
 23536              	.LBE11925:
 23537              	.LBE11927:
  43:Jellybeans.cpp **** std::string debugString;
 23538              		.loc 17 43 13 view .LVU5501
 23539 0a4a 5549     		ldr	r1, .L853+188
 23540              	.LBB11928:
 23541              	.LBB11926:
 23542              	.LBB11913:
 23543              	.LBB11914:
 23544              	.LBB11915:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23545              		.loc 18 183 26 view .LVU5502
 23546 0a4c 4460     		str	r4, [r0, #4]
 23547              	.LBE11915:
 23548              	.LBE11914:
 23549              	.LBB11916:
 23550              	.LBB11917:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 23551              		.loc 21 322 14 view .LVU5503
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 842


 23552 0a4e 0472     		strb	r4, [r0, #8]
 23553 0a50 3446     		mov	r4, r6
 23554              	.LBE11917:
 23555              	.LBE11916:
 23556              	.LBE11913:
 23557              	.LBB11921:
 23558              	.LBB11911:
 23559              	.LBB11909:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 23560              		.loc 18 160 46 view .LVU5504
 23561 0a52 0360     		str	r3, [r0]
 23562              	.LVL1369:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 23563              		.loc 18 160 46 view .LVU5505
 23564              	.LBE11909:
 23565              	.LBE11911:
 23566              	.LBE11921:
 23567              	.LBB11922:
 23568              	.LBI11922:
 23569              		.loc 19 162 7 is_stmt 1 view .LVU5506
 23570              	.LBB11923:
 23571              	.LBI11923:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23572              		.loc 20 89 7 view .LVU5507
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23573              		.loc 20 89 7 is_stmt 0 view .LVU5508
 23574              	.LBE11923:
 23575              	.LBE11922:
 23576              	.LBB11924:
 23577              	.LBI11913:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23578              		.loc 18 214 7 is_stmt 1 view .LVU5509
 23579              	.LBB11919:
 23580              	.LBI11914:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 23581              		.loc 18 182 7 view .LVU5510
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 23582              		.loc 18 182 7 is_stmt 0 view .LVU5511
 23583              	.LBE11919:
 23584              	.LBB11920:
 23585              	.LBI11916:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 23586              		.loc 21 321 7 is_stmt 1 view .LVU5512
 23587              	.LBB11918:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 23588              		.loc 21 322 9 view .LVU5513
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 23589              		.loc 21 322 9 is_stmt 0 view .LVU5514
 23590              	.LBE11918:
 23591              	.LBE11920:
 23592              	.LBE11924:
 23593              	.LBE11926:
 23594              	.LBE11928:
  43:Jellybeans.cpp **** std::string debugString;
 23595              		.loc 17 43 13 view .LVU5515
 23596 0a54 FFF7FEFF 		bl	__aeabi_atexit
 23597              	.LVL1370:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 843


  49:Jellybeans.cpp **** const FontDef font = Font_7x10;
 23598              		.loc 17 49 15 view .LVU5516
 23599 0a58 524A     		ldr	r2, .L853+192
 23600 0a5a 534B     		ldr	r3, .L853+196
 23601 0a5c 92E80300 		ldm	r2, {r0, r1}
 23602 0a60 83E80300 		stm	r3, {r0, r1}
 23603              	.LVL1371:
 23604              	.LBB11929:
 23605              	.LBI11929:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23606              		.loc 19 144 7 is_stmt 1 view .LVU5517
 23607              	.LBB11930:
 23608              	.LBI11930:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23609              		.loc 20 79 7 view .LVU5518
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23610              		.loc 20 79 7 is_stmt 0 view .LVU5519
 23611              	.LBE11930:
 23612              	.LBE11929:
  68:Jellybeans.cpp **** };
 23613              		.loc 17 68 1 view .LVU5520
 23614 0a64 2846     		mov	r0, r5
 23615 0a66 5149     		ldr	r1, .L853+200
 23616 0a68 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23617              	.LVL1372:
 23618              	.LBB11931:
 23619              	.LBI11931:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23620              		.loc 19 144 7 is_stmt 1 view .LVU5521
 23621              	.LBB11932:
 23622              	.LBI11932:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23623              		.loc 20 79 7 view .LVU5522
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23624              		.loc 20 79 7 is_stmt 0 view .LVU5523
 23625              	.LBE11932:
 23626              	.LBE11931:
  68:Jellybeans.cpp **** };
 23627              		.loc 17 68 1 view .LVU5524
 23628 0a6c 5049     		ldr	r1, .L853+204
 23629 0a6e 6AA8     		add	r0, sp, #424
 23630 0a70 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23631              	.LVL1373:
 23632              	.LBB11933:
 23633              	.LBI11933:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23634              		.loc 19 144 7 is_stmt 1 view .LVU5525
 23635              	.LBB11934:
 23636              	.LBI11934:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23637              		.loc 20 79 7 view .LVU5526
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23638              		.loc 20 79 7 is_stmt 0 view .LVU5527
 23639              	.LBE11934:
 23640              	.LBE11933:
  68:Jellybeans.cpp **** };
 23641              		.loc 17 68 1 view .LVU5528
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 844


 23642 0a74 4F49     		ldr	r1, .L853+208
 23643 0a76 70A8     		add	r0, sp, #448
 23644 0a78 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23645              	.LVL1374:
 23646 0a7c 0322     		movs	r2, #3
 23647 0a7e 33AB     		add	r3, sp, #204
 23648 0a80 3A95     		str	r5, [sp, #232]
 23649 0a82 3B92     		str	r2, [sp, #236]
 23650              	.LVL1375:
 23651              	.LBB11935:
 23652              	.LBI11935:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23653              		.loc 19 144 7 is_stmt 1 view .LVU5529
 23654              	.LBB11936:
 23655              	.LBI11936:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23656              		.loc 20 79 7 view .LVU5530
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23657              		.loc 20 79 7 is_stmt 0 view .LVU5531
 23658              	.LBE11936:
 23659              	.LBE11935:
  68:Jellybeans.cpp **** };
 23660              		.loc 17 68 1 view .LVU5532
 23661 0a84 3AAA     		add	r2, sp, #232
 23662 0a86 4C48     		ldr	r0, .L853+212
 23663 0a88 06CA     		ldm	r2, {r1, r2}
 23664 0a8a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 23665              	.LVL1376:
 23666              	.LBB11937:
 23667              	.LBI11937:
 23668              		.loc 19 162 7 is_stmt 1 view .LVU5533
 23669              	.LBB11938:
 23670              	.LBI11938:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23671              		.loc 20 89 7 view .LVU5534
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23672              		.loc 20 89 7 is_stmt 0 view .LVU5535
 23673              	.LBE11938:
 23674              	.LBE11937:
 23675              	.LBB11939:
 23676              	.LBI11939:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 23677              		.loc 18 657 7 is_stmt 1 view .LVU5536
 23678              	.LBB11940:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23679              		.loc 18 658 19 is_stmt 0 view .LVU5537
 23680 0a8e 70A8     		add	r0, sp, #448
 23681              	.LVL1377:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23682              		.loc 18 658 19 view .LVU5538
 23683 0a90 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 23684              	.LVL1378:
 23685              	.LBB11941:
 23686              	.LBI11941:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23687              		.loc 18 150 14 is_stmt 1 view .LVU5539
 23688              	.LBB11942:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 845


 23689              	.LBI11942:
 23690              		.loc 19 162 7 view .LVU5540
 23691              	.LBB11943:
 23692              	.LBI11943:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23693              		.loc 20 89 7 view .LVU5541
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23694              		.loc 20 89 7 is_stmt 0 view .LVU5542
 23695              	.LBE11943:
 23696              	.LBE11942:
 23697              	.LBE11941:
 23698              	.LBE11940:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 23699              		.loc 18 657 7 is_stmt 1 view .LVU5543
 23700              	.LBB11950:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23701              		.loc 18 658 19 is_stmt 0 view .LVU5544
 23702 0a94 6AA8     		add	r0, sp, #424
 23703              	.LVL1379:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23704              		.loc 18 658 19 view .LVU5545
 23705 0a96 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 23706              	.LVL1380:
 23707              	.LBB11948:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23708              		.loc 18 150 14 is_stmt 1 view .LVU5546
 23709              	.LBB11946:
 23710              		.loc 19 162 7 view .LVU5547
 23711              	.LBB11944:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23712              		.loc 20 89 7 view .LVU5548
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23713              		.loc 20 89 7 is_stmt 0 view .LVU5549
 23714              	.LBE11944:
 23715              	.LBE11946:
 23716              	.LBE11948:
 23717              	.LBE11950:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 23718              		.loc 18 657 7 is_stmt 1 view .LVU5550
 23719              	.LBB11951:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23720              		.loc 18 658 19 is_stmt 0 view .LVU5551
 23721 0a9a 2846     		mov	r0, r5
 23722 0a9c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 23723              	.LVL1381:
 23724              	.LBB11949:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23725              		.loc 18 150 14 is_stmt 1 view .LVU5552
 23726              	.LBB11947:
 23727              		.loc 19 162 7 view .LVU5553
 23728              	.LBB11945:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23729              		.loc 20 89 7 view .LVU5554
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23730              		.loc 20 89 7 is_stmt 0 view .LVU5555
 23731              	.LBE11945:
 23732              	.LBE11947:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 846


 23733              	.LBE11949:
 23734              	.LBE11951:
 23735              	.LBE11939:
 23736              	.LBB11952:
 23737              	.LBI11952:
 23738              		.loc 19 162 7 is_stmt 1 view .LVU5556
 23739              	.LBB11953:
 23740              	.LBI11953:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23741              		.loc 20 89 7 view .LVU5557
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23742              		.loc 20 89 7 is_stmt 0 view .LVU5558
 23743              	.LBE11953:
 23744              	.LBE11952:
 23745              	.LBB11954:
 23746              	.LBI11954:
 23747              		.loc 19 162 7 is_stmt 1 view .LVU5559
 23748              	.LBB11955:
 23749              	.LBI11955:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23750              		.loc 20 89 7 view .LVU5560
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23751              		.loc 20 89 7 is_stmt 0 view .LVU5561
 23752              	.LBE11955:
 23753              	.LBE11954:
 23754              	.LBB11956:
 23755              	.LBI11956:
 23756              		.loc 19 162 7 is_stmt 1 view .LVU5562
 23757              	.LBB11957:
 23758              	.LBI11957:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23759              		.loc 20 89 7 view .LVU5563
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23760              		.loc 20 89 7 is_stmt 0 view .LVU5564
 23761              	.LBE11957:
 23762              	.LBE11956:
  64:Jellybeans.cpp **** const std::vector<std::string> allOctaves {
 23763              		.loc 17 64 32 view .LVU5565
 23764 0aa0 104A     		ldr	r2, .L853
 23765 0aa2 1849     		ldr	r1, .L853+32
 23766 0aa4 06F54875 		add	r5, r6, #800
 23767 0aa8 4348     		ldr	r0, .L853+212
 23768 0aaa FFF7FEFF 		bl	__aeabi_atexit
 23769              	.LVL1382:
 23770              	.LBB11958:
 23771              	.LBI11958:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 23772              		.loc 24 94 12 is_stmt 1 view .LVU5566
 23773              	.LBB11959:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 23774              		.loc 24 94 12 view .LVU5567
 23775              	.L814:
 23776 0aae 2046     		mov	r0, r4
 23777 0ab0 5034     		adds	r4, r4, #80
 23778 0ab2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1Ev
 23779              	.LVL1383:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 847


 23780              		.loc 24 94 12 view .LVU5568
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 23781              		.loc 24 94 12 view .LVU5569
 23782 0ab6 AC42     		cmp	r4, r5
 23783 0ab8 F9D1     		bne	.L814
 23784              	.LVL1384:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 23785              		.loc 24 94 12 is_stmt 0 view .LVU5570
 23786              	.LBE11959:
 23787              	.LBE11958:
  78:Jellybeans.cpp **** std::array<MenuItem, 10> menuItems;
 23788              		.loc 17 78 26 view .LVU5571
 23789 0aba 0A4A     		ldr	r2, .L853
 23790 0abc 3F49     		ldr	r1, .L853+216
 23791 0abe 3648     		ldr	r0, .L853+180
 23792 0ac0 FFF7FEFF 		bl	__aeabi_atexit
 23793              	.LVL1385:
 23794              	.LBB11960:
 23795              	.LBI11960:
 23796              		.loc 24 185 7 is_stmt 1 view .LVU5572
 23797              	.LBB11961:
 23798              	.LBI11961:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23799              		.loc 24 55 7 view .LVU5573
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23800              		.loc 24 55 7 is_stmt 0 view .LVU5574
 23801              	.LBE11961:
 23802              	.LBE11960:
  82:Jellybeans.cpp **** MenuItem *mDivision  = &menuItems[1];
 23803              		.loc 17 82 11 view .LVU5575
 23804 0ac4 3E4B     		ldr	r3, .L853+220
 23805 0ac6 3F4A     		ldr	r2, .L853+224
  83:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
 23806              		.loc 17 83 11 view .LVU5576
 23807 0ac8 03F15004 		add	r4, r3, #80
  85:Jellybeans.cpp **** MenuItem *mTonic     = &menuItems[4];
 23808              		.loc 17 85 11 view .LVU5577
 23809 0acc 03F1F005 		add	r5, r3, #240
  82:Jellybeans.cpp **** MenuItem *mDivision  = &menuItems[1];
 23810              		.loc 17 82 11 view .LVU5578
 23811 0ad0 1360     		str	r3, [r2]
  81:Jellybeans.cpp **** MenuItem *mPattern   = &menuItems[0];
 23812              		.loc 17 81 11 view .LVU5579
 23813 0ad2 3D49     		ldr	r1, .L853+228
  83:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
 23814              		.loc 17 83 11 view .LVU5580
 23815 0ad4 3D48     		ldr	r0, .L853+232
  85:Jellybeans.cpp **** MenuItem *mTonic     = &menuItems[4];
 23816              		.loc 17 85 11 view .LVU5581
 23817 0ad6 3E4A     		ldr	r2, .L853+236
  83:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
 23818              		.loc 17 83 11 view .LVU5582
 23819 0ad8 0460     		str	r4, [r0]
  84:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
 23820              		.loc 17 84 11 view .LVU5583
 23821 0ada 03F1A004 		add	r4, r3, #160
  85:Jellybeans.cpp **** MenuItem *mTonic     = &menuItems[4];
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 848


 23822              		.loc 17 85 11 view .LVU5584
 23823 0ade 1560     		str	r5, [r2]
 23824 0ae0 78E0     		b	.L854
 23825              	.L855:
 23826 0ae2 00BF     		.align	2
 23827              	.L853:
 23828 0ae4 00000000 		.word	__dso_handle
 23829 0ae8 00000000 		.word	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 23830 0aec 00000000 		.word	.LANCHOR27
 23831 0af0 58010000 		.word	.LC98
 23832 0af4 60010000 		.word	.LC99
 23833 0af8 68010000 		.word	.LC100
 23834 0afc 70010000 		.word	.LC101
 23835 0b00 00000000 		.word	.LANCHOR19
 23836 0b04 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 23837 0b08 78010000 		.word	.LC102
 23838 0b0c 7C010000 		.word	.LC103
 23839 0b10 80010000 		.word	.LC104
 23840 0b14 84010000 		.word	.LC105
 23841 0b18 88010000 		.word	.LC106
 23842 0b1c 00000000 		.word	.LANCHOR17
 23843 0b20 8C010000 		.word	.LC107
 23844 0b24 94010000 		.word	.LC108
 23845 0b28 9C010000 		.word	.LC109
 23846 0b2c A0010000 		.word	.LC110
 23847 0b30 A8010000 		.word	.LC111
 23848 0b34 B0010000 		.word	.LC112
 23849 0b38 B8010000 		.word	.LC113
 23850 0b3c BC010000 		.word	.LC114
 23851 0b40 C4010000 		.word	.LC115
 23852 0b44 CC010000 		.word	.LC116
 23853 0b48 D4010000 		.word	.LC117
 23854 0b4c DC010000 		.word	.LC118
 23855 0b50 00000000 		.word	.LANCHOR18
 23856 0b54 E4010000 		.word	.LC119
 23857 0b58 E8010000 		.word	.LC120
 23858 0b5c F0010000 		.word	.LC121
 23859 0b60 F8010000 		.word	.LC122
 23860 0b64 00020000 		.word	.LC123
 23861 0b68 00000000 		.word	.LANCHOR16
 23862 0b6c 08020000 		.word	.LC124
 23863 0b70 10020000 		.word	.LC125
 23864 0b74 18020000 		.word	.LC126
 23865 0b78 20020000 		.word	.LC127
 23866 0b7c 00000000 		.word	.LANCHOR22
 23867 0b80 00000000 		.word	patch
 23868 0b84 01070106 		.word	100730625
 23869 0b88 80707FF0 		.word	-260083584
 23870 0b8c 00000000 		.word	_ZN5daisy10DaisyPatchD1Ev
 23871 0b90 0FF80700 		.word	522255
 23872 0b94 08000000 		.word	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE+8
 23873 0b98 00000000 		.word	.LANCHOR5
 23874 0b9c 00000000 		.word	.LANCHOR15
 23875 0ba0 00000000 		.word	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 23876 0ba4 00000000 		.word	Font_7x10
 23877 0ba8 00000000 		.word	.LANCHOR14
 23878 0bac 28020000 		.word	.LC128
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 849


 23879 0bb0 2C020000 		.word	.LC129
 23880 0bb4 30020000 		.word	.LC130
 23881 0bb8 00000000 		.word	.LANCHOR23
 23882 0bbc 00000000 		.word	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev
 23883 0bc0 50000000 		.word	.LANCHOR5+80
 23884 0bc4 00000000 		.word	.LANCHOR28
 23885 0bc8 00000000 		.word	.LANCHOR1
 23886 0bcc 00000000 		.word	.LANCHOR2
 23887 0bd0 00000000 		.word	.LANCHOR30
 23888              	.L854:
  81:Jellybeans.cpp **** MenuItem *mPattern   = &menuItems[0];
 23889              		.loc 17 81 11 view .LVU5585
 23890 0bd4 0E60     		str	r6, [r1]
 23891              	.LVL1386:
 23892              	.LBB11962:
 23893              	.LBI11962:
 23894              		.loc 24 185 7 is_stmt 1 view .LVU5586
 23895              	.LBB11963:
 23896              	.LBI11963:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23897              		.loc 24 55 7 view .LVU5587
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23898              		.loc 24 55 7 is_stmt 0 view .LVU5588
 23899              	.LBE11963:
 23900              	.LBE11962:
 23901              	.LBB11964:
 23902              	.LBI11964:
 23903              		.loc 24 185 7 is_stmt 1 view .LVU5589
 23904              	.LBB11965:
 23905              	.LBI11965:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23906              		.loc 24 55 7 view .LVU5590
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23907              		.loc 24 55 7 is_stmt 0 view .LVU5591
 23908              	.LBE11965:
 23909              	.LBE11964:
 23910              	.LBB11966:
 23911              	.LBI11966:
 23912              		.loc 24 185 7 is_stmt 1 view .LVU5592
 23913              	.LBB11967:
 23914              	.LBI11967:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23915              		.loc 24 55 7 view .LVU5593
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23916              		.loc 24 55 7 is_stmt 0 view .LVU5594
 23917              	.LBE11967:
 23918              	.LBE11966:
  86:Jellybeans.cpp **** MenuItem *mScale     = &menuItems[5];
 23919              		.loc 17 86 11 view .LVU5595
 23920 0bd6 03F5A071 		add	r1, r3, #320
  84:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
 23921              		.loc 17 84 11 view .LVU5596
 23922 0bda 2248     		ldr	r0, .L856
  86:Jellybeans.cpp **** MenuItem *mScale     = &menuItems[5];
 23923              		.loc 17 86 11 view .LVU5597
 23924 0bdc 224A     		ldr	r2, .L856+4
  84:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 850


 23925              		.loc 17 84 11 view .LVU5598
 23926 0bde 0460     		str	r4, [r0]
 23927              	.LVL1387:
 23928              	.LBB11968:
 23929              	.LBI11968:
 23930              		.loc 24 185 7 is_stmt 1 view .LVU5599
 23931              	.LBB11969:
 23932              	.LBI11969:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23933              		.loc 24 55 7 view .LVU5600
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23934              		.loc 24 55 7 is_stmt 0 view .LVU5601
 23935              	.LBE11969:
 23936              	.LBE11968:
 23937              	.LBB11970:
 23938              	.LBI11970:
 23939              		.loc 24 185 7 is_stmt 1 view .LVU5602
 23940              	.LBB11971:
 23941              	.LBI11971:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23942              		.loc 24 55 7 view .LVU5603
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23943              		.loc 24 55 7 is_stmt 0 view .LVU5604
 23944              	.LBE11971:
 23945              	.LBE11970:
  87:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
 23946              		.loc 17 87 11 view .LVU5605
 23947 0be0 03F5C870 		add	r0, r3, #400
  86:Jellybeans.cpp **** MenuItem *mScale     = &menuItems[5];
 23948              		.loc 17 86 11 view .LVU5606
 23949 0be4 1160     		str	r1, [r2]
 23950              	.LVL1388:
 23951              	.LBB11972:
 23952              	.LBI11972:
 23953              		.loc 24 185 7 is_stmt 1 view .LVU5607
 23954              	.LBB11973:
 23955              	.LBI11973:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23956              		.loc 24 55 7 view .LVU5608
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23957              		.loc 24 55 7 is_stmt 0 view .LVU5609
 23958              	.LBE11973:
 23959              	.LBE11972:
  88:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
 23960              		.loc 17 88 11 view .LVU5610
 23961 0be6 03F5F071 		add	r1, r3, #480
  87:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
 23962              		.loc 17 87 11 view .LVU5611
 23963 0bea 204A     		ldr	r2, .L856+8
  89:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
 23964              		.loc 17 89 11 view .LVU5612
 23965 0bec 03F50C74 		add	r4, r3, #560
  90:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
 23966              		.loc 17 90 11 view .LVU5613
 23967 0bf0 03F52073 		add	r3, r3, #640
  87:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
 23968              		.loc 17 87 11 view .LVU5614
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 851


 23969 0bf4 1060     		str	r0, [r2]
 23970              	.LVL1389:
 23971              	.LBB11974:
 23972              	.LBI11974:
 23973              		.loc 24 185 7 is_stmt 1 view .LVU5615
 23974              	.LBB11975:
 23975              	.LBI11975:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23976              		.loc 24 55 7 view .LVU5616
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23977              		.loc 24 55 7 is_stmt 0 view .LVU5617
 23978              	.LBE11975:
 23979              	.LBE11974:
  88:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
 23980              		.loc 17 88 11 view .LVU5618
 23981 0bf6 1E4A     		ldr	r2, .L856+12
  89:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
 23982              		.loc 17 89 11 view .LVU5619
 23983 0bf8 1E48     		ldr	r0, .L856+16
  88:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
 23984              		.loc 17 88 11 view .LVU5620
 23985 0bfa 1160     		str	r1, [r2]
 23986              	.LVL1390:
 23987              	.LBB11976:
 23988              	.LBI11976:
 23989              		.loc 24 185 7 is_stmt 1 view .LVU5621
 23990              	.LBB11977:
 23991              	.LBI11977:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23992              		.loc 24 55 7 view .LVU5622
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23993              		.loc 24 55 7 is_stmt 0 view .LVU5623
 23994              	.LBE11977:
 23995              	.LBE11976:
  90:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
 23996              		.loc 17 90 11 view .LVU5624
 23997 0bfc 1E49     		ldr	r1, .L856+20
  89:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
 23998              		.loc 17 89 11 view .LVU5625
 23999 0bfe 0460     		str	r4, [r0]
 24000              	.LVL1391:
 24001              	.LBB11978:
 24002              	.LBI11978:
 24003              		.loc 24 185 7 is_stmt 1 view .LVU5626
 24004              	.LBB11979:
 24005              	.LBI11979:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 24006              		.loc 24 55 7 view .LVU5627
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 24007              		.loc 24 55 7 is_stmt 0 view .LVU5628
 24008              	.LBE11979:
 24009              	.LBE11978:
  90:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
 24010              		.loc 17 90 11 view .LVU5629
 24011 0c00 0B60     		str	r3, [r1]
 24012              	.LVL1392:
 24013              	.LBB11980:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 852


 24014              	.LBI11980:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 24015              		.loc 1 25 5 is_stmt 1 view .LVU5630
 24016              	.LBB11981:
 24017              	.LBB11982:
 24018              	.LBI11982:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24019              		.loc 2 21 5 view .LVU5631
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24020              		.loc 2 21 5 is_stmt 0 view .LVU5632
 24021              	.LBE11982:
 24022              	.LBE11981:
 24023              	.LBE11980:
  92:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 24024              		.loc 17 92 11 view .LVU5633
 24025 0c02 1E4A     		ldr	r2, .L856+24
 24026 0c04 1E49     		ldr	r1, .L856+28
 24027 0c06 1F48     		ldr	r0, .L856+32
 24028 0c08 FFF7FEFF 		bl	__aeabi_atexit
 24029              	.LVL1393:
 24030              	.LBB11983:
 24031              	.LBI11983:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 24032              		.loc 1 25 5 is_stmt 1 view .LVU5634
 24033              	.LBB11984:
 24034              	.LBB11985:
 24035              	.LBI11985:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24036              		.loc 2 21 5 view .LVU5635
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24037              		.loc 2 21 5 is_stmt 0 view .LVU5636
 24038              	.LBE11985:
 24039              	.LBE11984:
 24040              	.LBE11983:
  92:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 24041              		.loc 17 92 25 view .LVU5637
 24042 0c0c 1B4A     		ldr	r2, .L856+24
 24043 0c0e 1C49     		ldr	r1, .L856+28
 24044 0c10 1D48     		ldr	r0, .L856+36
 24045 0c12 FFF7FEFF 		bl	__aeabi_atexit
 24046              	.LVL1394:
 24047              	.LBB11986:
 24048              	.LBI11986:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 24049              		.loc 1 25 5 is_stmt 1 view .LVU5638
 24050              	.LBB11987:
 24051              	.LBB11988:
 24052              	.LBI11988:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24053              		.loc 2 21 5 view .LVU5639
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24054              		.loc 2 21 5 is_stmt 0 view .LVU5640
 24055              	.LBE11988:
 24056              	.LBE11987:
 24057              	.LBE11986:
  92:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 24058              		.loc 17 92 40 view .LVU5641
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 853


 24059 0c16 194A     		ldr	r2, .L856+24
 24060 0c18 1949     		ldr	r1, .L856+28
 24061 0c1a 1C48     		ldr	r0, .L856+40
 24062 0c1c FFF7FEFF 		bl	__aeabi_atexit
 24063              	.LVL1395:
 24064              	.LBB11989:
 24065              	.LBI11989:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 24066              		.loc 1 25 5 is_stmt 1 view .LVU5642
 24067              	.LBB11990:
 24068              	.LBB11991:
 24069              	.LBI11991:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24070              		.loc 2 21 5 view .LVU5643
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24071              		.loc 2 21 5 is_stmt 0 view .LVU5644
 24072              	.LBE11991:
 24073              	.LBE11990:
 24074              	.LBE11989:
  92:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 24075              		.loc 17 92 54 view .LVU5645
 24076 0c20 164A     		ldr	r2, .L856+24
 24077 0c22 1749     		ldr	r1, .L856+28
 24078 0c24 1A48     		ldr	r0, .L856+44
 24079              		.loc 17 281 1 view .LVU5646
 24080 0c26 0DF52D7D 		add	sp, sp, #692
 24081              		.cfi_remember_state
 24082              		.cfi_def_cfa_offset 36
 24083              		@ sp needed
 24084 0c2a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 24085              		.cfi_restore 14
 24086              		.cfi_restore 11
 24087              		.cfi_restore 10
 24088              		.cfi_restore 9
 24089              		.cfi_restore 8
 24090              		.cfi_restore 7
 24091              		.cfi_restore 6
 24092              		.cfi_restore 5
 24093              		.cfi_restore 4
 24094              		.cfi_def_cfa_offset 0
  92:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 24095              		.loc 17 92 54 view .LVU5647
 24096 0c2e FFF7FEBF 		b	__aeabi_atexit
 24097              	.LVL1396:
 24098              	.L844:
 24099              		.cfi_restore_state
 24100              	.LBB11992:
 24101              	.LBB11559:
 24102              	.LBB11556:
 24103              	.LBB11553:
 24104              	.LBB11546:
 24105              	.LBB11542:
 24106              	.LBB11538:
 24107              	.LBB11525:
 24108              	.LBI11525:
 24109              		.loc 40 385 7 is_stmt 1 view .LVU5648
 24110              	.LBB11526:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 854


 24111              	.LBI11526:
 24112              		.loc 18 6277 5 view .LVU5649
 24113 0c32 56F8207C 		ldr	r7, [r6, #-32]
 24114 0c36 D9F81450 		ldr	r5, [r9, #20]
 24115              	.LBB11527:
 24116              	.LBB11528:
 24117              	.LBI11528:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 24118              		.loc 18 2852 7 view .LVU5650
 24119              	.LVL1397:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 24120              		.loc 18 2852 7 is_stmt 0 view .LVU5651
 24121 0c3a 3A46     		mov	r2, r7
 24122 0c3c AF42     		cmp	r7, r5
 24123 0c3e 28BF     		it	cs
 24124 0c40 2A46     		movcs	r2, r5
 24125              	.LVL1398:
 24126              	.LBB11529:
 24127              	.LBB11530:
 24128              	.LBI11530:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 24129              		.loc 21 337 7 is_stmt 1 view .LVU5652
 24130              	.LBB11531:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 24131              		.loc 21 339 2 view .LVU5653
 24132 0c42 32B1     		cbz	r2, .L797
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 24133              		.loc 21 347 2 view .LVU5654
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 24134              		.loc 21 347 25 is_stmt 0 view .LVU5655
 24135 0c44 D9F81010 		ldr	r1, [r9, #16]
 24136 0c48 56F8240C 		ldr	r0, [r6, #-36]
 24137 0c4c FFF7FEFF 		bl	memcmp
 24138              	.LVL1399:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 24139              		.loc 21 347 25 view .LVU5656
 24140              	.LBE11531:
 24141              	.LBE11530:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 24142              		.loc 18 2859 2 view .LVU5657
 24143 0c50 00B9     		cbnz	r0, .L798
 24144              	.LVL1400:
 24145              	.L797:
 24146              	.LBB11532:
 24147              	.LBI11532:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 24148              		.loc 18 401 7 is_stmt 1 view .LVU5658
 24149              	.LBB11533:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 24150              		.loc 18 403 51 is_stmt 0 view .LVU5659
 24151 0c52 781B     		subs	r0, r7, r5
 24152              	.LVL1401:
 24153              	.L798:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 24154              		.loc 18 403 51 view .LVU5660
 24155              	.LBE11533:
 24156              	.LBE11532:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 855


 24157              	.LBE11529:
 24158              	.LBE11528:
 24159              	.LBE11527:
 24160              	.LBE11526:
 24161              	.LBE11525:
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							_S_key(__p)));
 24162              		.loc 29 1813 10 view .LVU5661
 24163 0c54 4FEAD078 		lsr	r8, r0, #31
 24164 0c58 76E5     		b	.L796
 24165              	.LVL1402:
 24166              	.L842:
 24167              	.LBB11534:
 24168              	.LBB11518:
 24169              	.LBB11513:
 24170              	.LBB11508:
 24171              	.LBB11499:
 24172              	.LBB11492:
 24173              	.LBB11488:
 24174              	.LBB11484:
 24175              	.LBB11391:
 24176              	.LBB11388:
 24177              	.LBB11321:
 24178              	.LBB11305:
 24179              	.LBB11299:
 24180              	.LBB11296:
 24181              	.LBB11294:
 24182              	.LBB11293:
 24183              	.LBB11292:
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24184              		.loc 20 106 26 view .LVU5662
 24185 0c5a FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 24186              	.LVL1403:
 24187              	.L845:
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24188              		.loc 20 106 26 view .LVU5663
 24189              	.LBE11292:
 24190              	.LBE11293:
 24191              	.LBE11294:
 24192              	.LBE11296:
 24193              	.LBE11299:
 24194              	.LBE11305:
 24195              	.LBE11321:
 24196              	.LBE11388:
 24197              	.LBE11391:
 24198              	.LBE11484:
 24199              	.LBB11485:
 24200              	.LBB11481:
 24201              	.LBB11479:
 24202              	.LBB11477:
 24203              	.LBB11475:
 24204              	.LBB11473:
 24205              	.LBB11471:
 24206              	.LBB11469:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 24207              		.loc 22 212 28 view .LVU5664
 24208 0c5e 0D48     		ldr	r0, .L856+48
 24209 0c60 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 856


 24210              	.LVL1404:
 24211              	.L857:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 24212              		.loc 22 212 28 view .LVU5665
 24213              		.align	2
 24214              	.L856:
 24215 0c64 00000000 		.word	.LANCHOR29
 24216 0c68 00000000 		.word	.LANCHOR31
 24217 0c6c 00000000 		.word	.LANCHOR32
 24218 0c70 00000000 		.word	.LANCHOR33
 24219 0c74 00000000 		.word	.LANCHOR34
 24220 0c78 00000000 		.word	.LANCHOR35
 24221 0c7c 00000000 		.word	__dso_handle
 24222 0c80 00000000 		.word	_ZN5daisy9ParameterD1Ev
 24223 0c84 00000000 		.word	.LANCHOR3
 24224 0c88 00000000 		.word	.LANCHOR6
 24225 0c8c 00000000 		.word	.LANCHOR8
 24226 0c90 00000000 		.word	.LANCHOR10
 24227 0c94 00000000 		.word	.LC9
 24228              	.LBE11469:
 24229              	.LBE11471:
 24230              	.LBE11473:
 24231              	.LBE11475:
 24232              	.LBE11477:
 24233              	.LBE11479:
 24234              	.LBE11481:
 24235              	.LBE11485:
 24236              	.LBE11488:
 24237              	.LBE11492:
 24238              	.LBE11499:
 24239              	.LBE11508:
 24240              	.LBE11513:
 24241              	.LBE11518:
 24242              	.LBE11534:
 24243              	.LBE11538:
 24244              	.LBE11542:
 24245              	.LBE11546:
 24246              	.LBE11553:
 24247              	.LBE11556:
 24248              	.LBE11559:
 24249              	.LBE11992:
 24250              		.cfi_endproc
 24251              	.LFE6226:
 24253              		.section	.text.startup._GLOBAL__sub_I_patch,"ax",%progbits
 24254              		.align	1
 24255              		.p2align 2,,3
 24256              		.syntax unified
 24257              		.thumb
 24258              		.thumb_func
 24259              		.fpu fpv5-d16
 24261              	_GLOBAL__sub_I_patch:
 24262              	.LFB6201:
 24263              		.loc 17 281 1 is_stmt 1 view -0
 24264              		.cfi_startproc
 24265              		@ args = 0, pretend = 0, frame = 0
 24266              		@ frame_needed = 0, uses_anonymous_args = 0
 24267              		@ link register save eliminated.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 857


 24268              		.loc 17 281 1 is_stmt 0 view .LVU5667
 24269 0000 FFF7FEBF 		b	_Z41__static_initialization_and_destruction_0ii.constprop.0
 24270              	.LVL1405:
 24271              		.cfi_endproc
 24272              	.LFE6201:
 24274              		.section	.init_array,"aw",%init_array
 24275              		.align	2
 24276 0000 00000000 		.word	_GLOBAL__sub_I_patch(target1)
 24277              		.weak	_ZTSFvvE
 24278              		.section	.rodata._ZTSFvvE,"aG",%progbits,_ZTSFvvE,comdat
 24279              		.align	2
 24282              	_ZTSFvvE:
 24283 0000 46767645 		.ascii	"FvvE\000"
 24283      00
 24284              		.weak	_ZTIFvvE
 24285              		.section	.rodata._ZTIFvvE,"aG",%progbits,_ZTIFvvE,comdat
 24286              		.align	2
 24289              	_ZTIFvvE:
 24290 0000 08000000 		.word	_ZTVN10__cxxabiv120__function_type_infoE+8
 24291 0004 00000000 		.word	_ZTSFvvE
 24292              		.weak	_ZTSN5daisy21OneBitGraphicsDisplayE
 24293              		.section	.rodata._ZTSN5daisy21OneBitGraphicsDisplayE,"aG",%progbits,_ZTSN5daisy21OneBitGraphicsDis
 24294              		.align	2
 24297              	_ZTSN5daisy21OneBitGraphicsDisplayE:
 24298 0000 4E356461 		.ascii	"N5daisy21OneBitGraphicsDisplayE\000"
 24298      69737932 
 24298      314F6E65 
 24298      42697447 
 24298      72617068 
 24299              		.weak	_ZTIN5daisy21OneBitGraphicsDisplayE
 24300              		.section	.rodata._ZTIN5daisy21OneBitGraphicsDisplayE,"aG",%progbits,_ZTIN5daisy21OneBitGraphicsDis
 24301              		.align	2
 24304              	_ZTIN5daisy21OneBitGraphicsDisplayE:
 24305 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 24306 0004 00000000 		.word	_ZTSN5daisy21OneBitGraphicsDisplayE
 24307              		.weak	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 24308              		.section	.rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128E
 24309              		.align	2
 24312              	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4
 24313 0000 4E356461 		.ascii	"N5daisy25OneBitGraphicsDisplayImplINS_11OledDisplay"
 24313      69737932 
 24313      354F6E65 
 24313      42697447 
 24313      72617068 
 24314 0033 494E535F 		.ascii	"INS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpi"
 24314      31335353 
 24314      44313330 
 24314      78447269 
 24314      76657249 
 24315 0066 5472616E 		.ascii	"TransportEEEEEEE\000"
 24315      73706F72 
 24315      74454545 
 24315      45454545 
 24315      00
 24316              		.weak	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 24317              		.section	.rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128E
 24318              		.align	2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 858


 24321              	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4
 24322 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 24323 0004 00000000 		.word	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 24324 0008 00000000 		.word	_ZTIN5daisy21OneBitGraphicsDisplayE
 24325              		.weak	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 24326              		.section	.rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 24327              		.align	2
 24330              	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 24331 0000 4E356461 		.ascii	"N5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64E"
 24331      69737931 
 24331      314F6C65 
 24331      64446973 
 24331      706C6179 
 24332 0033 4E535F32 		.ascii	"NS_24SSD130x4WireSpiTransportEEEEE\000"
 24332      34535344 
 24332      31333078 
 24332      34576972 
 24332      65537069 
 24333              		.weak	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 24334              		.section	.rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 24335              		.align	2
 24338              	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 24339 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 24340 0004 00000000 		.word	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 24341 0008 00000000 		.word	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 24342              		.weak	_ZTSPFvvE
 24343              		.section	.rodata._ZTSPFvvE,"aG",%progbits,_ZTSPFvvE,comdat
 24344              		.align	2
 24347              	_ZTSPFvvE:
 24348 0000 50467676 		.ascii	"PFvvE\000"
 24348      4500
 24349              		.weak	_ZTIPFvvE
 24350              		.section	.rodata._ZTIPFvvE,"aG",%progbits,_ZTIPFvvE,comdat
 24351              		.align	2
 24354              	_ZTIPFvvE:
 24355 0000 08000000 		.word	_ZTVN10__cxxabiv119__pointer_type_infoE+8
 24356 0004 00000000 		.word	_ZTSPFvvE
 24357 0008 00000000 		.word	0
 24358 000c 00000000 		.word	_ZTIFvvE
 24359              		.weak	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 24360              		.section	.rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 24361              		.align	2
 24364              	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 24365 0000 00000000 		.word	0
 24366 0004 00000000 		.word	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 24367 0008 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
 24368 000c 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
 24369 0010 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 24370 0014 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 24371 0018 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillE
 24372 001c 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawP
 24373 0020 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 24374 0024 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 24375 0028 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 24376 002c 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 24377 0030 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 24378 0034 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 859


 24379 0038 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Updat
 24380              		.global	inversionCurCvVal
 24381              		.global	voicingCurCvVal
 24382              		.global	divisionCurCvVal
 24383              		.global	patternCurCvVal
 24384              		.global	inversionParam
 24385              		.global	voicingParam
 24386              		.global	divisionParam
 24387              		.global	patternParam
 24388              		.global	mClockDiv
 24389              		.global	mOct
 24390              		.global	mOctRng
 24391              		.global	mRhythm
 24392              		.global	mScale
 24393              		.global	mTonic
 24394              		.global	mInversion
 24395              		.global	mVoicing
 24396              		.global	mDivision
 24397              		.global	mPattern
 24398              		.global	menuItems
 24399              		.global	myArp
 24400              		.global	isEditing
 24401              		.global	menuPos
 24402              		.global	arpNoteDacOutput1
 24403              		.global	_Z11debugStringB5cxx11
 24404              		.global	patch
 24405              		.section	.rodata
 24406              		.align	2
 24407              		.set	.LANCHOR26,. + 0
 24408              	.LC0:
 24409 0000 00000000 		.word	0
 24410 0004 02000000 		.word	2
 24411 0008 04000000 		.word	4
 24412 000c 05000000 		.word	5
 24413 0010 07000000 		.word	7
 24414 0014 09000000 		.word	9
 24415 0018 0B000000 		.word	11
 24416              	.LC1:
 24417 001c 00000000 		.word	0
 24418 0020 02000000 		.word	2
 24419 0024 03000000 		.word	3
 24420 0028 05000000 		.word	5
 24421 002c 07000000 		.word	7
 24422 0030 08000000 		.word	8
 24423 0034 0A000000 		.word	10
 24424              	.LC2:
 24425 0038 00000000 		.word	0
 24426 003c 02000000 		.word	2
 24427 0040 03000000 		.word	3
 24428 0044 05000000 		.word	5
 24429 0048 07000000 		.word	7
 24430 004c 09000000 		.word	9
 24431 0050 0A000000 		.word	10
 24432              	.LC3:
 24433 0054 00000000 		.word	0
 24434 0058 01000000 		.word	1
 24435 005c 03000000 		.word	3
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 860


 24436 0060 05000000 		.word	5
 24437 0064 07000000 		.word	7
 24438 0068 09000000 		.word	9
 24439 006c 0A000000 		.word	10
 24440              	.LC4:
 24441 0070 00000000 		.word	0
 24442 0074 02000000 		.word	2
 24443 0078 04000000 		.word	4
 24444 007c 06000000 		.word	6
 24445 0080 07000000 		.word	7
 24446 0084 09000000 		.word	9
 24447 0088 0B000000 		.word	11
 24448              	.LC5:
 24449 008c 00000000 		.word	0
 24450 0090 02000000 		.word	2
 24451 0094 04000000 		.word	4
 24452 0098 05000000 		.word	5
 24453 009c 07000000 		.word	7
 24454 00a0 09000000 		.word	9
 24455 00a4 0A000000 		.word	10
 24456              	.LC6:
 24457 00a8 00000000 		.word	0
 24458 00ac 01000000 		.word	1
 24459 00b0 03000000 		.word	3
 24460 00b4 05000000 		.word	5
 24461 00b8 06000000 		.word	6
 24462 00bc 08000000 		.word	8
 24463 00c0 0A000000 		.word	10
 24464              		.section	.bss._Z11debugStringB5cxx11,"aw",%nobits
 24465              		.align	2
 24466              		.set	.LANCHOR15,. + 0
 24469              	_Z11debugStringB5cxx11:
 24470 0000 00000000 		.space	24
 24470      00000000 
 24470      00000000 
 24470      00000000 
 24470      00000000 
 24471              		.section	.bss._ZL10allOctaves,"aw",%nobits
 24472              		.align	2
 24473              		.set	.LANCHOR23,. + 0
 24476              	_ZL10allOctaves:
 24477 0000 00000000 		.space	12
 24477      00000000 
 24477      00000000 
 24478              		.section	.bss._ZL4font,"aw",%nobits
 24479              		.align	2
 24480              		.set	.LANCHOR14,. + 0
 24483              	_ZL4font:
 24484 0000 00000000 		.space	8
 24484      00000000 
 24485              		.section	.bss._ZN10jellybeansL10arpRhythmsE,"aw",%nobits
 24486              		.align	2
 24487              		.set	.LANCHOR22,. + 0
 24490              	_ZN10jellybeansL10arpRhythmsE:
 24491 0000 00000000 		.space	12
 24491      00000000 
 24491      00000000 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 861


 24492              		.section	.bss._ZN10jellybeansL11arpPatternsE,"aw",%nobits
 24493              		.align	2
 24494              		.set	.LANCHOR16,. + 0
 24497              	_ZN10jellybeansL11arpPatternsE:
 24498 0000 00000000 		.space	12
 24498      00000000 
 24498      00000000 
 24499              		.section	.bss._ZN10jellybeansL12allNotes5OctE,"aw",%nobits
 24500              		.align	2
 24501              		.set	.LANCHOR25,. + 0
 24504              	_ZN10jellybeansL12allNotes5OctE:
 24505 0000 00000000 		.space	1440
 24505      00000000 
 24505      00000000 
 24505      00000000 
 24505      00000000 
 24506              		.section	.bss._ZN10jellybeansL13allInversionsE,"aw",%nobits
 24507              		.align	2
 24508              		.set	.LANCHOR19,. + 0
 24511              	_ZN10jellybeansL13allInversionsE:
 24512 0000 00000000 		.space	12
 24512      00000000 
 24512      00000000 
 24513              		.section	.bss._ZN10jellybeansL14allClockInDivsE,"aw",%nobits
 24514              		.align	2
 24515              		.set	.LANCHOR17,. + 0
 24518              	_ZN10jellybeansL14allClockInDivsE:
 24519 0000 00000000 		.space	12
 24519      00000000 
 24519      00000000 
 24520              		.section	.bss._ZN10jellybeansL15modeToSemitonesE,"aw",%nobits
 24521              		.align	2
 24522              		.set	.LANCHOR27,. + 0
 24525              	_ZN10jellybeansL15modeToSemitonesE:
 24526 0000 00000000 		.space	24
 24526      00000000 
 24526      00000000 
 24526      00000000 
 24526      00000000 
 24527              		.section	.bss._ZN10jellybeansL5modesE,"aw",%nobits
 24528              		.align	2
 24529              		.set	.LANCHOR21,. + 0
 24532              	_ZN10jellybeansL5modesE:
 24533 0000 00000000 		.space	12
 24533      00000000 
 24533      00000000 
 24534              		.section	.bss._ZN10jellybeansL8allNotesE,"aw",%nobits
 24535              		.align	2
 24536              		.set	.LANCHOR20,. + 0
 24539              	_ZN10jellybeansL8allNotesE:
 24540 0000 00000000 		.space	12
 24540      00000000 
 24540      00000000 
 24541              		.section	.bss._ZN10jellybeansL8voicingsE,"aw",%nobits
 24542              		.align	2
 24543              		.set	.LANCHOR18,. + 0
 24546              	_ZN10jellybeansL8voicingsE:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 862


 24547 0000 00000000 		.space	12
 24547      00000000 
 24547      00000000 
 24548              		.section	.bss.arpNoteDacOutput1,"aw",%nobits
 24549              		.align	2
 24550              		.set	.LANCHOR24,. + 0
 24553              	arpNoteDacOutput1:
 24554 0000 00000000 		.space	4
 24555              		.section	.bss.divisionCurCvVal,"aw",%nobits
 24556              		.align	2
 24557              		.set	.LANCHOR7,. + 0
 24560              	divisionCurCvVal:
 24561 0000 00000000 		.space	4
 24562              		.section	.bss.divisionParam,"aw",%nobits
 24563              		.align	2
 24564              		.set	.LANCHOR6,. + 0
 24567              	divisionParam:
 24568 0000 00000000 		.space	56
 24568      00000000 
 24568      00000000 
 24568      00000000 
 24568      00000000 
 24569              		.section	.bss.inversionCurCvVal,"aw",%nobits
 24570              		.align	2
 24571              		.set	.LANCHOR11,. + 0
 24574              	inversionCurCvVal:
 24575 0000 00000000 		.space	4
 24576              		.section	.bss.inversionParam,"aw",%nobits
 24577              		.align	2
 24578              		.set	.LANCHOR10,. + 0
 24581              	inversionParam:
 24582 0000 00000000 		.space	56
 24582      00000000 
 24582      00000000 
 24582      00000000 
 24582      00000000 
 24583              		.section	.bss.isEditing,"aw",%nobits
 24584              		.set	.LANCHOR12,. + 0
 24587              	isEditing:
 24588 0000 00       		.space	1
 24589              		.section	.bss.mClockDiv,"aw",%nobits
 24590              		.align	2
 24591              		.set	.LANCHOR35,. + 0
 24594              	mClockDiv:
 24595 0000 00000000 		.space	4
 24596              		.section	.bss.mDivision,"aw",%nobits
 24597              		.align	2
 24598              		.set	.LANCHOR28,. + 0
 24601              	mDivision:
 24602 0000 00000000 		.space	4
 24603              		.section	.bss.mInversion,"aw",%nobits
 24604              		.align	2
 24605              		.set	.LANCHOR29,. + 0
 24608              	mInversion:
 24609 0000 00000000 		.space	4
 24610              		.section	.bss.mOct,"aw",%nobits
 24611              		.align	2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 863


 24612              		.set	.LANCHOR34,. + 0
 24615              	mOct:
 24616 0000 00000000 		.space	4
 24617              		.section	.bss.mOctRng,"aw",%nobits
 24618              		.align	2
 24619              		.set	.LANCHOR33,. + 0
 24622              	mOctRng:
 24623 0000 00000000 		.space	4
 24624              		.section	.bss.mPattern,"aw",%nobits
 24625              		.align	2
 24626              		.set	.LANCHOR1,. + 0
 24629              	mPattern:
 24630 0000 00000000 		.space	4
 24631              		.section	.bss.mRhythm,"aw",%nobits
 24632              		.align	2
 24633              		.set	.LANCHOR32,. + 0
 24636              	mRhythm:
 24637 0000 00000000 		.space	4
 24638              		.section	.bss.mScale,"aw",%nobits
 24639              		.align	2
 24640              		.set	.LANCHOR31,. + 0
 24643              	mScale:
 24644 0000 00000000 		.space	4
 24645              		.section	.bss.mTonic,"aw",%nobits
 24646              		.align	2
 24647              		.set	.LANCHOR30,. + 0
 24650              	mTonic:
 24651 0000 00000000 		.space	4
 24652              		.section	.bss.mVoicing,"aw",%nobits
 24653              		.align	2
 24654              		.set	.LANCHOR2,. + 0
 24657              	mVoicing:
 24658 0000 00000000 		.space	4
 24659              		.section	.bss.menuItems,"aw",%nobits
 24660              		.align	2
 24661              		.set	.LANCHOR5,. + 0
 24664              	menuItems:
 24665 0000 00000000 		.space	800
 24665      00000000 
 24665      00000000 
 24665      00000000 
 24665      00000000 
 24666              		.section	.bss.menuPos,"aw",%nobits
 24667              		.align	2
 24668              		.set	.LANCHOR13,. + 0
 24671              	menuPos:
 24672 0000 00000000 		.space	4
 24673              		.section	.bss.myArp,"aw",%nobits
 24674              		.align	2
 24675              		.set	.LANCHOR0,. + 0
 24678              	myArp:
 24679 0000 00000000 		.space	4
 24680              		.section	.bss.patch,"aw",%nobits
 24681              		.align	2
 24684              	patch:
 24685 0000 00000000 		.space	38336
 24685      00000000 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 864


 24685      00000000 
 24685      00000000 
 24685      00000000 
 24686              		.section	.bss.patternCurCvVal,"aw",%nobits
 24687              		.align	2
 24688              		.set	.LANCHOR4,. + 0
 24691              	patternCurCvVal:
 24692 0000 00000000 		.space	4
 24693              		.section	.bss.patternParam,"aw",%nobits
 24694              		.align	2
 24695              		.set	.LANCHOR3,. + 0
 24698              	patternParam:
 24699 0000 00000000 		.space	56
 24699      00000000 
 24699      00000000 
 24699      00000000 
 24699      00000000 
 24700              		.section	.bss.voicingCurCvVal,"aw",%nobits
 24701              		.align	2
 24702              		.set	.LANCHOR9,. + 0
 24705              	voicingCurCvVal:
 24706 0000 00000000 		.space	4
 24707              		.section	.bss.voicingParam,"aw",%nobits
 24708              		.align	2
 24709              		.set	.LANCHOR8,. + 0
 24712              	voicingParam:
 24713 0000 00000000 		.space	56
 24713      00000000 
 24713      00000000 
 24713      00000000 
 24713      00000000 
 24714              		.text
 24715              	.Letext0:
 24716              		.file 50 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\machine\\_default_type
 24717              		.file 51 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\_stdint.h"
 24718              		.file 52 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\stdint.h"
 24719              		.file 53 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdd
 24720              		.file 54 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cpp
 24721              		.file 55 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std
 24722              		.file 56 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 24723              		.file 57 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 24724              		.file 58 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\type_trai
 24725              		.file 59 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-
 24726              		.file 60 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
 24727              		.file 61 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\de
 24728              		.file 62 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 24729              		.file 63 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exc
 24730              		.file 64 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 24731              		.file 65 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 24732              		.file 66 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\str
 24733              		.file 67 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cha
 24734              		.file 68 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 24735              		.file 69 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alg
 24736              		.file 70 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 24737              		.file 71 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\use
 24738              		.file 72 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\tuple"
 24739              		.file 73 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vec
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 865


 24740              		.file 74 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\functiona
 24741              		.file 75 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ref
 24742              		.file 76 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ptr
 24743              		.file 77 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
 24744              		.file 78 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\fun
 24745              		.file 79 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\pre
 24746              		.file 80 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\type
 24747              		.file 81 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\_types.h"
 24748              		.file 82 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\reent.h"
 24749              		.file 83 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\lock.h"
 24750              		.file 84 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\math.h"
 24751              		.file 85 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\stdlib.h"
 24752              		.file 86 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 24753              		.file 87 "../../DaisySP/Source/Control/adenv.h"
 24754              		.file 88 "../../DaisySP/Source/Utility/dsp.h"
 24755              		.file 89 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stda
 24756              		.file 90 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\wchar.h"
 24757              		.file 91 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\locale.h"
 24758              		.file 92 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\stdio.h"
 24759              		.file 93 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 24760              		.file 94 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\string.h"
 24761              		.file 95 "../../libdaisy/src/daisy_core.h"
 24762              		.file 96 "../../libdaisy/src/per/tim.h"
 24763              		.file 97 "../../libdaisy/src/per/sai.h"
 24764              		.file 98 "../../libdaisy/src/hid/MidiEvent.h"
 24765              		.file 99 "../../libdaisy/src/hid/gatein.h"
 24766              		.file 100 "../../libdaisy/src/hid/logger_impl.h"
 24767              		.file 101 "../../libdaisy/src/util/wav_format.h"
 24768              		.file 102 "../../libdaisy/src/per/gpio.h"
 24769              		.file 103 "../../libdaisy/src/dev/sdram.h"
 24770              		.file 104 "../../libdaisy/src/util/oled_fonts.h"
 24771              		.file 105 "../../libdaisy/src/dev/sr_595.h"
 24772              		.file 106 "<built-in>"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 866


DEFINED SYMBOLS
                            *ABS*:00000000 Jellybeans.cpp
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:17     .text._ZN5daisy9ParameterD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:26     .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD2Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:26     .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD1Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:49     .text._ZN5daisy10DaisyPatchD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:57     .text._ZN5daisy10DaisyPatchD2Ev:00000000 _ZN5daisy10DaisyPatchD2Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:57     .text._ZN5daisy10DaisyPatchD2Ev:00000000 _ZN5daisy10DaisyPatchD1Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:139    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:147    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:147    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:172    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:180    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:212    .text._ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:220    .text._ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data:00000000 _ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:252    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:260    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:00000000 _ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:277    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:285    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:00000000 _ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:302    .text._Z2cbv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:310    .text._Z2cbv:00000000 _Z2cbv
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:327    .text._Z2cbv:00000008 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:332    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:340    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:380    .rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:384    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:391    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:00000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:747    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:00000060 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:759    .text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:767    .text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:00000000 _ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:878    .text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:00000024 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24354  .rodata._ZTIPFvvE:00000000 _ZTIPFvvE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:885    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:892    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0:00000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:1274   .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:1282   .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:00000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:1282   .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:00000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:1414   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:1422   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:1609   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:1617   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:1617   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:1846   .text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:1854   .text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:00000000 _ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:1854   .text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:00000000 _ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:2278   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:2285   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E.isra.0:00000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E.isra.0
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:2561   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:2569   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:00000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:2569   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:00000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED1Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:2625   .text._Z9cbPatternv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:2633   .text._Z9cbPatternv:00000000 _Z9cbPatternv
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:2762   .text._Z9cbPatternv:00000038 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:2768   .text._Z9cbVoicingv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:2776   .text._Z9cbVoicingv:00000000 _Z9cbVoicingv
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:2909   .text._Z9cbVoicingv:0000003c $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:2915   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:00000000 $t
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 867


C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:2923   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:3349   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:00000198 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:3357   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:3365   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:3822   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:000001b8 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:3832   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:3840   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:3917   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:3925   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:4210   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:4218   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:4903   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000368 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:4917   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000378 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:5143   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:5151   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:5290   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000046 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:5299   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000058 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:6507   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000320 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:6516   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000328 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:6827   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:000003e8 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:6835   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:6843   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:7953   .text._ZNSt14_Function_baseD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:7961   .text._ZNSt14_Function_baseD2Ev:00000000 _ZNSt14_Function_baseD2Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:7961   .text._ZNSt14_Function_baseD2Ev:00000000 _ZNSt14_Function_baseD1Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:8002   .text._ZN10jellybeans8MenuItemaSEOS0_.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:8009   .text._ZN10jellybeans8MenuItemaSEOS0_.isra.0:00000000 _ZN10jellybeans8MenuItemaSEOS0_.isra.0
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:8440   .text._ZN10jellybeans8MenuItemD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:8448   .text._ZN10jellybeans8MenuItemD2Ev:00000000 _ZN10jellybeans8MenuItemD2Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:8448   .text._ZN10jellybeans8MenuItemD2Ev:00000000 _ZN10jellybeans8MenuItemD1Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:8877   .text._Z14updateControlsv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:8885   .text._Z14updateControlsv:00000000 _Z14updateControlsv
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:9304   .text._Z14updateControlsv:0000012c $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24684  .bss.patch:00000000 patch
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:9326   .text._Z13updateOutputsv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:9334   .text._Z13updateOutputsv:00000000 _Z13updateOutputsv
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:9378   .text._Z13updateOutputsv:00000030 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:9385   .text._Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:9393   .text._Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:00000000 _Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:9790   .text._Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:0000012c $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:9801   .text._Z10updateOledv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:9809   .text._Z10updateOledv:00000000 _Z10updateOledv
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:11561  .text._Z10updateOledv:00000230 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:11584  .rodata._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:11588  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:11596  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:12366  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:000000d4 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:11596  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_listIS5_ERKS6_
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:12379  .text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:12387  .text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:00000000 _ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:12742  .text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:00000054 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:12387  .text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:00000000 _ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:12754  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:12762  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:12762  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:13232  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:13240  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 868


C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:13240  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:13710  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:13718  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:14475  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:000000bc $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:13718  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:14492  .rodata.main.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:14517  .text.startup.main:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:14525  .text.startup.main:00000000 main
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:16086  .text.startup.main:000002f4 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:16126  .text.startup.main:00000378 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:16475  .text.startup.main:000004d0 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:16494  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:16502  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:00000000 _ZNSt12_Vector_baseIiSaIiEED2Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:16502  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:00000000 _ZNSt12_Vector_baseIiSaIiEED1Ev
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:16583  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:16591  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:00000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:16957  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:16965  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:00000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:17630  .rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:17862  .rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.4:00000148 .LC96
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:17967  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:17974  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000000 _Z41__static_initialization_and_destruction_0ii.constprop.0
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:19801  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000002ac $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:19954  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000004e0 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:21791  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000007b4 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:21809  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000007f0 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:23828  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000ae4 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24364  .rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 _ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:23890  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000bd4 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24215  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000c64 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24254  .text.startup._GLOBAL__sub_I_patch:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24261  .text.startup._GLOBAL__sub_I_patch:00000000 _GLOBAL__sub_I_patch
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24275  .init_array:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24282  .rodata._ZTSFvvE:00000000 _ZTSFvvE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24279  .rodata._ZTSFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24289  .rodata._ZTIFvvE:00000000 _ZTIFvvE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24286  .rodata._ZTIFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24297  .rodata._ZTSN5daisy21OneBitGraphicsDisplayE:00000000 _ZTSN5daisy21OneBitGraphicsDisplayE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24294  .rodata._ZTSN5daisy21OneBitGraphicsDisplayE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24304  .rodata._ZTIN5daisy21OneBitGraphicsDisplayE:00000000 _ZTIN5daisy21OneBitGraphicsDisplayE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24301  .rodata._ZTIN5daisy21OneBitGraphicsDisplayE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24312  .rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 _ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24309  .rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24321  .rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 _ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24318  .rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24330  .rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 _ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24327  .rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24338  .rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 _ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24335  .rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24347  .rodata._ZTSPFvvE:00000000 _ZTSPFvvE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24344  .rodata._ZTSPFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24351  .rodata._ZTIPFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24361  .rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24574  .bss.inversionCurCvVal:00000000 inversionCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24705  .bss.voicingCurCvVal:00000000 voicingCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24560  .bss.divisionCurCvVal:00000000 divisionCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24691  .bss.patternCurCvVal:00000000 patternCurCvVal
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 869


C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24581  .bss.inversionParam:00000000 inversionParam
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24712  .bss.voicingParam:00000000 voicingParam
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24567  .bss.divisionParam:00000000 divisionParam
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24698  .bss.patternParam:00000000 patternParam
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24594  .bss.mClockDiv:00000000 mClockDiv
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24615  .bss.mOct:00000000 mOct
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24622  .bss.mOctRng:00000000 mOctRng
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24636  .bss.mRhythm:00000000 mRhythm
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24643  .bss.mScale:00000000 mScale
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24650  .bss.mTonic:00000000 mTonic
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24608  .bss.mInversion:00000000 mInversion
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24657  .bss.mVoicing:00000000 mVoicing
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24601  .bss.mDivision:00000000 mDivision
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24629  .bss.mPattern:00000000 mPattern
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24664  .bss.menuItems:00000000 menuItems
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24678  .bss.myArp:00000000 myArp
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24587  .bss.isEditing:00000000 isEditing
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24671  .bss.menuPos:00000000 menuPos
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24553  .bss.arpNoteDacOutput1:00000000 arpNoteDacOutput1
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24469  .bss._Z11debugStringB5cxx11:00000000 _Z11debugStringB5cxx11
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24406  .rodata:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24465  .bss._Z11debugStringB5cxx11:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24472  .bss._ZL10allOctaves:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24476  .bss._ZL10allOctaves:00000000 _ZL10allOctaves
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24479  .bss._ZL4font:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24483  .bss._ZL4font:00000000 _ZL4font
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24486  .bss._ZN10jellybeansL10arpRhythmsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24490  .bss._ZN10jellybeansL10arpRhythmsE:00000000 _ZN10jellybeansL10arpRhythmsE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24493  .bss._ZN10jellybeansL11arpPatternsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24497  .bss._ZN10jellybeansL11arpPatternsE:00000000 _ZN10jellybeansL11arpPatternsE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24500  .bss._ZN10jellybeansL12allNotes5OctE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24504  .bss._ZN10jellybeansL12allNotes5OctE:00000000 _ZN10jellybeansL12allNotes5OctE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24507  .bss._ZN10jellybeansL13allInversionsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24511  .bss._ZN10jellybeansL13allInversionsE:00000000 _ZN10jellybeansL13allInversionsE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24514  .bss._ZN10jellybeansL14allClockInDivsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24518  .bss._ZN10jellybeansL14allClockInDivsE:00000000 _ZN10jellybeansL14allClockInDivsE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24521  .bss._ZN10jellybeansL15modeToSemitonesE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24525  .bss._ZN10jellybeansL15modeToSemitonesE:00000000 _ZN10jellybeansL15modeToSemitonesE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24528  .bss._ZN10jellybeansL5modesE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24532  .bss._ZN10jellybeansL5modesE:00000000 _ZN10jellybeansL5modesE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24535  .bss._ZN10jellybeansL8allNotesE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24539  .bss._ZN10jellybeansL8allNotesE:00000000 _ZN10jellybeansL8allNotesE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24542  .bss._ZN10jellybeansL8voicingsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24546  .bss._ZN10jellybeansL8voicingsE:00000000 _ZN10jellybeansL8voicingsE
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24549  .bss.arpNoteDacOutput1:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24556  .bss.divisionCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24563  .bss.divisionParam:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24570  .bss.inversionCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24577  .bss.inversionParam:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24588  .bss.isEditing:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24590  .bss.mClockDiv:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24597  .bss.mDivision:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24604  .bss.mInversion:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24611  .bss.mOct:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24618  .bss.mOctRng:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24625  .bss.mPattern:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24632  .bss.mRhythm:00000000 $d
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 870


C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24639  .bss.mScale:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24646  .bss.mTonic:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24653  .bss.mVoicing:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24660  .bss.menuItems:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24667  .bss.menuPos:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24674  .bss.myArp:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24681  .bss.patch:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24687  .bss.patternCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24694  .bss.patternParam:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24701  .bss.voicingCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s:24708  .bss.voicingParam:00000000 $d
                           .group:00000000 _ZN5daisy9ParameterD5Ev
                           .group:00000000 _ZN5daisy10DaisyPatchD5Ev
                           .group:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED5Ev
                           .group:00000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED5Ev
                           .group:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED5Ev
                           .group:00000000 _ZNSt5arrayIN10jellybeans8MenuItemELj10EED5Ev
                           .group:00000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED5Ev
                           .group:00000000 _ZNSt14_Function_baseD5Ev
                           .group:00000000 _ZN10jellybeans8MenuItemD5Ev
                           .group:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC5ESt16initializer_listIS5_ERKS6_
                           .group:00000000 _ZNSt6vectorIiSaIiEEC5ESt16initializer_listIiERKS0_
                           .group:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC5IRA6_KcS9_Lb1EEEOT_OT0_
                           .group:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC5IRA7_KcS9_Lb1EEEOT_OT0_
                           .group:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC5ERKS7_
                           .group:00000000 _ZNSt12_Vector_baseIiSaIiEED5Ev

UNDEFINED SYMBOLS
memset
_ZN10jellybeans3Arp15updateTraversalEv
_ZdlPvj
strlen
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
memcpy
_ZSt19__throw_logic_errorPKc
dsy_gpio_write
_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
_ZN10jellybeans8MenuItem5valueB5cxx11Ev
_ZN10jellybeans3Arp10setPatternENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZN10jellybeans3Arp8getChordEv
_ZN10jellybeans13DiatonicChord10setVoicingENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
cosf
sinf
_ZN5daisy10DaisyPatch21ProcessAnalogControlsEv
_ZN5daisy10DaisyPatch22ProcessDigitalControlsEv
_ZN5daisy9Parameter7ProcessEv
_ZN10jellybeans8MenuItem8setIndexEi
_ZN5daisy6GateIn4TrigEv
_ZN10jellybeans8MenuItem9decrementEv
_ZN10jellybeans8MenuItem9incrementEv
_ZN10jellybeans3Arp12onClockPulseEv
_ZN10jellybeans3Arp11getDacValueEv
_ZN5daisy9DacHandle10WriteValueENS0_7ChannelEt
_ZN10jellybeans3Arp10getNewNoteEv
_ZN10jellybeans3Arp8toStringB5cxx11Ev
_ZN10jellybeans13DiatonicChord8toStringB5cxx11Ev
_ZN10jellybeans8MenuItem12displayValueB5cxx11Ev
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccTYsZIB.s 			page 871


_Znwj
_ZSt20__throw_length_errorPKc
_ZSt17__throw_bad_allocv
_ZN5daisy10DaisyPatch4InitEb
_ZN10jellybeans3ArpC1Ev
_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEiSt8functionIFvvEE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
_ZN5daisy10DaisyPatch8StartAdcEv
memcmp
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
__aeabi_atexit
__dso_handle
memmove
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
_ZN10jellybeans8MenuItemC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
Font_7x10
_ZTVN10__cxxabiv120__function_type_infoE
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv119__pointer_type_infoE
